
Board_Diagnostics.elf:     file format elf32-littlenios2
Board_Diagnostics.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0001be64 memsz 0x0001be64 flags r-x
    LOAD off    0x0001ce84 vaddr 0x0081be84 paddr 0x0081dbd0 align 2**12
         filesz 0x00001d4c memsz 0x00001d4c flags rw-
    LOAD off    0x0001f91c vaddr 0x0081f91c paddr 0x0081f91c align 2**12
         filesz 0x00000000 memsz 0x00000178 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001b110  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000b30  0081b354  0081b354  0001c354  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001d4c  0081be84  0081dbd0  0001ce84  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000178  0081f91c  0081f91c  0001f91c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_0      00000000  0081fa94  0081fa94  0001ebd0  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001ebd0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001558  00000000  00000000  0001ebf8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0003b793  00000000  00000000  00020150  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000e708  00000000  00000000  0005b8e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000128a3  00000000  00000000  00069feb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000031c4  00000000  00000000  0007c890  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004a32  00000000  00000000  0007fa54  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000251a9  00000000  00000000  00084486  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  000a9630  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000022a0  00000000  00000000  000a9690  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000afd5f  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000afd62  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000afd6e  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000afd6f  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000afd70  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000afd74  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000afd78  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  000afd7c  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  000afd87  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  000afd92  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000003  00000000  00000000  000afd9d  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000023  00000000  00000000  000afda0  2**0
                  CONTENTS, READONLY
 29 .jdi          00003c54  00000000  00000000  000afdc3  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0008ff79  00000000  00000000  000b3a17  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
0081b354 l    d  .rodata	00000000 .rodata
0081be84 l    d  .rwdata	00000000 .rwdata
0081f91c l    d  .bss	00000000 .bss
0081fa94 l    d  .sdram_0	00000000 .sdram_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Board_Diagnostics_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 board_diag.c
00800290 l     F .text	00000068 MenuBegin
008002f8 l     F .text	00000048 MenuItem
008003cc l     F .text	0000010c MenuEnd
0081f91c l     O .bss	00000004 entry.2673
0081f920 l     O .bss	00000001 ch.2674
008004d8 l     F .text	000000b4 DoSevenSegMenu
0081f921 l     O .bss	00000001 ch.2678
008008f0 l     F .text	0000005c SevenSegCount
0080094c l     F .text	00000238 SevenSegControl
0080058c l     F .text	00000114 TopMenu
0081f922 l     O .bss	00000001 ch.2687
008006a0 l     F .text	000000c8 TestLEDs
00800768 l     F .text	00000108 TestLCD
0081f923 l     O .bss	00000004 entry.2701
0081f927 l     O .bss	00000001 ch.2700
0081f928 l     O .bss	00000004 entry.2709
0081f92c l     O .bss	00000001 ch.2708
00800870 l     F .text	00000080 sevenseg_set_hex
0081be84 l     O .rwdata	00000010 segments.2715
0081f92d l     O .bss	00000001 ch.2730
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00800f80 l     F .text	00000008 __fp_lock
00800f88 l     F .text	00000008 __fp_unlock
00800f9c l     F .text	0000019c __sinit.part.1
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
0081be94 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
00802d24 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfscanf.c
0081b6e2 l     O .rodata	00000022 basefix.4191
00000000 l    df *ABS*	00000000 vfprintf.c
0081b746 l     O .rodata	00000010 zeroes.4255
00806924 l     F .text	000000bc __sbprintf
0081b756 l     O .rodata	00000010 blanks.4254
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
0081b867 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
00806be4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0081c6e0 l     O .rwdata	00000020 lc_ctype_charset
0081c6c0 l     O .rwdata	00000020 lc_message_charset
0081c700 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
0081ba04 l     O .rodata	0000000c p05.2710
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0080ab4c l     F .text	00000064 sulp
0081bb4c l     O .rodata	00000014 fpi.2679
0081bb60 l     O .rodata	00000028 tinytens
0081bb38 l     O .rodata	00000014 fpinan.2715
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfscanf.c
0081bb88 l     O .rodata	00000022 basefix.3642
00000000 l    df *ABS*	00000000 vfprintf.c
0081bbaa l     O .rodata	00000010 zeroes.4240
0081bbba l     O .rodata	00000010 blanks.4239
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
008102a4 l     F .text	000000fc __sprint_r.part.0
0081bbda l     O .rodata	00000010 blanks.4199
0081bbca l     O .rodata	00000010 zeroes.4200
008116ac l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00811b60 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0081bcea l     O .rodata	00000010 zeroes.4184
0081bcfa l     O .rodata	00000010 blanks.4183
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
008147d0 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
00817278 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00817398 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
008173c4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
008174c4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
008175b8 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0081769c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
00817878 l     F .text	00000050 alt_get_errno
008178c8 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
00817aec l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0081dbbc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
00817d78 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00817ec0 l     F .text	00000038 alt_dev_reg
0081c8e0 l     O .rwdata	00001060 jtag_uart_0
0081d940 l     O .rwdata	00000120 lcd_display
0081da60 l     O .rwdata	000000c4 uart
0081db24 l     O .rwdata	00000030 audio_i2c_config
0081db54 l     O .rwdata	00000030 Audio
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
008181f8 l     F .text	00000208 altera_avalon_jtag_uart_irq
00818400 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207.c
0081dbc0 l     O .rwdata	00000004 colstart
00818a20 l     F .text	000000b4 lcd_write_command
00818ad4 l     F .text	000000d4 lcd_write_data
00818ba8 l     F .text	000000cc lcd_clear_screen
00818c74 l     F .text	000001e8 lcd_repaint_screen
00818e5c l     F .text	000000c8 lcd_scroll_up
00818f24 l     F .text	000002a0 lcd_handle_escape
008196ac l     F .text	000000ac alt_lcd_16207_timeout
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
008198f0 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
00819b98 l     F .text	0000009c altera_avalon_uart_irq
00819c34 l     F .text	000000e0 altera_avalon_uart_rxirq
00819d14 l     F .text	00000144 altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
00819eac l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
0081a0d8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0081a5b0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0081a9e4 l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0081f968 g     O .bss	00000004 alt_instruction_exception_handler
00802c50 g     F .text	00000018 putchar
0080a000 g     F .text	00000074 _mprec_log10
0080a0ec g     F .text	0000008c __any_on
00808a78 g     F .text	00000054 _isatty_r
0081ba10 g     O .rodata	00000028 __mprec_tinytens
008177c0 g     F .text	00000078 alt_main
00802c68 g     F .text	000000a8 _puts_r
0081f994 g     O .bss	00000100 alt_irq
00808bdc g     F .text	0000005c _lseek_r
0081dbd0 g       *ABS*	00000000 __flash_rwdata_start
0080850c g     F .text	000000ac __sflags
00815c48 g     F .text	00000084 .hidden __eqdf2
0081fa94 g       *ABS*	00000000 __alt_heap_start
00802c0c g     F .text	0000003c printf
008139c4 g     F .text	0000009c _wcrtomb_r
008031bc g     F .text	0000005c __sseek
008012d0 g     F .text	00000010 __sinit
00811768 g     F .text	00000138 __swbuf_r
00808afc g     F .text	0000007c _setlocale_r
00801138 g     F .text	00000068 __sfmoreglue
00810288 g     F .text	0000001c ungetc
00817858 g     F .text	00000020 __malloc_unlock
0080abb0 g     F .text	000015ec _strtod_r
00800340 g     F .text	0000008c GetInputString
0080cf3c g     F .text	000000f4 _sfread_r
0080907c g     F .text	0000015c memmove
008012b8 g     F .text	00000018 _cleanup
008091d8 g     F .text	000000a8 _Balloc
00815ccc g     F .text	000000e0 .hidden __gtdf2
0081ae68 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
00800000 g     F .entry	0000001c __reset
0081f930 g     O .bss	00000004 edge_capture
00800020 g       *ABS*	00000000 __flash_exceptions_start
00801d1c g     F .text	00000058 _fstat_r
0081f934 g     O .bss	00000004 errno
00802f88 g     F .text	00000014 __srget
00803138 g     F .text	00000008 __seofread
0081298c g     F .text	00001038 ___svfiprintf_internal_r
0081f954 g     O .bss	00000004 alt_argv
00825b84 g       *ABS*	00000000 _gp
00817d48 g     F .text	00000030 usleep
0081c760 g     O .rwdata	00000180 alt_fd_list
00802008 g     F .text	00000070 _getc_r
00802078 g     F .text	00000088 getc
00802c48 g     F .text	00000008 _putchar_r
0081a75c g     F .text	00000090 alt_find_dev
00808f44 g     F .text	00000138 memcpy
00812494 g     F .text	0000026c __hexnan
00800f90 g     F .text	0000000c _cleanup_r
00816f08 g     F .text	000000d0 .hidden __floatsidf
0081aaa4 g     F .text	00000078 alt_io_redirect
00815dac g     F .text	000000e0 .hidden __ltdf2
0081b354 g       *ABS*	00000000 __DTOR_END__
00802d10 g     F .text	00000014 puts
0081af14 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00808ce4 g     F .text	000000d8 mbrtowc
0080a8a8 g     F .text	00000074 __fpclassifyd
00809f5c g     F .text	000000a4 __ratio
00811688 g     F .text	00000024 __vfiprintf_internal
008185fc g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00802be0 g     F .text	0000002c _printf_r
008148ec g     F .text	00000008 .hidden __udivsi3
00817514 g     F .text	000000a4 isatty
00808acc g     F .text	00000030 iswspace
0081ba60 g     O .rodata	000000c8 __mprec_tens
00808b78 g     F .text	0000000c __locale_charset
00814a28 g     F .text	000000b8 .hidden __lesf2
00813c0c g     F .text	00000074 .hidden __fixunsdfsi
0081ae88 g     F .text	0000008c alt_icache_flush
0081f940 g     O .bss	00000004 __malloc_top_pad
0080cecc g     F .text	00000070 __ssrefill_r
0080ca7c g     F .text	00000024 strtoul
0081db98 g     O .rwdata	00000004 __mb_cur_max
00808ba8 g     F .text	0000000c _localeconv_r
0080caa0 g     F .text	00000334 _strtoull_r
008095e4 g     F .text	0000003c __i2b
008085b8 g     F .text	000004c0 __sfvwrite_r
00802f9c g     F .text	00000054 _sbrk_r
0080a2e4 g     F .text	0000005c _read_r
0081dbb4 g     O .rwdata	00000004 alt_max_fd
00800be8 g     F .text	000000f0 _fclose_r
00800f50 g     F .text	00000030 fflush
0081f93c g     O .bss	00000004 __malloc_max_sbrked_mem
0081ab1c g     F .text	000001b0 alt_irq_register
008032b8 g     F .text	000016f8 __ssvfscanf_r
00814ae0 g     F .text	0000089c .hidden __adddf3
008148fc g     F .text	00000074 .hidden __nesf2
00809d04 g     F .text	0000011c __b2d
00814240 g     F .text	00000590 .hidden __umoddi3
008176ec g     F .text	000000d4 lseek
0081db84 g     O .rwdata	00000004 _global_impure_ptr
0080a340 g     F .text	00000568 _realloc_r
0081fa94 g       *ABS*	00000000 __bss_end
0081ad64 g     F .text	00000104 alt_tick
0081bbea g     O .rodata	00000100 __hexdig
00813c80 g     F .text	000005c0 .hidden __udivdi3
00811980 g     F .text	00000184 _fputwc_r
0081ba38 g     O .rodata	00000028 __mprec_bigtens
008093c8 g     F .text	00000104 __s2b
00816fd8 g     F .text	000000a4 .hidden __floatunsidf
00809aac g     F .text	00000060 __mcmp
00819af8 g     F .text	000000a0 altera_avalon_uart_init
008012f0 g     F .text	00000018 __fp_lock_all
0081accc g     F .text	00000098 alt_alarm_stop
0080c4fc g     F .text	00000024 strtol
0081f95c g     O .bss	00000004 alt_irq_active
008018b4 g     F .text	00000444 _fseeko_r
008000fc g     F .exceptions	000000d4 alt_irq_handler
0081c738 g     O .rwdata	00000028 alt_dev_null
0081a56c g     F .text	00000044 alt_dcache_flush_all
008094cc g     F .text	00000068 __hi0bits
00816e80 g     F .text	00000088 .hidden __fixdfsi
0080c19c g     F .text	0000001c strtod
0081dbd0 g       *ABS*	00000000 __ram_rwdata_end
0081dbac g     O .rwdata	00000008 alt_dev_list
00817dc8 g     F .text	000000f8 write
0080a178 g     F .text	000000a0 _putc_r
00814970 g     F .text	000000b8 .hidden __gtsf2
0081be84 g       *ABS*	00000000 __ram_rodata_end
00817414 g     F .text	000000b0 fstat
00801454 g     F .text	00000024 fprintf
00815dac g     F .text	000000e0 .hidden __ledf2
0080981c g     F .text	00000140 __pow5mult
008103b8 g     F .text	000012d0 ___vfiprintf_internal_r
0081f94c g     O .bss	00000004 __nlocale_changed
008148f4 g     F .text	00000008 .hidden __umodsi3
0081fa94 g       *ABS*	00000000 end
008191c4 g     F .text	000004e8 altera_avalon_lcd_16207_write
00801cf8 g     F .text	00000024 fseeko
0081a128 g     F .text	000001ac altera_avalon_uart_write
00801890 g     F .text	00000024 fseek
00818140 g     F .text	000000b8 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0081b354 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
00819968 g     F .text	00000080 alt_avalon_timer_sc_init
00819a48 g     F .text	00000060 altera_avalon_uart_write_fd
00817214 g     F .text	00000064 .hidden __clzsi2
00819aa8 g     F .text	00000050 altera_avalon_uart_close_fd
00818808 g     F .text	00000218 altera_avalon_jtag_uart_write
008012e0 g     F .text	00000004 __sfp_lock_acquire
00808e5c g     F .text	000000e8 memchr
008049b0 g     F .text	00001f50 ___vfprintf_internal_r
0080a9e4 g     F .text	00000058 _sprintf_r
0080159c g     F .text	000002f0 _free_r
00808b84 g     F .text	00000010 __locale_mb_cur_max
0081b18c g     F .text	00000194 __call_exitprocs
00802f14 g     F .text	00000074 __srget_r
0080cdd4 g     F .text	000000f8 _sungetc_r
0081f948 g     O .bss	00000004 __mlocale_changed
0081db8c g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
0081f960 g     O .bss	00000004 _alt_tick_rate
0080c520 g     F .text	000002f4 _strtoll_r
0080995c g     F .text	00000150 __lshift
0081f964 g     O .bss	00000004 _alt_nticks
00817b3c g     F .text	000000fc read
00817f2c g     F .text	000000b0 alt_sys_init
008127c0 g     F .text	000001cc __ssprint_r
00802b84 g     F .text	0000005c _open_r
0081b078 g     F .text	00000114 __register_exitproc
00812700 g     F .text	000000c0 strncmp
00809620 g     F .text	000001fc __multiply
008184a8 g     F .text	00000068 altera_avalon_jtag_uart_close
0081be84 g       *ABS*	00000000 __ram_rwdata_start
0081b354 g       *ABS*	00000000 __ram_rodata_start
0081f96c g     O .bss	00000028 __malloc_current_mallinfo
008148fc g     F .text	00000074 .hidden __eqsf2
00809e20 g     F .text	0000013c __d2b
00817fdc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080c814 g     F .text	00000268 _strtoul_r
0081a900 g     F .text	000000b4 alt_get_fd
0081a414 g     F .text	00000158 alt_busy_sleep
00806b90 g     F .text	00000054 _close_r
0081affc g     F .text	0000007c memcmp
0081809c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0081fa94 g       *ABS*	00000000 __alt_stack_base
008180ec g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00801efc g     F .text	000000cc _fwrite_r
00802ff0 g     F .text	0000007c sscanf
00806a3c g     F .text	00000154 __swsetup_r
0081537c g     F .text	000008cc .hidden __divdf3
008011a0 g     F .text	00000118 __sfp
0080a074 g     F .text	00000078 __copybits
0081c2b8 g     O .rwdata	00000408 __malloc_av_
008012ec g     F .text	00000004 __sinit_lock_release
00815e8c g     F .text	00000724 .hidden __muldf3
008030e4 g     F .text	00000054 __sread
0081a7ec g     F .text	00000114 alt_find_file
0081a600 g     F .text	000000a4 alt_dev_llist_insert
00817838 g     F .text	00000020 __malloc_lock
0080142c g     F .text	00000028 _fprintf_r
00817c98 g     F .text	000000b0 sbrk
0080e09c g     F .text	00001f90 ___svfprintf_internal_r
00800ef4 g     F .text	0000005c _fflush_r
008118bc g     F .text	000000c4 _calloc_r
00801410 g     F .text	0000001c fopen
0081f91c g       *ABS*	00000000 __bss_start
00802a60 g     F .text	00000124 memset
00800b84 g     F .text	00000064 main
0081f958 g     O .bss	00000004 alt_envp
0081f938 g     O .bss	00000004 __malloc_max_total_mem
0081803c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
008118a0 g     F .text	0000001c __swbuf
00814a28 g     F .text	000000b8 .hidden __ltsf2
00819758 g     F .text	00000138 altera_avalon_lcd_16207_init
00803218 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00800cd8 g     F .text	00000014 fclose
0080c2bc g     F .text	00000240 _strtol_r
0081707c g     F .text	00000198 .hidden __truncdfsf2
00806de4 g     F .text	00001728 _dtoa_r
008022b8 g     F .text	000007a8 _malloc_r
00813b20 g     F .text	00000030 __ascii_wctomb
0081dbb8 g     O .rwdata	00000004 alt_errno
0081002c g     F .text	000000d4 __submore
00801d74 g     F .text	000000c4 _fwalk
00808e00 g     F .text	0000005c _mbtowc_r
0080a218 g     F .text	000000cc putc
0081483c g     F .text	00000054 .hidden __divsi3
00801478 g     F .text	00000124 _malloc_trim_r
0081b354 g       *ABS*	00000000 __CTOR_END__
0080aaa8 g     F .text	000000a4 strcmp
0081b354 g       *ABS*	00000000 __flash_rodata_start
0081b354 g       *ABS*	00000000 __DTOR_LIST__
00815c48 g     F .text	00000084 .hidden __nedf2
00817ef8 g     F .text	00000034 alt_irq_init
00817c38 g     F .text	00000060 alt_release_fd
0080aa3c g     F .text	0000006c sprintf
0081bd0a g     O .rodata	00000100 .hidden __clz_tab
0081f944 g     O .bss	00000004 _PathLocale
0080c1b8 g     F .text	00000104 strtof
0081afb0 g     F .text	00000014 atexit
00814970 g     F .text	000000b8 .hidden __gesf2
008069e0 g     F .text	0000005c _write_r
00808bb4 g     F .text	0000001c setlocale
0080a9dc g     F .text	00000008 nanf
0081db88 g     O .rwdata	00000004 _impure_ptr
0081f950 g     O .bss	00000004 alt_argc
00800cec g     F .text	00000208 __sflush_r
00808c38 g     F .text	000000ac _mbrtowc_r
0081a700 g     F .text	0000005c _do_dtors
00808ba0 g     F .text	00000008 __locale_cjk_lang
0080188c g     F .text	00000004 _fseek_r
00802d40 g     F .text	000001d4 __srefill_r
00800000 g       *ABS*	00000000 __alt_mem_sdram_0
00800020 g       .exceptions	00000000 alt_irq_entry
00808dbc g     F .text	00000044 __ascii_mbtowc
00809ca4 g     F .text	00000060 __ulp
00801308 g     F .text	00000018 __fp_unlock_all
00819890 g     F .text	00000060 altera_avalon_lcd_16207_write_fd
0081dba4 g     O .rwdata	00000008 alt_fs_list
0080d030 g     F .text	0000106c __ssvfiscanf_r
00800020 g       *ABS*	00000000 __ram_exceptions_start
00808bd0 g     F .text	0000000c localeconv
00801fc8 g     F .text	00000040 fwrite
0080306c g     F .text	00000078 _sscanf_r
0081dbd0 g       *ABS*	00000000 _edata
008199e8 g     F .text	00000060 altera_avalon_uart_read_fd
0081fa94 g       *ABS*	00000000 _end
00800244 g       *ABS*	00000000 __ram_exceptions_end
00818510 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
00803140 g     F .text	0000007c __swrite
0081db90 g     O .rwdata	00000004 __malloc_trim_threshold
00808b94 g     F .text	0000000c __locale_msgcharset
0081afc4 g     F .text	00000038 exit
00801e38 g     F .text	000000c4 _fwalk_reent
00809b0c g     F .text	00000198 __mdiff
00814890 g     F .text	0000005c .hidden __modsi3
0081db94 g     O .rwdata	00000004 __ctype_ptr__
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
008012e4 g     F .text	00000004 __sfp_lock_release
0080a91c g     F .text	000000c0 __sccl
0081b766 g     O .rodata	00000101 _ctype_
0081db9c g     O .rwdata	00000004 __mbtowc
00819e58 g     F .text	00000054 altera_avalon_uart_close
00801320 g     F .text	000000f0 _fopen_r
0081b320 g     F .text	00000034 _exit
0081a2d4 g     F .text	00000140 alt_alarm_start
00813bac g     F .text	00000060 .hidden __muldi3
00802100 g     F .text	000001b8 __smakebuf_r
00803220 g     F .text	00000098 strlen
00817994 g     F .text	00000158 open
00815ccc g     F .text	000000e0 .hidden __gedf2
00811c60 g     F .text	00000834 __gethex
0081dba0 g     O .rwdata	00000004 __wctomb
008103a0 g     F .text	00000018 __sprint_r
0081a9b4 g     F .text	00000030 alt_icache_flush_all
0081dbc4 g     O .rwdata	00000004 alt_priority_mask
00806900 g     F .text	00000024 __vfprintf_internal
00819efc g     F .text	000001dc altera_avalon_uart_read
00813b50 g     F .text	0000005c _wctomb_r
008165b0 g     F .text	000008d0 .hidden __subdf3
00809534 g     F .text	000000b0 __lo0bits
0081dbc8 g     O .rwdata	00000008 alt_alarm_list
00810100 g     F .text	00000188 _ungetc_r
0081a6a4 g     F .text	0000005c _do_ctors
00813a60 g     F .text	000000c0 wcrtomb
008172c8 g     F .text	000000d0 close
0081761c g     F .text	00000080 alt_load
00811b04 g     F .text	0000005c fputwc
00000000  w      *UND*	00000000 free
008012e8 g     F .text	00000004 __sinit_lock_acquire
008092a8 g     F .text	00000120 __multadd
00809280 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409114 	ori	at,at,580
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram_0-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001526 	beq	r2,zero,800190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
  80013c:	008020b4 	movhi	r2,130
  800140:	10be6504 	addi	r2,r2,-1644
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	008020b4 	movhi	r2,130
  800158:	10be6504 	addi	r2,r2,-1644
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	21000104 	addi	r4,r4,4
  800168:	1105883a 	add	r2,r2,r4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	e17ffd17 	ldw	r5,-12(fp)
  800178:	183ee83a 	callr	r3
#endif
        break;
  80017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800180:	0005313a 	rdctl	r2,ipending
  800184:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800188:	e0bfff17 	ldw	r2,-4(fp)
  80018c:	00000706 	br	8001ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
  800190:	e0bffc17 	ldw	r2,-16(fp)
  800194:	1085883a 	add	r2,r2,r2
  800198:	e0bffc15 	stw	r2,-16(fp)
      i++;
  80019c:	e0bffd17 	ldw	r2,-12(fp)
  8001a0:	10800044 	addi	r2,r2,1
  8001a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a8:	003fe006 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001b0:	e0bffb17 	ldw	r2,-20(fp)
  8001b4:	103fda1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b8:	0001883a 	nop
}
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0a77917 	ldw	r2,-25116(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0a77917 	ldw	r2,-25116(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	1809883a 	mov	r4,r3
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	e1bffe17 	ldw	r6,-8(fp)
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	068020b4 	movhi	gp,130
    ori gp, gp, %lo(_gp)
  800260:	d696e114 	ori	gp,gp,23428
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800268:	10be4714 	ori	r2,r2,63772

    movhi r3, %hi(__bss_end)
  80026c:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800270:	18fea514 	ori	r3,r3,64148

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	081761c0 	call	81761c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	08177c00 	call	8177c0 <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <MenuBegin>:
 * 
 * Function to set the Menu "header".
 */

static void MenuBegin( char *title )
{
  800290:	defffd04 	addi	sp,sp,-12
  800294:	dfc00215 	stw	ra,8(sp)
  800298:	df000115 	stw	fp,4(sp)
  80029c:	df000104 	addi	fp,sp,4
  8002a0:	e13fff15 	stw	r4,-4(fp)
  printf("\n\n");
  8002a4:	010020b4 	movhi	r4,130
  8002a8:	212cd504 	addi	r4,r4,-19628
  8002ac:	0802d100 	call	802d10 <puts>
  printf("----------------------------------\n");
  8002b0:	010020b4 	movhi	r4,130
  8002b4:	212cd604 	addi	r4,r4,-19624
  8002b8:	0802d100 	call	802d10 <puts>
  printf("Nios II Board Diagnostics\n");
  8002bc:	010020b4 	movhi	r4,130
  8002c0:	212cdf04 	addi	r4,r4,-19588
  8002c4:	0802d100 	call	802d10 <puts>
  printf("----------------------------------\n");
  8002c8:	010020b4 	movhi	r4,130
  8002cc:	212cd604 	addi	r4,r4,-19624
  8002d0:	0802d100 	call	802d10 <puts>
  printf(" %s\n",title);
  8002d4:	010020b4 	movhi	r4,130
  8002d8:	212ce604 	addi	r4,r4,-19560
  8002dc:	e17fff17 	ldw	r5,-4(fp)
  8002e0:	0802c0c0 	call	802c0c <printf>
}
  8002e4:	e037883a 	mov	sp,fp
  8002e8:	dfc00117 	ldw	ra,4(sp)
  8002ec:	df000017 	ldw	fp,0(sp)
  8002f0:	dec00204 	addi	sp,sp,8
  8002f4:	f800283a 	ret

008002f8 <MenuItem>:
 *    (defined by 'string').
 *
 **********************************************************************/

static void MenuItem( char letter, char *name )
{
  8002f8:	defffc04 	addi	sp,sp,-16
  8002fc:	dfc00315 	stw	ra,12(sp)
  800300:	df000215 	stw	fp,8(sp)
  800304:	df000204 	addi	fp,sp,8
  800308:	2005883a 	mov	r2,r4
  80030c:	e17fff15 	stw	r5,-4(fp)
  800310:	e0bffe05 	stb	r2,-8(fp)
  printf("     %c:  %s\n" ,letter, name);
  800314:	e0bffe07 	ldb	r2,-8(fp)
  800318:	010020b4 	movhi	r4,130
  80031c:	212ce804 	addi	r4,r4,-19552
  800320:	100b883a 	mov	r5,r2
  800324:	e1bfff17 	ldw	r6,-4(fp)
  800328:	0802c0c0 	call	802c0c <printf>
}
  80032c:	e037883a 	mov	sp,fp
  800330:	dfc00117 	ldw	ra,4(sp)
  800334:	df000017 	ldw	fp,0(sp)
  800338:	dec00204 	addi	sp,sp,8
  80033c:	f800283a 	ret

00800340 <GetInputString>:
*           returns the string, minus any '\r' characters it 
*           encounters.
*
******************************************************************/
void GetInputString( char* entry, int size, FILE * stream )
{
  800340:	defff904 	addi	sp,sp,-28
  800344:	dfc00615 	stw	ra,24(sp)
  800348:	df000515 	stw	fp,20(sp)
  80034c:	df000504 	addi	fp,sp,20
  800350:	e13ffd15 	stw	r4,-12(fp)
  800354:	e17ffe15 	stw	r5,-8(fp)
  800358:	e1bfff15 	stw	r6,-4(fp)
  int i;
  int ch = 0;
  80035c:	e03ffc15 	stw	zero,-16(fp)
  
  for(i = 0; (ch != '\n') && (i < size); )
  800360:	e03ffb15 	stw	zero,-20(fp)
  800364:	00000e06 	br	8003a0 <GetInputString+0x60>
  {
    if( (ch = getc(stream)) != '\r')
  800368:	e13fff17 	ldw	r4,-4(fp)
  80036c:	08020780 	call	802078 <getc>
  800370:	e0bffc15 	stw	r2,-16(fp)
  800374:	e0bffc17 	ldw	r2,-16(fp)
  800378:	10800360 	cmpeqi	r2,r2,13
  80037c:	1000081e 	bne	r2,zero,8003a0 <GetInputString+0x60>
    {
      entry[i] = ch;
  800380:	e0bffb17 	ldw	r2,-20(fp)
  800384:	e0fffd17 	ldw	r3,-12(fp)
  800388:	1885883a 	add	r2,r3,r2
  80038c:	e0fffc17 	ldw	r3,-16(fp)
  800390:	10c00005 	stb	r3,0(r2)
      i++;
  800394:	e0bffb17 	ldw	r2,-20(fp)
  800398:	10800044 	addi	r2,r2,1
  80039c:	e0bffb15 	stw	r2,-20(fp)
void GetInputString( char* entry, int size, FILE * stream )
{
  int i;
  int ch = 0;
  
  for(i = 0; (ch != '\n') && (i < size); )
  8003a0:	e0bffc17 	ldw	r2,-16(fp)
  8003a4:	108002a0 	cmpeqi	r2,r2,10
  8003a8:	1000031e 	bne	r2,zero,8003b8 <GetInputString+0x78>
  8003ac:	e0fffb17 	ldw	r3,-20(fp)
  8003b0:	e0bffe17 	ldw	r2,-8(fp)
  8003b4:	18bfec16 	blt	r3,r2,800368 <__alt_data_end+0xff800368>
    {
      entry[i] = ch;
      i++;
    }
  }
}
  8003b8:	e037883a 	mov	sp,fp
  8003bc:	dfc00117 	ldw	ra,4(sp)
  8003c0:	df000017 	ldw	fp,0(sp)
  8003c4:	dec00204 	addi	sp,sp,8
  8003c8:	f800283a 	ret

008003cc <MenuEnd>:
 *    and continues until either a 'q' or a character outside of the 
 *    range, enclosed by 'lowLetter' and 'highLetter', is reached.
 */

static int MenuEnd( char lowLetter, char highLetter )
{
  8003cc:	defffc04 	addi	sp,sp,-16
  8003d0:	dfc00315 	stw	ra,12(sp)
  8003d4:	df000215 	stw	fp,8(sp)
  8003d8:	df000204 	addi	fp,sp,8
  8003dc:	2007883a 	mov	r3,r4
  8003e0:	2805883a 	mov	r2,r5
  8003e4:	e0fffe05 	stb	r3,-8(fp)
  8003e8:	e0bfff05 	stb	r2,-4(fp)
  static char entry[4];
  static char ch;

  printf("     q:  Exit\n");
  8003ec:	010020b4 	movhi	r4,130
  8003f0:	212cec04 	addi	r4,r4,-19536
  8003f4:	0802d100 	call	802d10 <puts>
  printf("----------------------------------\n");
  8003f8:	010020b4 	movhi	r4,130
  8003fc:	212cd604 	addi	r4,r4,-19624
  800400:	0802d100 	call	802d10 <puts>
  printf("\nSelect Choice (%c-%c): [Followed by <enter>]",lowLetter,highLetter);
  800404:	e0fffe07 	ldb	r3,-8(fp)
  800408:	e0bfff07 	ldb	r2,-4(fp)
  80040c:	010020b4 	movhi	r4,130
  800410:	212cf004 	addi	r4,r4,-19520
  800414:	180b883a 	mov	r5,r3
  800418:	100d883a 	mov	r6,r2
  80041c:	0802c0c0 	call	802c0c <printf>
  
  GetInputString( entry, sizeof(entry), stdin );
  800420:	008020b4 	movhi	r2,130
  800424:	10b6e204 	addi	r2,r2,-9336
  800428:	10800017 	ldw	r2,0(r2)
  80042c:	10800117 	ldw	r2,4(r2)
  800430:	d1276604 	addi	r4,gp,-25192
  800434:	01400104 	movi	r5,4
  800438:	100d883a 	mov	r6,r2
  80043c:	08003400 	call	800340 <GetInputString>
  if(sscanf(entry, "%c\n", &ch))
  800440:	d1276604 	addi	r4,gp,-25192
  800444:	014020b4 	movhi	r5,130
  800448:	296cfc04 	addi	r5,r5,-19472
  80044c:	d1a76704 	addi	r6,gp,-25188
  800450:	0802ff00 	call	802ff0 <sscanf>
  800454:	10001726 	beq	r2,zero,8004b4 <MenuEnd+0xe8>
  {
    if( ch >= 'A' && ch <= 'Z' )
  800458:	d0a76703 	ldbu	r2,-25188(gp)
  80045c:	10803fcc 	andi	r2,r2,255
  800460:	1080201c 	xori	r2,r2,128
  800464:	10bfe004 	addi	r2,r2,-128
  800468:	10801050 	cmplti	r2,r2,65
  80046c:	1000091e 	bne	r2,zero,800494 <MenuEnd+0xc8>
  800470:	d0a76703 	ldbu	r2,-25188(gp)
  800474:	10803fcc 	andi	r2,r2,255
  800478:	1080201c 	xori	r2,r2,128
  80047c:	10bfe004 	addi	r2,r2,-128
  800480:	108016c8 	cmpgei	r2,r2,91
  800484:	1000031e 	bne	r2,zero,800494 <MenuEnd+0xc8>
      ch += 'a' - 'A';
  800488:	d0a76703 	ldbu	r2,-25188(gp)
  80048c:	10800804 	addi	r2,r2,32
  800490:	d0a76705 	stb	r2,-25188(gp)
    if( ch == 27 )
  800494:	d0a76703 	ldbu	r2,-25188(gp)
  800498:	10803fcc 	andi	r2,r2,255
  80049c:	1080201c 	xori	r2,r2,128
  8004a0:	10bfe004 	addi	r2,r2,-128
  8004a4:	108006d8 	cmpnei	r2,r2,27
  8004a8:	1000021e 	bne	r2,zero,8004b4 <MenuEnd+0xe8>
      ch = 'q';        
  8004ac:	00801c44 	movi	r2,113
  8004b0:	d0a76705 	stb	r2,-25188(gp)
  }
  return ch;
  8004b4:	d0a76703 	ldbu	r2,-25188(gp)
  8004b8:	10803fcc 	andi	r2,r2,255
  8004bc:	1080201c 	xori	r2,r2,128
  8004c0:	10bfe004 	addi	r2,r2,-128
}
  8004c4:	e037883a 	mov	sp,fp
  8004c8:	dfc00117 	ldw	ra,4(sp)
  8004cc:	df000017 	ldw	fp,0(sp)
  8004d0:	dec00204 	addi	sp,sp,8
  8004d4:	f800283a 	ret

008004d8 <DoSevenSegMenu>:
 * Generates the Seven Segment Display menu.
 * 
 ******************************************************************************/

static void DoSevenSegMenu( void )
{
  8004d8:	defffe04 	addi	sp,sp,-8
  8004dc:	dfc00115 	stw	ra,4(sp)
  8004e0:	df000015 	stw	fp,0(sp)
  8004e4:	d839883a 	mov	fp,sp
  static char ch;

  while(1)
  {
    MenuBegin("Seven Segment Menu");
  8004e8:	010020b4 	movhi	r4,130
  8004ec:	212cfd04 	addi	r4,r4,-19468
  8004f0:	08002900 	call	800290 <MenuBegin>
    MenuItem('a', "Count From 0 to FF.");
  8004f4:	01001844 	movi	r4,97
  8004f8:	014020b4 	movhi	r5,130
  8004fc:	296d0204 	addi	r5,r5,-19448
  800500:	08002f80 	call	8002f8 <MenuItem>
    MenuItem('b', "Control Individual Segments.");
  800504:	01001884 	movi	r4,98
  800508:	014020b4 	movhi	r5,130
  80050c:	296d0704 	addi	r5,r5,-19428
  800510:	08002f80 	call	8002f8 <MenuItem>
    ch = MenuEnd('a', 'b');
  800514:	01001844 	movi	r4,97
  800518:	01401884 	movi	r5,98
  80051c:	08003cc0 	call	8003cc <MenuEnd>
  800520:	d0a76745 	stb	r2,-25187(gp)
  
    switch(ch)
  800524:	d0a76743 	ldbu	r2,-25187(gp)
  800528:	10803fcc 	andi	r2,r2,255
  80052c:	1080201c 	xori	r2,r2,128
  800530:	10bfe004 	addi	r2,r2,-128
  800534:	10c01860 	cmpeqi	r3,r2,97
  800538:	1800031e 	bne	r3,zero,800548 <DoSevenSegMenu+0x70>
  80053c:	108018a0 	cmpeqi	r2,r2,98
  800540:	1000031e 	bne	r2,zero,800550 <DoSevenSegMenu+0x78>
  800544:	00000406 	br	800558 <DoSevenSegMenu+0x80>
    {
      MenuCase('a', SevenSegCount);
  800548:	08008f00 	call	8008f0 <SevenSegCount>
  80054c:	00000206 	br	800558 <DoSevenSegMenu+0x80>
      MenuCase('b', SevenSegControl);
  800550:	080094c0 	call	80094c <SevenSegControl>
  800554:	0001883a 	nop
    }
    
    if ( ch == 'q' )
  800558:	d0a76743 	ldbu	r2,-25187(gp)
  80055c:	10803fcc 	andi	r2,r2,255
  800560:	1080201c 	xori	r2,r2,128
  800564:	10bfe004 	addi	r2,r2,-128
  800568:	10801c58 	cmpnei	r2,r2,113
  80056c:	1000011e 	bne	r2,zero,800574 <DoSevenSegMenu+0x9c>
    {
      break;
  800570:	00000106 	br	800578 <DoSevenSegMenu+0xa0>
    }
  }
  800574:	003fdc06 	br	8004e8 <__alt_data_end+0xff8004e8>
}
  800578:	e037883a 	mov	sp,fp
  80057c:	dfc00117 	ldw	ra,4(sp)
  800580:	df000017 	ldw	fp,0(sp)
  800584:	dec00204 	addi	sp,sp,8
  800588:	f800283a 	ret

0080058c <TopMenu>:
 * Generates the top level menu for this diagnostics program.
 * 
 ******************************************************************************/

static char TopMenu( void )
{
  80058c:	defffe04 	addi	sp,sp,-8
  800590:	dfc00115 	stw	ra,4(sp)
  800594:	df000015 	stw	fp,0(sp)
  800598:	d839883a 	mov	fp,sp
  
  /* Output the top-level menu to STDOUT */

  while (1)
  {
    MenuBegin("Main Menu");
  80059c:	010020b4 	movhi	r4,130
  8005a0:	212d0f04 	addi	r4,r4,-19396
  8005a4:	08002900 	call	800290 <MenuBegin>
#ifdef LED_PIO_NAME
    MenuItem( 'a', "Test LEDs" );
  8005a8:	01001844 	movi	r4,97
  8005ac:	014020b4 	movhi	r5,130
  8005b0:	296d1204 	addi	r5,r5,-19384
  8005b4:	08002f80 	call	8002f8 <MenuItem>
#endif
#ifdef LCD_DISPLAY_NAME
    MenuItem( 'b', "LCD Display Test");
  8005b8:	01001884 	movi	r4,98
  8005bc:	014020b4 	movhi	r5,130
  8005c0:	296d1504 	addi	r5,r5,-19372
  8005c4:	08002f80 	call	8002f8 <MenuItem>
#endif
#ifdef BUTTON_PIO_NAME
    MenuItem( 'c', "Button/Switch Test");
#endif
#ifdef SEVEN_SEG_PIO_NAME
    MenuItem( 'd', "Seven Segment Menu" );
  8005c8:	01001904 	movi	r4,100
  8005cc:	014020b4 	movhi	r5,130
  8005d0:	296cfd04 	addi	r5,r5,-19468
  8005d4:	08002f80 	call	8002f8 <MenuItem>
#endif
#ifdef JTAG_UART_NAME
    MenuItem( 'e', "JTAG UART Menu" );
#endif  
    ch = MenuEnd('a', 'e');
  8005d8:	01001844 	movi	r4,97
  8005dc:	01401944 	movi	r5,101
  8005e0:	08003cc0 	call	8003cc <MenuEnd>
  8005e4:	d0a76785 	stb	r2,-25186(gp)

  
    switch(ch)
  8005e8:	d0a76783 	ldbu	r2,-25186(gp)
  8005ec:	10803fcc 	andi	r2,r2,255
  8005f0:	1080201c 	xori	r2,r2,128
  8005f4:	10bfe004 	addi	r2,r2,-128
  8005f8:	10c018a0 	cmpeqi	r3,r2,98
  8005fc:	18000c1e 	bne	r3,zero,800630 <TopMenu+0xa4>
  800600:	10c018c8 	cmpgei	r3,r2,99
  800604:	1800031e 	bne	r3,zero,800614 <TopMenu+0x88>
  800608:	10801860 	cmpeqi	r2,r2,97
  80060c:	1000061e 	bne	r2,zero,800628 <TopMenu+0x9c>
  800610:	00000b06 	br	800640 <TopMenu+0xb4>
  800614:	10c01920 	cmpeqi	r3,r2,100
  800618:	1800071e 	bne	r3,zero,800638 <TopMenu+0xac>
  80061c:	10801c60 	cmpeqi	r2,r2,113
  800620:	1000101e 	bne	r2,zero,800664 <TopMenu+0xd8>
  800624:	00000606 	br	800640 <TopMenu+0xb4>
    {
#ifdef LED_PIO_NAME
      MenuCase('a',TestLEDs);
  800628:	08006a00 	call	8006a0 <TestLEDs>
  80062c:	00000e06 	br	800668 <TopMenu+0xdc>
#endif
#ifdef LCD_DISPLAY_NAME
      MenuCase('b',TestLCD);
  800630:	08007680 	call	800768 <TestLCD>
  800634:	00000c06 	br	800668 <TopMenu+0xdc>
#endif
#ifdef BUTTON_PIO_NAME
      MenuCase('c',TestButtons);
#endif
#ifdef SEVEN_SEG_PIO_NAME
      MenuCase('d',DoSevenSegMenu);
  800638:	08004d80 	call	8004d8 <DoSevenSegMenu>
  80063c:	00000a06 	br	800668 <TopMenu+0xdc>
#endif
#ifdef JTAG_UART_NAME
      MenuCase('e',DoJTAGUARTMenu);
#endif
      case 'q':	break;
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
  800640:	d0a76783 	ldbu	r2,-25186(gp)
  800644:	10803fcc 	andi	r2,r2,255
  800648:	1080201c 	xori	r2,r2,128
  80064c:	10bfe004 	addi	r2,r2,-128
  800650:	010020b4 	movhi	r4,130
  800654:	212d1a04 	addi	r4,r4,-19352
  800658:	100b883a 	mov	r5,r2
  80065c:	0802c0c0 	call	802c0c <printf>
  800660:	00000106 	br	800668 <TopMenu+0xdc>
      MenuCase('d',DoSevenSegMenu);
#endif
#ifdef JTAG_UART_NAME
      MenuCase('e',DoJTAGUARTMenu);
#endif
      case 'q':	break;
  800664:	0001883a 	nop
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
    }
    
    if (ch == 'q' )
  800668:	d0a76783 	ldbu	r2,-25186(gp)
  80066c:	10803fcc 	andi	r2,r2,255
  800670:	1080201c 	xori	r2,r2,128
  800674:	10bfe004 	addi	r2,r2,-128
  800678:	10801c58 	cmpnei	r2,r2,113
  80067c:	1000011e 	bne	r2,zero,800684 <TopMenu+0xf8>
      break;
  800680:	00000106 	br	800688 <TopMenu+0xfc>
  }
  800684:	003fc506 	br	80059c <__alt_data_end+0xff80059c>
  return( ch );
  800688:	d0a76783 	ldbu	r2,-25186(gp)
}
  80068c:	e037883a 	mov	sp,fp
  800690:	dfc00117 	ldw	ra,4(sp)
  800694:	df000017 	ldw	fp,0(sp)
  800698:	dec00204 	addi	sp,sp,8
  80069c:	f800283a 	ret

008006a0 <TestLEDs>:
 * This function tests LED functionality.
 * It exits when the user types a 'q'.
 */

static void TestLEDs(void)
{
  8006a0:	defffd04 	addi	sp,sp,-12
  8006a4:	dfc00215 	stw	ra,8(sp)
  8006a8:	df000115 	stw	fp,4(sp)
  8006ac:	df000104 	addi	fp,sp,4
  volatile alt_u8 led;
  static char ch;
  static char entry[4];
  
  /* Turn the LEDs on. */
  led = 0xff;
  8006b0:	00bfffc4 	movi	r2,-1
  8006b4:	e0bfff05 	stb	r2,-4(fp)
  IOWR_ALTERA_AVALON_PIO_DATA(LED_PIO_BASE, led);
  8006b8:	e0bfff03 	ldbu	r2,-4(fp)
  8006bc:	10c03fcc 	andi	r3,r2,255
  8006c0:	00804034 	movhi	r2,256
  8006c4:	10844c04 	addi	r2,r2,4400
  8006c8:	10c00035 	stwio	r3,0(r2)
  printf( "\nAll LEDs should now be on.\n" );
  8006cc:	010020b4 	movhi	r4,130
  8006d0:	212d2804 	addi	r4,r4,-19296
  8006d4:	0802d100 	call	802d10 <puts>
  printf( "\tPlease press 'q' [Followed by <enter>] to exit this test.\n" );
  8006d8:	010020b4 	movhi	r4,130
  8006dc:	212d2f04 	addi	r4,r4,-19268
  8006e0:	0802d100 	call	802d10 <puts>
  
  /* Get the input string for exiting this test. */
  do {
    GetInputString( entry, sizeof(entry), stdin);
  8006e4:	008020b4 	movhi	r2,130
  8006e8:	10b6e204 	addi	r2,r2,-9336
  8006ec:	10800017 	ldw	r2,0(r2)
  8006f0:	10800117 	ldw	r2,4(r2)
  8006f4:	d12767c4 	addi	r4,gp,-25185
  8006f8:	01400104 	movi	r5,4
  8006fc:	100d883a 	mov	r6,r2
  800700:	08003400 	call	800340 <GetInputString>
    sscanf( entry, "%c\n", &ch );
  800704:	d12767c4 	addi	r4,gp,-25185
  800708:	014020b4 	movhi	r5,130
  80070c:	296cfc04 	addi	r5,r5,-19472
  800710:	d1a768c4 	addi	r6,gp,-25181
  800714:	0802ff00 	call	802ff0 <sscanf>
  } while ( ch != 'q' );
  800718:	d0a768c3 	ldbu	r2,-25181(gp)
  80071c:	10803fcc 	andi	r2,r2,255
  800720:	1080201c 	xori	r2,r2,128
  800724:	10bfe004 	addi	r2,r2,-128
  800728:	10801c58 	cmpnei	r2,r2,113
  80072c:	103fed1e 	bne	r2,zero,8006e4 <__alt_data_end+0xff8006e4>
  
  /* Turn the LEDs off and exit. */
  led = 0x0;
  800730:	e03fff05 	stb	zero,-4(fp)
  IOWR_ALTERA_AVALON_PIO_DATA(LED_PIO_BASE, led);
  800734:	e0bfff03 	ldbu	r2,-4(fp)
  800738:	10c03fcc 	andi	r3,r2,255
  80073c:	00804034 	movhi	r2,256
  800740:	10844c04 	addi	r2,r2,4400
  800744:	10c00035 	stwio	r3,0(r2)
  printf(".....Exiting LED Test.\n");
  800748:	010020b4 	movhi	r4,130
  80074c:	212d3e04 	addi	r4,r4,-19208
  800750:	0802d100 	call	802d10 <puts>
}
  800754:	e037883a 	mov	sp,fp
  800758:	dfc00117 	ldw	ra,4(sp)
  80075c:	df000017 	ldw	fp,0(sp)
  800760:	dec00204 	addi	sp,sp,8
  800764:	f800283a 	ret

00800768 <TestLCD>:
 * Tests the LCD by printing some simple output to each line.
 * 
 ******************************************************************************/

static void TestLCD( void )
{
  800768:	defffd04 	addi	sp,sp,-12
  80076c:	dfc00215 	stw	ra,8(sp)
  800770:	df000115 	stw	fp,4(sp)
  800774:	df000104 	addi	fp,sp,4
  FILE *lcd;
  static char ch;
  static char entry[4];
  
  lcd = fopen("/dev/lcd_display", "w");
  800778:	010020b4 	movhi	r4,130
  80077c:	212d4404 	addi	r4,r4,-19184
  800780:	014020b4 	movhi	r5,130
  800784:	296d4904 	addi	r5,r5,-19164
  800788:	08014100 	call	801410 <fopen>
  80078c:	e0bfff15 	stw	r2,-4(fp)
  
  /* Write some simple text to the LCD. */
  if (lcd != NULL )
  800790:	e0bfff17 	ldw	r2,-4(fp)
  800794:	10000c26 	beq	r2,zero,8007c8 <TestLCD+0x60>
  {
    fprintf(lcd, "\nThis is the LCD Display.\n");
  800798:	010020b4 	movhi	r4,130
  80079c:	212d4a04 	addi	r4,r4,-19160
  8007a0:	01400044 	movi	r5,1
  8007a4:	01800684 	movi	r6,26
  8007a8:	e1ffff17 	ldw	r7,-4(fp)
  8007ac:	0801fc80 	call	801fc8 <fwrite>
    fprintf(lcd, "If you can see this, your LCD is functional.\n");
  8007b0:	010020b4 	movhi	r4,130
  8007b4:	212d5104 	addi	r4,r4,-19132
  8007b8:	01400044 	movi	r5,1
  8007bc:	01800b44 	movi	r6,45
  8007c0:	e1ffff17 	ldw	r7,-4(fp)
  8007c4:	0801fc80 	call	801fc8 <fwrite>
  }
  printf("\nIf you can see messages scrolling on the LCD Display, then it is functional!\n");
  8007c8:	010020b4 	movhi	r4,130
  8007cc:	212d5d04 	addi	r4,r4,-19084
  8007d0:	0802d100 	call	802d10 <puts>
  printf( "\tPlease press 'q' [Followed by <enter>] to exit this test.\n" );
  8007d4:	010020b4 	movhi	r4,130
  8007d8:	212d2f04 	addi	r4,r4,-19268
  8007dc:	0802d100 	call	802d10 <puts>
  
  /* Get the input string for exiting this test. */
  do {
    GetInputString( entry, sizeof(entry), stdin);
  8007e0:	008020b4 	movhi	r2,130
  8007e4:	10b6e204 	addi	r2,r2,-9336
  8007e8:	10800017 	ldw	r2,0(r2)
  8007ec:	10800117 	ldw	r2,4(r2)
  8007f0:	d1276904 	addi	r4,gp,-25180
  8007f4:	01400104 	movi	r5,4
  8007f8:	100d883a 	mov	r6,r2
  8007fc:	08003400 	call	800340 <GetInputString>
    sscanf( entry, "%c\n", &ch );
  800800:	d1276904 	addi	r4,gp,-25180
  800804:	014020b4 	movhi	r5,130
  800808:	296cfc04 	addi	r5,r5,-19472
  80080c:	d1a76a04 	addi	r6,gp,-25176
  800810:	0802ff00 	call	802ff0 <sscanf>
  } while ( ch != 'q' );
  800814:	d0a76a03 	ldbu	r2,-25176(gp)
  800818:	10803fcc 	andi	r2,r2,255
  80081c:	1080201c 	xori	r2,r2,128
  800820:	10bfe004 	addi	r2,r2,-128
  800824:	10801c58 	cmpnei	r2,r2,113
  800828:	103fed1e 	bne	r2,zero,8007e0 <__alt_data_end+0xff8007e0>

  /* Send the command sequence to clear the LCD. */
  if (lcd != NULL )
  80082c:	e0bfff17 	ldw	r2,-4(fp)
  800830:	10000726 	beq	r2,zero,800850 <TestLCD+0xe8>
  {
    fprintf(lcd, "%c%s", ESC, CLEAR_LCD_STRING);
  800834:	e13fff17 	ldw	r4,-4(fp)
  800838:	014020b4 	movhi	r5,130
  80083c:	296d7104 	addi	r5,r5,-19004
  800840:	018006c4 	movi	r6,27
  800844:	01c020b4 	movhi	r7,130
  800848:	39ed7304 	addi	r7,r7,-18996
  80084c:	08014540 	call	801454 <fprintf>
  }
  fclose( lcd );
  800850:	e13fff17 	ldw	r4,-4(fp)
  800854:	0800cd80 	call	800cd8 <fclose>

  return;
  800858:	0001883a 	nop
}
  80085c:	e037883a 	mov	sp,fp
  800860:	dfc00117 	ldw	ra,4(sp)
  800864:	df000017 	ldw	fp,0(sp)
  800868:	dec00204 	addi	sp,sp,8
  80086c:	f800283a 	ret

00800870 <sevenseg_set_hex>:
 * the variable 'hex' into what is displayed on
 * the Seven Segment Display.
 *********************************************/
 
static void sevenseg_set_hex(alt_u8 hex)
{
  800870:	defffd04 	addi	sp,sp,-12
  800874:	df000215 	stw	fp,8(sp)
  800878:	df000204 	addi	fp,sp,8
  80087c:	2005883a 	mov	r2,r4
  800880:	e0bfff05 	stb	r2,-4(fp)
  static alt_u8 segments[16] = {
    0x81, 0xCF, 0x92, 0x86, 0xCC, 0xA4, 0xA0, 0x8F, 0x80, 0x84, /* 0-9 */
    0x88, 0xE0, 0xF2, 0xC2, 0xB0, 0xB8 };                       /* a-f */

  alt_u32 data = segments[hex & 15] | (segments[(hex >> 4) & 15] << 8);
  800884:	e0bfff03 	ldbu	r2,-4(fp)
  800888:	10c003cc 	andi	r3,r2,15
  80088c:	008020b4 	movhi	r2,130
  800890:	10afa104 	addi	r2,r2,-16764
  800894:	10c5883a 	add	r2,r2,r3
  800898:	10800003 	ldbu	r2,0(r2)
  80089c:	10c03fcc 	andi	r3,r2,255
  8008a0:	e0bfff03 	ldbu	r2,-4(fp)
  8008a4:	1004d13a 	srli	r2,r2,4
  8008a8:	10803fcc 	andi	r2,r2,255
  8008ac:	110003cc 	andi	r4,r2,15
  8008b0:	008020b4 	movhi	r2,130
  8008b4:	10afa104 	addi	r2,r2,-16764
  8008b8:	1105883a 	add	r2,r2,r4
  8008bc:	10800003 	ldbu	r2,0(r2)
  8008c0:	10803fcc 	andi	r2,r2,255
  8008c4:	1004923a 	slli	r2,r2,8
  8008c8:	1884b03a 	or	r2,r3,r2
  8008cc:	e0bffe15 	stw	r2,-8(fp)

  IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_PIO_BASE, data);
  8008d0:	e0fffe17 	ldw	r3,-8(fp)
  8008d4:	00804034 	movhi	r2,256
  8008d8:	10840804 	addi	r2,r2,4128
  8008dc:	10c00035 	stwio	r3,0(r2)
}
  8008e0:	e037883a 	mov	sp,fp
  8008e4:	df000017 	ldw	fp,0(sp)
  8008e8:	dec00104 	addi	sp,sp,4
  8008ec:	f800283a 	ret

008008f0 <SevenSegCount>:
 * Displays from 0 to FF on the Seven Segment Display with
 * a 0.25s count delay implemented in a for loop.
 *******************************************/
 
static void SevenSegCount( void )
{
  8008f0:	defffd04 	addi	sp,sp,-12
  8008f4:	dfc00215 	stw	ra,8(sp)
  8008f8:	df000115 	stw	fp,4(sp)
  8008fc:	df000104 	addi	fp,sp,4
  alt_u32 count;
  for (count = 0; count <= 0xff; count++)
  800900:	e03fff15 	stw	zero,-4(fp)
  800904:	00000906 	br	80092c <SevenSegCount+0x3c>
  {
    sevenseg_set_hex( count );
  800908:	e0bfff17 	ldw	r2,-4(fp)
  80090c:	10803fcc 	andi	r2,r2,255
  800910:	1009883a 	mov	r4,r2
  800914:	08008700 	call	800870 <sevenseg_set_hex>
    usleep(50000);
  800918:	0130d414 	movui	r4,50000
  80091c:	0817d480 	call	817d48 <usleep>
 *******************************************/
 
static void SevenSegCount( void )
{
  alt_u32 count;
  for (count = 0; count <= 0xff; count++)
  800920:	e0bfff17 	ldw	r2,-4(fp)
  800924:	10800044 	addi	r2,r2,1
  800928:	e0bfff15 	stw	r2,-4(fp)
  80092c:	e0bfff17 	ldw	r2,-4(fp)
  800930:	10804030 	cmpltui	r2,r2,256
  800934:	103ff41e 	bne	r2,zero,800908 <__alt_data_end+0xff800908>
  {
    sevenseg_set_hex( count );
    usleep(50000);
  }
}
  800938:	e037883a 	mov	sp,fp
  80093c:	dfc00117 	ldw	ra,4(sp)
  800940:	df000017 	ldw	fp,0(sp)
  800944:	dec00204 	addi	sp,sp,8
  800948:	f800283a 	ret

0080094c <SevenSegControl>:
 * Displays selected Seven Segment segments.
 * 
 ******************************************/

static void SevenSegControl(void)
{
  80094c:	defffb04 	addi	sp,sp,-20
  800950:	dfc00415 	stw	ra,16(sp)
  800954:	df000315 	stw	fp,12(sp)
  800958:	df000304 	addi	fp,sp,12
  alt_32 bits;
  alt_32 keyBit;
  static char ch;
  
  /* Turn all segments off at start of test. */
  bits = 0xffff;
  80095c:	00bfffd4 	movui	r2,65535
  800960:	e0bffd15 	stw	r2,-12(fp)
  IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_PIO_BASE, bits);
  800964:	00804034 	movhi	r2,256
  800968:	10840804 	addi	r2,r2,4128
  80096c:	e0fffd17 	ldw	r3,-12(fp)
  800970:	10c00035 	stwio	r3,0(r2)

  printf("\n");
  800974:	01000284 	movi	r4,10
  800978:	0802c500 	call	802c50 <putchar>
  printf("\n");
  80097c:	01000284 	movi	r4,10
  800980:	0802c500 	call	802c50 <putchar>
  printf("         +-A--+     +-a--+\n");
  800984:	010020b4 	movhi	r4,130
  800988:	212d7404 	addi	r4,r4,-18992
  80098c:	0802d100 	call	802d10 <puts>
  printf("         |    |     |    |\n");
  800990:	010020b4 	movhi	r4,130
  800994:	212d7b04 	addi	r4,r4,-18964
  800998:	0802d100 	call	802d10 <puts>
  printf("         F    B     f    b\n");
  80099c:	010020b4 	movhi	r4,130
  8009a0:	212d8204 	addi	r4,r4,-18936
  8009a4:	0802d100 	call	802d10 <puts>
  printf("         |    |     |    |\n");
  8009a8:	010020b4 	movhi	r4,130
  8009ac:	212d7b04 	addi	r4,r4,-18964
  8009b0:	0802d100 	call	802d10 <puts>
  printf("         +-G--+     +-g--+\n");
  8009b4:	010020b4 	movhi	r4,130
  8009b8:	212d8904 	addi	r4,r4,-18908
  8009bc:	0802d100 	call	802d10 <puts>
  printf("         |    |     |    |\n");
  8009c0:	010020b4 	movhi	r4,130
  8009c4:	212d7b04 	addi	r4,r4,-18964
  8009c8:	0802d100 	call	802d10 <puts>
  printf("         E    C     e    c\n");
  8009cc:	010020b4 	movhi	r4,130
  8009d0:	212d9004 	addi	r4,r4,-18880
  8009d4:	0802d100 	call	802d10 <puts>
  printf("         |    |     |    |\n");
  8009d8:	010020b4 	movhi	r4,130
  8009dc:	212d7b04 	addi	r4,r4,-18964
  8009e0:	0802d100 	call	802d10 <puts>
  printf("         +-D--+ (H) +-d--+ (h)\n");
  8009e4:	010020b4 	movhi	r4,130
  8009e8:	212d9704 	addi	r4,r4,-18852
  8009ec:	0802d100 	call	802d10 <puts>
  printf("\n");
  8009f0:	01000284 	movi	r4,10
  8009f4:	0802c500 	call	802c50 <putchar>
  printf("Press 'q' [Followed by <enter>] to exit this test.\n");
  8009f8:	010020b4 	movhi	r4,130
  8009fc:	212d9f04 	addi	r4,r4,-18820
  800a00:	0802d100 	call	802d10 <puts>
  
  do
  {
    /* Get terminal input. */
    GetInputString( entry, sizeof(entry), stdin);
  800a04:	008020b4 	movhi	r2,130
  800a08:	10b6e204 	addi	r2,r2,-9336
  800a0c:	10800017 	ldw	r2,0(r2)
  800a10:	10800117 	ldw	r2,4(r2)
  800a14:	e0ffff04 	addi	r3,fp,-4
  800a18:	1809883a 	mov	r4,r3
  800a1c:	01400104 	movi	r5,4
  800a20:	100d883a 	mov	r6,r2
  800a24:	08003400 	call	800340 <GetInputString>
    sscanf( entry, "%c\n", &ch );
  800a28:	e0bfff04 	addi	r2,fp,-4
  800a2c:	1009883a 	mov	r4,r2
  800a30:	014020b4 	movhi	r5,130
  800a34:	296cfc04 	addi	r5,r5,-19472
  800a38:	d1a76a44 	addi	r6,gp,-25175
  800a3c:	0802ff00 	call	802ff0 <sscanf>
    /* SSD pattern algorithm. */
    keyBit = 0;
  800a40:	e03ffe15 	stw	zero,-8(fp)
    if(ch >= 'a' && ch <= 'g')
  800a44:	d0a76a43 	ldbu	r2,-25175(gp)
  800a48:	10803fcc 	andi	r2,r2,255
  800a4c:	1080201c 	xori	r2,r2,128
  800a50:	10bfe004 	addi	r2,r2,-128
  800a54:	10801850 	cmplti	r2,r2,97
  800a58:	1000101e 	bne	r2,zero,800a9c <SevenSegControl+0x150>
  800a5c:	d0a76a43 	ldbu	r2,-25175(gp)
  800a60:	10803fcc 	andi	r2,r2,255
  800a64:	1080201c 	xori	r2,r2,128
  800a68:	10bfe004 	addi	r2,r2,-128
  800a6c:	10801a08 	cmpgei	r2,r2,104
  800a70:	10000a1e 	bne	r2,zero,800a9c <SevenSegControl+0x150>
      keyBit = 1 << ('g' - ch);
  800a74:	d0a76a43 	ldbu	r2,-25175(gp)
  800a78:	10803fcc 	andi	r2,r2,255
  800a7c:	1080201c 	xori	r2,r2,128
  800a80:	10bfe004 	addi	r2,r2,-128
  800a84:	00c019c4 	movi	r3,103
  800a88:	1885c83a 	sub	r2,r3,r2
  800a8c:	00c00044 	movi	r3,1
  800a90:	1884983a 	sll	r2,r3,r2
  800a94:	e0bffe15 	stw	r2,-8(fp)
  800a98:	00002706 	br	800b38 <SevenSegControl+0x1ec>
    else if(ch == 'h')
  800a9c:	d0a76a43 	ldbu	r2,-25175(gp)
  800aa0:	10803fcc 	andi	r2,r2,255
  800aa4:	1080201c 	xori	r2,r2,128
  800aa8:	10bfe004 	addi	r2,r2,-128
  800aac:	10801a18 	cmpnei	r2,r2,104
  800ab0:	1000031e 	bne	r2,zero,800ac0 <SevenSegControl+0x174>
      keyBit = 1 << 7;
  800ab4:	00802004 	movi	r2,128
  800ab8:	e0bffe15 	stw	r2,-8(fp)
  800abc:	00001e06 	br	800b38 <SevenSegControl+0x1ec>
    else if(ch >= 'A' && ch <= 'G')
  800ac0:	d0a76a43 	ldbu	r2,-25175(gp)
  800ac4:	10803fcc 	andi	r2,r2,255
  800ac8:	1080201c 	xori	r2,r2,128
  800acc:	10bfe004 	addi	r2,r2,-128
  800ad0:	10801050 	cmplti	r2,r2,65
  800ad4:	1000101e 	bne	r2,zero,800b18 <SevenSegControl+0x1cc>
  800ad8:	d0a76a43 	ldbu	r2,-25175(gp)
  800adc:	10803fcc 	andi	r2,r2,255
  800ae0:	1080201c 	xori	r2,r2,128
  800ae4:	10bfe004 	addi	r2,r2,-128
  800ae8:	10801208 	cmpgei	r2,r2,72
  800aec:	10000a1e 	bne	r2,zero,800b18 <SevenSegControl+0x1cc>
      keyBit = 1 << ('G' - ch + 8);
  800af0:	d0a76a43 	ldbu	r2,-25175(gp)
  800af4:	10803fcc 	andi	r2,r2,255
  800af8:	1080201c 	xori	r2,r2,128
  800afc:	10bfe004 	addi	r2,r2,-128
  800b00:	00c013c4 	movi	r3,79
  800b04:	1885c83a 	sub	r2,r3,r2
  800b08:	00c00044 	movi	r3,1
  800b0c:	1884983a 	sll	r2,r3,r2
  800b10:	e0bffe15 	stw	r2,-8(fp)
  800b14:	00000806 	br	800b38 <SevenSegControl+0x1ec>
    else if(ch == 'H')
  800b18:	d0a76a43 	ldbu	r2,-25175(gp)
  800b1c:	10803fcc 	andi	r2,r2,255
  800b20:	1080201c 	xori	r2,r2,128
  800b24:	10bfe004 	addi	r2,r2,-128
  800b28:	10801218 	cmpnei	r2,r2,72
  800b2c:	1000021e 	bne	r2,zero,800b38 <SevenSegControl+0x1ec>
      keyBit = 1 << 15;
  800b30:	00a00014 	movui	r2,32768
  800b34:	e0bffe15 	stw	r2,-8(fp)
    bits ^= keyBit;
  800b38:	e0fffd17 	ldw	r3,-12(fp)
  800b3c:	e0bffe17 	ldw	r2,-8(fp)
  800b40:	1884f03a 	xor	r2,r3,r2
  800b44:	e0bffd15 	stw	r2,-12(fp)
    IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_PIO_BASE, bits);
  800b48:	00804034 	movhi	r2,256
  800b4c:	10840804 	addi	r2,r2,4128
  800b50:	e0fffd17 	ldw	r3,-12(fp)
  800b54:	10c00035 	stwio	r3,0(r2)
  }
  while( ch != 'q' );
  800b58:	d0a76a43 	ldbu	r2,-25175(gp)
  800b5c:	10803fcc 	andi	r2,r2,255
  800b60:	1080201c 	xori	r2,r2,128
  800b64:	10bfe004 	addi	r2,r2,-128
  800b68:	10801c58 	cmpnei	r2,r2,113
  800b6c:	103fa51e 	bne	r2,zero,800a04 <__alt_data_end+0xff800a04>
}
  800b70:	e037883a 	mov	sp,fp
  800b74:	dfc00117 	ldw	ra,4(sp)
  800b78:	df000017 	ldw	fp,0(sp)
  800b7c:	dec00204 	addi	sp,sp,8
  800b80:	f800283a 	ret

00800b84 <main>:
}

#endif

int main()
{
  800b84:	defffd04 	addi	sp,sp,-12
  800b88:	dfc00215 	stw	ra,8(sp)
  800b8c:	df000115 	stw	fp,4(sp)
  800b90:	df000104 	addi	fp,sp,4
  /* Declare variable for received character. */
  int ch;
  
  while (1)
  {
    ch = TopMenu();
  800b94:	080058c0 	call	80058c <TopMenu>
  800b98:	10803fcc 	andi	r2,r2,255
  800b9c:	1080201c 	xori	r2,r2,128
  800ba0:	10bfe004 	addi	r2,r2,-128
  800ba4:	e0bfff15 	stw	r2,-4(fp)
    if (ch == 'q')
  800ba8:	e0bfff17 	ldw	r2,-4(fp)
  800bac:	10801c58 	cmpnei	r2,r2,113
  800bb0:	1000061e 	bne	r2,zero,800bcc <main+0x48>
    {
      printf( "\nExiting from Board Diagnostics.\n");
  800bb4:	010020b4 	movhi	r4,130
  800bb8:	212dac04 	addi	r4,r4,-18768
  800bbc:	0802d100 	call	802d10 <puts>
      /* Send EOT to nios2-terminal on the other side of the link. */
      printf( "%c", EOT );
  800bc0:	01000104 	movi	r4,4
  800bc4:	0802c500 	call	802c50 <putchar>
      break;
  800bc8:	00000106 	br	800bd0 <main+0x4c>
    }
  }
  800bcc:	003ff106 	br	800b94 <__alt_data_end+0xff800b94>
  return( 0 );
  800bd0:	0005883a 	mov	r2,zero
}
  800bd4:	e037883a 	mov	sp,fp
  800bd8:	dfc00117 	ldw	ra,4(sp)
  800bdc:	df000017 	ldw	fp,0(sp)
  800be0:	dec00204 	addi	sp,sp,8
  800be4:	f800283a 	ret

00800be8 <_fclose_r>:
  800be8:	28003926 	beq	r5,zero,800cd0 <_fclose_r+0xe8>
  800bec:	defffc04 	addi	sp,sp,-16
  800bf0:	dc400115 	stw	r17,4(sp)
  800bf4:	dc000015 	stw	r16,0(sp)
  800bf8:	dfc00315 	stw	ra,12(sp)
  800bfc:	dc800215 	stw	r18,8(sp)
  800c00:	2023883a 	mov	r17,r4
  800c04:	2821883a 	mov	r16,r5
  800c08:	20000226 	beq	r4,zero,800c14 <_fclose_r+0x2c>
  800c0c:	20800e17 	ldw	r2,56(r4)
  800c10:	10002726 	beq	r2,zero,800cb0 <_fclose_r+0xc8>
  800c14:	8080030f 	ldh	r2,12(r16)
  800c18:	1000071e 	bne	r2,zero,800c38 <_fclose_r+0x50>
  800c1c:	0005883a 	mov	r2,zero
  800c20:	dfc00317 	ldw	ra,12(sp)
  800c24:	dc800217 	ldw	r18,8(sp)
  800c28:	dc400117 	ldw	r17,4(sp)
  800c2c:	dc000017 	ldw	r16,0(sp)
  800c30:	dec00404 	addi	sp,sp,16
  800c34:	f800283a 	ret
  800c38:	8809883a 	mov	r4,r17
  800c3c:	800b883a 	mov	r5,r16
  800c40:	0800cec0 	call	800cec <__sflush_r>
  800c44:	1025883a 	mov	r18,r2
  800c48:	80800b17 	ldw	r2,44(r16)
  800c4c:	10000426 	beq	r2,zero,800c60 <_fclose_r+0x78>
  800c50:	81400717 	ldw	r5,28(r16)
  800c54:	8809883a 	mov	r4,r17
  800c58:	103ee83a 	callr	r2
  800c5c:	10001616 	blt	r2,zero,800cb8 <_fclose_r+0xd0>
  800c60:	8080030b 	ldhu	r2,12(r16)
  800c64:	1080200c 	andi	r2,r2,128
  800c68:	1000151e 	bne	r2,zero,800cc0 <_fclose_r+0xd8>
  800c6c:	81400c17 	ldw	r5,48(r16)
  800c70:	28000526 	beq	r5,zero,800c88 <_fclose_r+0xa0>
  800c74:	80801004 	addi	r2,r16,64
  800c78:	28800226 	beq	r5,r2,800c84 <_fclose_r+0x9c>
  800c7c:	8809883a 	mov	r4,r17
  800c80:	080159c0 	call	80159c <_free_r>
  800c84:	80000c15 	stw	zero,48(r16)
  800c88:	81401117 	ldw	r5,68(r16)
  800c8c:	28000326 	beq	r5,zero,800c9c <_fclose_r+0xb4>
  800c90:	8809883a 	mov	r4,r17
  800c94:	080159c0 	call	80159c <_free_r>
  800c98:	80001115 	stw	zero,68(r16)
  800c9c:	08012e00 	call	8012e0 <__sfp_lock_acquire>
  800ca0:	8000030d 	sth	zero,12(r16)
  800ca4:	08012e40 	call	8012e4 <__sfp_lock_release>
  800ca8:	9005883a 	mov	r2,r18
  800cac:	003fdc06 	br	800c20 <__alt_data_end+0xff800c20>
  800cb0:	08012d00 	call	8012d0 <__sinit>
  800cb4:	003fd706 	br	800c14 <__alt_data_end+0xff800c14>
  800cb8:	04bfffc4 	movi	r18,-1
  800cbc:	003fe806 	br	800c60 <__alt_data_end+0xff800c60>
  800cc0:	81400417 	ldw	r5,16(r16)
  800cc4:	8809883a 	mov	r4,r17
  800cc8:	080159c0 	call	80159c <_free_r>
  800ccc:	003fe706 	br	800c6c <__alt_data_end+0xff800c6c>
  800cd0:	0005883a 	mov	r2,zero
  800cd4:	f800283a 	ret

00800cd8 <fclose>:
  800cd8:	008020b4 	movhi	r2,130
  800cdc:	10b6e204 	addi	r2,r2,-9336
  800ce0:	200b883a 	mov	r5,r4
  800ce4:	11000017 	ldw	r4,0(r2)
  800ce8:	0800be81 	jmpi	800be8 <_fclose_r>

00800cec <__sflush_r>:
  800cec:	2880030b 	ldhu	r2,12(r5)
  800cf0:	defffb04 	addi	sp,sp,-20
  800cf4:	dcc00315 	stw	r19,12(sp)
  800cf8:	dc400115 	stw	r17,4(sp)
  800cfc:	dfc00415 	stw	ra,16(sp)
  800d00:	dc800215 	stw	r18,8(sp)
  800d04:	dc000015 	stw	r16,0(sp)
  800d08:	10c0020c 	andi	r3,r2,8
  800d0c:	2823883a 	mov	r17,r5
  800d10:	2027883a 	mov	r19,r4
  800d14:	1800311e 	bne	r3,zero,800ddc <__sflush_r+0xf0>
  800d18:	28c00117 	ldw	r3,4(r5)
  800d1c:	10820014 	ori	r2,r2,2048
  800d20:	2880030d 	sth	r2,12(r5)
  800d24:	00c04b0e 	bge	zero,r3,800e54 <__sflush_r+0x168>
  800d28:	8a000a17 	ldw	r8,40(r17)
  800d2c:	40002326 	beq	r8,zero,800dbc <__sflush_r+0xd0>
  800d30:	9c000017 	ldw	r16,0(r19)
  800d34:	10c4000c 	andi	r3,r2,4096
  800d38:	98000015 	stw	zero,0(r19)
  800d3c:	18004826 	beq	r3,zero,800e60 <__sflush_r+0x174>
  800d40:	89801417 	ldw	r6,80(r17)
  800d44:	10c0010c 	andi	r3,r2,4
  800d48:	18000626 	beq	r3,zero,800d64 <__sflush_r+0x78>
  800d4c:	88c00117 	ldw	r3,4(r17)
  800d50:	88800c17 	ldw	r2,48(r17)
  800d54:	30cdc83a 	sub	r6,r6,r3
  800d58:	10000226 	beq	r2,zero,800d64 <__sflush_r+0x78>
  800d5c:	88800f17 	ldw	r2,60(r17)
  800d60:	308dc83a 	sub	r6,r6,r2
  800d64:	89400717 	ldw	r5,28(r17)
  800d68:	9809883a 	mov	r4,r19
  800d6c:	000f883a 	mov	r7,zero
  800d70:	403ee83a 	callr	r8
  800d74:	00ffffc4 	movi	r3,-1
  800d78:	10c04426 	beq	r2,r3,800e8c <__sflush_r+0x1a0>
  800d7c:	88c0030b 	ldhu	r3,12(r17)
  800d80:	89000417 	ldw	r4,16(r17)
  800d84:	88000115 	stw	zero,4(r17)
  800d88:	197dffcc 	andi	r5,r3,63487
  800d8c:	8940030d 	sth	r5,12(r17)
  800d90:	89000015 	stw	r4,0(r17)
  800d94:	18c4000c 	andi	r3,r3,4096
  800d98:	18002c1e 	bne	r3,zero,800e4c <__sflush_r+0x160>
  800d9c:	89400c17 	ldw	r5,48(r17)
  800da0:	9c000015 	stw	r16,0(r19)
  800da4:	28000526 	beq	r5,zero,800dbc <__sflush_r+0xd0>
  800da8:	88801004 	addi	r2,r17,64
  800dac:	28800226 	beq	r5,r2,800db8 <__sflush_r+0xcc>
  800db0:	9809883a 	mov	r4,r19
  800db4:	080159c0 	call	80159c <_free_r>
  800db8:	88000c15 	stw	zero,48(r17)
  800dbc:	0005883a 	mov	r2,zero
  800dc0:	dfc00417 	ldw	ra,16(sp)
  800dc4:	dcc00317 	ldw	r19,12(sp)
  800dc8:	dc800217 	ldw	r18,8(sp)
  800dcc:	dc400117 	ldw	r17,4(sp)
  800dd0:	dc000017 	ldw	r16,0(sp)
  800dd4:	dec00504 	addi	sp,sp,20
  800dd8:	f800283a 	ret
  800ddc:	2c800417 	ldw	r18,16(r5)
  800de0:	903ff626 	beq	r18,zero,800dbc <__alt_data_end+0xff800dbc>
  800de4:	2c000017 	ldw	r16,0(r5)
  800de8:	108000cc 	andi	r2,r2,3
  800dec:	2c800015 	stw	r18,0(r5)
  800df0:	84a1c83a 	sub	r16,r16,r18
  800df4:	1000131e 	bne	r2,zero,800e44 <__sflush_r+0x158>
  800df8:	28800517 	ldw	r2,20(r5)
  800dfc:	88800215 	stw	r2,8(r17)
  800e00:	04000316 	blt	zero,r16,800e10 <__sflush_r+0x124>
  800e04:	003fed06 	br	800dbc <__alt_data_end+0xff800dbc>
  800e08:	90a5883a 	add	r18,r18,r2
  800e0c:	043feb0e 	bge	zero,r16,800dbc <__alt_data_end+0xff800dbc>
  800e10:	88800917 	ldw	r2,36(r17)
  800e14:	89400717 	ldw	r5,28(r17)
  800e18:	800f883a 	mov	r7,r16
  800e1c:	900d883a 	mov	r6,r18
  800e20:	9809883a 	mov	r4,r19
  800e24:	103ee83a 	callr	r2
  800e28:	80a1c83a 	sub	r16,r16,r2
  800e2c:	00bff616 	blt	zero,r2,800e08 <__alt_data_end+0xff800e08>
  800e30:	88c0030b 	ldhu	r3,12(r17)
  800e34:	00bfffc4 	movi	r2,-1
  800e38:	18c01014 	ori	r3,r3,64
  800e3c:	88c0030d 	sth	r3,12(r17)
  800e40:	003fdf06 	br	800dc0 <__alt_data_end+0xff800dc0>
  800e44:	0005883a 	mov	r2,zero
  800e48:	003fec06 	br	800dfc <__alt_data_end+0xff800dfc>
  800e4c:	88801415 	stw	r2,80(r17)
  800e50:	003fd206 	br	800d9c <__alt_data_end+0xff800d9c>
  800e54:	28c00f17 	ldw	r3,60(r5)
  800e58:	00ffb316 	blt	zero,r3,800d28 <__alt_data_end+0xff800d28>
  800e5c:	003fd706 	br	800dbc <__alt_data_end+0xff800dbc>
  800e60:	89400717 	ldw	r5,28(r17)
  800e64:	000d883a 	mov	r6,zero
  800e68:	9809883a 	mov	r4,r19
  800e6c:	01c00044 	movi	r7,1
  800e70:	403ee83a 	callr	r8
  800e74:	100d883a 	mov	r6,r2
  800e78:	00bfffc4 	movi	r2,-1
  800e7c:	30801426 	beq	r6,r2,800ed0 <__sflush_r+0x1e4>
  800e80:	8880030b 	ldhu	r2,12(r17)
  800e84:	8a000a17 	ldw	r8,40(r17)
  800e88:	003fae06 	br	800d44 <__alt_data_end+0xff800d44>
  800e8c:	98c00017 	ldw	r3,0(r19)
  800e90:	183fba26 	beq	r3,zero,800d7c <__alt_data_end+0xff800d7c>
  800e94:	01000744 	movi	r4,29
  800e98:	19000626 	beq	r3,r4,800eb4 <__sflush_r+0x1c8>
  800e9c:	01000584 	movi	r4,22
  800ea0:	19000426 	beq	r3,r4,800eb4 <__sflush_r+0x1c8>
  800ea4:	88c0030b 	ldhu	r3,12(r17)
  800ea8:	18c01014 	ori	r3,r3,64
  800eac:	88c0030d 	sth	r3,12(r17)
  800eb0:	003fc306 	br	800dc0 <__alt_data_end+0xff800dc0>
  800eb4:	8880030b 	ldhu	r2,12(r17)
  800eb8:	88c00417 	ldw	r3,16(r17)
  800ebc:	88000115 	stw	zero,4(r17)
  800ec0:	10bdffcc 	andi	r2,r2,63487
  800ec4:	8880030d 	sth	r2,12(r17)
  800ec8:	88c00015 	stw	r3,0(r17)
  800ecc:	003fb306 	br	800d9c <__alt_data_end+0xff800d9c>
  800ed0:	98800017 	ldw	r2,0(r19)
  800ed4:	103fea26 	beq	r2,zero,800e80 <__alt_data_end+0xff800e80>
  800ed8:	00c00744 	movi	r3,29
  800edc:	10c00226 	beq	r2,r3,800ee8 <__sflush_r+0x1fc>
  800ee0:	00c00584 	movi	r3,22
  800ee4:	10ffd21e 	bne	r2,r3,800e30 <__alt_data_end+0xff800e30>
  800ee8:	9c000015 	stw	r16,0(r19)
  800eec:	0005883a 	mov	r2,zero
  800ef0:	003fb306 	br	800dc0 <__alt_data_end+0xff800dc0>

00800ef4 <_fflush_r>:
  800ef4:	defffd04 	addi	sp,sp,-12
  800ef8:	dc000115 	stw	r16,4(sp)
  800efc:	dfc00215 	stw	ra,8(sp)
  800f00:	2021883a 	mov	r16,r4
  800f04:	20000226 	beq	r4,zero,800f10 <_fflush_r+0x1c>
  800f08:	20800e17 	ldw	r2,56(r4)
  800f0c:	10000c26 	beq	r2,zero,800f40 <_fflush_r+0x4c>
  800f10:	2880030f 	ldh	r2,12(r5)
  800f14:	1000051e 	bne	r2,zero,800f2c <_fflush_r+0x38>
  800f18:	0005883a 	mov	r2,zero
  800f1c:	dfc00217 	ldw	ra,8(sp)
  800f20:	dc000117 	ldw	r16,4(sp)
  800f24:	dec00304 	addi	sp,sp,12
  800f28:	f800283a 	ret
  800f2c:	8009883a 	mov	r4,r16
  800f30:	dfc00217 	ldw	ra,8(sp)
  800f34:	dc000117 	ldw	r16,4(sp)
  800f38:	dec00304 	addi	sp,sp,12
  800f3c:	0800cec1 	jmpi	800cec <__sflush_r>
  800f40:	d9400015 	stw	r5,0(sp)
  800f44:	08012d00 	call	8012d0 <__sinit>
  800f48:	d9400017 	ldw	r5,0(sp)
  800f4c:	003ff006 	br	800f10 <__alt_data_end+0xff800f10>

00800f50 <fflush>:
  800f50:	20000526 	beq	r4,zero,800f68 <fflush+0x18>
  800f54:	008020b4 	movhi	r2,130
  800f58:	10b6e204 	addi	r2,r2,-9336
  800f5c:	200b883a 	mov	r5,r4
  800f60:	11000017 	ldw	r4,0(r2)
  800f64:	0800ef41 	jmpi	800ef4 <_fflush_r>
  800f68:	008020b4 	movhi	r2,130
  800f6c:	10b6e104 	addi	r2,r2,-9340
  800f70:	11000017 	ldw	r4,0(r2)
  800f74:	01402034 	movhi	r5,128
  800f78:	2943bd04 	addi	r5,r5,3828
  800f7c:	0801e381 	jmpi	801e38 <_fwalk_reent>

00800f80 <__fp_lock>:
  800f80:	0005883a 	mov	r2,zero
  800f84:	f800283a 	ret

00800f88 <__fp_unlock>:
  800f88:	0005883a 	mov	r2,zero
  800f8c:	f800283a 	ret

00800f90 <_cleanup_r>:
  800f90:	01402034 	movhi	r5,128
  800f94:	2942fa04 	addi	r5,r5,3048
  800f98:	0801e381 	jmpi	801e38 <_fwalk_reent>

00800f9c <__sinit.part.1>:
  800f9c:	defff704 	addi	sp,sp,-36
  800fa0:	00c02034 	movhi	r3,128
  800fa4:	dfc00815 	stw	ra,32(sp)
  800fa8:	ddc00715 	stw	r23,28(sp)
  800fac:	dd800615 	stw	r22,24(sp)
  800fb0:	dd400515 	stw	r21,20(sp)
  800fb4:	dd000415 	stw	r20,16(sp)
  800fb8:	dcc00315 	stw	r19,12(sp)
  800fbc:	dc800215 	stw	r18,8(sp)
  800fc0:	dc400115 	stw	r17,4(sp)
  800fc4:	dc000015 	stw	r16,0(sp)
  800fc8:	18c3e404 	addi	r3,r3,3984
  800fcc:	24000117 	ldw	r16,4(r4)
  800fd0:	20c00f15 	stw	r3,60(r4)
  800fd4:	2080bb04 	addi	r2,r4,748
  800fd8:	00c000c4 	movi	r3,3
  800fdc:	20c0b915 	stw	r3,740(r4)
  800fe0:	2080ba15 	stw	r2,744(r4)
  800fe4:	2000b815 	stw	zero,736(r4)
  800fe8:	05c00204 	movi	r23,8
  800fec:	00800104 	movi	r2,4
  800ff0:	2025883a 	mov	r18,r4
  800ff4:	b80d883a 	mov	r6,r23
  800ff8:	81001704 	addi	r4,r16,92
  800ffc:	000b883a 	mov	r5,zero
  801000:	80000015 	stw	zero,0(r16)
  801004:	80000115 	stw	zero,4(r16)
  801008:	80000215 	stw	zero,8(r16)
  80100c:	8080030d 	sth	r2,12(r16)
  801010:	80001915 	stw	zero,100(r16)
  801014:	8000038d 	sth	zero,14(r16)
  801018:	80000415 	stw	zero,16(r16)
  80101c:	80000515 	stw	zero,20(r16)
  801020:	80000615 	stw	zero,24(r16)
  801024:	0802a600 	call	802a60 <memset>
  801028:	05802034 	movhi	r22,128
  80102c:	94400217 	ldw	r17,8(r18)
  801030:	05402034 	movhi	r21,128
  801034:	05002034 	movhi	r20,128
  801038:	04c02034 	movhi	r19,128
  80103c:	b58c3904 	addi	r22,r22,12516
  801040:	ad4c5004 	addi	r21,r21,12608
  801044:	a50c6f04 	addi	r20,r20,12732
  801048:	9ccc8604 	addi	r19,r19,12824
  80104c:	85800815 	stw	r22,32(r16)
  801050:	85400915 	stw	r21,36(r16)
  801054:	85000a15 	stw	r20,40(r16)
  801058:	84c00b15 	stw	r19,44(r16)
  80105c:	84000715 	stw	r16,28(r16)
  801060:	00800284 	movi	r2,10
  801064:	8880030d 	sth	r2,12(r17)
  801068:	00800044 	movi	r2,1
  80106c:	89001704 	addi	r4,r17,92
  801070:	b80d883a 	mov	r6,r23
  801074:	000b883a 	mov	r5,zero
  801078:	88000015 	stw	zero,0(r17)
  80107c:	88000115 	stw	zero,4(r17)
  801080:	88000215 	stw	zero,8(r17)
  801084:	88001915 	stw	zero,100(r17)
  801088:	8880038d 	sth	r2,14(r17)
  80108c:	88000415 	stw	zero,16(r17)
  801090:	88000515 	stw	zero,20(r17)
  801094:	88000615 	stw	zero,24(r17)
  801098:	0802a600 	call	802a60 <memset>
  80109c:	94000317 	ldw	r16,12(r18)
  8010a0:	00800484 	movi	r2,18
  8010a4:	8c400715 	stw	r17,28(r17)
  8010a8:	8d800815 	stw	r22,32(r17)
  8010ac:	8d400915 	stw	r21,36(r17)
  8010b0:	8d000a15 	stw	r20,40(r17)
  8010b4:	8cc00b15 	stw	r19,44(r17)
  8010b8:	8080030d 	sth	r2,12(r16)
  8010bc:	00800084 	movi	r2,2
  8010c0:	80000015 	stw	zero,0(r16)
  8010c4:	80000115 	stw	zero,4(r16)
  8010c8:	80000215 	stw	zero,8(r16)
  8010cc:	80001915 	stw	zero,100(r16)
  8010d0:	8080038d 	sth	r2,14(r16)
  8010d4:	80000415 	stw	zero,16(r16)
  8010d8:	80000515 	stw	zero,20(r16)
  8010dc:	80000615 	stw	zero,24(r16)
  8010e0:	81001704 	addi	r4,r16,92
  8010e4:	000b883a 	mov	r5,zero
  8010e8:	b80d883a 	mov	r6,r23
  8010ec:	0802a600 	call	802a60 <memset>
  8010f0:	00800044 	movi	r2,1
  8010f4:	84000715 	stw	r16,28(r16)
  8010f8:	85800815 	stw	r22,32(r16)
  8010fc:	85400915 	stw	r21,36(r16)
  801100:	85000a15 	stw	r20,40(r16)
  801104:	84c00b15 	stw	r19,44(r16)
  801108:	90800e15 	stw	r2,56(r18)
  80110c:	dfc00817 	ldw	ra,32(sp)
  801110:	ddc00717 	ldw	r23,28(sp)
  801114:	dd800617 	ldw	r22,24(sp)
  801118:	dd400517 	ldw	r21,20(sp)
  80111c:	dd000417 	ldw	r20,16(sp)
  801120:	dcc00317 	ldw	r19,12(sp)
  801124:	dc800217 	ldw	r18,8(sp)
  801128:	dc400117 	ldw	r17,4(sp)
  80112c:	dc000017 	ldw	r16,0(sp)
  801130:	dec00904 	addi	sp,sp,36
  801134:	f800283a 	ret

00801138 <__sfmoreglue>:
  801138:	defffc04 	addi	sp,sp,-16
  80113c:	dc400115 	stw	r17,4(sp)
  801140:	2c7fffc4 	addi	r17,r5,-1
  801144:	8c401a24 	muli	r17,r17,104
  801148:	dc800215 	stw	r18,8(sp)
  80114c:	2825883a 	mov	r18,r5
  801150:	89401d04 	addi	r5,r17,116
  801154:	dc000015 	stw	r16,0(sp)
  801158:	dfc00315 	stw	ra,12(sp)
  80115c:	08022b80 	call	8022b8 <_malloc_r>
  801160:	1021883a 	mov	r16,r2
  801164:	10000726 	beq	r2,zero,801184 <__sfmoreglue+0x4c>
  801168:	11000304 	addi	r4,r2,12
  80116c:	10000015 	stw	zero,0(r2)
  801170:	14800115 	stw	r18,4(r2)
  801174:	11000215 	stw	r4,8(r2)
  801178:	000b883a 	mov	r5,zero
  80117c:	89801a04 	addi	r6,r17,104
  801180:	0802a600 	call	802a60 <memset>
  801184:	8005883a 	mov	r2,r16
  801188:	dfc00317 	ldw	ra,12(sp)
  80118c:	dc800217 	ldw	r18,8(sp)
  801190:	dc400117 	ldw	r17,4(sp)
  801194:	dc000017 	ldw	r16,0(sp)
  801198:	dec00404 	addi	sp,sp,16
  80119c:	f800283a 	ret

008011a0 <__sfp>:
  8011a0:	008020b4 	movhi	r2,130
  8011a4:	defffb04 	addi	sp,sp,-20
  8011a8:	10b6e104 	addi	r2,r2,-9340
  8011ac:	dc800215 	stw	r18,8(sp)
  8011b0:	14800017 	ldw	r18,0(r2)
  8011b4:	dcc00315 	stw	r19,12(sp)
  8011b8:	dfc00415 	stw	ra,16(sp)
  8011bc:	90800e17 	ldw	r2,56(r18)
  8011c0:	dc400115 	stw	r17,4(sp)
  8011c4:	dc000015 	stw	r16,0(sp)
  8011c8:	2027883a 	mov	r19,r4
  8011cc:	1000021e 	bne	r2,zero,8011d8 <__sfp+0x38>
  8011d0:	9009883a 	mov	r4,r18
  8011d4:	0800f9c0 	call	800f9c <__sinit.part.1>
  8011d8:	9480b804 	addi	r18,r18,736
  8011dc:	047fffc4 	movi	r17,-1
  8011e0:	91400117 	ldw	r5,4(r18)
  8011e4:	94000217 	ldw	r16,8(r18)
  8011e8:	297fffc4 	addi	r5,r5,-1
  8011ec:	28000a16 	blt	r5,zero,801218 <__sfp+0x78>
  8011f0:	8080030f 	ldh	r2,12(r16)
  8011f4:	10000c26 	beq	r2,zero,801228 <__sfp+0x88>
  8011f8:	80c01d04 	addi	r3,r16,116
  8011fc:	00000206 	br	801208 <__sfp+0x68>
  801200:	18bfe60f 	ldh	r2,-104(r3)
  801204:	10000826 	beq	r2,zero,801228 <__sfp+0x88>
  801208:	297fffc4 	addi	r5,r5,-1
  80120c:	1c3ffd04 	addi	r16,r3,-12
  801210:	18c01a04 	addi	r3,r3,104
  801214:	2c7ffa1e 	bne	r5,r17,801200 <__alt_data_end+0xff801200>
  801218:	90800017 	ldw	r2,0(r18)
  80121c:	10001d26 	beq	r2,zero,801294 <__sfp+0xf4>
  801220:	1025883a 	mov	r18,r2
  801224:	003fee06 	br	8011e0 <__alt_data_end+0xff8011e0>
  801228:	00bfffc4 	movi	r2,-1
  80122c:	8080038d 	sth	r2,14(r16)
  801230:	00800044 	movi	r2,1
  801234:	8080030d 	sth	r2,12(r16)
  801238:	80001915 	stw	zero,100(r16)
  80123c:	80000015 	stw	zero,0(r16)
  801240:	80000215 	stw	zero,8(r16)
  801244:	80000115 	stw	zero,4(r16)
  801248:	80000415 	stw	zero,16(r16)
  80124c:	80000515 	stw	zero,20(r16)
  801250:	80000615 	stw	zero,24(r16)
  801254:	81001704 	addi	r4,r16,92
  801258:	000b883a 	mov	r5,zero
  80125c:	01800204 	movi	r6,8
  801260:	0802a600 	call	802a60 <memset>
  801264:	8005883a 	mov	r2,r16
  801268:	80000c15 	stw	zero,48(r16)
  80126c:	80000d15 	stw	zero,52(r16)
  801270:	80001115 	stw	zero,68(r16)
  801274:	80001215 	stw	zero,72(r16)
  801278:	dfc00417 	ldw	ra,16(sp)
  80127c:	dcc00317 	ldw	r19,12(sp)
  801280:	dc800217 	ldw	r18,8(sp)
  801284:	dc400117 	ldw	r17,4(sp)
  801288:	dc000017 	ldw	r16,0(sp)
  80128c:	dec00504 	addi	sp,sp,20
  801290:	f800283a 	ret
  801294:	9809883a 	mov	r4,r19
  801298:	01400104 	movi	r5,4
  80129c:	08011380 	call	801138 <__sfmoreglue>
  8012a0:	90800015 	stw	r2,0(r18)
  8012a4:	103fde1e 	bne	r2,zero,801220 <__alt_data_end+0xff801220>
  8012a8:	00800304 	movi	r2,12
  8012ac:	98800015 	stw	r2,0(r19)
  8012b0:	0005883a 	mov	r2,zero
  8012b4:	003ff006 	br	801278 <__alt_data_end+0xff801278>

008012b8 <_cleanup>:
  8012b8:	008020b4 	movhi	r2,130
  8012bc:	10b6e104 	addi	r2,r2,-9340
  8012c0:	11000017 	ldw	r4,0(r2)
  8012c4:	01402034 	movhi	r5,128
  8012c8:	2942fa04 	addi	r5,r5,3048
  8012cc:	0801e381 	jmpi	801e38 <_fwalk_reent>

008012d0 <__sinit>:
  8012d0:	20800e17 	ldw	r2,56(r4)
  8012d4:	10000126 	beq	r2,zero,8012dc <__sinit+0xc>
  8012d8:	f800283a 	ret
  8012dc:	0800f9c1 	jmpi	800f9c <__sinit.part.1>

008012e0 <__sfp_lock_acquire>:
  8012e0:	f800283a 	ret

008012e4 <__sfp_lock_release>:
  8012e4:	f800283a 	ret

008012e8 <__sinit_lock_acquire>:
  8012e8:	f800283a 	ret

008012ec <__sinit_lock_release>:
  8012ec:	f800283a 	ret

008012f0 <__fp_lock_all>:
  8012f0:	008020b4 	movhi	r2,130
  8012f4:	10b6e204 	addi	r2,r2,-9336
  8012f8:	11000017 	ldw	r4,0(r2)
  8012fc:	01402034 	movhi	r5,128
  801300:	2943e004 	addi	r5,r5,3968
  801304:	0801d741 	jmpi	801d74 <_fwalk>

00801308 <__fp_unlock_all>:
  801308:	008020b4 	movhi	r2,130
  80130c:	10b6e204 	addi	r2,r2,-9336
  801310:	11000017 	ldw	r4,0(r2)
  801314:	01402034 	movhi	r5,128
  801318:	2943e204 	addi	r5,r5,3976
  80131c:	0801d741 	jmpi	801d74 <_fwalk>

00801320 <_fopen_r>:
  801320:	defffa04 	addi	sp,sp,-24
  801324:	dcc00415 	stw	r19,16(sp)
  801328:	2827883a 	mov	r19,r5
  80132c:	300b883a 	mov	r5,r6
  801330:	d80d883a 	mov	r6,sp
  801334:	dc800315 	stw	r18,12(sp)
  801338:	dc400215 	stw	r17,8(sp)
  80133c:	dfc00515 	stw	ra,20(sp)
  801340:	dc000115 	stw	r16,4(sp)
  801344:	2025883a 	mov	r18,r4
  801348:	080850c0 	call	80850c <__sflags>
  80134c:	1023883a 	mov	r17,r2
  801350:	10002626 	beq	r2,zero,8013ec <_fopen_r+0xcc>
  801354:	9009883a 	mov	r4,r18
  801358:	08011a00 	call	8011a0 <__sfp>
  80135c:	1021883a 	mov	r16,r2
  801360:	10002226 	beq	r2,zero,8013ec <_fopen_r+0xcc>
  801364:	d9800017 	ldw	r6,0(sp)
  801368:	9009883a 	mov	r4,r18
  80136c:	980b883a 	mov	r5,r19
  801370:	01c06d84 	movi	r7,438
  801374:	0802b840 	call	802b84 <_open_r>
  801378:	10001916 	blt	r2,zero,8013e0 <_fopen_r+0xc0>
  80137c:	8080038d 	sth	r2,14(r16)
  801380:	00802034 	movhi	r2,128
  801384:	108c3904 	addi	r2,r2,12516
  801388:	80800815 	stw	r2,32(r16)
  80138c:	00802034 	movhi	r2,128
  801390:	108c5004 	addi	r2,r2,12608
  801394:	80800915 	stw	r2,36(r16)
  801398:	00802034 	movhi	r2,128
  80139c:	108c6f04 	addi	r2,r2,12732
  8013a0:	80800a15 	stw	r2,40(r16)
  8013a4:	00802034 	movhi	r2,128
  8013a8:	108c8604 	addi	r2,r2,12824
  8013ac:	8440030d 	sth	r17,12(r16)
  8013b0:	84000715 	stw	r16,28(r16)
  8013b4:	80800b15 	stw	r2,44(r16)
  8013b8:	8c40400c 	andi	r17,r17,256
  8013bc:	88000d1e 	bne	r17,zero,8013f4 <_fopen_r+0xd4>
  8013c0:	8005883a 	mov	r2,r16
  8013c4:	dfc00517 	ldw	ra,20(sp)
  8013c8:	dcc00417 	ldw	r19,16(sp)
  8013cc:	dc800317 	ldw	r18,12(sp)
  8013d0:	dc400217 	ldw	r17,8(sp)
  8013d4:	dc000117 	ldw	r16,4(sp)
  8013d8:	dec00604 	addi	sp,sp,24
  8013dc:	f800283a 	ret
  8013e0:	08012e00 	call	8012e0 <__sfp_lock_acquire>
  8013e4:	8000030d 	sth	zero,12(r16)
  8013e8:	08012e40 	call	8012e4 <__sfp_lock_release>
  8013ec:	0005883a 	mov	r2,zero
  8013f0:	003ff406 	br	8013c4 <__alt_data_end+0xff8013c4>
  8013f4:	9009883a 	mov	r4,r18
  8013f8:	800b883a 	mov	r5,r16
  8013fc:	000d883a 	mov	r6,zero
  801400:	01c00084 	movi	r7,2
  801404:	080188c0 	call	80188c <_fseek_r>
  801408:	8005883a 	mov	r2,r16
  80140c:	003fed06 	br	8013c4 <__alt_data_end+0xff8013c4>

00801410 <fopen>:
  801410:	00c020b4 	movhi	r3,130
  801414:	18f6e204 	addi	r3,r3,-9336
  801418:	2005883a 	mov	r2,r4
  80141c:	19000017 	ldw	r4,0(r3)
  801420:	280d883a 	mov	r6,r5
  801424:	100b883a 	mov	r5,r2
  801428:	08013201 	jmpi	801320 <_fopen_r>

0080142c <_fprintf_r>:
  80142c:	defffe04 	addi	sp,sp,-8
  801430:	2809883a 	mov	r4,r5
  801434:	dfc00015 	stw	ra,0(sp)
  801438:	d9c00115 	stw	r7,4(sp)
  80143c:	300b883a 	mov	r5,r6
  801440:	d9800104 	addi	r6,sp,4
  801444:	08069000 	call	806900 <__vfprintf_internal>
  801448:	dfc00017 	ldw	ra,0(sp)
  80144c:	dec00204 	addi	sp,sp,8
  801450:	f800283a 	ret

00801454 <fprintf>:
  801454:	defffd04 	addi	sp,sp,-12
  801458:	dfc00015 	stw	ra,0(sp)
  80145c:	d9800115 	stw	r6,4(sp)
  801460:	d9c00215 	stw	r7,8(sp)
  801464:	d9800104 	addi	r6,sp,4
  801468:	08069000 	call	806900 <__vfprintf_internal>
  80146c:	dfc00017 	ldw	ra,0(sp)
  801470:	dec00304 	addi	sp,sp,12
  801474:	f800283a 	ret

00801478 <_malloc_trim_r>:
  801478:	defffb04 	addi	sp,sp,-20
  80147c:	dcc00315 	stw	r19,12(sp)
  801480:	04c020b4 	movhi	r19,130
  801484:	dc800215 	stw	r18,8(sp)
  801488:	dc400115 	stw	r17,4(sp)
  80148c:	dc000015 	stw	r16,0(sp)
  801490:	dfc00415 	stw	ra,16(sp)
  801494:	2821883a 	mov	r16,r5
  801498:	9cf0ae04 	addi	r19,r19,-15688
  80149c:	2025883a 	mov	r18,r4
  8014a0:	08178380 	call	817838 <__malloc_lock>
  8014a4:	98800217 	ldw	r2,8(r19)
  8014a8:	14400117 	ldw	r17,4(r2)
  8014ac:	00bfff04 	movi	r2,-4
  8014b0:	88a2703a 	and	r17,r17,r2
  8014b4:	8c21c83a 	sub	r16,r17,r16
  8014b8:	8403fbc4 	addi	r16,r16,4079
  8014bc:	8020d33a 	srli	r16,r16,12
  8014c0:	0083ffc4 	movi	r2,4095
  8014c4:	843fffc4 	addi	r16,r16,-1
  8014c8:	8020933a 	slli	r16,r16,12
  8014cc:	1400060e 	bge	r2,r16,8014e8 <_malloc_trim_r+0x70>
  8014d0:	9009883a 	mov	r4,r18
  8014d4:	000b883a 	mov	r5,zero
  8014d8:	0802f9c0 	call	802f9c <_sbrk_r>
  8014dc:	98c00217 	ldw	r3,8(r19)
  8014e0:	1c47883a 	add	r3,r3,r17
  8014e4:	10c00a26 	beq	r2,r3,801510 <_malloc_trim_r+0x98>
  8014e8:	9009883a 	mov	r4,r18
  8014ec:	08178580 	call	817858 <__malloc_unlock>
  8014f0:	0005883a 	mov	r2,zero
  8014f4:	dfc00417 	ldw	ra,16(sp)
  8014f8:	dcc00317 	ldw	r19,12(sp)
  8014fc:	dc800217 	ldw	r18,8(sp)
  801500:	dc400117 	ldw	r17,4(sp)
  801504:	dc000017 	ldw	r16,0(sp)
  801508:	dec00504 	addi	sp,sp,20
  80150c:	f800283a 	ret
  801510:	9009883a 	mov	r4,r18
  801514:	040bc83a 	sub	r5,zero,r16
  801518:	0802f9c0 	call	802f9c <_sbrk_r>
  80151c:	00ffffc4 	movi	r3,-1
  801520:	10c00d26 	beq	r2,r3,801558 <_malloc_trim_r+0xe0>
  801524:	00c020b4 	movhi	r3,130
  801528:	18fe5b04 	addi	r3,r3,-1684
  80152c:	18800017 	ldw	r2,0(r3)
  801530:	99000217 	ldw	r4,8(r19)
  801534:	8c23c83a 	sub	r17,r17,r16
  801538:	8c400054 	ori	r17,r17,1
  80153c:	1421c83a 	sub	r16,r2,r16
  801540:	24400115 	stw	r17,4(r4)
  801544:	9009883a 	mov	r4,r18
  801548:	1c000015 	stw	r16,0(r3)
  80154c:	08178580 	call	817858 <__malloc_unlock>
  801550:	00800044 	movi	r2,1
  801554:	003fe706 	br	8014f4 <__alt_data_end+0xff8014f4>
  801558:	9009883a 	mov	r4,r18
  80155c:	000b883a 	mov	r5,zero
  801560:	0802f9c0 	call	802f9c <_sbrk_r>
  801564:	99000217 	ldw	r4,8(r19)
  801568:	014003c4 	movi	r5,15
  80156c:	1107c83a 	sub	r3,r2,r4
  801570:	28ffdd0e 	bge	r5,r3,8014e8 <__alt_data_end+0xff8014e8>
  801574:	014020b4 	movhi	r5,130
  801578:	2976e304 	addi	r5,r5,-9332
  80157c:	29400017 	ldw	r5,0(r5)
  801580:	18c00054 	ori	r3,r3,1
  801584:	20c00115 	stw	r3,4(r4)
  801588:	00c020b4 	movhi	r3,130
  80158c:	1145c83a 	sub	r2,r2,r5
  801590:	18fe5b04 	addi	r3,r3,-1684
  801594:	18800015 	stw	r2,0(r3)
  801598:	003fd306 	br	8014e8 <__alt_data_end+0xff8014e8>

0080159c <_free_r>:
  80159c:	28004c26 	beq	r5,zero,8016d0 <_free_r+0x134>
  8015a0:	defffd04 	addi	sp,sp,-12
  8015a4:	dc400115 	stw	r17,4(sp)
  8015a8:	dc000015 	stw	r16,0(sp)
  8015ac:	2023883a 	mov	r17,r4
  8015b0:	2821883a 	mov	r16,r5
  8015b4:	dfc00215 	stw	ra,8(sp)
  8015b8:	08178380 	call	817838 <__malloc_lock>
  8015bc:	813fff17 	ldw	r4,-4(r16)
  8015c0:	00bfff84 	movi	r2,-2
  8015c4:	024020b4 	movhi	r9,130
  8015c8:	81bffe04 	addi	r6,r16,-8
  8015cc:	2084703a 	and	r2,r4,r2
  8015d0:	4a70ae04 	addi	r9,r9,-15688
  8015d4:	308b883a 	add	r5,r6,r2
  8015d8:	2a000117 	ldw	r8,4(r5)
  8015dc:	49c00217 	ldw	r7,8(r9)
  8015e0:	00ffff04 	movi	r3,-4
  8015e4:	40c6703a 	and	r3,r8,r3
  8015e8:	39405326 	beq	r7,r5,801738 <_free_r+0x19c>
  8015ec:	28c00115 	stw	r3,4(r5)
  8015f0:	2100004c 	andi	r4,r4,1
  8015f4:	2000091e 	bne	r4,zero,80161c <_free_r+0x80>
  8015f8:	81fffe17 	ldw	r7,-8(r16)
  8015fc:	4a000204 	addi	r8,r9,8
  801600:	31cdc83a 	sub	r6,r6,r7
  801604:	31000217 	ldw	r4,8(r6)
  801608:	11c5883a 	add	r2,r2,r7
  80160c:	22006126 	beq	r4,r8,801794 <_free_r+0x1f8>
  801610:	31c00317 	ldw	r7,12(r6)
  801614:	21c00315 	stw	r7,12(r4)
  801618:	39000215 	stw	r4,8(r7)
  80161c:	28c9883a 	add	r4,r5,r3
  801620:	21c00117 	ldw	r7,4(r4)
  801624:	39c0004c 	andi	r7,r7,1
  801628:	38000d1e 	bne	r7,zero,801660 <_free_r+0xc4>
  80162c:	29000217 	ldw	r4,8(r5)
  801630:	10c5883a 	add	r2,r2,r3
  801634:	00c020b4 	movhi	r3,130
  801638:	18f0b004 	addi	r3,r3,-15680
  80163c:	20c07526 	beq	r4,r3,801814 <_free_r+0x278>
  801640:	29c00317 	ldw	r7,12(r5)
  801644:	11400054 	ori	r5,r2,1
  801648:	3087883a 	add	r3,r6,r2
  80164c:	21c00315 	stw	r7,12(r4)
  801650:	39000215 	stw	r4,8(r7)
  801654:	31400115 	stw	r5,4(r6)
  801658:	18800015 	stw	r2,0(r3)
  80165c:	00000406 	br	801670 <_free_r+0xd4>
  801660:	10c00054 	ori	r3,r2,1
  801664:	30c00115 	stw	r3,4(r6)
  801668:	3087883a 	add	r3,r6,r2
  80166c:	18800015 	stw	r2,0(r3)
  801670:	00c07fc4 	movi	r3,511
  801674:	18801736 	bltu	r3,r2,8016d4 <_free_r+0x138>
  801678:	1004d0fa 	srli	r2,r2,3
  80167c:	01400044 	movi	r5,1
  801680:	49000117 	ldw	r4,4(r9)
  801684:	1087883a 	add	r3,r2,r2
  801688:	18c7883a 	add	r3,r3,r3
  80168c:	1005d0ba 	srai	r2,r2,2
  801690:	18c7883a 	add	r3,r3,r3
  801694:	1a47883a 	add	r3,r3,r9
  801698:	19c00217 	ldw	r7,8(r3)
  80169c:	2884983a 	sll	r2,r5,r2
  8016a0:	30c00315 	stw	r3,12(r6)
  8016a4:	31c00215 	stw	r7,8(r6)
  8016a8:	1104b03a 	or	r2,r2,r4
  8016ac:	19800215 	stw	r6,8(r3)
  8016b0:	48800115 	stw	r2,4(r9)
  8016b4:	39800315 	stw	r6,12(r7)
  8016b8:	8809883a 	mov	r4,r17
  8016bc:	dfc00217 	ldw	ra,8(sp)
  8016c0:	dc400117 	ldw	r17,4(sp)
  8016c4:	dc000017 	ldw	r16,0(sp)
  8016c8:	dec00304 	addi	sp,sp,12
  8016cc:	08178581 	jmpi	817858 <__malloc_unlock>
  8016d0:	f800283a 	ret
  8016d4:	1006d27a 	srli	r3,r2,9
  8016d8:	01000104 	movi	r4,4
  8016dc:	20c04036 	bltu	r4,r3,8017e0 <_free_r+0x244>
  8016e0:	1006d1ba 	srli	r3,r2,6
  8016e4:	19400e04 	addi	r5,r3,56
  8016e8:	2947883a 	add	r3,r5,r5
  8016ec:	18c7883a 	add	r3,r3,r3
  8016f0:	18c7883a 	add	r3,r3,r3
  8016f4:	1a49883a 	add	r4,r3,r9
  8016f8:	20c00217 	ldw	r3,8(r4)
  8016fc:	01c020b4 	movhi	r7,130
  801700:	39f0ae04 	addi	r7,r7,-15688
  801704:	19003b26 	beq	r3,r4,8017f4 <_free_r+0x258>
  801708:	01ffff04 	movi	r7,-4
  80170c:	19400117 	ldw	r5,4(r3)
  801710:	29ca703a 	and	r5,r5,r7
  801714:	1140022e 	bgeu	r2,r5,801720 <_free_r+0x184>
  801718:	18c00217 	ldw	r3,8(r3)
  80171c:	20fffb1e 	bne	r4,r3,80170c <__alt_data_end+0xff80170c>
  801720:	18800317 	ldw	r2,12(r3)
  801724:	30800315 	stw	r2,12(r6)
  801728:	30c00215 	stw	r3,8(r6)
  80172c:	11800215 	stw	r6,8(r2)
  801730:	19800315 	stw	r6,12(r3)
  801734:	003fe006 	br	8016b8 <__alt_data_end+0xff8016b8>
  801738:	2100004c 	andi	r4,r4,1
  80173c:	1885883a 	add	r2,r3,r2
  801740:	2000071e 	bne	r4,zero,801760 <_free_r+0x1c4>
  801744:	817ffe17 	ldw	r5,-8(r16)
  801748:	314dc83a 	sub	r6,r6,r5
  80174c:	30c00317 	ldw	r3,12(r6)
  801750:	31000217 	ldw	r4,8(r6)
  801754:	1145883a 	add	r2,r2,r5
  801758:	20c00315 	stw	r3,12(r4)
  80175c:	19000215 	stw	r4,8(r3)
  801760:	10c00054 	ori	r3,r2,1
  801764:	30c00115 	stw	r3,4(r6)
  801768:	00c020b4 	movhi	r3,130
  80176c:	18f6e404 	addi	r3,r3,-9328
  801770:	18c00017 	ldw	r3,0(r3)
  801774:	49800215 	stw	r6,8(r9)
  801778:	10ffcf36 	bltu	r2,r3,8016b8 <__alt_data_end+0xff8016b8>
  80177c:	008020b4 	movhi	r2,130
  801780:	10be5004 	addi	r2,r2,-1728
  801784:	11400017 	ldw	r5,0(r2)
  801788:	8809883a 	mov	r4,r17
  80178c:	08014780 	call	801478 <_malloc_trim_r>
  801790:	003fc906 	br	8016b8 <__alt_data_end+0xff8016b8>
  801794:	28c9883a 	add	r4,r5,r3
  801798:	21000117 	ldw	r4,4(r4)
  80179c:	2100004c 	andi	r4,r4,1
  8017a0:	20000a1e 	bne	r4,zero,8017cc <_free_r+0x230>
  8017a4:	29000317 	ldw	r4,12(r5)
  8017a8:	29400217 	ldw	r5,8(r5)
  8017ac:	10c5883a 	add	r2,r2,r3
  8017b0:	10c00054 	ori	r3,r2,1
  8017b4:	29000315 	stw	r4,12(r5)
  8017b8:	21400215 	stw	r5,8(r4)
  8017bc:	30c00115 	stw	r3,4(r6)
  8017c0:	308d883a 	add	r6,r6,r2
  8017c4:	30800015 	stw	r2,0(r6)
  8017c8:	003fbb06 	br	8016b8 <__alt_data_end+0xff8016b8>
  8017cc:	10c00054 	ori	r3,r2,1
  8017d0:	30c00115 	stw	r3,4(r6)
  8017d4:	308d883a 	add	r6,r6,r2
  8017d8:	30800015 	stw	r2,0(r6)
  8017dc:	003fb606 	br	8016b8 <__alt_data_end+0xff8016b8>
  8017e0:	01000504 	movi	r4,20
  8017e4:	20c01436 	bltu	r4,r3,801838 <_free_r+0x29c>
  8017e8:	194016c4 	addi	r5,r3,91
  8017ec:	2947883a 	add	r3,r5,r5
  8017f0:	003fbe06 	br	8016ec <__alt_data_end+0xff8016ec>
  8017f4:	280bd0ba 	srai	r5,r5,2
  8017f8:	00800044 	movi	r2,1
  8017fc:	39000117 	ldw	r4,4(r7)
  801800:	114a983a 	sll	r5,r2,r5
  801804:	1805883a 	mov	r2,r3
  801808:	2908b03a 	or	r4,r5,r4
  80180c:	39000115 	stw	r4,4(r7)
  801810:	003fc406 	br	801724 <__alt_data_end+0xff801724>
  801814:	49800515 	stw	r6,20(r9)
  801818:	49800415 	stw	r6,16(r9)
  80181c:	10c00054 	ori	r3,r2,1
  801820:	31000315 	stw	r4,12(r6)
  801824:	31000215 	stw	r4,8(r6)
  801828:	30c00115 	stw	r3,4(r6)
  80182c:	308d883a 	add	r6,r6,r2
  801830:	30800015 	stw	r2,0(r6)
  801834:	003fa006 	br	8016b8 <__alt_data_end+0xff8016b8>
  801838:	01001504 	movi	r4,84
  80183c:	20c00436 	bltu	r4,r3,801850 <_free_r+0x2b4>
  801840:	1006d33a 	srli	r3,r2,12
  801844:	19401b84 	addi	r5,r3,110
  801848:	2947883a 	add	r3,r5,r5
  80184c:	003fa706 	br	8016ec <__alt_data_end+0xff8016ec>
  801850:	01005504 	movi	r4,340
  801854:	20c00436 	bltu	r4,r3,801868 <_free_r+0x2cc>
  801858:	1006d3fa 	srli	r3,r2,15
  80185c:	19401dc4 	addi	r5,r3,119
  801860:	2947883a 	add	r3,r5,r5
  801864:	003fa106 	br	8016ec <__alt_data_end+0xff8016ec>
  801868:	01015504 	movi	r4,1364
  80186c:	20c00436 	bltu	r4,r3,801880 <_free_r+0x2e4>
  801870:	1006d4ba 	srli	r3,r2,18
  801874:	19401f04 	addi	r5,r3,124
  801878:	2947883a 	add	r3,r5,r5
  80187c:	003f9b06 	br	8016ec <__alt_data_end+0xff8016ec>
  801880:	00c03f04 	movi	r3,252
  801884:	01401f84 	movi	r5,126
  801888:	003f9806 	br	8016ec <__alt_data_end+0xff8016ec>

0080188c <_fseek_r>:
  80188c:	08018b41 	jmpi	8018b4 <_fseeko_r>

00801890 <fseek>:
  801890:	2007883a 	mov	r3,r4
  801894:	010020b4 	movhi	r4,130
  801898:	2136e204 	addi	r4,r4,-9336
  80189c:	21000017 	ldw	r4,0(r4)
  8018a0:	2805883a 	mov	r2,r5
  8018a4:	300f883a 	mov	r7,r6
  8018a8:	180b883a 	mov	r5,r3
  8018ac:	100d883a 	mov	r6,r2
  8018b0:	08018b41 	jmpi	8018b4 <_fseeko_r>

008018b4 <_fseeko_r>:
  8018b4:	deffe804 	addi	sp,sp,-96
  8018b8:	dd401415 	stw	r21,80(sp)
  8018bc:	dc801115 	stw	r18,68(sp)
  8018c0:	dc401015 	stw	r17,64(sp)
  8018c4:	dc000f15 	stw	r16,60(sp)
  8018c8:	dfc01715 	stw	ra,92(sp)
  8018cc:	ddc01615 	stw	r23,88(sp)
  8018d0:	dd801515 	stw	r22,84(sp)
  8018d4:	dd001315 	stw	r20,76(sp)
  8018d8:	dcc01215 	stw	r19,72(sp)
  8018dc:	2023883a 	mov	r17,r4
  8018e0:	2821883a 	mov	r16,r5
  8018e4:	302b883a 	mov	r21,r6
  8018e8:	3825883a 	mov	r18,r7
  8018ec:	20000226 	beq	r4,zero,8018f8 <_fseeko_r+0x44>
  8018f0:	20800e17 	ldw	r2,56(r4)
  8018f4:	10005a26 	beq	r2,zero,801a60 <_fseeko_r+0x1ac>
  8018f8:	8080030b 	ldhu	r2,12(r16)
  8018fc:	00c04204 	movi	r3,264
  801900:	1080420c 	andi	r2,r2,264
  801904:	10c05b26 	beq	r2,r3,801a74 <_fseeko_r+0x1c0>
  801908:	85000a17 	ldw	r20,40(r16)
  80190c:	a000f626 	beq	r20,zero,801ce8 <_fseeko_r+0x434>
  801910:	00800044 	movi	r2,1
  801914:	90803e26 	beq	r18,r2,801a10 <_fseeko_r+0x15c>
  801918:	00800084 	movi	r2,2
  80191c:	90801026 	beq	r18,r2,801960 <_fseeko_r+0xac>
  801920:	90000f26 	beq	r18,zero,801960 <_fseeko_r+0xac>
  801924:	00800584 	movi	r2,22
  801928:	88800015 	stw	r2,0(r17)
  80192c:	04ffffc4 	movi	r19,-1
  801930:	9805883a 	mov	r2,r19
  801934:	dfc01717 	ldw	ra,92(sp)
  801938:	ddc01617 	ldw	r23,88(sp)
  80193c:	dd801517 	ldw	r22,84(sp)
  801940:	dd401417 	ldw	r21,80(sp)
  801944:	dd001317 	ldw	r20,76(sp)
  801948:	dcc01217 	ldw	r19,72(sp)
  80194c:	dc801117 	ldw	r18,68(sp)
  801950:	dc401017 	ldw	r17,64(sp)
  801954:	dc000f17 	ldw	r16,60(sp)
  801958:	dec01804 	addi	sp,sp,96
  80195c:	f800283a 	ret
  801960:	80800417 	ldw	r2,16(r16)
  801964:	002f883a 	mov	r23,zero
  801968:	0027883a 	mov	r19,zero
  80196c:	1000cb26 	beq	r2,zero,801c9c <_fseeko_r+0x3e8>
  801970:	8080030b 	ldhu	r2,12(r16)
  801974:	10c2068c 	andi	r3,r2,2074
  801978:	1800071e 	bne	r3,zero,801998 <_fseeko_r+0xe4>
  80197c:	10c1000c 	andi	r3,r2,1024
  801980:	1800451e 	bne	r3,zero,801a98 <_fseeko_r+0x1e4>
  801984:	00c02034 	movhi	r3,128
  801988:	18cc6f04 	addi	r3,r3,12732
  80198c:	a0c0b726 	beq	r20,r3,801c6c <_fseeko_r+0x3b8>
  801990:	10820014 	ori	r2,r2,2048
  801994:	8080030d 	sth	r2,12(r16)
  801998:	8809883a 	mov	r4,r17
  80199c:	800b883a 	mov	r5,r16
  8019a0:	0800ef40 	call	800ef4 <_fflush_r>
  8019a4:	1027883a 	mov	r19,r2
  8019a8:	103fe01e 	bne	r2,zero,80192c <__alt_data_end+0xff80192c>
  8019ac:	81400717 	ldw	r5,28(r16)
  8019b0:	8809883a 	mov	r4,r17
  8019b4:	a80d883a 	mov	r6,r21
  8019b8:	900f883a 	mov	r7,r18
  8019bc:	a03ee83a 	callr	r20
  8019c0:	00ffffc4 	movi	r3,-1
  8019c4:	10ffd926 	beq	r2,r3,80192c <__alt_data_end+0xff80192c>
  8019c8:	81400c17 	ldw	r5,48(r16)
  8019cc:	28000526 	beq	r5,zero,8019e4 <_fseeko_r+0x130>
  8019d0:	80801004 	addi	r2,r16,64
  8019d4:	28800226 	beq	r5,r2,8019e0 <_fseeko_r+0x12c>
  8019d8:	8809883a 	mov	r4,r17
  8019dc:	080159c0 	call	80159c <_free_r>
  8019e0:	80000c15 	stw	zero,48(r16)
  8019e4:	8080030b 	ldhu	r2,12(r16)
  8019e8:	80c00417 	ldw	r3,16(r16)
  8019ec:	80000115 	stw	zero,4(r16)
  8019f0:	10bdf7cc 	andi	r2,r2,63455
  8019f4:	80c00015 	stw	r3,0(r16)
  8019f8:	8080030d 	sth	r2,12(r16)
  8019fc:	81001704 	addi	r4,r16,92
  801a00:	000b883a 	mov	r5,zero
  801a04:	01800204 	movi	r6,8
  801a08:	0802a600 	call	802a60 <memset>
  801a0c:	003fc806 	br	801930 <__alt_data_end+0xff801930>
  801a10:	8809883a 	mov	r4,r17
  801a14:	800b883a 	mov	r5,r16
  801a18:	0800ef40 	call	800ef4 <_fflush_r>
  801a1c:	8080030b 	ldhu	r2,12(r16)
  801a20:	10c4000c 	andi	r3,r2,4096
  801a24:	18008726 	beq	r3,zero,801c44 <_fseeko_r+0x390>
  801a28:	84c01417 	ldw	r19,80(r16)
  801a2c:	10c0010c 	andi	r3,r2,4
  801a30:	1800431e 	bne	r3,zero,801b40 <_fseeko_r+0x28c>
  801a34:	1080020c 	andi	r2,r2,8
  801a38:	10008026 	beq	r2,zero,801c3c <_fseeko_r+0x388>
  801a3c:	80c00017 	ldw	r3,0(r16)
  801a40:	80800417 	ldw	r2,16(r16)
  801a44:	18000226 	beq	r3,zero,801a50 <_fseeko_r+0x19c>
  801a48:	1887c83a 	sub	r3,r3,r2
  801a4c:	98e7883a 	add	r19,r19,r3
  801a50:	aceb883a 	add	r21,r21,r19
  801a54:	05c00044 	movi	r23,1
  801a58:	0025883a 	mov	r18,zero
  801a5c:	003fc306 	br	80196c <__alt_data_end+0xff80196c>
  801a60:	08012d00 	call	8012d0 <__sinit>
  801a64:	8080030b 	ldhu	r2,12(r16)
  801a68:	00c04204 	movi	r3,264
  801a6c:	1080420c 	andi	r2,r2,264
  801a70:	10ffa51e 	bne	r2,r3,801908 <__alt_data_end+0xff801908>
  801a74:	8809883a 	mov	r4,r17
  801a78:	800b883a 	mov	r5,r16
  801a7c:	0800ef40 	call	800ef4 <_fflush_r>
  801a80:	003fa106 	br	801908 <__alt_data_end+0xff801908>
  801a84:	8080030b 	ldhu	r2,12(r16)
  801a88:	00c10004 	movi	r3,1024
  801a8c:	80c01315 	stw	r3,76(r16)
  801a90:	10c4b03a 	or	r2,r2,r3
  801a94:	8080030d 	sth	r2,12(r16)
  801a98:	9000311e 	bne	r18,zero,801b60 <_fseeko_r+0x2ac>
  801a9c:	a82d883a 	mov	r22,r21
  801aa0:	b800371e 	bne	r23,zero,801b80 <_fseeko_r+0x2cc>
  801aa4:	8080030b 	ldhu	r2,12(r16)
  801aa8:	1084000c 	andi	r2,r2,4096
  801aac:	10007f26 	beq	r2,zero,801cac <_fseeko_r+0x3f8>
  801ab0:	80801417 	ldw	r2,80(r16)
  801ab4:	81800117 	ldw	r6,4(r16)
  801ab8:	81400c17 	ldw	r5,48(r16)
  801abc:	11a7c83a 	sub	r19,r2,r6
  801ac0:	28008226 	beq	r5,zero,801ccc <_fseeko_r+0x418>
  801ac4:	81c00f17 	ldw	r7,60(r16)
  801ac8:	99e7c83a 	sub	r19,r19,r7
  801acc:	81000e17 	ldw	r4,56(r16)
  801ad0:	80800417 	ldw	r2,16(r16)
  801ad4:	99a7883a 	add	r19,r19,r6
  801ad8:	2087c83a 	sub	r3,r4,r2
  801adc:	98e7c83a 	sub	r19,r19,r3
  801ae0:	38c7883a 	add	r3,r7,r3
  801ae4:	b4c02b16 	blt	r22,r19,801b94 <_fseeko_r+0x2e0>
  801ae8:	98c9883a 	add	r4,r19,r3
  801aec:	b100292e 	bgeu	r22,r4,801b94 <_fseeko_r+0x2e0>
  801af0:	b4e7c83a 	sub	r19,r22,r19
  801af4:	14c5883a 	add	r2,r2,r19
  801af8:	1ce7c83a 	sub	r19,r3,r19
  801afc:	80800015 	stw	r2,0(r16)
  801b00:	84c00115 	stw	r19,4(r16)
  801b04:	28000526 	beq	r5,zero,801b1c <_fseeko_r+0x268>
  801b08:	80801004 	addi	r2,r16,64
  801b0c:	28800226 	beq	r5,r2,801b18 <_fseeko_r+0x264>
  801b10:	8809883a 	mov	r4,r17
  801b14:	080159c0 	call	80159c <_free_r>
  801b18:	80000c15 	stw	zero,48(r16)
  801b1c:	8080030b 	ldhu	r2,12(r16)
  801b20:	81001704 	addi	r4,r16,92
  801b24:	000b883a 	mov	r5,zero
  801b28:	10bff7cc 	andi	r2,r2,65503
  801b2c:	8080030d 	sth	r2,12(r16)
  801b30:	01800204 	movi	r6,8
  801b34:	0802a600 	call	802a60 <memset>
  801b38:	0027883a 	mov	r19,zero
  801b3c:	003f7c06 	br	801930 <__alt_data_end+0xff801930>
  801b40:	80c00117 	ldw	r3,4(r16)
  801b44:	80800c17 	ldw	r2,48(r16)
  801b48:	98e7c83a 	sub	r19,r19,r3
  801b4c:	10003b26 	beq	r2,zero,801c3c <_fseeko_r+0x388>
  801b50:	80c00f17 	ldw	r3,60(r16)
  801b54:	80800417 	ldw	r2,16(r16)
  801b58:	98e7c83a 	sub	r19,r19,r3
  801b5c:	003fbc06 	br	801a50 <__alt_data_end+0xff801a50>
  801b60:	8140038f 	ldh	r5,14(r16)
  801b64:	8809883a 	mov	r4,r17
  801b68:	d80d883a 	mov	r6,sp
  801b6c:	0801d1c0 	call	801d1c <_fstat_r>
  801b70:	103f891e 	bne	r2,zero,801998 <__alt_data_end+0xff801998>
  801b74:	dd800417 	ldw	r22,16(sp)
  801b78:	adad883a 	add	r22,r21,r22
  801b7c:	b83fc926 	beq	r23,zero,801aa4 <__alt_data_end+0xff801aa4>
  801b80:	81400c17 	ldw	r5,48(r16)
  801b84:	81800117 	ldw	r6,4(r16)
  801b88:	28005026 	beq	r5,zero,801ccc <_fseeko_r+0x418>
  801b8c:	81c00f17 	ldw	r7,60(r16)
  801b90:	003fce06 	br	801acc <__alt_data_end+0xff801acc>
  801b94:	84c01317 	ldw	r19,76(r16)
  801b98:	81400717 	ldw	r5,28(r16)
  801b9c:	8809883a 	mov	r4,r17
  801ba0:	04e7c83a 	sub	r19,zero,r19
  801ba4:	b4e6703a 	and	r19,r22,r19
  801ba8:	980d883a 	mov	r6,r19
  801bac:	000f883a 	mov	r7,zero
  801bb0:	a03ee83a 	callr	r20
  801bb4:	00ffffc4 	movi	r3,-1
  801bb8:	10ff7726 	beq	r2,r3,801998 <__alt_data_end+0xff801998>
  801bbc:	80800417 	ldw	r2,16(r16)
  801bc0:	81400c17 	ldw	r5,48(r16)
  801bc4:	80000115 	stw	zero,4(r16)
  801bc8:	80800015 	stw	r2,0(r16)
  801bcc:	28000526 	beq	r5,zero,801be4 <_fseeko_r+0x330>
  801bd0:	80801004 	addi	r2,r16,64
  801bd4:	28800226 	beq	r5,r2,801be0 <_fseeko_r+0x32c>
  801bd8:	8809883a 	mov	r4,r17
  801bdc:	080159c0 	call	80159c <_free_r>
  801be0:	80000c15 	stw	zero,48(r16)
  801be4:	8080030b 	ldhu	r2,12(r16)
  801be8:	b4e7c83a 	sub	r19,r22,r19
  801bec:	10bff7cc 	andi	r2,r2,65503
  801bf0:	8080030d 	sth	r2,12(r16)
  801bf4:	98000b26 	beq	r19,zero,801c24 <_fseeko_r+0x370>
  801bf8:	8809883a 	mov	r4,r17
  801bfc:	800b883a 	mov	r5,r16
  801c00:	0802d400 	call	802d40 <__srefill_r>
  801c04:	103f641e 	bne	r2,zero,801998 <__alt_data_end+0xff801998>
  801c08:	80800117 	ldw	r2,4(r16)
  801c0c:	14ff6236 	bltu	r2,r19,801998 <__alt_data_end+0xff801998>
  801c10:	80c00017 	ldw	r3,0(r16)
  801c14:	14c5c83a 	sub	r2,r2,r19
  801c18:	80800115 	stw	r2,4(r16)
  801c1c:	1ce7883a 	add	r19,r3,r19
  801c20:	84c00015 	stw	r19,0(r16)
  801c24:	81001704 	addi	r4,r16,92
  801c28:	000b883a 	mov	r5,zero
  801c2c:	01800204 	movi	r6,8
  801c30:	0802a600 	call	802a60 <memset>
  801c34:	0027883a 	mov	r19,zero
  801c38:	003f3d06 	br	801930 <__alt_data_end+0xff801930>
  801c3c:	80800417 	ldw	r2,16(r16)
  801c40:	003f8306 	br	801a50 <__alt_data_end+0xff801a50>
  801c44:	81400717 	ldw	r5,28(r16)
  801c48:	8809883a 	mov	r4,r17
  801c4c:	000d883a 	mov	r6,zero
  801c50:	900f883a 	mov	r7,r18
  801c54:	a03ee83a 	callr	r20
  801c58:	1027883a 	mov	r19,r2
  801c5c:	00bfffc4 	movi	r2,-1
  801c60:	98bf3226 	beq	r19,r2,80192c <__alt_data_end+0xff80192c>
  801c64:	8080030b 	ldhu	r2,12(r16)
  801c68:	003f7006 	br	801a2c <__alt_data_end+0xff801a2c>
  801c6c:	8140038f 	ldh	r5,14(r16)
  801c70:	283f4716 	blt	r5,zero,801990 <__alt_data_end+0xff801990>
  801c74:	8809883a 	mov	r4,r17
  801c78:	d80d883a 	mov	r6,sp
  801c7c:	0801d1c0 	call	801d1c <_fstat_r>
  801c80:	1000041e 	bne	r2,zero,801c94 <_fseeko_r+0x3e0>
  801c84:	d8800117 	ldw	r2,4(sp)
  801c88:	00e00014 	movui	r3,32768
  801c8c:	10bc000c 	andi	r2,r2,61440
  801c90:	10ff7c26 	beq	r2,r3,801a84 <__alt_data_end+0xff801a84>
  801c94:	8080030b 	ldhu	r2,12(r16)
  801c98:	003f3d06 	br	801990 <__alt_data_end+0xff801990>
  801c9c:	8809883a 	mov	r4,r17
  801ca0:	800b883a 	mov	r5,r16
  801ca4:	08021000 	call	802100 <__smakebuf_r>
  801ca8:	003f3106 	br	801970 <__alt_data_end+0xff801970>
  801cac:	81400717 	ldw	r5,28(r16)
  801cb0:	8809883a 	mov	r4,r17
  801cb4:	000d883a 	mov	r6,zero
  801cb8:	01c00044 	movi	r7,1
  801cbc:	a03ee83a 	callr	r20
  801cc0:	00ffffc4 	movi	r3,-1
  801cc4:	10ff7b1e 	bne	r2,r3,801ab4 <__alt_data_end+0xff801ab4>
  801cc8:	003f3306 	br	801998 <__alt_data_end+0xff801998>
  801ccc:	80c00017 	ldw	r3,0(r16)
  801cd0:	80800417 	ldw	r2,16(r16)
  801cd4:	000b883a 	mov	r5,zero
  801cd8:	1887c83a 	sub	r3,r3,r2
  801cdc:	98e7c83a 	sub	r19,r19,r3
  801ce0:	30c7883a 	add	r3,r6,r3
  801ce4:	003f7f06 	br	801ae4 <__alt_data_end+0xff801ae4>
  801ce8:	00800744 	movi	r2,29
  801cec:	88800015 	stw	r2,0(r17)
  801cf0:	04ffffc4 	movi	r19,-1
  801cf4:	003f0e06 	br	801930 <__alt_data_end+0xff801930>

00801cf8 <fseeko>:
  801cf8:	2007883a 	mov	r3,r4
  801cfc:	010020b4 	movhi	r4,130
  801d00:	2136e204 	addi	r4,r4,-9336
  801d04:	21000017 	ldw	r4,0(r4)
  801d08:	2805883a 	mov	r2,r5
  801d0c:	300f883a 	mov	r7,r6
  801d10:	180b883a 	mov	r5,r3
  801d14:	100d883a 	mov	r6,r2
  801d18:	08018b41 	jmpi	8018b4 <_fseeko_r>

00801d1c <_fstat_r>:
  801d1c:	defffd04 	addi	sp,sp,-12
  801d20:	dc000015 	stw	r16,0(sp)
  801d24:	040020b4 	movhi	r16,130
  801d28:	dc400115 	stw	r17,4(sp)
  801d2c:	843e4d04 	addi	r16,r16,-1740
  801d30:	2023883a 	mov	r17,r4
  801d34:	2809883a 	mov	r4,r5
  801d38:	300b883a 	mov	r5,r6
  801d3c:	dfc00215 	stw	ra,8(sp)
  801d40:	80000015 	stw	zero,0(r16)
  801d44:	08174140 	call	817414 <fstat>
  801d48:	00ffffc4 	movi	r3,-1
  801d4c:	10c00526 	beq	r2,r3,801d64 <_fstat_r+0x48>
  801d50:	dfc00217 	ldw	ra,8(sp)
  801d54:	dc400117 	ldw	r17,4(sp)
  801d58:	dc000017 	ldw	r16,0(sp)
  801d5c:	dec00304 	addi	sp,sp,12
  801d60:	f800283a 	ret
  801d64:	80c00017 	ldw	r3,0(r16)
  801d68:	183ff926 	beq	r3,zero,801d50 <__alt_data_end+0xff801d50>
  801d6c:	88c00015 	stw	r3,0(r17)
  801d70:	003ff706 	br	801d50 <__alt_data_end+0xff801d50>

00801d74 <_fwalk>:
  801d74:	defff704 	addi	sp,sp,-36
  801d78:	dd000415 	stw	r20,16(sp)
  801d7c:	dfc00815 	stw	ra,32(sp)
  801d80:	ddc00715 	stw	r23,28(sp)
  801d84:	dd800615 	stw	r22,24(sp)
  801d88:	dd400515 	stw	r21,20(sp)
  801d8c:	dcc00315 	stw	r19,12(sp)
  801d90:	dc800215 	stw	r18,8(sp)
  801d94:	dc400115 	stw	r17,4(sp)
  801d98:	dc000015 	stw	r16,0(sp)
  801d9c:	2500b804 	addi	r20,r4,736
  801da0:	a0002326 	beq	r20,zero,801e30 <_fwalk+0xbc>
  801da4:	282b883a 	mov	r21,r5
  801da8:	002f883a 	mov	r23,zero
  801dac:	05800044 	movi	r22,1
  801db0:	04ffffc4 	movi	r19,-1
  801db4:	a4400117 	ldw	r17,4(r20)
  801db8:	a4800217 	ldw	r18,8(r20)
  801dbc:	8c7fffc4 	addi	r17,r17,-1
  801dc0:	88000d16 	blt	r17,zero,801df8 <_fwalk+0x84>
  801dc4:	94000304 	addi	r16,r18,12
  801dc8:	94800384 	addi	r18,r18,14
  801dcc:	80c0000b 	ldhu	r3,0(r16)
  801dd0:	8c7fffc4 	addi	r17,r17,-1
  801dd4:	813ffd04 	addi	r4,r16,-12
  801dd8:	b0c0042e 	bgeu	r22,r3,801dec <_fwalk+0x78>
  801ddc:	90c0000f 	ldh	r3,0(r18)
  801de0:	1cc00226 	beq	r3,r19,801dec <_fwalk+0x78>
  801de4:	a83ee83a 	callr	r21
  801de8:	b8aeb03a 	or	r23,r23,r2
  801dec:	84001a04 	addi	r16,r16,104
  801df0:	94801a04 	addi	r18,r18,104
  801df4:	8cfff51e 	bne	r17,r19,801dcc <__alt_data_end+0xff801dcc>
  801df8:	a5000017 	ldw	r20,0(r20)
  801dfc:	a03fed1e 	bne	r20,zero,801db4 <__alt_data_end+0xff801db4>
  801e00:	b805883a 	mov	r2,r23
  801e04:	dfc00817 	ldw	ra,32(sp)
  801e08:	ddc00717 	ldw	r23,28(sp)
  801e0c:	dd800617 	ldw	r22,24(sp)
  801e10:	dd400517 	ldw	r21,20(sp)
  801e14:	dd000417 	ldw	r20,16(sp)
  801e18:	dcc00317 	ldw	r19,12(sp)
  801e1c:	dc800217 	ldw	r18,8(sp)
  801e20:	dc400117 	ldw	r17,4(sp)
  801e24:	dc000017 	ldw	r16,0(sp)
  801e28:	dec00904 	addi	sp,sp,36
  801e2c:	f800283a 	ret
  801e30:	002f883a 	mov	r23,zero
  801e34:	003ff206 	br	801e00 <__alt_data_end+0xff801e00>

00801e38 <_fwalk_reent>:
  801e38:	defff704 	addi	sp,sp,-36
  801e3c:	dd400515 	stw	r21,20(sp)
  801e40:	dfc00815 	stw	ra,32(sp)
  801e44:	ddc00715 	stw	r23,28(sp)
  801e48:	dd800615 	stw	r22,24(sp)
  801e4c:	dd000415 	stw	r20,16(sp)
  801e50:	dcc00315 	stw	r19,12(sp)
  801e54:	dc800215 	stw	r18,8(sp)
  801e58:	dc400115 	stw	r17,4(sp)
  801e5c:	dc000015 	stw	r16,0(sp)
  801e60:	2540b804 	addi	r21,r4,736
  801e64:	a8002326 	beq	r21,zero,801ef4 <_fwalk_reent+0xbc>
  801e68:	2829883a 	mov	r20,r5
  801e6c:	202d883a 	mov	r22,r4
  801e70:	002f883a 	mov	r23,zero
  801e74:	04c00044 	movi	r19,1
  801e78:	04bfffc4 	movi	r18,-1
  801e7c:	ac400117 	ldw	r17,4(r21)
  801e80:	ac000217 	ldw	r16,8(r21)
  801e84:	8c7fffc4 	addi	r17,r17,-1
  801e88:	88000c16 	blt	r17,zero,801ebc <_fwalk_reent+0x84>
  801e8c:	84000304 	addi	r16,r16,12
  801e90:	80c0000b 	ldhu	r3,0(r16)
  801e94:	8c7fffc4 	addi	r17,r17,-1
  801e98:	817ffd04 	addi	r5,r16,-12
  801e9c:	98c0052e 	bgeu	r19,r3,801eb4 <_fwalk_reent+0x7c>
  801ea0:	80c0008f 	ldh	r3,2(r16)
  801ea4:	b009883a 	mov	r4,r22
  801ea8:	1c800226 	beq	r3,r18,801eb4 <_fwalk_reent+0x7c>
  801eac:	a03ee83a 	callr	r20
  801eb0:	b8aeb03a 	or	r23,r23,r2
  801eb4:	84001a04 	addi	r16,r16,104
  801eb8:	8cbff51e 	bne	r17,r18,801e90 <__alt_data_end+0xff801e90>
  801ebc:	ad400017 	ldw	r21,0(r21)
  801ec0:	a83fee1e 	bne	r21,zero,801e7c <__alt_data_end+0xff801e7c>
  801ec4:	b805883a 	mov	r2,r23
  801ec8:	dfc00817 	ldw	ra,32(sp)
  801ecc:	ddc00717 	ldw	r23,28(sp)
  801ed0:	dd800617 	ldw	r22,24(sp)
  801ed4:	dd400517 	ldw	r21,20(sp)
  801ed8:	dd000417 	ldw	r20,16(sp)
  801edc:	dcc00317 	ldw	r19,12(sp)
  801ee0:	dc800217 	ldw	r18,8(sp)
  801ee4:	dc400117 	ldw	r17,4(sp)
  801ee8:	dc000017 	ldw	r16,0(sp)
  801eec:	dec00904 	addi	sp,sp,36
  801ef0:	f800283a 	ret
  801ef4:	002f883a 	mov	r23,zero
  801ef8:	003ff206 	br	801ec4 <__alt_data_end+0xff801ec4>

00801efc <_fwrite_r>:
  801efc:	defff504 	addi	sp,sp,-44
  801f00:	dcc00815 	stw	r19,32(sp)
  801f04:	39a7383a 	mul	r19,r7,r6
  801f08:	d8800304 	addi	r2,sp,12
  801f0c:	d8800015 	stw	r2,0(sp)
  801f10:	00800044 	movi	r2,1
  801f14:	dd000915 	stw	r20,36(sp)
  801f18:	dc800715 	stw	r18,28(sp)
  801f1c:	dc400615 	stw	r17,24(sp)
  801f20:	d9400315 	stw	r5,12(sp)
  801f24:	dfc00a15 	stw	ra,40(sp)
  801f28:	dcc00415 	stw	r19,16(sp)
  801f2c:	dcc00215 	stw	r19,8(sp)
  801f30:	d8800115 	stw	r2,4(sp)
  801f34:	3029883a 	mov	r20,r6
  801f38:	3823883a 	mov	r17,r7
  801f3c:	2025883a 	mov	r18,r4
  801f40:	d9400b17 	ldw	r5,44(sp)
  801f44:	20000226 	beq	r4,zero,801f50 <_fwrite_r+0x54>
  801f48:	20800e17 	ldw	r2,56(r4)
  801f4c:	10001a26 	beq	r2,zero,801fb8 <_fwrite_r+0xbc>
  801f50:	2880030b 	ldhu	r2,12(r5)
  801f54:	10c8000c 	andi	r3,r2,8192
  801f58:	1800061e 	bne	r3,zero,801f74 <_fwrite_r+0x78>
  801f5c:	29001917 	ldw	r4,100(r5)
  801f60:	00f7ffc4 	movi	r3,-8193
  801f64:	10880014 	ori	r2,r2,8192
  801f68:	20c6703a 	and	r3,r4,r3
  801f6c:	2880030d 	sth	r2,12(r5)
  801f70:	28c01915 	stw	r3,100(r5)
  801f74:	9009883a 	mov	r4,r18
  801f78:	d80d883a 	mov	r6,sp
  801f7c:	08085b80 	call	8085b8 <__sfvwrite_r>
  801f80:	10000b26 	beq	r2,zero,801fb0 <_fwrite_r+0xb4>
  801f84:	d9000217 	ldw	r4,8(sp)
  801f88:	a00b883a 	mov	r5,r20
  801f8c:	9909c83a 	sub	r4,r19,r4
  801f90:	08148ec0 	call	8148ec <__udivsi3>
  801f94:	dfc00a17 	ldw	ra,40(sp)
  801f98:	dd000917 	ldw	r20,36(sp)
  801f9c:	dcc00817 	ldw	r19,32(sp)
  801fa0:	dc800717 	ldw	r18,28(sp)
  801fa4:	dc400617 	ldw	r17,24(sp)
  801fa8:	dec00b04 	addi	sp,sp,44
  801fac:	f800283a 	ret
  801fb0:	8805883a 	mov	r2,r17
  801fb4:	003ff706 	br	801f94 <__alt_data_end+0xff801f94>
  801fb8:	d9400515 	stw	r5,20(sp)
  801fbc:	08012d00 	call	8012d0 <__sinit>
  801fc0:	d9400517 	ldw	r5,20(sp)
  801fc4:	003fe206 	br	801f50 <__alt_data_end+0xff801f50>

00801fc8 <fwrite>:
  801fc8:	008020b4 	movhi	r2,130
  801fcc:	10b6e204 	addi	r2,r2,-9336
  801fd0:	2011883a 	mov	r8,r4
  801fd4:	11000017 	ldw	r4,0(r2)
  801fd8:	defffe04 	addi	sp,sp,-8
  801fdc:	2807883a 	mov	r3,r5
  801fe0:	3005883a 	mov	r2,r6
  801fe4:	d9c00015 	stw	r7,0(sp)
  801fe8:	400b883a 	mov	r5,r8
  801fec:	180d883a 	mov	r6,r3
  801ff0:	100f883a 	mov	r7,r2
  801ff4:	dfc00115 	stw	ra,4(sp)
  801ff8:	0801efc0 	call	801efc <_fwrite_r>
  801ffc:	dfc00117 	ldw	ra,4(sp)
  802000:	dec00204 	addi	sp,sp,8
  802004:	f800283a 	ret

00802008 <_getc_r>:
  802008:	defffd04 	addi	sp,sp,-12
  80200c:	dc000115 	stw	r16,4(sp)
  802010:	dfc00215 	stw	ra,8(sp)
  802014:	2021883a 	mov	r16,r4
  802018:	20000226 	beq	r4,zero,802024 <_getc_r+0x1c>
  80201c:	20800e17 	ldw	r2,56(r4)
  802020:	10000c26 	beq	r2,zero,802054 <_getc_r+0x4c>
  802024:	28800117 	ldw	r2,4(r5)
  802028:	10bfffc4 	addi	r2,r2,-1
  80202c:	28800115 	stw	r2,4(r5)
  802030:	10000c16 	blt	r2,zero,802064 <_getc_r+0x5c>
  802034:	28800017 	ldw	r2,0(r5)
  802038:	10c00044 	addi	r3,r2,1
  80203c:	28c00015 	stw	r3,0(r5)
  802040:	10800003 	ldbu	r2,0(r2)
  802044:	dfc00217 	ldw	ra,8(sp)
  802048:	dc000117 	ldw	r16,4(sp)
  80204c:	dec00304 	addi	sp,sp,12
  802050:	f800283a 	ret
  802054:	d9400015 	stw	r5,0(sp)
  802058:	08012d00 	call	8012d0 <__sinit>
  80205c:	d9400017 	ldw	r5,0(sp)
  802060:	003ff006 	br	802024 <__alt_data_end+0xff802024>
  802064:	8009883a 	mov	r4,r16
  802068:	dfc00217 	ldw	ra,8(sp)
  80206c:	dc000117 	ldw	r16,4(sp)
  802070:	dec00304 	addi	sp,sp,12
  802074:	0802f141 	jmpi	802f14 <__srget_r>

00802078 <getc>:
  802078:	008020b4 	movhi	r2,130
  80207c:	defffd04 	addi	sp,sp,-12
  802080:	10b6e204 	addi	r2,r2,-9336
  802084:	dc400115 	stw	r17,4(sp)
  802088:	14400017 	ldw	r17,0(r2)
  80208c:	dc000015 	stw	r16,0(sp)
  802090:	dfc00215 	stw	ra,8(sp)
  802094:	2021883a 	mov	r16,r4
  802098:	88000226 	beq	r17,zero,8020a4 <getc+0x2c>
  80209c:	88800e17 	ldw	r2,56(r17)
  8020a0:	10000d26 	beq	r2,zero,8020d8 <getc+0x60>
  8020a4:	80800117 	ldw	r2,4(r16)
  8020a8:	10bfffc4 	addi	r2,r2,-1
  8020ac:	80800115 	stw	r2,4(r16)
  8020b0:	10000c16 	blt	r2,zero,8020e4 <getc+0x6c>
  8020b4:	80800017 	ldw	r2,0(r16)
  8020b8:	10c00044 	addi	r3,r2,1
  8020bc:	80c00015 	stw	r3,0(r16)
  8020c0:	10800003 	ldbu	r2,0(r2)
  8020c4:	dfc00217 	ldw	ra,8(sp)
  8020c8:	dc400117 	ldw	r17,4(sp)
  8020cc:	dc000017 	ldw	r16,0(sp)
  8020d0:	dec00304 	addi	sp,sp,12
  8020d4:	f800283a 	ret
  8020d8:	8809883a 	mov	r4,r17
  8020dc:	08012d00 	call	8012d0 <__sinit>
  8020e0:	003ff006 	br	8020a4 <__alt_data_end+0xff8020a4>
  8020e4:	8809883a 	mov	r4,r17
  8020e8:	800b883a 	mov	r5,r16
  8020ec:	dfc00217 	ldw	ra,8(sp)
  8020f0:	dc400117 	ldw	r17,4(sp)
  8020f4:	dc000017 	ldw	r16,0(sp)
  8020f8:	dec00304 	addi	sp,sp,12
  8020fc:	0802f141 	jmpi	802f14 <__srget_r>

00802100 <__smakebuf_r>:
  802100:	2880030b 	ldhu	r2,12(r5)
  802104:	10c0008c 	andi	r3,r2,2
  802108:	1800401e 	bne	r3,zero,80220c <__smakebuf_r+0x10c>
  80210c:	deffec04 	addi	sp,sp,-80
  802110:	dc000f15 	stw	r16,60(sp)
  802114:	2821883a 	mov	r16,r5
  802118:	2940038f 	ldh	r5,14(r5)
  80211c:	dc401015 	stw	r17,64(sp)
  802120:	dfc01315 	stw	ra,76(sp)
  802124:	dcc01215 	stw	r19,72(sp)
  802128:	dc801115 	stw	r18,68(sp)
  80212c:	2023883a 	mov	r17,r4
  802130:	28001b16 	blt	r5,zero,8021a0 <__smakebuf_r+0xa0>
  802134:	d80d883a 	mov	r6,sp
  802138:	0801d1c0 	call	801d1c <_fstat_r>
  80213c:	10001716 	blt	r2,zero,80219c <__smakebuf_r+0x9c>
  802140:	d8800117 	ldw	r2,4(sp)
  802144:	00e00014 	movui	r3,32768
  802148:	10bc000c 	andi	r2,r2,61440
  80214c:	10c03726 	beq	r2,r3,80222c <__smakebuf_r+0x12c>
  802150:	80c0030b 	ldhu	r3,12(r16)
  802154:	18c20014 	ori	r3,r3,2048
  802158:	80c0030d 	sth	r3,12(r16)
  80215c:	00c80004 	movi	r3,8192
  802160:	10c03c1e 	bne	r2,r3,802254 <__smakebuf_r+0x154>
  802164:	8140038f 	ldh	r5,14(r16)
  802168:	8809883a 	mov	r4,r17
  80216c:	0808a780 	call	808a78 <_isatty_r>
  802170:	10004e26 	beq	r2,zero,8022ac <__smakebuf_r+0x1ac>
  802174:	8080030b 	ldhu	r2,12(r16)
  802178:	04c00044 	movi	r19,1
  80217c:	80c010c4 	addi	r3,r16,67
  802180:	14c4b03a 	or	r2,r2,r19
  802184:	8080030d 	sth	r2,12(r16)
  802188:	80c00015 	stw	r3,0(r16)
  80218c:	80c00415 	stw	r3,16(r16)
  802190:	84c00515 	stw	r19,20(r16)
  802194:	04810004 	movi	r18,1024
  802198:	00000706 	br	8021b8 <__smakebuf_r+0xb8>
  80219c:	8080030b 	ldhu	r2,12(r16)
  8021a0:	10c0200c 	andi	r3,r2,128
  8021a4:	18001f1e 	bne	r3,zero,802224 <__smakebuf_r+0x124>
  8021a8:	04810004 	movi	r18,1024
  8021ac:	10820014 	ori	r2,r2,2048
  8021b0:	8080030d 	sth	r2,12(r16)
  8021b4:	0027883a 	mov	r19,zero
  8021b8:	8809883a 	mov	r4,r17
  8021bc:	900b883a 	mov	r5,r18
  8021c0:	08022b80 	call	8022b8 <_malloc_r>
  8021c4:	10002e26 	beq	r2,zero,802280 <__smakebuf_r+0x180>
  8021c8:	80c0030b 	ldhu	r3,12(r16)
  8021cc:	01002034 	movhi	r4,128
  8021d0:	2103e404 	addi	r4,r4,3984
  8021d4:	89000f15 	stw	r4,60(r17)
  8021d8:	18c02014 	ori	r3,r3,128
  8021dc:	80c0030d 	sth	r3,12(r16)
  8021e0:	80800015 	stw	r2,0(r16)
  8021e4:	80800415 	stw	r2,16(r16)
  8021e8:	84800515 	stw	r18,20(r16)
  8021ec:	98001c1e 	bne	r19,zero,802260 <__smakebuf_r+0x160>
  8021f0:	dfc01317 	ldw	ra,76(sp)
  8021f4:	dcc01217 	ldw	r19,72(sp)
  8021f8:	dc801117 	ldw	r18,68(sp)
  8021fc:	dc401017 	ldw	r17,64(sp)
  802200:	dc000f17 	ldw	r16,60(sp)
  802204:	dec01404 	addi	sp,sp,80
  802208:	f800283a 	ret
  80220c:	288010c4 	addi	r2,r5,67
  802210:	28800015 	stw	r2,0(r5)
  802214:	28800415 	stw	r2,16(r5)
  802218:	00800044 	movi	r2,1
  80221c:	28800515 	stw	r2,20(r5)
  802220:	f800283a 	ret
  802224:	04801004 	movi	r18,64
  802228:	003fe006 	br	8021ac <__alt_data_end+0xff8021ac>
  80222c:	81000a17 	ldw	r4,40(r16)
  802230:	00c02034 	movhi	r3,128
  802234:	18cc6f04 	addi	r3,r3,12732
  802238:	20ffc51e 	bne	r4,r3,802150 <__alt_data_end+0xff802150>
  80223c:	80c0030b 	ldhu	r3,12(r16)
  802240:	01010004 	movi	r4,1024
  802244:	81001315 	stw	r4,76(r16)
  802248:	1906b03a 	or	r3,r3,r4
  80224c:	80c0030d 	sth	r3,12(r16)
  802250:	003fc206 	br	80215c <__alt_data_end+0xff80215c>
  802254:	0027883a 	mov	r19,zero
  802258:	04810004 	movi	r18,1024
  80225c:	003fd606 	br	8021b8 <__alt_data_end+0xff8021b8>
  802260:	8140038f 	ldh	r5,14(r16)
  802264:	8809883a 	mov	r4,r17
  802268:	0808a780 	call	808a78 <_isatty_r>
  80226c:	103fe026 	beq	r2,zero,8021f0 <__alt_data_end+0xff8021f0>
  802270:	8080030b 	ldhu	r2,12(r16)
  802274:	10800054 	ori	r2,r2,1
  802278:	8080030d 	sth	r2,12(r16)
  80227c:	003fdc06 	br	8021f0 <__alt_data_end+0xff8021f0>
  802280:	8080030b 	ldhu	r2,12(r16)
  802284:	10c0800c 	andi	r3,r2,512
  802288:	183fd91e 	bne	r3,zero,8021f0 <__alt_data_end+0xff8021f0>
  80228c:	10800094 	ori	r2,r2,2
  802290:	80c010c4 	addi	r3,r16,67
  802294:	8080030d 	sth	r2,12(r16)
  802298:	00800044 	movi	r2,1
  80229c:	80c00015 	stw	r3,0(r16)
  8022a0:	80c00415 	stw	r3,16(r16)
  8022a4:	80800515 	stw	r2,20(r16)
  8022a8:	003fd106 	br	8021f0 <__alt_data_end+0xff8021f0>
  8022ac:	04c00044 	movi	r19,1
  8022b0:	04810004 	movi	r18,1024
  8022b4:	003fc006 	br	8021b8 <__alt_data_end+0xff8021b8>

008022b8 <_malloc_r>:
  8022b8:	defff504 	addi	sp,sp,-44
  8022bc:	dc800315 	stw	r18,12(sp)
  8022c0:	dfc00a15 	stw	ra,40(sp)
  8022c4:	df000915 	stw	fp,36(sp)
  8022c8:	ddc00815 	stw	r23,32(sp)
  8022cc:	dd800715 	stw	r22,28(sp)
  8022d0:	dd400615 	stw	r21,24(sp)
  8022d4:	dd000515 	stw	r20,20(sp)
  8022d8:	dcc00415 	stw	r19,16(sp)
  8022dc:	dc400215 	stw	r17,8(sp)
  8022e0:	dc000115 	stw	r16,4(sp)
  8022e4:	288002c4 	addi	r2,r5,11
  8022e8:	00c00584 	movi	r3,22
  8022ec:	2025883a 	mov	r18,r4
  8022f0:	18802a2e 	bgeu	r3,r2,80239c <_malloc_r+0xe4>
  8022f4:	047ffe04 	movi	r17,-8
  8022f8:	1462703a 	and	r17,r2,r17
  8022fc:	88009e16 	blt	r17,zero,802578 <_malloc_r+0x2c0>
  802300:	89409d36 	bltu	r17,r5,802578 <_malloc_r+0x2c0>
  802304:	08178380 	call	817838 <__malloc_lock>
  802308:	00807dc4 	movi	r2,503
  80230c:	14402736 	bltu	r2,r17,8023ac <_malloc_r+0xf4>
  802310:	8806d0fa 	srli	r3,r17,3
  802314:	04c020b4 	movhi	r19,130
  802318:	9cf0ae04 	addi	r19,r19,-15688
  80231c:	18c5883a 	add	r2,r3,r3
  802320:	1085883a 	add	r2,r2,r2
  802324:	1085883a 	add	r2,r2,r2
  802328:	9885883a 	add	r2,r19,r2
  80232c:	14000317 	ldw	r16,12(r2)
  802330:	80814a26 	beq	r16,r2,80285c <_malloc_r+0x5a4>
  802334:	80c00117 	ldw	r3,4(r16)
  802338:	81000317 	ldw	r4,12(r16)
  80233c:	00bfff04 	movi	r2,-4
  802340:	1884703a 	and	r2,r3,r2
  802344:	81400217 	ldw	r5,8(r16)
  802348:	8085883a 	add	r2,r16,r2
  80234c:	10c00117 	ldw	r3,4(r2)
  802350:	29000315 	stw	r4,12(r5)
  802354:	21400215 	stw	r5,8(r4)
  802358:	18c00054 	ori	r3,r3,1
  80235c:	10c00115 	stw	r3,4(r2)
  802360:	9009883a 	mov	r4,r18
  802364:	08178580 	call	817858 <__malloc_unlock>
  802368:	80800204 	addi	r2,r16,8
  80236c:	dfc00a17 	ldw	ra,40(sp)
  802370:	df000917 	ldw	fp,36(sp)
  802374:	ddc00817 	ldw	r23,32(sp)
  802378:	dd800717 	ldw	r22,28(sp)
  80237c:	dd400617 	ldw	r21,24(sp)
  802380:	dd000517 	ldw	r20,20(sp)
  802384:	dcc00417 	ldw	r19,16(sp)
  802388:	dc800317 	ldw	r18,12(sp)
  80238c:	dc400217 	ldw	r17,8(sp)
  802390:	dc000117 	ldw	r16,4(sp)
  802394:	dec00b04 	addi	sp,sp,44
  802398:	f800283a 	ret
  80239c:	04400404 	movi	r17,16
  8023a0:	89407536 	bltu	r17,r5,802578 <_malloc_r+0x2c0>
  8023a4:	08178380 	call	817838 <__malloc_lock>
  8023a8:	003fd906 	br	802310 <__alt_data_end+0xff802310>
  8023ac:	8806d27a 	srli	r3,r17,9
  8023b0:	18007526 	beq	r3,zero,802588 <_malloc_r+0x2d0>
  8023b4:	00800104 	movi	r2,4
  8023b8:	10c0ef36 	bltu	r2,r3,802778 <_malloc_r+0x4c0>
  8023bc:	8806d1ba 	srli	r3,r17,6
  8023c0:	19c00e04 	addi	r7,r3,56
  8023c4:	39cb883a 	add	r5,r7,r7
  8023c8:	04c020b4 	movhi	r19,130
  8023cc:	294b883a 	add	r5,r5,r5
  8023d0:	9cf0ae04 	addi	r19,r19,-15688
  8023d4:	294b883a 	add	r5,r5,r5
  8023d8:	994b883a 	add	r5,r19,r5
  8023dc:	2c000317 	ldw	r16,12(r5)
  8023e0:	2c000e26 	beq	r5,r16,80241c <_malloc_r+0x164>
  8023e4:	80800117 	ldw	r2,4(r16)
  8023e8:	01bfff04 	movi	r6,-4
  8023ec:	010003c4 	movi	r4,15
  8023f0:	1184703a 	and	r2,r2,r6
  8023f4:	1447c83a 	sub	r3,r2,r17
  8023f8:	20c00716 	blt	r4,r3,802418 <_malloc_r+0x160>
  8023fc:	1800650e 	bge	r3,zero,802594 <_malloc_r+0x2dc>
  802400:	84000317 	ldw	r16,12(r16)
  802404:	2c000526 	beq	r5,r16,80241c <_malloc_r+0x164>
  802408:	80800117 	ldw	r2,4(r16)
  80240c:	1184703a 	and	r2,r2,r6
  802410:	1447c83a 	sub	r3,r2,r17
  802414:	20fff90e 	bge	r4,r3,8023fc <__alt_data_end+0xff8023fc>
  802418:	39ffffc4 	addi	r7,r7,-1
  80241c:	38c00044 	addi	r3,r7,1
  802420:	018020b4 	movhi	r6,130
  802424:	9c000417 	ldw	r16,16(r19)
  802428:	31b0ae04 	addi	r6,r6,-15688
  80242c:	32400204 	addi	r9,r6,8
  802430:	82410326 	beq	r16,r9,802840 <_malloc_r+0x588>
  802434:	81000117 	ldw	r4,4(r16)
  802438:	00bfff04 	movi	r2,-4
  80243c:	208e703a 	and	r7,r4,r2
  802440:	3c45c83a 	sub	r2,r7,r17
  802444:	010003c4 	movi	r4,15
  802448:	2080ee16 	blt	r4,r2,802804 <_malloc_r+0x54c>
  80244c:	32400515 	stw	r9,20(r6)
  802450:	32400415 	stw	r9,16(r6)
  802454:	1000510e 	bge	r2,zero,80259c <_malloc_r+0x2e4>
  802458:	00807fc4 	movi	r2,511
  80245c:	11c0ce36 	bltu	r2,r7,802798 <_malloc_r+0x4e0>
  802460:	3808d0fa 	srli	r4,r7,3
  802464:	01c00044 	movi	r7,1
  802468:	30800117 	ldw	r2,4(r6)
  80246c:	210b883a 	add	r5,r4,r4
  802470:	294b883a 	add	r5,r5,r5
  802474:	2009d0ba 	srai	r4,r4,2
  802478:	294b883a 	add	r5,r5,r5
  80247c:	298b883a 	add	r5,r5,r6
  802480:	2a000217 	ldw	r8,8(r5)
  802484:	3908983a 	sll	r4,r7,r4
  802488:	81400315 	stw	r5,12(r16)
  80248c:	82000215 	stw	r8,8(r16)
  802490:	2088b03a 	or	r4,r4,r2
  802494:	2c000215 	stw	r16,8(r5)
  802498:	31000115 	stw	r4,4(r6)
  80249c:	44000315 	stw	r16,12(r8)
  8024a0:	1805d0ba 	srai	r2,r3,2
  8024a4:	01400044 	movi	r5,1
  8024a8:	288a983a 	sll	r5,r5,r2
  8024ac:	21404336 	bltu	r4,r5,8025bc <_malloc_r+0x304>
  8024b0:	2144703a 	and	r2,r4,r5
  8024b4:	10000a1e 	bne	r2,zero,8024e0 <_malloc_r+0x228>
  8024b8:	00bfff04 	movi	r2,-4
  8024bc:	294b883a 	add	r5,r5,r5
  8024c0:	1886703a 	and	r3,r3,r2
  8024c4:	2144703a 	and	r2,r4,r5
  8024c8:	18c00104 	addi	r3,r3,4
  8024cc:	1000041e 	bne	r2,zero,8024e0 <_malloc_r+0x228>
  8024d0:	294b883a 	add	r5,r5,r5
  8024d4:	2144703a 	and	r2,r4,r5
  8024d8:	18c00104 	addi	r3,r3,4
  8024dc:	103ffc26 	beq	r2,zero,8024d0 <__alt_data_end+0xff8024d0>
  8024e0:	023fff04 	movi	r8,-4
  8024e4:	01c003c4 	movi	r7,15
  8024e8:	18c5883a 	add	r2,r3,r3
  8024ec:	1085883a 	add	r2,r2,r2
  8024f0:	1085883a 	add	r2,r2,r2
  8024f4:	9895883a 	add	r10,r19,r2
  8024f8:	52c00304 	addi	r11,r10,12
  8024fc:	1819883a 	mov	r12,r3
  802500:	5c000017 	ldw	r16,0(r11)
  802504:	59bffd04 	addi	r6,r11,-12
  802508:	8180041e 	bne	r16,r6,80251c <_malloc_r+0x264>
  80250c:	0000ce06 	br	802848 <_malloc_r+0x590>
  802510:	2000d70e 	bge	r4,zero,802870 <_malloc_r+0x5b8>
  802514:	84000317 	ldw	r16,12(r16)
  802518:	8180cb26 	beq	r16,r6,802848 <_malloc_r+0x590>
  80251c:	80800117 	ldw	r2,4(r16)
  802520:	1204703a 	and	r2,r2,r8
  802524:	1449c83a 	sub	r4,r2,r17
  802528:	393ff90e 	bge	r7,r4,802510 <__alt_data_end+0xff802510>
  80252c:	80800317 	ldw	r2,12(r16)
  802530:	80c00217 	ldw	r3,8(r16)
  802534:	89400054 	ori	r5,r17,1
  802538:	81400115 	stw	r5,4(r16)
  80253c:	18800315 	stw	r2,12(r3)
  802540:	10c00215 	stw	r3,8(r2)
  802544:	8463883a 	add	r17,r16,r17
  802548:	9c400515 	stw	r17,20(r19)
  80254c:	9c400415 	stw	r17,16(r19)
  802550:	20800054 	ori	r2,r4,1
  802554:	88800115 	stw	r2,4(r17)
  802558:	8a400315 	stw	r9,12(r17)
  80255c:	8a400215 	stw	r9,8(r17)
  802560:	8923883a 	add	r17,r17,r4
  802564:	89000015 	stw	r4,0(r17)
  802568:	9009883a 	mov	r4,r18
  80256c:	08178580 	call	817858 <__malloc_unlock>
  802570:	80800204 	addi	r2,r16,8
  802574:	003f7d06 	br	80236c <__alt_data_end+0xff80236c>
  802578:	00800304 	movi	r2,12
  80257c:	90800015 	stw	r2,0(r18)
  802580:	0005883a 	mov	r2,zero
  802584:	003f7906 	br	80236c <__alt_data_end+0xff80236c>
  802588:	01401f84 	movi	r5,126
  80258c:	01c00fc4 	movi	r7,63
  802590:	003f8d06 	br	8023c8 <__alt_data_end+0xff8023c8>
  802594:	81000317 	ldw	r4,12(r16)
  802598:	003f6a06 	br	802344 <__alt_data_end+0xff802344>
  80259c:	81c5883a 	add	r2,r16,r7
  8025a0:	10c00117 	ldw	r3,4(r2)
  8025a4:	9009883a 	mov	r4,r18
  8025a8:	18c00054 	ori	r3,r3,1
  8025ac:	10c00115 	stw	r3,4(r2)
  8025b0:	08178580 	call	817858 <__malloc_unlock>
  8025b4:	80800204 	addi	r2,r16,8
  8025b8:	003f6c06 	br	80236c <__alt_data_end+0xff80236c>
  8025bc:	9c000217 	ldw	r16,8(r19)
  8025c0:	00bfff04 	movi	r2,-4
  8025c4:	85800117 	ldw	r22,4(r16)
  8025c8:	b0ac703a 	and	r22,r22,r2
  8025cc:	b4400336 	bltu	r22,r17,8025dc <_malloc_r+0x324>
  8025d0:	b445c83a 	sub	r2,r22,r17
  8025d4:	00c003c4 	movi	r3,15
  8025d8:	18805d16 	blt	r3,r2,802750 <_malloc_r+0x498>
  8025dc:	05c020b4 	movhi	r23,130
  8025e0:	008020b4 	movhi	r2,130
  8025e4:	bdf6e304 	addi	r23,r23,-9332
  8025e8:	10be5004 	addi	r2,r2,-1728
  8025ec:	15400017 	ldw	r21,0(r2)
  8025f0:	b9000017 	ldw	r4,0(r23)
  8025f4:	00ffffc4 	movi	r3,-1
  8025f8:	858d883a 	add	r6,r16,r22
  8025fc:	8d6b883a 	add	r21,r17,r21
  802600:	20c0e426 	beq	r4,r3,802994 <_malloc_r+0x6dc>
  802604:	ad4403c4 	addi	r21,r21,4111
  802608:	00fc0004 	movi	r3,-4096
  80260c:	a8ea703a 	and	r21,r21,r3
  802610:	9009883a 	mov	r4,r18
  802614:	a80b883a 	mov	r5,r21
  802618:	d9800015 	stw	r6,0(sp)
  80261c:	0802f9c0 	call	802f9c <_sbrk_r>
  802620:	00ffffc4 	movi	r3,-1
  802624:	1029883a 	mov	r20,r2
  802628:	d9800017 	ldw	r6,0(sp)
  80262c:	10c0a426 	beq	r2,r3,8028c0 <_malloc_r+0x608>
  802630:	1180a236 	bltu	r2,r6,8028bc <_malloc_r+0x604>
  802634:	070020b4 	movhi	fp,130
  802638:	e73e5b04 	addi	fp,fp,-1684
  80263c:	e0c00017 	ldw	r3,0(fp)
  802640:	a8c7883a 	add	r3,r21,r3
  802644:	e0c00015 	stw	r3,0(fp)
  802648:	3500da26 	beq	r6,r20,8029b4 <_malloc_r+0x6fc>
  80264c:	b9000017 	ldw	r4,0(r23)
  802650:	00bfffc4 	movi	r2,-1
  802654:	2080e426 	beq	r4,r2,8029e8 <_malloc_r+0x730>
  802658:	a185c83a 	sub	r2,r20,r6
  80265c:	1885883a 	add	r2,r3,r2
  802660:	e0800015 	stw	r2,0(fp)
  802664:	a0c001cc 	andi	r3,r20,7
  802668:	1800b526 	beq	r3,zero,802940 <_malloc_r+0x688>
  80266c:	a0e9c83a 	sub	r20,r20,r3
  802670:	00840204 	movi	r2,4104
  802674:	a5000204 	addi	r20,r20,8
  802678:	10c7c83a 	sub	r3,r2,r3
  80267c:	a545883a 	add	r2,r20,r21
  802680:	1083ffcc 	andi	r2,r2,4095
  802684:	18abc83a 	sub	r21,r3,r2
  802688:	9009883a 	mov	r4,r18
  80268c:	a80b883a 	mov	r5,r21
  802690:	0802f9c0 	call	802f9c <_sbrk_r>
  802694:	00ffffc4 	movi	r3,-1
  802698:	10c0d026 	beq	r2,r3,8029dc <_malloc_r+0x724>
  80269c:	1507c83a 	sub	r3,r2,r20
  8026a0:	a8c7883a 	add	r3,r21,r3
  8026a4:	18c00054 	ori	r3,r3,1
  8026a8:	e0800017 	ldw	r2,0(fp)
  8026ac:	9d000215 	stw	r20,8(r19)
  8026b0:	a0c00115 	stw	r3,4(r20)
  8026b4:	a887883a 	add	r3,r21,r2
  8026b8:	e0c00015 	stw	r3,0(fp)
  8026bc:	84c00e26 	beq	r16,r19,8026f8 <_malloc_r+0x440>
  8026c0:	018003c4 	movi	r6,15
  8026c4:	3580a02e 	bgeu	r6,r22,802948 <_malloc_r+0x690>
  8026c8:	81400117 	ldw	r5,4(r16)
  8026cc:	013ffe04 	movi	r4,-8
  8026d0:	b0bffd04 	addi	r2,r22,-12
  8026d4:	1104703a 	and	r2,r2,r4
  8026d8:	2900004c 	andi	r4,r5,1
  8026dc:	1108b03a 	or	r4,r2,r4
  8026e0:	81000115 	stw	r4,4(r16)
  8026e4:	01400144 	movi	r5,5
  8026e8:	8089883a 	add	r4,r16,r2
  8026ec:	21400115 	stw	r5,4(r4)
  8026f0:	21400215 	stw	r5,8(r4)
  8026f4:	3080c036 	bltu	r6,r2,8029f8 <_malloc_r+0x740>
  8026f8:	008020b4 	movhi	r2,130
  8026fc:	10be4f04 	addi	r2,r2,-1732
  802700:	11000017 	ldw	r4,0(r2)
  802704:	20c0012e 	bgeu	r4,r3,80270c <_malloc_r+0x454>
  802708:	10c00015 	stw	r3,0(r2)
  80270c:	008020b4 	movhi	r2,130
  802710:	10be4e04 	addi	r2,r2,-1736
  802714:	11000017 	ldw	r4,0(r2)
  802718:	9c000217 	ldw	r16,8(r19)
  80271c:	20c0012e 	bgeu	r4,r3,802724 <_malloc_r+0x46c>
  802720:	10c00015 	stw	r3,0(r2)
  802724:	80c00117 	ldw	r3,4(r16)
  802728:	00bfff04 	movi	r2,-4
  80272c:	1886703a 	and	r3,r3,r2
  802730:	1c45c83a 	sub	r2,r3,r17
  802734:	1c400236 	bltu	r3,r17,802740 <_malloc_r+0x488>
  802738:	00c003c4 	movi	r3,15
  80273c:	18800416 	blt	r3,r2,802750 <_malloc_r+0x498>
  802740:	9009883a 	mov	r4,r18
  802744:	08178580 	call	817858 <__malloc_unlock>
  802748:	0005883a 	mov	r2,zero
  80274c:	003f0706 	br	80236c <__alt_data_end+0xff80236c>
  802750:	88c00054 	ori	r3,r17,1
  802754:	80c00115 	stw	r3,4(r16)
  802758:	8463883a 	add	r17,r16,r17
  80275c:	10800054 	ori	r2,r2,1
  802760:	9c400215 	stw	r17,8(r19)
  802764:	88800115 	stw	r2,4(r17)
  802768:	9009883a 	mov	r4,r18
  80276c:	08178580 	call	817858 <__malloc_unlock>
  802770:	80800204 	addi	r2,r16,8
  802774:	003efd06 	br	80236c <__alt_data_end+0xff80236c>
  802778:	00800504 	movi	r2,20
  80277c:	10c0482e 	bgeu	r2,r3,8028a0 <_malloc_r+0x5e8>
  802780:	00801504 	movi	r2,84
  802784:	10c06836 	bltu	r2,r3,802928 <_malloc_r+0x670>
  802788:	8806d33a 	srli	r3,r17,12
  80278c:	19c01b84 	addi	r7,r3,110
  802790:	39cb883a 	add	r5,r7,r7
  802794:	003f0c06 	br	8023c8 <__alt_data_end+0xff8023c8>
  802798:	3804d27a 	srli	r2,r7,9
  80279c:	01000104 	movi	r4,4
  8027a0:	2080422e 	bgeu	r4,r2,8028ac <_malloc_r+0x5f4>
  8027a4:	01000504 	movi	r4,20
  8027a8:	20807c36 	bltu	r4,r2,80299c <_malloc_r+0x6e4>
  8027ac:	110016c4 	addi	r4,r2,91
  8027b0:	210b883a 	add	r5,r4,r4
  8027b4:	294b883a 	add	r5,r5,r5
  8027b8:	294b883a 	add	r5,r5,r5
  8027bc:	994b883a 	add	r5,r19,r5
  8027c0:	28800217 	ldw	r2,8(r5)
  8027c4:	020020b4 	movhi	r8,130
  8027c8:	4230ae04 	addi	r8,r8,-15688
  8027cc:	11406326 	beq	r2,r5,80295c <_malloc_r+0x6a4>
  8027d0:	01bfff04 	movi	r6,-4
  8027d4:	11000117 	ldw	r4,4(r2)
  8027d8:	2188703a 	and	r4,r4,r6
  8027dc:	3900022e 	bgeu	r7,r4,8027e8 <_malloc_r+0x530>
  8027e0:	10800217 	ldw	r2,8(r2)
  8027e4:	28bffb1e 	bne	r5,r2,8027d4 <__alt_data_end+0xff8027d4>
  8027e8:	11800317 	ldw	r6,12(r2)
  8027ec:	99000117 	ldw	r4,4(r19)
  8027f0:	81800315 	stw	r6,12(r16)
  8027f4:	80800215 	stw	r2,8(r16)
  8027f8:	34000215 	stw	r16,8(r6)
  8027fc:	14000315 	stw	r16,12(r2)
  802800:	003f2706 	br	8024a0 <__alt_data_end+0xff8024a0>
  802804:	88c00054 	ori	r3,r17,1
  802808:	80c00115 	stw	r3,4(r16)
  80280c:	8463883a 	add	r17,r16,r17
  802810:	34400515 	stw	r17,20(r6)
  802814:	34400415 	stw	r17,16(r6)
  802818:	10c00054 	ori	r3,r2,1
  80281c:	8a400315 	stw	r9,12(r17)
  802820:	8a400215 	stw	r9,8(r17)
  802824:	88c00115 	stw	r3,4(r17)
  802828:	88a3883a 	add	r17,r17,r2
  80282c:	88800015 	stw	r2,0(r17)
  802830:	9009883a 	mov	r4,r18
  802834:	08178580 	call	817858 <__malloc_unlock>
  802838:	80800204 	addi	r2,r16,8
  80283c:	003ecb06 	br	80236c <__alt_data_end+0xff80236c>
  802840:	31000117 	ldw	r4,4(r6)
  802844:	003f1606 	br	8024a0 <__alt_data_end+0xff8024a0>
  802848:	63000044 	addi	r12,r12,1
  80284c:	608000cc 	andi	r2,r12,3
  802850:	5ac00204 	addi	r11,r11,8
  802854:	103f2a1e 	bne	r2,zero,802500 <__alt_data_end+0xff802500>
  802858:	00002106 	br	8028e0 <_malloc_r+0x628>
  80285c:	80800204 	addi	r2,r16,8
  802860:	84000517 	ldw	r16,20(r16)
  802864:	143eb31e 	bne	r2,r16,802334 <__alt_data_end+0xff802334>
  802868:	18c00084 	addi	r3,r3,2
  80286c:	003eec06 	br	802420 <__alt_data_end+0xff802420>
  802870:	8085883a 	add	r2,r16,r2
  802874:	10c00117 	ldw	r3,4(r2)
  802878:	81000317 	ldw	r4,12(r16)
  80287c:	81400217 	ldw	r5,8(r16)
  802880:	18c00054 	ori	r3,r3,1
  802884:	10c00115 	stw	r3,4(r2)
  802888:	29000315 	stw	r4,12(r5)
  80288c:	21400215 	stw	r5,8(r4)
  802890:	9009883a 	mov	r4,r18
  802894:	08178580 	call	817858 <__malloc_unlock>
  802898:	80800204 	addi	r2,r16,8
  80289c:	003eb306 	br	80236c <__alt_data_end+0xff80236c>
  8028a0:	19c016c4 	addi	r7,r3,91
  8028a4:	39cb883a 	add	r5,r7,r7
  8028a8:	003ec706 	br	8023c8 <__alt_data_end+0xff8023c8>
  8028ac:	3804d1ba 	srli	r2,r7,6
  8028b0:	11000e04 	addi	r4,r2,56
  8028b4:	210b883a 	add	r5,r4,r4
  8028b8:	003fbe06 	br	8027b4 <__alt_data_end+0xff8027b4>
  8028bc:	84ff5d26 	beq	r16,r19,802634 <__alt_data_end+0xff802634>
  8028c0:	9c000217 	ldw	r16,8(r19)
  8028c4:	00bfff04 	movi	r2,-4
  8028c8:	80c00117 	ldw	r3,4(r16)
  8028cc:	1886703a 	and	r3,r3,r2
  8028d0:	003f9706 	br	802730 <__alt_data_end+0xff802730>
  8028d4:	52800017 	ldw	r10,0(r10)
  8028d8:	18ffffc4 	addi	r3,r3,-1
  8028dc:	50805c1e 	bne	r10,r2,802a50 <_malloc_r+0x798>
  8028e0:	190000cc 	andi	r4,r3,3
  8028e4:	50bffe04 	addi	r2,r10,-8
  8028e8:	203ffa1e 	bne	r4,zero,8028d4 <__alt_data_end+0xff8028d4>
  8028ec:	98800117 	ldw	r2,4(r19)
  8028f0:	0146303a 	nor	r3,zero,r5
  8028f4:	1884703a 	and	r2,r3,r2
  8028f8:	98800115 	stw	r2,4(r19)
  8028fc:	294b883a 	add	r5,r5,r5
  802900:	117f2e36 	bltu	r2,r5,8025bc <__alt_data_end+0xff8025bc>
  802904:	283f2d26 	beq	r5,zero,8025bc <__alt_data_end+0xff8025bc>
  802908:	1146703a 	and	r3,r2,r5
  80290c:	1800521e 	bne	r3,zero,802a58 <_malloc_r+0x7a0>
  802910:	6007883a 	mov	r3,r12
  802914:	294b883a 	add	r5,r5,r5
  802918:	1148703a 	and	r4,r2,r5
  80291c:	18c00104 	addi	r3,r3,4
  802920:	203ffc26 	beq	r4,zero,802914 <__alt_data_end+0xff802914>
  802924:	003ef006 	br	8024e8 <__alt_data_end+0xff8024e8>
  802928:	00805504 	movi	r2,340
  80292c:	10c01336 	bltu	r2,r3,80297c <_malloc_r+0x6c4>
  802930:	8806d3fa 	srli	r3,r17,15
  802934:	19c01dc4 	addi	r7,r3,119
  802938:	39cb883a 	add	r5,r7,r7
  80293c:	003ea206 	br	8023c8 <__alt_data_end+0xff8023c8>
  802940:	00c40004 	movi	r3,4096
  802944:	003f4d06 	br	80267c <__alt_data_end+0xff80267c>
  802948:	00800044 	movi	r2,1
  80294c:	a0800115 	stw	r2,4(r20)
  802950:	a021883a 	mov	r16,r20
  802954:	0007883a 	mov	r3,zero
  802958:	003f7506 	br	802730 <__alt_data_end+0xff802730>
  80295c:	200bd0ba 	srai	r5,r4,2
  802960:	01800044 	movi	r6,1
  802964:	41000117 	ldw	r4,4(r8)
  802968:	314a983a 	sll	r5,r6,r5
  80296c:	100d883a 	mov	r6,r2
  802970:	2908b03a 	or	r4,r5,r4
  802974:	41000115 	stw	r4,4(r8)
  802978:	003f9d06 	br	8027f0 <__alt_data_end+0xff8027f0>
  80297c:	00815504 	movi	r2,1364
  802980:	10c01336 	bltu	r2,r3,8029d0 <_malloc_r+0x718>
  802984:	8806d4ba 	srli	r3,r17,18
  802988:	19c01f04 	addi	r7,r3,124
  80298c:	39cb883a 	add	r5,r7,r7
  802990:	003e8d06 	br	8023c8 <__alt_data_end+0xff8023c8>
  802994:	ad400404 	addi	r21,r21,16
  802998:	003f1d06 	br	802610 <__alt_data_end+0xff802610>
  80299c:	01001504 	movi	r4,84
  8029a0:	20801c36 	bltu	r4,r2,802a14 <_malloc_r+0x75c>
  8029a4:	3804d33a 	srli	r2,r7,12
  8029a8:	11001b84 	addi	r4,r2,110
  8029ac:	210b883a 	add	r5,r4,r4
  8029b0:	003f8006 	br	8027b4 <__alt_data_end+0xff8027b4>
  8029b4:	3083ffcc 	andi	r2,r6,4095
  8029b8:	103f241e 	bne	r2,zero,80264c <__alt_data_end+0xff80264c>
  8029bc:	99000217 	ldw	r4,8(r19)
  8029c0:	ad85883a 	add	r2,r21,r22
  8029c4:	10800054 	ori	r2,r2,1
  8029c8:	20800115 	stw	r2,4(r4)
  8029cc:	003f4a06 	br	8026f8 <__alt_data_end+0xff8026f8>
  8029d0:	01403f04 	movi	r5,252
  8029d4:	01c01f84 	movi	r7,126
  8029d8:	003e7b06 	br	8023c8 <__alt_data_end+0xff8023c8>
  8029dc:	00c00044 	movi	r3,1
  8029e0:	002b883a 	mov	r21,zero
  8029e4:	003f3006 	br	8026a8 <__alt_data_end+0xff8026a8>
  8029e8:	008020b4 	movhi	r2,130
  8029ec:	10b6e304 	addi	r2,r2,-9332
  8029f0:	15000015 	stw	r20,0(r2)
  8029f4:	003f1b06 	br	802664 <__alt_data_end+0xff802664>
  8029f8:	9009883a 	mov	r4,r18
  8029fc:	81400204 	addi	r5,r16,8
  802a00:	080159c0 	call	80159c <_free_r>
  802a04:	008020b4 	movhi	r2,130
  802a08:	10be5b04 	addi	r2,r2,-1684
  802a0c:	10c00017 	ldw	r3,0(r2)
  802a10:	003f3906 	br	8026f8 <__alt_data_end+0xff8026f8>
  802a14:	01005504 	movi	r4,340
  802a18:	20800436 	bltu	r4,r2,802a2c <_malloc_r+0x774>
  802a1c:	3804d3fa 	srli	r2,r7,15
  802a20:	11001dc4 	addi	r4,r2,119
  802a24:	210b883a 	add	r5,r4,r4
  802a28:	003f6206 	br	8027b4 <__alt_data_end+0xff8027b4>
  802a2c:	01015504 	movi	r4,1364
  802a30:	20800436 	bltu	r4,r2,802a44 <_malloc_r+0x78c>
  802a34:	3804d4ba 	srli	r2,r7,18
  802a38:	11001f04 	addi	r4,r2,124
  802a3c:	210b883a 	add	r5,r4,r4
  802a40:	003f5c06 	br	8027b4 <__alt_data_end+0xff8027b4>
  802a44:	01403f04 	movi	r5,252
  802a48:	01001f84 	movi	r4,126
  802a4c:	003f5906 	br	8027b4 <__alt_data_end+0xff8027b4>
  802a50:	98800117 	ldw	r2,4(r19)
  802a54:	003fa906 	br	8028fc <__alt_data_end+0xff8028fc>
  802a58:	6007883a 	mov	r3,r12
  802a5c:	003ea206 	br	8024e8 <__alt_data_end+0xff8024e8>

00802a60 <memset>:
  802a60:	20c000cc 	andi	r3,r4,3
  802a64:	2005883a 	mov	r2,r4
  802a68:	18004326 	beq	r3,zero,802b78 <memset+0x118>
  802a6c:	31ffffc4 	addi	r7,r6,-1
  802a70:	30004026 	beq	r6,zero,802b74 <memset+0x114>
  802a74:	2813883a 	mov	r9,r5
  802a78:	200d883a 	mov	r6,r4
  802a7c:	2007883a 	mov	r3,r4
  802a80:	00000406 	br	802a94 <memset+0x34>
  802a84:	3a3fffc4 	addi	r8,r7,-1
  802a88:	31800044 	addi	r6,r6,1
  802a8c:	38003926 	beq	r7,zero,802b74 <memset+0x114>
  802a90:	400f883a 	mov	r7,r8
  802a94:	18c00044 	addi	r3,r3,1
  802a98:	32400005 	stb	r9,0(r6)
  802a9c:	1a0000cc 	andi	r8,r3,3
  802aa0:	403ff81e 	bne	r8,zero,802a84 <__alt_data_end+0xff802a84>
  802aa4:	010000c4 	movi	r4,3
  802aa8:	21c02d2e 	bgeu	r4,r7,802b60 <memset+0x100>
  802aac:	29803fcc 	andi	r6,r5,255
  802ab0:	3008923a 	slli	r4,r6,8
  802ab4:	218cb03a 	or	r6,r4,r6
  802ab8:	3008943a 	slli	r4,r6,16
  802abc:	218cb03a 	or	r6,r4,r6
  802ac0:	010003c4 	movi	r4,15
  802ac4:	21c0182e 	bgeu	r4,r7,802b28 <memset+0xc8>
  802ac8:	3b3ffc04 	addi	r12,r7,-16
  802acc:	6018d13a 	srli	r12,r12,4
  802ad0:	1a000104 	addi	r8,r3,4
  802ad4:	1ac00204 	addi	r11,r3,8
  802ad8:	6008913a 	slli	r4,r12,4
  802adc:	1a800304 	addi	r10,r3,12
  802ae0:	1813883a 	mov	r9,r3
  802ae4:	21000504 	addi	r4,r4,20
  802ae8:	1909883a 	add	r4,r3,r4
  802aec:	49800015 	stw	r6,0(r9)
  802af0:	41800015 	stw	r6,0(r8)
  802af4:	59800015 	stw	r6,0(r11)
  802af8:	51800015 	stw	r6,0(r10)
  802afc:	42000404 	addi	r8,r8,16
  802b00:	4a400404 	addi	r9,r9,16
  802b04:	5ac00404 	addi	r11,r11,16
  802b08:	52800404 	addi	r10,r10,16
  802b0c:	413ff71e 	bne	r8,r4,802aec <__alt_data_end+0xff802aec>
  802b10:	63000044 	addi	r12,r12,1
  802b14:	6018913a 	slli	r12,r12,4
  802b18:	39c003cc 	andi	r7,r7,15
  802b1c:	010000c4 	movi	r4,3
  802b20:	1b07883a 	add	r3,r3,r12
  802b24:	21c00e2e 	bgeu	r4,r7,802b60 <memset+0x100>
  802b28:	1813883a 	mov	r9,r3
  802b2c:	3811883a 	mov	r8,r7
  802b30:	010000c4 	movi	r4,3
  802b34:	49800015 	stw	r6,0(r9)
  802b38:	423fff04 	addi	r8,r8,-4
  802b3c:	4a400104 	addi	r9,r9,4
  802b40:	223ffc36 	bltu	r4,r8,802b34 <__alt_data_end+0xff802b34>
  802b44:	393fff04 	addi	r4,r7,-4
  802b48:	2008d0ba 	srli	r4,r4,2
  802b4c:	39c000cc 	andi	r7,r7,3
  802b50:	21000044 	addi	r4,r4,1
  802b54:	2109883a 	add	r4,r4,r4
  802b58:	2109883a 	add	r4,r4,r4
  802b5c:	1907883a 	add	r3,r3,r4
  802b60:	38000426 	beq	r7,zero,802b74 <memset+0x114>
  802b64:	19cf883a 	add	r7,r3,r7
  802b68:	19400005 	stb	r5,0(r3)
  802b6c:	18c00044 	addi	r3,r3,1
  802b70:	19fffd1e 	bne	r3,r7,802b68 <__alt_data_end+0xff802b68>
  802b74:	f800283a 	ret
  802b78:	2007883a 	mov	r3,r4
  802b7c:	300f883a 	mov	r7,r6
  802b80:	003fc806 	br	802aa4 <__alt_data_end+0xff802aa4>

00802b84 <_open_r>:
  802b84:	defffd04 	addi	sp,sp,-12
  802b88:	dc000015 	stw	r16,0(sp)
  802b8c:	040020b4 	movhi	r16,130
  802b90:	dc400115 	stw	r17,4(sp)
  802b94:	843e4d04 	addi	r16,r16,-1740
  802b98:	2023883a 	mov	r17,r4
  802b9c:	2809883a 	mov	r4,r5
  802ba0:	300b883a 	mov	r5,r6
  802ba4:	380d883a 	mov	r6,r7
  802ba8:	dfc00215 	stw	ra,8(sp)
  802bac:	80000015 	stw	zero,0(r16)
  802bb0:	08179940 	call	817994 <open>
  802bb4:	00ffffc4 	movi	r3,-1
  802bb8:	10c00526 	beq	r2,r3,802bd0 <_open_r+0x4c>
  802bbc:	dfc00217 	ldw	ra,8(sp)
  802bc0:	dc400117 	ldw	r17,4(sp)
  802bc4:	dc000017 	ldw	r16,0(sp)
  802bc8:	dec00304 	addi	sp,sp,12
  802bcc:	f800283a 	ret
  802bd0:	80c00017 	ldw	r3,0(r16)
  802bd4:	183ff926 	beq	r3,zero,802bbc <__alt_data_end+0xff802bbc>
  802bd8:	88c00015 	stw	r3,0(r17)
  802bdc:	003ff706 	br	802bbc <__alt_data_end+0xff802bbc>

00802be0 <_printf_r>:
  802be0:	defffd04 	addi	sp,sp,-12
  802be4:	dfc00015 	stw	ra,0(sp)
  802be8:	d9800115 	stw	r6,4(sp)
  802bec:	d9c00215 	stw	r7,8(sp)
  802bf0:	280d883a 	mov	r6,r5
  802bf4:	21400217 	ldw	r5,8(r4)
  802bf8:	d9c00104 	addi	r7,sp,4
  802bfc:	08049b00 	call	8049b0 <___vfprintf_internal_r>
  802c00:	dfc00017 	ldw	ra,0(sp)
  802c04:	dec00304 	addi	sp,sp,12
  802c08:	f800283a 	ret

00802c0c <printf>:
  802c0c:	defffc04 	addi	sp,sp,-16
  802c10:	dfc00015 	stw	ra,0(sp)
  802c14:	d9400115 	stw	r5,4(sp)
  802c18:	d9800215 	stw	r6,8(sp)
  802c1c:	d9c00315 	stw	r7,12(sp)
  802c20:	008020b4 	movhi	r2,130
  802c24:	10b6e204 	addi	r2,r2,-9336
  802c28:	10800017 	ldw	r2,0(r2)
  802c2c:	200b883a 	mov	r5,r4
  802c30:	d9800104 	addi	r6,sp,4
  802c34:	11000217 	ldw	r4,8(r2)
  802c38:	08069000 	call	806900 <__vfprintf_internal>
  802c3c:	dfc00017 	ldw	ra,0(sp)
  802c40:	dec00404 	addi	sp,sp,16
  802c44:	f800283a 	ret

00802c48 <_putchar_r>:
  802c48:	21800217 	ldw	r6,8(r4)
  802c4c:	080a1781 	jmpi	80a178 <_putc_r>

00802c50 <putchar>:
  802c50:	008020b4 	movhi	r2,130
  802c54:	10b6e204 	addi	r2,r2,-9336
  802c58:	200b883a 	mov	r5,r4
  802c5c:	11000017 	ldw	r4,0(r2)
  802c60:	21800217 	ldw	r6,8(r4)
  802c64:	080a1781 	jmpi	80a178 <_putc_r>

00802c68 <_puts_r>:
  802c68:	defff604 	addi	sp,sp,-40
  802c6c:	dc000715 	stw	r16,28(sp)
  802c70:	2021883a 	mov	r16,r4
  802c74:	2809883a 	mov	r4,r5
  802c78:	dc400815 	stw	r17,32(sp)
  802c7c:	dfc00915 	stw	ra,36(sp)
  802c80:	2823883a 	mov	r17,r5
  802c84:	08032200 	call	803220 <strlen>
  802c88:	81400217 	ldw	r5,8(r16)
  802c8c:	11000044 	addi	r4,r2,1
  802c90:	d8800115 	stw	r2,4(sp)
  802c94:	008020b4 	movhi	r2,130
  802c98:	2980030b 	ldhu	r6,12(r5)
  802c9c:	10adb604 	addi	r2,r2,-18728
  802ca0:	d8800215 	stw	r2,8(sp)
  802ca4:	00800044 	movi	r2,1
  802ca8:	d8800315 	stw	r2,12(sp)
  802cac:	00800084 	movi	r2,2
  802cb0:	d8800515 	stw	r2,20(sp)
  802cb4:	dc400015 	stw	r17,0(sp)
  802cb8:	d9000615 	stw	r4,24(sp)
  802cbc:	dec00415 	stw	sp,16(sp)
  802cc0:	3088000c 	andi	r2,r6,8192
  802cc4:	1000061e 	bne	r2,zero,802ce0 <_puts_r+0x78>
  802cc8:	29001917 	ldw	r4,100(r5)
  802ccc:	00b7ffc4 	movi	r2,-8193
  802cd0:	31880014 	ori	r6,r6,8192
  802cd4:	2084703a 	and	r2,r4,r2
  802cd8:	2980030d 	sth	r6,12(r5)
  802cdc:	28801915 	stw	r2,100(r5)
  802ce0:	8009883a 	mov	r4,r16
  802ce4:	d9800404 	addi	r6,sp,16
  802ce8:	08085b80 	call	8085b8 <__sfvwrite_r>
  802cec:	1000061e 	bne	r2,zero,802d08 <_puts_r+0xa0>
  802cf0:	00800284 	movi	r2,10
  802cf4:	dfc00917 	ldw	ra,36(sp)
  802cf8:	dc400817 	ldw	r17,32(sp)
  802cfc:	dc000717 	ldw	r16,28(sp)
  802d00:	dec00a04 	addi	sp,sp,40
  802d04:	f800283a 	ret
  802d08:	00bfffc4 	movi	r2,-1
  802d0c:	003ff906 	br	802cf4 <__alt_data_end+0xff802cf4>

00802d10 <puts>:
  802d10:	008020b4 	movhi	r2,130
  802d14:	10b6e204 	addi	r2,r2,-9336
  802d18:	200b883a 	mov	r5,r4
  802d1c:	11000017 	ldw	r4,0(r2)
  802d20:	0802c681 	jmpi	802c68 <_puts_r>

00802d24 <lflush>:
  802d24:	2080030b 	ldhu	r2,12(r4)
  802d28:	00c00244 	movi	r3,9
  802d2c:	1080024c 	andi	r2,r2,9
  802d30:	10c00226 	beq	r2,r3,802d3c <lflush+0x18>
  802d34:	0005883a 	mov	r2,zero
  802d38:	f800283a 	ret
  802d3c:	0800f501 	jmpi	800f50 <fflush>

00802d40 <__srefill_r>:
  802d40:	defffc04 	addi	sp,sp,-16
  802d44:	dc400115 	stw	r17,4(sp)
  802d48:	dc000015 	stw	r16,0(sp)
  802d4c:	dfc00315 	stw	ra,12(sp)
  802d50:	dc800215 	stw	r18,8(sp)
  802d54:	2023883a 	mov	r17,r4
  802d58:	2821883a 	mov	r16,r5
  802d5c:	20000226 	beq	r4,zero,802d68 <__srefill_r+0x28>
  802d60:	20800e17 	ldw	r2,56(r4)
  802d64:	10003c26 	beq	r2,zero,802e58 <__srefill_r+0x118>
  802d68:	80c0030b 	ldhu	r3,12(r16)
  802d6c:	1908000c 	andi	r4,r3,8192
  802d70:	1805883a 	mov	r2,r3
  802d74:	2000071e 	bne	r4,zero,802d94 <__srefill_r+0x54>
  802d78:	81001917 	ldw	r4,100(r16)
  802d7c:	18880014 	ori	r2,r3,8192
  802d80:	00f7ffc4 	movi	r3,-8193
  802d84:	20c8703a 	and	r4,r4,r3
  802d88:	8080030d 	sth	r2,12(r16)
  802d8c:	1007883a 	mov	r3,r2
  802d90:	81001915 	stw	r4,100(r16)
  802d94:	80000115 	stw	zero,4(r16)
  802d98:	1100080c 	andi	r4,r2,32
  802d9c:	2000571e 	bne	r4,zero,802efc <__srefill_r+0x1bc>
  802da0:	1100010c 	andi	r4,r2,4
  802da4:	20001f26 	beq	r4,zero,802e24 <__srefill_r+0xe4>
  802da8:	81400c17 	ldw	r5,48(r16)
  802dac:	28000826 	beq	r5,zero,802dd0 <__srefill_r+0x90>
  802db0:	80801004 	addi	r2,r16,64
  802db4:	28800226 	beq	r5,r2,802dc0 <__srefill_r+0x80>
  802db8:	8809883a 	mov	r4,r17
  802dbc:	080159c0 	call	80159c <_free_r>
  802dc0:	80800f17 	ldw	r2,60(r16)
  802dc4:	80000c15 	stw	zero,48(r16)
  802dc8:	80800115 	stw	r2,4(r16)
  802dcc:	1000391e 	bne	r2,zero,802eb4 <__srefill_r+0x174>
  802dd0:	80800417 	ldw	r2,16(r16)
  802dd4:	10004b26 	beq	r2,zero,802f04 <__srefill_r+0x1c4>
  802dd8:	8480030b 	ldhu	r18,12(r16)
  802ddc:	908000cc 	andi	r2,r18,3
  802de0:	10001f1e 	bne	r2,zero,802e60 <__srefill_r+0x120>
  802de4:	81800417 	ldw	r6,16(r16)
  802de8:	80800817 	ldw	r2,32(r16)
  802dec:	81400717 	ldw	r5,28(r16)
  802df0:	81c00517 	ldw	r7,20(r16)
  802df4:	81800015 	stw	r6,0(r16)
  802df8:	8809883a 	mov	r4,r17
  802dfc:	103ee83a 	callr	r2
  802e00:	80800115 	stw	r2,4(r16)
  802e04:	00800e0e 	bge	zero,r2,802e40 <__srefill_r+0x100>
  802e08:	0005883a 	mov	r2,zero
  802e0c:	dfc00317 	ldw	ra,12(sp)
  802e10:	dc800217 	ldw	r18,8(sp)
  802e14:	dc400117 	ldw	r17,4(sp)
  802e18:	dc000017 	ldw	r16,0(sp)
  802e1c:	dec00404 	addi	sp,sp,16
  802e20:	f800283a 	ret
  802e24:	1100040c 	andi	r4,r2,16
  802e28:	20003026 	beq	r4,zero,802eec <__srefill_r+0x1ac>
  802e2c:	1080020c 	andi	r2,r2,8
  802e30:	1000241e 	bne	r2,zero,802ec4 <__srefill_r+0x184>
  802e34:	18c00114 	ori	r3,r3,4
  802e38:	80c0030d 	sth	r3,12(r16)
  802e3c:	003fe406 	br	802dd0 <__alt_data_end+0xff802dd0>
  802e40:	80c0030b 	ldhu	r3,12(r16)
  802e44:	1000161e 	bne	r2,zero,802ea0 <__srefill_r+0x160>
  802e48:	18c00814 	ori	r3,r3,32
  802e4c:	00bfffc4 	movi	r2,-1
  802e50:	80c0030d 	sth	r3,12(r16)
  802e54:	003fed06 	br	802e0c <__alt_data_end+0xff802e0c>
  802e58:	08012d00 	call	8012d0 <__sinit>
  802e5c:	003fc206 	br	802d68 <__alt_data_end+0xff802d68>
  802e60:	008020b4 	movhi	r2,130
  802e64:	10b6e104 	addi	r2,r2,-9340
  802e68:	11000017 	ldw	r4,0(r2)
  802e6c:	01402034 	movhi	r5,128
  802e70:	00800044 	movi	r2,1
  802e74:	294b4904 	addi	r5,r5,11556
  802e78:	8080030d 	sth	r2,12(r16)
  802e7c:	0801d740 	call	801d74 <_fwalk>
  802e80:	00800244 	movi	r2,9
  802e84:	8480030d 	sth	r18,12(r16)
  802e88:	9480024c 	andi	r18,r18,9
  802e8c:	90bfd51e 	bne	r18,r2,802de4 <__alt_data_end+0xff802de4>
  802e90:	8809883a 	mov	r4,r17
  802e94:	800b883a 	mov	r5,r16
  802e98:	0800cec0 	call	800cec <__sflush_r>
  802e9c:	003fd106 	br	802de4 <__alt_data_end+0xff802de4>
  802ea0:	18c01014 	ori	r3,r3,64
  802ea4:	80000115 	stw	zero,4(r16)
  802ea8:	00bfffc4 	movi	r2,-1
  802eac:	80c0030d 	sth	r3,12(r16)
  802eb0:	003fd606 	br	802e0c <__alt_data_end+0xff802e0c>
  802eb4:	80c00e17 	ldw	r3,56(r16)
  802eb8:	0005883a 	mov	r2,zero
  802ebc:	80c00015 	stw	r3,0(r16)
  802ec0:	003fd206 	br	802e0c <__alt_data_end+0xff802e0c>
  802ec4:	8809883a 	mov	r4,r17
  802ec8:	800b883a 	mov	r5,r16
  802ecc:	0800ef40 	call	800ef4 <_fflush_r>
  802ed0:	10000a1e 	bne	r2,zero,802efc <__srefill_r+0x1bc>
  802ed4:	8080030b 	ldhu	r2,12(r16)
  802ed8:	00fffdc4 	movi	r3,-9
  802edc:	80000215 	stw	zero,8(r16)
  802ee0:	1886703a 	and	r3,r3,r2
  802ee4:	80000615 	stw	zero,24(r16)
  802ee8:	003fd206 	br	802e34 <__alt_data_end+0xff802e34>
  802eec:	00800244 	movi	r2,9
  802ef0:	88800015 	stw	r2,0(r17)
  802ef4:	18c01014 	ori	r3,r3,64
  802ef8:	80c0030d 	sth	r3,12(r16)
  802efc:	00bfffc4 	movi	r2,-1
  802f00:	003fc206 	br	802e0c <__alt_data_end+0xff802e0c>
  802f04:	8809883a 	mov	r4,r17
  802f08:	800b883a 	mov	r5,r16
  802f0c:	08021000 	call	802100 <__smakebuf_r>
  802f10:	003fb106 	br	802dd8 <__alt_data_end+0xff802dd8>

00802f14 <__srget_r>:
  802f14:	defffd04 	addi	sp,sp,-12
  802f18:	dc400115 	stw	r17,4(sp)
  802f1c:	dc000015 	stw	r16,0(sp)
  802f20:	dfc00215 	stw	ra,8(sp)
  802f24:	2023883a 	mov	r17,r4
  802f28:	2821883a 	mov	r16,r5
  802f2c:	20000226 	beq	r4,zero,802f38 <__srget_r+0x24>
  802f30:	20800e17 	ldw	r2,56(r4)
  802f34:	10001026 	beq	r2,zero,802f78 <__srget_r+0x64>
  802f38:	8809883a 	mov	r4,r17
  802f3c:	800b883a 	mov	r5,r16
  802f40:	0802d400 	call	802d40 <__srefill_r>
  802f44:	10000e1e 	bne	r2,zero,802f80 <__srget_r+0x6c>
  802f48:	80c00017 	ldw	r3,0(r16)
  802f4c:	80800117 	ldw	r2,4(r16)
  802f50:	19000044 	addi	r4,r3,1
  802f54:	10bfffc4 	addi	r2,r2,-1
  802f58:	80800115 	stw	r2,4(r16)
  802f5c:	81000015 	stw	r4,0(r16)
  802f60:	18800003 	ldbu	r2,0(r3)
  802f64:	dfc00217 	ldw	ra,8(sp)
  802f68:	dc400117 	ldw	r17,4(sp)
  802f6c:	dc000017 	ldw	r16,0(sp)
  802f70:	dec00304 	addi	sp,sp,12
  802f74:	f800283a 	ret
  802f78:	08012d00 	call	8012d0 <__sinit>
  802f7c:	003fee06 	br	802f38 <__alt_data_end+0xff802f38>
  802f80:	00bfffc4 	movi	r2,-1
  802f84:	003ff706 	br	802f64 <__alt_data_end+0xff802f64>

00802f88 <__srget>:
  802f88:	008020b4 	movhi	r2,130
  802f8c:	10b6e204 	addi	r2,r2,-9336
  802f90:	200b883a 	mov	r5,r4
  802f94:	11000017 	ldw	r4,0(r2)
  802f98:	0802f141 	jmpi	802f14 <__srget_r>

00802f9c <_sbrk_r>:
  802f9c:	defffd04 	addi	sp,sp,-12
  802fa0:	dc000015 	stw	r16,0(sp)
  802fa4:	040020b4 	movhi	r16,130
  802fa8:	dc400115 	stw	r17,4(sp)
  802fac:	843e4d04 	addi	r16,r16,-1740
  802fb0:	2023883a 	mov	r17,r4
  802fb4:	2809883a 	mov	r4,r5
  802fb8:	dfc00215 	stw	ra,8(sp)
  802fbc:	80000015 	stw	zero,0(r16)
  802fc0:	0817c980 	call	817c98 <sbrk>
  802fc4:	00ffffc4 	movi	r3,-1
  802fc8:	10c00526 	beq	r2,r3,802fe0 <_sbrk_r+0x44>
  802fcc:	dfc00217 	ldw	ra,8(sp)
  802fd0:	dc400117 	ldw	r17,4(sp)
  802fd4:	dc000017 	ldw	r16,0(sp)
  802fd8:	dec00304 	addi	sp,sp,12
  802fdc:	f800283a 	ret
  802fe0:	80c00017 	ldw	r3,0(r16)
  802fe4:	183ff926 	beq	r3,zero,802fcc <__alt_data_end+0xff802fcc>
  802fe8:	88c00015 	stw	r3,0(r17)
  802fec:	003ff706 	br	802fcc <__alt_data_end+0xff802fcc>

00802ff0 <sscanf>:
  802ff0:	deffe204 	addi	sp,sp,-120
  802ff4:	dfc01b15 	stw	ra,108(sp)
  802ff8:	dc001a15 	stw	r16,104(sp)
  802ffc:	d9801c15 	stw	r6,112(sp)
  803000:	d9c01d15 	stw	r7,116(sp)
  803004:	00c08104 	movi	r3,516
  803008:	2821883a 	mov	r16,r5
  80300c:	d8c0030d 	sth	r3,12(sp)
  803010:	d9000015 	stw	r4,0(sp)
  803014:	d9000415 	stw	r4,16(sp)
  803018:	08032200 	call	803220 <strlen>
  80301c:	00c020b4 	movhi	r3,130
  803020:	18f6e204 	addi	r3,r3,-9336
  803024:	d8800115 	stw	r2,4(sp)
  803028:	d8800515 	stw	r2,20(sp)
  80302c:	19000017 	ldw	r4,0(r3)
  803030:	00802034 	movhi	r2,128
  803034:	108c4e04 	addi	r2,r2,12600
  803038:	d8800815 	stw	r2,32(sp)
  80303c:	d80b883a 	mov	r5,sp
  803040:	800d883a 	mov	r6,r16
  803044:	d9c01c04 	addi	r7,sp,112
  803048:	00bfffc4 	movi	r2,-1
  80304c:	d8000c15 	stw	zero,48(sp)
  803050:	d8001115 	stw	zero,68(sp)
  803054:	d880038d 	sth	r2,14(sp)
  803058:	08032b80 	call	8032b8 <__ssvfscanf_r>
  80305c:	dfc01b17 	ldw	ra,108(sp)
  803060:	dc001a17 	ldw	r16,104(sp)
  803064:	dec01e04 	addi	sp,sp,120
  803068:	f800283a 	ret

0080306c <_sscanf_r>:
  80306c:	deffe204 	addi	sp,sp,-120
  803070:	dc001b15 	stw	r16,108(sp)
  803074:	2021883a 	mov	r16,r4
  803078:	dfc01c15 	stw	ra,112(sp)
  80307c:	d9c01d15 	stw	r7,116(sp)
  803080:	00808104 	movi	r2,516
  803084:	2809883a 	mov	r4,r5
  803088:	d9400015 	stw	r5,0(sp)
  80308c:	d9400415 	stw	r5,16(sp)
  803090:	d9801a15 	stw	r6,104(sp)
  803094:	d880030d 	sth	r2,12(sp)
  803098:	08032200 	call	803220 <strlen>
  80309c:	d8800115 	stw	r2,4(sp)
  8030a0:	d8800515 	stw	r2,20(sp)
  8030a4:	d9801a17 	ldw	r6,104(sp)
  8030a8:	00802034 	movhi	r2,128
  8030ac:	108c4e04 	addi	r2,r2,12600
  8030b0:	d8800815 	stw	r2,32(sp)
  8030b4:	8009883a 	mov	r4,r16
  8030b8:	d80b883a 	mov	r5,sp
  8030bc:	d9c01d04 	addi	r7,sp,116
  8030c0:	00bfffc4 	movi	r2,-1
  8030c4:	d8000c15 	stw	zero,48(sp)
  8030c8:	d8001115 	stw	zero,68(sp)
  8030cc:	d880038d 	sth	r2,14(sp)
  8030d0:	08032b80 	call	8032b8 <__ssvfscanf_r>
  8030d4:	dfc01c17 	ldw	ra,112(sp)
  8030d8:	dc001b17 	ldw	r16,108(sp)
  8030dc:	dec01e04 	addi	sp,sp,120
  8030e0:	f800283a 	ret

008030e4 <__sread>:
  8030e4:	defffe04 	addi	sp,sp,-8
  8030e8:	dc000015 	stw	r16,0(sp)
  8030ec:	2821883a 	mov	r16,r5
  8030f0:	2940038f 	ldh	r5,14(r5)
  8030f4:	dfc00115 	stw	ra,4(sp)
  8030f8:	080a2e40 	call	80a2e4 <_read_r>
  8030fc:	10000716 	blt	r2,zero,80311c <__sread+0x38>
  803100:	80c01417 	ldw	r3,80(r16)
  803104:	1887883a 	add	r3,r3,r2
  803108:	80c01415 	stw	r3,80(r16)
  80310c:	dfc00117 	ldw	ra,4(sp)
  803110:	dc000017 	ldw	r16,0(sp)
  803114:	dec00204 	addi	sp,sp,8
  803118:	f800283a 	ret
  80311c:	80c0030b 	ldhu	r3,12(r16)
  803120:	18fbffcc 	andi	r3,r3,61439
  803124:	80c0030d 	sth	r3,12(r16)
  803128:	dfc00117 	ldw	ra,4(sp)
  80312c:	dc000017 	ldw	r16,0(sp)
  803130:	dec00204 	addi	sp,sp,8
  803134:	f800283a 	ret

00803138 <__seofread>:
  803138:	0005883a 	mov	r2,zero
  80313c:	f800283a 	ret

00803140 <__swrite>:
  803140:	2880030b 	ldhu	r2,12(r5)
  803144:	defffb04 	addi	sp,sp,-20
  803148:	dcc00315 	stw	r19,12(sp)
  80314c:	dc800215 	stw	r18,8(sp)
  803150:	dc400115 	stw	r17,4(sp)
  803154:	dc000015 	stw	r16,0(sp)
  803158:	dfc00415 	stw	ra,16(sp)
  80315c:	10c0400c 	andi	r3,r2,256
  803160:	2821883a 	mov	r16,r5
  803164:	2027883a 	mov	r19,r4
  803168:	3025883a 	mov	r18,r6
  80316c:	3823883a 	mov	r17,r7
  803170:	18000526 	beq	r3,zero,803188 <__swrite+0x48>
  803174:	2940038f 	ldh	r5,14(r5)
  803178:	000d883a 	mov	r6,zero
  80317c:	01c00084 	movi	r7,2
  803180:	0808bdc0 	call	808bdc <_lseek_r>
  803184:	8080030b 	ldhu	r2,12(r16)
  803188:	8140038f 	ldh	r5,14(r16)
  80318c:	10bbffcc 	andi	r2,r2,61439
  803190:	9809883a 	mov	r4,r19
  803194:	900d883a 	mov	r6,r18
  803198:	880f883a 	mov	r7,r17
  80319c:	8080030d 	sth	r2,12(r16)
  8031a0:	dfc00417 	ldw	ra,16(sp)
  8031a4:	dcc00317 	ldw	r19,12(sp)
  8031a8:	dc800217 	ldw	r18,8(sp)
  8031ac:	dc400117 	ldw	r17,4(sp)
  8031b0:	dc000017 	ldw	r16,0(sp)
  8031b4:	dec00504 	addi	sp,sp,20
  8031b8:	08069e01 	jmpi	8069e0 <_write_r>

008031bc <__sseek>:
  8031bc:	defffe04 	addi	sp,sp,-8
  8031c0:	dc000015 	stw	r16,0(sp)
  8031c4:	2821883a 	mov	r16,r5
  8031c8:	2940038f 	ldh	r5,14(r5)
  8031cc:	dfc00115 	stw	ra,4(sp)
  8031d0:	0808bdc0 	call	808bdc <_lseek_r>
  8031d4:	00ffffc4 	movi	r3,-1
  8031d8:	10c00826 	beq	r2,r3,8031fc <__sseek+0x40>
  8031dc:	80c0030b 	ldhu	r3,12(r16)
  8031e0:	80801415 	stw	r2,80(r16)
  8031e4:	18c40014 	ori	r3,r3,4096
  8031e8:	80c0030d 	sth	r3,12(r16)
  8031ec:	dfc00117 	ldw	ra,4(sp)
  8031f0:	dc000017 	ldw	r16,0(sp)
  8031f4:	dec00204 	addi	sp,sp,8
  8031f8:	f800283a 	ret
  8031fc:	80c0030b 	ldhu	r3,12(r16)
  803200:	18fbffcc 	andi	r3,r3,61439
  803204:	80c0030d 	sth	r3,12(r16)
  803208:	dfc00117 	ldw	ra,4(sp)
  80320c:	dc000017 	ldw	r16,0(sp)
  803210:	dec00204 	addi	sp,sp,8
  803214:	f800283a 	ret

00803218 <__sclose>:
  803218:	2940038f 	ldh	r5,14(r5)
  80321c:	0806b901 	jmpi	806b90 <_close_r>

00803220 <strlen>:
  803220:	208000cc 	andi	r2,r4,3
  803224:	10002026 	beq	r2,zero,8032a8 <strlen+0x88>
  803228:	20800007 	ldb	r2,0(r4)
  80322c:	10002026 	beq	r2,zero,8032b0 <strlen+0x90>
  803230:	2005883a 	mov	r2,r4
  803234:	00000206 	br	803240 <strlen+0x20>
  803238:	10c00007 	ldb	r3,0(r2)
  80323c:	18001826 	beq	r3,zero,8032a0 <strlen+0x80>
  803240:	10800044 	addi	r2,r2,1
  803244:	10c000cc 	andi	r3,r2,3
  803248:	183ffb1e 	bne	r3,zero,803238 <__alt_data_end+0xff803238>
  80324c:	10c00017 	ldw	r3,0(r2)
  803250:	01ffbff4 	movhi	r7,65279
  803254:	39ffbfc4 	addi	r7,r7,-257
  803258:	00ca303a 	nor	r5,zero,r3
  80325c:	01a02074 	movhi	r6,32897
  803260:	19c7883a 	add	r3,r3,r7
  803264:	31a02004 	addi	r6,r6,-32640
  803268:	1946703a 	and	r3,r3,r5
  80326c:	1986703a 	and	r3,r3,r6
  803270:	1800091e 	bne	r3,zero,803298 <strlen+0x78>
  803274:	10800104 	addi	r2,r2,4
  803278:	10c00017 	ldw	r3,0(r2)
  80327c:	19cb883a 	add	r5,r3,r7
  803280:	00c6303a 	nor	r3,zero,r3
  803284:	28c6703a 	and	r3,r5,r3
  803288:	1986703a 	and	r3,r3,r6
  80328c:	183ff926 	beq	r3,zero,803274 <__alt_data_end+0xff803274>
  803290:	00000106 	br	803298 <strlen+0x78>
  803294:	10800044 	addi	r2,r2,1
  803298:	10c00007 	ldb	r3,0(r2)
  80329c:	183ffd1e 	bne	r3,zero,803294 <__alt_data_end+0xff803294>
  8032a0:	1105c83a 	sub	r2,r2,r4
  8032a4:	f800283a 	ret
  8032a8:	2005883a 	mov	r2,r4
  8032ac:	003fe706 	br	80324c <__alt_data_end+0xff80324c>
  8032b0:	0005883a 	mov	r2,zero
  8032b4:	f800283a 	ret

008032b8 <__ssvfscanf_r>:
  8032b8:	2880030b 	ldhu	r2,12(r5)
  8032bc:	deff4a04 	addi	sp,sp,-728
  8032c0:	df00b415 	stw	fp,720(sp)
  8032c4:	dd80b215 	stw	r22,712(sp)
  8032c8:	dfc0b515 	stw	ra,724(sp)
  8032cc:	ddc0b315 	stw	r23,716(sp)
  8032d0:	dd40b115 	stw	r21,708(sp)
  8032d4:	dd00b015 	stw	r20,704(sp)
  8032d8:	dcc0af15 	stw	r19,700(sp)
  8032dc:	dc80ae15 	stw	r18,696(sp)
  8032e0:	dc40ad15 	stw	r17,692(sp)
  8032e4:	dc00ac15 	stw	r16,688(sp)
  8032e8:	10c8000c 	andi	r3,r2,8192
  8032ec:	d9c09c15 	stw	r7,624(sp)
  8032f0:	2839883a 	mov	fp,r5
  8032f4:	202d883a 	mov	r22,r4
  8032f8:	1800061e 	bne	r3,zero,803314 <__ssvfscanf_r+0x5c>
  8032fc:	29001917 	ldw	r4,100(r5)
  803300:	00f7ffc4 	movi	r3,-8193
  803304:	10880014 	ori	r2,r2,8192
  803308:	20c6703a 	and	r3,r4,r3
  80330c:	2880030d 	sth	r2,12(r5)
  803310:	28c01915 	stw	r3,100(r5)
  803314:	30800003 	ldbu	r2,0(r6)
  803318:	0029883a 	mov	r20,zero
  80331c:	05c020b4 	movhi	r23,130
  803320:	d800a115 	stw	zero,644(sp)
  803324:	d8009e15 	stw	zero,632(sp)
  803328:	d8009f15 	stw	zero,636(sp)
  80332c:	d8809b15 	stw	r2,620(sp)
  803330:	bdf6e504 	addi	r23,r23,-9324
  803334:	a025883a 	mov	r18,r20
  803338:	34400044 	addi	r17,r6,1
  80333c:	10001e26 	beq	r2,zero,8033b8 <__ssvfscanf_r+0x100>
  803340:	b9000017 	ldw	r4,0(r23)
  803344:	2087883a 	add	r3,r4,r2
  803348:	18c00043 	ldbu	r3,1(r3)
  80334c:	18c0020c 	andi	r3,r3,8
  803350:	18001b26 	beq	r3,zero,8033c0 <__ssvfscanf_r+0x108>
  803354:	e0800117 	ldw	r2,4(fp)
  803358:	00800e0e 	bge	zero,r2,803394 <__ssvfscanf_r+0xdc>
  80335c:	e0c00017 	ldw	r3,0(fp)
  803360:	b9000017 	ldw	r4,0(r23)
  803364:	18800003 	ldbu	r2,0(r3)
  803368:	2085883a 	add	r2,r4,r2
  80336c:	10800043 	ldbu	r2,1(r2)
  803370:	1080020c 	andi	r2,r2,8
  803374:	10000b26 	beq	r2,zero,8033a4 <__ssvfscanf_r+0xec>
  803378:	e0800117 	ldw	r2,4(fp)
  80337c:	18c00044 	addi	r3,r3,1
  803380:	e0c00015 	stw	r3,0(fp)
  803384:	10bfffc4 	addi	r2,r2,-1
  803388:	e0800115 	stw	r2,4(fp)
  80338c:	94800044 	addi	r18,r18,1
  803390:	00bff216 	blt	zero,r2,80335c <__alt_data_end+0xff80335c>
  803394:	b009883a 	mov	r4,r22
  803398:	e00b883a 	mov	r5,fp
  80339c:	080cecc0 	call	80cecc <__ssrefill_r>
  8033a0:	103fee26 	beq	r2,zero,80335c <__alt_data_end+0xff80335c>
  8033a4:	880d883a 	mov	r6,r17
  8033a8:	30800003 	ldbu	r2,0(r6)
  8033ac:	34400044 	addi	r17,r6,1
  8033b0:	d8809b15 	stw	r2,620(sp)
  8033b4:	103fe21e 	bne	r2,zero,803340 <__alt_data_end+0xff803340>
  8033b8:	d8809f17 	ldw	r2,636(sp)
  8033bc:	00009b06 	br	80362c <__ssvfscanf_r+0x374>
  8033c0:	00c00944 	movi	r3,37
  8033c4:	10c0a61e 	bne	r2,r3,803660 <__ssvfscanf_r+0x3a8>
  8033c8:	31800043 	ldbu	r6,1(r6)
  8033cc:	0021883a 	mov	r16,zero
  8033d0:	002b883a 	mov	r21,zero
  8033d4:	01c01e04 	movi	r7,120
  8033d8:	02801b04 	movi	r10,108
  8033dc:	89400044 	addi	r5,r17,1
  8033e0:	39821336 	bltu	r7,r6,803c30 <__ssvfscanf_r+0x978>
  8033e4:	300490ba 	slli	r2,r6,2
  8033e8:	00c02034 	movhi	r3,128
  8033ec:	18ccff04 	addi	r3,r3,13308
  8033f0:	10c5883a 	add	r2,r2,r3
  8033f4:	10800017 	ldw	r2,0(r2)
  8033f8:	1000683a 	jmp	r2
  8033fc:	00803628 	cmpgeui	r2,zero,216
  803400:	00803c30 	cmpltui	r2,zero,240
  803404:	00803c30 	cmpltui	r2,zero,240
  803408:	00803c30 	cmpltui	r2,zero,240
  80340c:	00803c30 	cmpltui	r2,zero,240
  803410:	00803c30 	cmpltui	r2,zero,240
  803414:	00803c30 	cmpltui	r2,zero,240
  803418:	00803c30 	cmpltui	r2,zero,240
  80341c:	00803c30 	cmpltui	r2,zero,240
  803420:	00803c30 	cmpltui	r2,zero,240
  803424:	00803c30 	cmpltui	r2,zero,240
  803428:	00803c30 	cmpltui	r2,zero,240
  80342c:	00803c30 	cmpltui	r2,zero,240
  803430:	00803c30 	cmpltui	r2,zero,240
  803434:	00803c30 	cmpltui	r2,zero,240
  803438:	00803c30 	cmpltui	r2,zero,240
  80343c:	00803c30 	cmpltui	r2,zero,240
  803440:	00803c30 	cmpltui	r2,zero,240
  803444:	00803c30 	cmpltui	r2,zero,240
  803448:	00803c30 	cmpltui	r2,zero,240
  80344c:	00803c30 	cmpltui	r2,zero,240
  803450:	00803c30 	cmpltui	r2,zero,240
  803454:	00803c30 	cmpltui	r2,zero,240
  803458:	00803c30 	cmpltui	r2,zero,240
  80345c:	00803c30 	cmpltui	r2,zero,240
  803460:	00803c30 	cmpltui	r2,zero,240
  803464:	00803c30 	cmpltui	r2,zero,240
  803468:	00803c30 	cmpltui	r2,zero,240
  80346c:	00803c30 	cmpltui	r2,zero,240
  803470:	00803c30 	cmpltui	r2,zero,240
  803474:	00803c30 	cmpltui	r2,zero,240
  803478:	00803c30 	cmpltui	r2,zero,240
  80347c:	00803c30 	cmpltui	r2,zero,240
  803480:	00803c30 	cmpltui	r2,zero,240
  803484:	00803c30 	cmpltui	r2,zero,240
  803488:	00803c30 	cmpltui	r2,zero,240
  80348c:	00803c30 	cmpltui	r2,zero,240
  803490:	0080365c 	xori	r2,zero,217
  803494:	00803c30 	cmpltui	r2,zero,240
  803498:	00803c30 	cmpltui	r2,zero,240
  80349c:	00803c30 	cmpltui	r2,zero,240
  8034a0:	00803c30 	cmpltui	r2,zero,240
  8034a4:	00803c7c 	xorhi	r2,zero,241
  8034a8:	00803c30 	cmpltui	r2,zero,240
  8034ac:	00803c30 	cmpltui	r2,zero,240
  8034b0:	00803c30 	cmpltui	r2,zero,240
  8034b4:	00803c30 	cmpltui	r2,zero,240
  8034b8:	00803c30 	cmpltui	r2,zero,240
  8034bc:	00803c10 	cmplti	r2,zero,240
  8034c0:	00803c10 	cmplti	r2,zero,240
  8034c4:	00803c10 	cmplti	r2,zero,240
  8034c8:	00803c10 	cmplti	r2,zero,240
  8034cc:	00803c10 	cmplti	r2,zero,240
  8034d0:	00803c10 	cmplti	r2,zero,240
  8034d4:	00803c10 	cmplti	r2,zero,240
  8034d8:	00803c10 	cmplti	r2,zero,240
  8034dc:	00803c10 	cmplti	r2,zero,240
  8034e0:	00803c10 	cmplti	r2,zero,240
  8034e4:	00803c30 	cmpltui	r2,zero,240
  8034e8:	00803c30 	cmpltui	r2,zero,240
  8034ec:	00803c30 	cmpltui	r2,zero,240
  8034f0:	00803c30 	cmpltui	r2,zero,240
  8034f4:	00803c30 	cmpltui	r2,zero,240
  8034f8:	00803c30 	cmpltui	r2,zero,240
  8034fc:	00803c30 	cmpltui	r2,zero,240
  803500:	00803c30 	cmpltui	r2,zero,240
  803504:	00803c30 	cmpltui	r2,zero,240
  803508:	00803c30 	cmpltui	r2,zero,240
  80350c:	00803cd4 	movui	r2,243
  803510:	00803cc8 	cmpgei	r2,zero,243
  803514:	00803c30 	cmpltui	r2,zero,240
  803518:	00803cc8 	cmpgei	r2,zero,243
  80351c:	00803c30 	cmpltui	r2,zero,240
  803520:	00803c30 	cmpltui	r2,zero,240
  803524:	00803c30 	cmpltui	r2,zero,240
  803528:	00803c30 	cmpltui	r2,zero,240
  80352c:	00803cb4 	movhi	r2,242
  803530:	00803c30 	cmpltui	r2,zero,240
  803534:	00803c30 	cmpltui	r2,zero,240
  803538:	00803c90 	cmplti	r2,zero,242
  80353c:	00803c30 	cmpltui	r2,zero,240
  803540:	00803c30 	cmpltui	r2,zero,240
  803544:	00803c30 	cmpltui	r2,zero,240
  803548:	00803c30 	cmpltui	r2,zero,240
  80354c:	00803c30 	cmpltui	r2,zero,240
  803550:	00803c30 	cmpltui	r2,zero,240
  803554:	00803c30 	cmpltui	r2,zero,240
  803558:	00803c30 	cmpltui	r2,zero,240
  80355c:	00803dec 	andhi	r2,zero,247
  803560:	00803c30 	cmpltui	r2,zero,240
  803564:	00803c30 	cmpltui	r2,zero,240
  803568:	00803dd4 	movui	r2,247
  80356c:	00803c30 	cmpltui	r2,zero,240
  803570:	00803c30 	cmpltui	r2,zero,240
  803574:	00803c30 	cmpltui	r2,zero,240
  803578:	00803c30 	cmpltui	r2,zero,240
  80357c:	00803c30 	cmpltui	r2,zero,240
  803580:	00803c30 	cmpltui	r2,zero,240
  803584:	00803c30 	cmpltui	r2,zero,240
  803588:	00803dc4 	movi	r2,247
  80358c:	00803da4 	muli	r2,zero,246
  803590:	00803cc8 	cmpgei	r2,zero,243
  803594:	00803cc8 	cmpgei	r2,zero,243
  803598:	00803cc8 	cmpgei	r2,zero,243
  80359c:	00803d90 	cmplti	r2,zero,246
  8035a0:	00803698 	cmpnei	r2,zero,218
  8035a4:	00803c30 	cmpltui	r2,zero,240
  8035a8:	00803c30 	cmpltui	r2,zero,240
  8035ac:	00803d7c 	xorhi	r2,zero,245
  8035b0:	00803c30 	cmpltui	r2,zero,240
  8035b4:	00803d50 	cmplti	r2,zero,245
  8035b8:	00803d48 	cmpgei	r2,zero,245
  8035bc:	00803d24 	muli	r2,zero,244
  8035c0:	00803c30 	cmpltui	r2,zero,240
  8035c4:	00803c30 	cmpltui	r2,zero,240
  8035c8:	00803d18 	cmpnei	r2,zero,244
  8035cc:	00803c30 	cmpltui	r2,zero,240
  8035d0:	00803cf8 	rdprs	r2,zero,243
  8035d4:	00803c30 	cmpltui	r2,zero,240
  8035d8:	00803c30 	cmpltui	r2,zero,240
  8035dc:	00803dec 	andhi	r2,zero,247
  8035e0:	013fff84 	movi	r4,-2
  8035e4:	1104cb1e 	bne	r2,r4,804914 <__ssvfscanf_r+0x165c>
  8035e8:	a021883a 	mov	r16,r20
  8035ec:	e0800117 	ldw	r2,4(fp)
  8035f0:	00839416 	blt	zero,r2,804444 <__ssvfscanf_r+0x118c>
  8035f4:	b009883a 	mov	r4,r22
  8035f8:	e00b883a 	mov	r5,fp
  8035fc:	080cecc0 	call	80cecc <__ssrefill_r>
  803600:	10039026 	beq	r2,zero,804444 <__ssvfscanf_r+0x118c>
  803604:	8007883a 	mov	r3,r16
  803608:	8821883a 	mov	r16,r17
  80360c:	dc40a017 	ldw	r17,640(sp)
  803610:	18039626 	beq	r3,zero,80446c <__ssvfscanf_r+0x11b4>
  803614:	dac09f17 	ldw	r11,636(sp)
  803618:	58000326 	beq	r11,zero,803628 <__ssvfscanf_r+0x370>
  80361c:	e080030b 	ldhu	r2,12(fp)
  803620:	1080100c 	andi	r2,r2,64
  803624:	1003ee26 	beq	r2,zero,8045e0 <__ssvfscanf_r+0x1328>
  803628:	00bfffc4 	movi	r2,-1
  80362c:	dfc0b517 	ldw	ra,724(sp)
  803630:	df00b417 	ldw	fp,720(sp)
  803634:	ddc0b317 	ldw	r23,716(sp)
  803638:	dd80b217 	ldw	r22,712(sp)
  80363c:	dd40b117 	ldw	r21,708(sp)
  803640:	dd00b017 	ldw	r20,704(sp)
  803644:	dcc0af17 	ldw	r19,700(sp)
  803648:	dc80ae17 	ldw	r18,696(sp)
  80364c:	dc40ad17 	ldw	r17,692(sp)
  803650:	dc00ac17 	ldw	r16,688(sp)
  803654:	dec0b604 	addi	sp,sp,728
  803658:	f800283a 	ret
  80365c:	2823883a 	mov	r17,r5
  803660:	e0800117 	ldw	r2,4(fp)
  803664:	0084340e 	bge	zero,r2,804738 <__ssvfscanf_r+0x1480>
  803668:	e0800017 	ldw	r2,0(fp)
  80366c:	88ffffc3 	ldbu	r3,-1(r17)
  803670:	11000003 	ldbu	r4,0(r2)
  803674:	20ff501e 	bne	r4,r3,8033b8 <__alt_data_end+0xff8033b8>
  803678:	e0c00117 	ldw	r3,4(fp)
  80367c:	10800044 	addi	r2,r2,1
  803680:	e0800015 	stw	r2,0(fp)
  803684:	18bfffc4 	addi	r2,r3,-1
  803688:	e0800115 	stw	r2,4(fp)
  80368c:	94800044 	addi	r18,r18,1
  803690:	880d883a 	mov	r6,r17
  803694:	003f4406 	br	8033a8 <__alt_data_end+0xff8033a8>
  803698:	00802074 	movhi	r2,129
  80369c:	10b0af04 	addi	r2,r2,-15684
  8036a0:	2823883a 	mov	r17,r5
  8036a4:	d880a115 	stw	r2,644(sp)
  8036a8:	d8009e15 	stw	zero,632(sp)
  8036ac:	04c000c4 	movi	r19,3
  8036b0:	e0800117 	ldw	r2,4(fp)
  8036b4:	00816c0e 	bge	zero,r2,803c68 <__ssvfscanf_r+0x9b0>
  8036b8:	8080100c 	andi	r2,r16,64
  8036bc:	10007f26 	beq	r2,zero,8038bc <__ssvfscanf_r+0x604>
  8036c0:	00800084 	movi	r2,2
  8036c4:	9882df26 	beq	r19,r2,804244 <__ssvfscanf_r+0xf8c>
  8036c8:	14c1d50e 	bge	r2,r19,803e20 <__ssvfscanf_r+0xb68>
  8036cc:	008000c4 	movi	r2,3
  8036d0:	98821926 	beq	r19,r2,803f38 <__ssvfscanf_r+0xc80>
  8036d4:	00800104 	movi	r2,4
  8036d8:	9881fc1e 	bne	r19,r2,803ecc <__ssvfscanf_r+0xc14>
  8036dc:	b009883a 	mov	r4,r22
  8036e0:	0808ba80 	call	808ba8 <_localeconv_r>
  8036e4:	10800017 	ldw	r2,0(r2)
  8036e8:	a93fffc4 	addi	r4,r21,-1
  8036ec:	d880a315 	stw	r2,652(sp)
  8036f0:	00805704 	movi	r2,348
  8036f4:	1102f82e 	bgeu	r2,r4,8042d8 <__ssvfscanf_r+0x1020>
  8036f8:	ad7fa8c4 	addi	r21,r21,-349
  8036fc:	dd40a215 	stw	r21,648(sp)
  803700:	05405744 	movi	r21,349
  803704:	84c1e014 	ori	r19,r16,1920
  803708:	0021883a 	mov	r16,zero
  80370c:	8005883a 	mov	r2,r16
  803710:	000d883a 	mov	r6,zero
  803714:	0019883a 	mov	r12,zero
  803718:	a821883a 	mov	r16,r21
  80371c:	dc409d15 	stw	r17,628(sp)
  803720:	b007883a 	mov	r3,r22
  803724:	d800a515 	stw	zero,660(sp)
  803728:	d800a415 	stw	zero,656(sp)
  80372c:	d800a015 	stw	zero,640(sp)
  803730:	dd000104 	addi	r20,sp,4
  803734:	02c01384 	movi	r11,78
  803738:	3023883a 	mov	r17,r6
  80373c:	602d883a 	mov	r22,r12
  803740:	102b883a 	mov	r21,r2
  803744:	e1000017 	ldw	r4,0(fp)
  803748:	21400003 	ldbu	r5,0(r4)
  80374c:	28bff544 	addi	r2,r5,-43
  803750:	10803fcc 	andi	r2,r2,255
  803754:	58812436 	bltu	r11,r2,803be8 <__ssvfscanf_r+0x930>
  803758:	100490ba 	slli	r2,r2,2
  80375c:	01802034 	movhi	r6,128
  803760:	318ddc04 	addi	r6,r6,14192
  803764:	1185883a 	add	r2,r2,r6
  803768:	10800017 	ldw	r2,0(r2)
  80376c:	1000683a 	jmp	r2
  803770:	00803bd4 	movui	r2,239
  803774:	00803be8 	cmpgeui	r2,zero,239
  803778:	00803bd4 	movui	r2,239
  80377c:	00803be8 	cmpgeui	r2,zero,239
  803780:	00803be8 	cmpgeui	r2,zero,239
  803784:	00803960 	cmpeqi	r2,zero,229
  803788:	008038fc 	xorhi	r2,zero,227
  80378c:	008038fc 	xorhi	r2,zero,227
  803790:	008038fc 	xorhi	r2,zero,227
  803794:	008038fc 	xorhi	r2,zero,227
  803798:	008038fc 	xorhi	r2,zero,227
  80379c:	008038fc 	xorhi	r2,zero,227
  8037a0:	008038fc 	xorhi	r2,zero,227
  8037a4:	008038fc 	xorhi	r2,zero,227
  8037a8:	008038fc 	xorhi	r2,zero,227
  8037ac:	00803be8 	cmpgeui	r2,zero,239
  8037b0:	00803be8 	cmpgeui	r2,zero,239
  8037b4:	00803be8 	cmpgeui	r2,zero,239
  8037b8:	00803be8 	cmpgeui	r2,zero,239
  8037bc:	00803be8 	cmpgeui	r2,zero,239
  8037c0:	00803be8 	cmpgeui	r2,zero,239
  8037c4:	00803be8 	cmpgeui	r2,zero,239
  8037c8:	00803bc4 	movi	r2,239
  8037cc:	00803be8 	cmpgeui	r2,zero,239
  8037d0:	00803be8 	cmpgeui	r2,zero,239
  8037d4:	00803be8 	cmpgeui	r2,zero,239
  8037d8:	00803b80 	call	803b8 <__alt_mem_sdram_0-0x77fc48>
  8037dc:	00803b64 	muli	r2,zero,237
  8037e0:	00803be8 	cmpgeui	r2,zero,239
  8037e4:	00803be8 	cmpgeui	r2,zero,239
  8037e8:	008039fc 	xorhi	r2,zero,231
  8037ec:	00803be8 	cmpgeui	r2,zero,239
  8037f0:	00803be8 	cmpgeui	r2,zero,239
  8037f4:	00803be8 	cmpgeui	r2,zero,239
  8037f8:	00803be8 	cmpgeui	r2,zero,239
  8037fc:	008039c4 	movi	r2,231
  803800:	00803be8 	cmpgeui	r2,zero,239
  803804:	00803be8 	cmpgeui	r2,zero,239
  803808:	00803be8 	cmpgeui	r2,zero,239
  80380c:	00803be8 	cmpgeui	r2,zero,239
  803810:	00803be8 	cmpgeui	r2,zero,239
  803814:	008039a8 	cmpgeui	r2,zero,230
  803818:	00803be8 	cmpgeui	r2,zero,239
  80381c:	00803be8 	cmpgeui	r2,zero,239
  803820:	00803be8 	cmpgeui	r2,zero,239
  803824:	00803be8 	cmpgeui	r2,zero,239
  803828:	0080398c 	andi	r2,zero,230
  80382c:	00803be8 	cmpgeui	r2,zero,239
  803830:	00803be8 	cmpgeui	r2,zero,239
  803834:	00803be8 	cmpgeui	r2,zero,239
  803838:	00803be8 	cmpgeui	r2,zero,239
  80383c:	00803be8 	cmpgeui	r2,zero,239
  803840:	00803be8 	cmpgeui	r2,zero,239
  803844:	00803be8 	cmpgeui	r2,zero,239
  803848:	00803bc4 	movi	r2,239
  80384c:	00803be8 	cmpgeui	r2,zero,239
  803850:	00803be8 	cmpgeui	r2,zero,239
  803854:	00803be8 	cmpgeui	r2,zero,239
  803858:	00803b80 	call	803b8 <__alt_mem_sdram_0-0x77fc48>
  80385c:	00803b64 	muli	r2,zero,237
  803860:	00803be8 	cmpgeui	r2,zero,239
  803864:	00803be8 	cmpgeui	r2,zero,239
  803868:	008039fc 	xorhi	r2,zero,231
  80386c:	00803be8 	cmpgeui	r2,zero,239
  803870:	00803be8 	cmpgeui	r2,zero,239
  803874:	00803be8 	cmpgeui	r2,zero,239
  803878:	00803be8 	cmpgeui	r2,zero,239
  80387c:	008039c4 	movi	r2,231
  803880:	00803be8 	cmpgeui	r2,zero,239
  803884:	00803be8 	cmpgeui	r2,zero,239
  803888:	00803be8 	cmpgeui	r2,zero,239
  80388c:	00803be8 	cmpgeui	r2,zero,239
  803890:	00803be8 	cmpgeui	r2,zero,239
  803894:	008039a8 	cmpgeui	r2,zero,230
  803898:	00803be8 	cmpgeui	r2,zero,239
  80389c:	00803be8 	cmpgeui	r2,zero,239
  8038a0:	00803be8 	cmpgeui	r2,zero,239
  8038a4:	00803be8 	cmpgeui	r2,zero,239
  8038a8:	0080398c 	andi	r2,zero,230
  8038ac:	b009883a 	mov	r4,r22
  8038b0:	e00b883a 	mov	r5,fp
  8038b4:	080cecc0 	call	80cecc <__ssrefill_r>
  8038b8:	103f561e 	bne	r2,zero,803614 <__alt_data_end+0xff803614>
  8038bc:	b9400017 	ldw	r5,0(r23)
  8038c0:	e1000017 	ldw	r4,0(fp)
  8038c4:	00000206 	br	8038d0 <__ssvfscanf_r+0x618>
  8038c8:	21000044 	addi	r4,r4,1
  8038cc:	e1000015 	stw	r4,0(fp)
  8038d0:	20800003 	ldbu	r2,0(r4)
  8038d4:	2885883a 	add	r2,r5,r2
  8038d8:	10800043 	ldbu	r2,1(r2)
  8038dc:	1080020c 	andi	r2,r2,8
  8038e0:	103f7726 	beq	r2,zero,8036c0 <__alt_data_end+0xff8036c0>
  8038e4:	e0800117 	ldw	r2,4(fp)
  8038e8:	94800044 	addi	r18,r18,1
  8038ec:	10bfffc4 	addi	r2,r2,-1
  8038f0:	e0800115 	stw	r2,4(fp)
  8038f4:	00bff416 	blt	zero,r2,8038c8 <__alt_data_end+0xff8038c8>
  8038f8:	003fec06 	br	8038ac <__alt_data_end+0xff8038ac>
  8038fc:	88803fcc 	andi	r2,r17,255
  803900:	1080201c 	xori	r2,r2,128
  803904:	10bfe004 	addi	r2,r2,-128
  803908:	b085883a 	add	r2,r22,r2
  80390c:	10000d1e 	bne	r2,zero,803944 <__ssvfscanf_r+0x68c>
  803910:	00bf9fc4 	movi	r2,-385
  803914:	98a6703a 	and	r19,r19,r2
  803918:	a1400005 	stb	r5,0(r20)
  80391c:	a5000044 	addi	r20,r20,1
  803920:	e0800117 	ldw	r2,4(fp)
  803924:	843fffc4 	addi	r16,r16,-1
  803928:	94800044 	addi	r18,r18,1
  80392c:	10bfffc4 	addi	r2,r2,-1
  803930:	e0800115 	stw	r2,4(fp)
  803934:	0081300e 	bge	zero,r2,803df8 <__ssvfscanf_r+0xb40>
  803938:	21000044 	addi	r4,r4,1
  80393c:	e1000015 	stw	r4,0(fp)
  803940:	803f801e 	bne	r16,zero,803744 <__alt_data_end+0xff803744>
  803944:	880d883a 	mov	r6,r17
  803948:	b019883a 	mov	r12,r22
  80394c:	a821883a 	mov	r16,r21
  803950:	dc409d17 	ldw	r17,628(sp)
  803954:	182d883a 	mov	r22,r3
  803958:	a8003526 	beq	r21,zero,803a30 <__ssvfscanf_r+0x778>
  80395c:	00025b06 	br	8042cc <__ssvfscanf_r+0x1014>
  803960:	9880400c 	andi	r2,r19,256
  803964:	103fe526 	beq	r2,zero,8038fc <__alt_data_end+0xff8038fc>
  803968:	d980a217 	ldw	r6,648(sp)
  80396c:	00bfdfc4 	movi	r2,-129
  803970:	98a6703a 	and	r19,r19,r2
  803974:	ad400044 	addi	r21,r21,1
  803978:	303fe926 	beq	r6,zero,803920 <__alt_data_end+0xff803920>
  80397c:	31bfffc4 	addi	r6,r6,-1
  803980:	d980a215 	stw	r6,648(sp)
  803984:	84000044 	addi	r16,r16,1
  803988:	003fe506 	br	803920 <__alt_data_end+0xff803920>
  80398c:	88803fcc 	andi	r2,r17,255
  803990:	1080201c 	xori	r2,r2,128
  803994:	10bfe004 	addi	r2,r2,-128
  803998:	018001c4 	movi	r6,7
  80399c:	11bfe91e 	bne	r2,r6,803944 <__alt_data_end+0xff803944>
  8039a0:	04400204 	movi	r17,8
  8039a4:	003fdc06 	br	803918 <__alt_data_end+0xff803918>
  8039a8:	89c03fcc 	andi	r7,r17,255
  8039ac:	39c0201c 	xori	r7,r7,128
  8039b0:	39ffe004 	addi	r7,r7,-128
  8039b4:	00800184 	movi	r2,6
  8039b8:	38bfe21e 	bne	r7,r2,803944 <__alt_data_end+0xff803944>
  8039bc:	044001c4 	movi	r17,7
  8039c0:	003fd506 	br	803918 <__alt_data_end+0xff803918>
  8039c4:	b0013d1e 	bne	r22,zero,803ebc <__ssvfscanf_r+0xc04>
  8039c8:	a800031e 	bne	r21,zero,8039d8 <__ssvfscanf_r+0x720>
  8039cc:	99c1c00c 	andi	r7,r19,1792
  8039d0:	0081c004 	movi	r2,1792
  8039d4:	38836726 	beq	r7,r2,804774 <__ssvfscanf_r+0x14bc>
  8039d8:	88803fcc 	andi	r2,r17,255
  8039dc:	1080201c 	xori	r2,r2,128
  8039e0:	10bfe004 	addi	r2,r2,-128
  8039e4:	01c00044 	movi	r7,1
  8039e8:	11c00226 	beq	r2,r7,8039f4 <__ssvfscanf_r+0x73c>
  8039ec:	01c00104 	movi	r7,4
  8039f0:	11ffd41e 	bne	r2,r7,803944 <__alt_data_end+0xff803944>
  8039f4:	8c400044 	addi	r17,r17,1
  8039f8:	003fc706 	br	803918 <__alt_data_end+0xff803918>
  8039fc:	88803fcc 	andi	r2,r17,255
  803a00:	1080201c 	xori	r2,r2,128
  803a04:	10bfe004 	addi	r2,r2,-128
  803a08:	1001271e 	bne	r2,zero,803ea8 <__ssvfscanf_r+0xbf0>
  803a0c:	a8022a1e 	bne	r21,zero,8042b8 <__ssvfscanf_r+0x1000>
  803a10:	99c1c00c 	andi	r7,r19,1792
  803a14:	0081c004 	movi	r2,1792
  803a18:	38835226 	beq	r7,r2,804764 <__ssvfscanf_r+0x14ac>
  803a1c:	880d883a 	mov	r6,r17
  803a20:	dc409d17 	ldw	r17,628(sp)
  803a24:	b019883a 	mov	r12,r22
  803a28:	a821883a 	mov	r16,r21
  803a2c:	182d883a 	mov	r22,r3
  803a30:	633fffc4 	addi	r12,r12,-1
  803a34:	00800044 	movi	r2,1
  803a38:	1303c52e 	bgeu	r2,r12,804950 <__ssvfscanf_r+0x1698>
  803a3c:	30803fcc 	andi	r2,r6,255
  803a40:	1080201c 	xori	r2,r2,128
  803a44:	10bfe004 	addi	r2,r2,-128
  803a48:	10ffffc4 	addi	r3,r2,-1
  803a4c:	01000184 	movi	r4,6
  803a50:	20c01236 	bltu	r4,r3,803a9c <__ssvfscanf_r+0x7e4>
  803a54:	00c00084 	movi	r3,2
  803a58:	1883c80e 	bge	r3,r2,80497c <__ssvfscanf_r+0x16c4>
  803a5c:	00c000c4 	movi	r3,3
  803a60:	302b883a 	mov	r21,r6
  803a64:	10c00d26 	beq	r2,r3,803a9c <__ssvfscanf_r+0x7e4>
  803a68:	9525c83a 	sub	r18,r18,r20
  803a6c:	a53fffc4 	addi	r20,r20,-1
  803a70:	a1400007 	ldb	r5,0(r20)
  803a74:	e00d883a 	mov	r6,fp
  803a78:	b009883a 	mov	r4,r22
  803a7c:	080cdd40 	call	80cdd4 <_sungetc_r>
  803a80:	a8bfffc4 	addi	r2,r21,-1
  803a84:	10c03fcc 	andi	r3,r2,255
  803a88:	018000c4 	movi	r6,3
  803a8c:	a493883a 	add	r9,r20,r18
  803a90:	102b883a 	mov	r21,r2
  803a94:	30fff536 	bltu	r6,r3,803a6c <__alt_data_end+0xff803a6c>
  803a98:	4825883a 	mov	r18,r9
  803a9c:	9880400c 	andi	r2,r19,256
  803aa0:	10001626 	beq	r2,zero,803afc <__ssvfscanf_r+0x844>
  803aa4:	9881000c 	andi	r2,r19,1024
  803aa8:	10039e1e 	bne	r2,zero,804924 <__ssvfscanf_r+0x166c>
  803aac:	a17fffc7 	ldb	r5,-1(r20)
  803ab0:	00801944 	movi	r2,101
  803ab4:	a0ffffc4 	addi	r3,r20,-1
  803ab8:	957fffc4 	addi	r21,r18,-1
  803abc:	28800826 	beq	r5,r2,803ae0 <__ssvfscanf_r+0x828>
  803ac0:	00801144 	movi	r2,69
  803ac4:	28800626 	beq	r5,r2,803ae0 <__ssvfscanf_r+0x828>
  803ac8:	b009883a 	mov	r4,r22
  803acc:	e00d883a 	mov	r6,fp
  803ad0:	080cdd40 	call	80cdd4 <_sungetc_r>
  803ad4:	a17fff87 	ldb	r5,-2(r20)
  803ad8:	a0ffff84 	addi	r3,r20,-2
  803adc:	957fff84 	addi	r21,r18,-2
  803ae0:	b009883a 	mov	r4,r22
  803ae4:	e00d883a 	mov	r6,fp
  803ae8:	d8c0ab15 	stw	r3,684(sp)
  803aec:	080cdd40 	call	80cdd4 <_sungetc_r>
  803af0:	d8c0ab17 	ldw	r3,684(sp)
  803af4:	a825883a 	mov	r18,r21
  803af8:	1829883a 	mov	r20,r3
  803afc:	9880040c 	andi	r2,r19,16
  803b00:	103e281e 	bne	r2,zero,8033a4 <__alt_data_end+0xff8033a4>
  803b04:	a0000005 	stb	zero,0(r20)
  803b08:	98c1800c 	andi	r3,r19,1536
  803b0c:	00810004 	movi	r2,1024
  803b10:	18831c26 	beq	r3,r2,804784 <__ssvfscanf_r+0x14cc>
  803b14:	d8c0a417 	ldw	r3,656(sp)
  803b18:	1802cf1e 	bne	r3,zero,804658 <__ssvfscanf_r+0x13a0>
  803b1c:	b009883a 	mov	r4,r22
  803b20:	d9400104 	addi	r5,sp,4
  803b24:	000d883a 	mov	r6,zero
  803b28:	080abb00 	call	80abb0 <_strtod_r>
  803b2c:	1029883a 	mov	r20,r2
  803b30:	9880004c 	andi	r2,r19,1
  803b34:	10029926 	beq	r2,zero,80459c <__ssvfscanf_r+0x12e4>
  803b38:	dac09c17 	ldw	r11,624(sp)
  803b3c:	58800017 	ldw	r2,0(r11)
  803b40:	5ac00104 	addi	r11,r11,4
  803b44:	dac09c15 	stw	r11,624(sp)
  803b48:	15000015 	stw	r20,0(r2)
  803b4c:	10c00115 	stw	r3,4(r2)
  803b50:	dac09f17 	ldw	r11,636(sp)
  803b54:	880d883a 	mov	r6,r17
  803b58:	5ac00044 	addi	r11,r11,1
  803b5c:	dac09f15 	stw	r11,636(sp)
  803b60:	003e1106 	br	8033a8 <__alt_data_end+0xff8033a8>
  803b64:	89c03fcc 	andi	r7,r17,255
  803b68:	39c0201c 	xori	r7,r7,128
  803b6c:	39ffe004 	addi	r7,r7,-128
  803b70:	00800084 	movi	r2,2
  803b74:	38bf731e 	bne	r7,r2,803944 <__alt_data_end+0xff803944>
  803b78:	044000c4 	movi	r17,3
  803b7c:	003f6606 	br	803918 <__alt_data_end+0xff803918>
  803b80:	9881400c 	andi	r2,r19,1280
  803b84:	01810004 	movi	r6,1024
  803b88:	11800326 	beq	r2,r6,803b98 <__ssvfscanf_r+0x8e0>
  803b8c:	9984703a 	and	r2,r19,r6
  803b90:	103f6c26 	beq	r2,zero,803944 <__alt_data_end+0xff803944>
  803b94:	a83fa126 	beq	r21,zero,803a1c <__alt_data_end+0xff803a1c>
  803b98:	9880800c 	andi	r2,r19,512
  803b9c:	1000041e 	bne	r2,zero,803bb0 <__ssvfscanf_r+0x8f8>
  803ba0:	d880a017 	ldw	r2,640(sp)
  803ba4:	dd00a515 	stw	r20,660(sp)
  803ba8:	a8abc83a 	sub	r21,r21,r2
  803bac:	dd40a415 	stw	r21,656(sp)
  803bb0:	01be1fc4 	movi	r6,-1921
  803bb4:	99a6703a 	and	r19,r19,r6
  803bb8:	9cc06014 	ori	r19,r19,384
  803bbc:	002b883a 	mov	r21,zero
  803bc0:	003f5506 	br	803918 <__alt_data_end+0xff803918>
  803bc4:	00800044 	movi	r2,1
  803bc8:	b0bf5e1e 	bne	r22,r2,803944 <__alt_data_end+0xff803944>
  803bcc:	05800084 	movi	r22,2
  803bd0:	003f5106 	br	803918 <__alt_data_end+0xff803918>
  803bd4:	9880200c 	andi	r2,r19,128
  803bd8:	103f5a26 	beq	r2,zero,803944 <__alt_data_end+0xff803944>
  803bdc:	00bfdfc4 	movi	r2,-129
  803be0:	98a6703a 	and	r19,r19,r2
  803be4:	003f4c06 	br	803918 <__alt_data_end+0xff803918>
  803be8:	d980a317 	ldw	r6,652(sp)
  803bec:	29c03fcc 	andi	r7,r5,255
  803bf0:	30800003 	ldbu	r2,0(r6)
  803bf4:	38bf531e 	bne	r7,r2,803944 <__alt_data_end+0xff803944>
  803bf8:	9880800c 	andi	r2,r19,512
  803bfc:	103f5126 	beq	r2,zero,803944 <__alt_data_end+0xff803944>
  803c00:	00bf5fc4 	movi	r2,-641
  803c04:	98a6703a 	and	r19,r19,r2
  803c08:	dd40a015 	stw	r21,640(sp)
  803c0c:	003f4206 	br	803918 <__alt_data_end+0xff803918>
  803c10:	88800043 	ldbu	r2,1(r17)
  803c14:	ad4002a4 	muli	r21,r21,10
  803c18:	2823883a 	mov	r17,r5
  803c1c:	89400044 	addi	r5,r17,1
  803c20:	a9ab883a 	add	r21,r21,r6
  803c24:	11803fcc 	andi	r6,r2,255
  803c28:	ad7ff404 	addi	r21,r21,-48
  803c2c:	39bded2e 	bgeu	r7,r6,8033e4 <__alt_data_end+0xff8033e4>
  803c30:	2189883a 	add	r4,r4,r6
  803c34:	20800043 	ldbu	r2,1(r4)
  803c38:	01000044 	movi	r4,1
  803c3c:	2823883a 	mov	r17,r5
  803c40:	108000cc 	andi	r2,r2,3
  803c44:	1102d426 	beq	r2,r4,804798 <__ssvfscanf_r+0x14e0>
  803c48:	00c02074 	movhi	r3,129
  803c4c:	e0800117 	ldw	r2,4(fp)
  803c50:	18f0af04 	addi	r3,r3,-15684
  803c54:	02c00284 	movi	r11,10
  803c58:	d8c0a115 	stw	r3,644(sp)
  803c5c:	dac09e15 	stw	r11,632(sp)
  803c60:	04c000c4 	movi	r19,3
  803c64:	00be9416 	blt	zero,r2,8036b8 <__alt_data_end+0xff8036b8>
  803c68:	b009883a 	mov	r4,r22
  803c6c:	e00b883a 	mov	r5,fp
  803c70:	080cecc0 	call	80cecc <__ssrefill_r>
  803c74:	103e9026 	beq	r2,zero,8036b8 <__alt_data_end+0xff8036b8>
  803c78:	003e6606 	br	803614 <__alt_data_end+0xff803614>
  803c7c:	88800043 	ldbu	r2,1(r17)
  803c80:	84000414 	ori	r16,r16,16
  803c84:	2823883a 	mov	r17,r5
  803c88:	11803fcc 	andi	r6,r2,255
  803c8c:	003dd306 	br	8033dc <__alt_data_end+0xff8033dc>
  803c90:	2823883a 	mov	r17,r5
  803c94:	84000054 	ori	r16,r16,1
  803c98:	00802074 	movhi	r2,129
  803c9c:	10b20504 	addi	r2,r2,-14316
  803ca0:	02c00204 	movi	r11,8
  803ca4:	d880a115 	stw	r2,644(sp)
  803ca8:	dac09e15 	stw	r11,632(sp)
  803cac:	04c000c4 	movi	r19,3
  803cb0:	003e7f06 	br	8036b0 <__alt_data_end+0xff8036b0>
  803cb4:	88800043 	ldbu	r2,1(r17)
  803cb8:	84000094 	ori	r16,r16,2
  803cbc:	2823883a 	mov	r17,r5
  803cc0:	11803fcc 	andi	r6,r2,255
  803cc4:	003dc506 	br	8033dc <__alt_data_end+0xff8033dc>
  803cc8:	2823883a 	mov	r17,r5
  803ccc:	04c00104 	movi	r19,4
  803cd0:	003e7706 	br	8036b0 <__alt_data_end+0xff8036b0>
  803cd4:	2823883a 	mov	r17,r5
  803cd8:	84000054 	ori	r16,r16,1
  803cdc:	00802074 	movhi	r2,129
  803ce0:	10b0af04 	addi	r2,r2,-15684
  803ce4:	02c00284 	movi	r11,10
  803ce8:	d880a115 	stw	r2,644(sp)
  803cec:	dac09e15 	stw	r11,632(sp)
  803cf0:	04c000c4 	movi	r19,3
  803cf4:	003e6e06 	br	8036b0 <__alt_data_end+0xff8036b0>
  803cf8:	00802074 	movhi	r2,129
  803cfc:	10b20504 	addi	r2,r2,-14316
  803d00:	02c00284 	movi	r11,10
  803d04:	2823883a 	mov	r17,r5
  803d08:	d880a115 	stw	r2,644(sp)
  803d0c:	dac09e15 	stw	r11,632(sp)
  803d10:	04c000c4 	movi	r19,3
  803d14:	003e6606 	br	8036b0 <__alt_data_end+0xff8036b0>
  803d18:	2823883a 	mov	r17,r5
  803d1c:	04c00084 	movi	r19,2
  803d20:	003e6306 	br	8036b0 <__alt_data_end+0xff8036b0>
  803d24:	2823883a 	mov	r17,r5
  803d28:	84008814 	ori	r16,r16,544
  803d2c:	00802074 	movhi	r2,129
  803d30:	10b20504 	addi	r2,r2,-14316
  803d34:	02c00404 	movi	r11,16
  803d38:	d880a115 	stw	r2,644(sp)
  803d3c:	dac09e15 	stw	r11,632(sp)
  803d40:	04c000c4 	movi	r19,3
  803d44:	003e5a06 	br	8036b0 <__alt_data_end+0xff8036b0>
  803d48:	2823883a 	mov	r17,r5
  803d4c:	003fd206 	br	803c98 <__alt_data_end+0xff803c98>
  803d50:	8080040c 	andi	r2,r16,16
  803d54:	2823883a 	mov	r17,r5
  803d58:	103d921e 	bne	r2,zero,8033a4 <__alt_data_end+0xff8033a4>
  803d5c:	8080010c 	andi	r2,r16,4
  803d60:	10029426 	beq	r2,zero,8047b4 <__ssvfscanf_r+0x14fc>
  803d64:	dac09c17 	ldw	r11,624(sp)
  803d68:	58800017 	ldw	r2,0(r11)
  803d6c:	5ac00104 	addi	r11,r11,4
  803d70:	dac09c15 	stw	r11,624(sp)
  803d74:	1480000d 	sth	r18,0(r2)
  803d78:	003d8a06 	br	8033a4 <__alt_data_end+0xff8033a4>
  803d7c:	89800043 	ldbu	r6,1(r17)
  803d80:	32828726 	beq	r6,r10,8047a0 <__ssvfscanf_r+0x14e8>
  803d84:	84000054 	ori	r16,r16,1
  803d88:	2823883a 	mov	r17,r5
  803d8c:	003d9306 	br	8033dc <__alt_data_end+0xff8033dc>
  803d90:	88800043 	ldbu	r2,1(r17)
  803d94:	84000114 	ori	r16,r16,4
  803d98:	2823883a 	mov	r17,r5
  803d9c:	11803fcc 	andi	r6,r2,255
  803da0:	003d8e06 	br	8033dc <__alt_data_end+0xff8033dc>
  803da4:	01002074 	movhi	r4,129
  803da8:	2130af04 	addi	r4,r4,-15684
  803dac:	02c00284 	movi	r11,10
  803db0:	2823883a 	mov	r17,r5
  803db4:	d900a115 	stw	r4,644(sp)
  803db8:	dac09e15 	stw	r11,632(sp)
  803dbc:	04c000c4 	movi	r19,3
  803dc0:	003e3b06 	br	8036b0 <__alt_data_end+0xff8036b0>
  803dc4:	2823883a 	mov	r17,r5
  803dc8:	84001014 	ori	r16,r16,64
  803dcc:	0027883a 	mov	r19,zero
  803dd0:	003e3706 	br	8036b0 <__alt_data_end+0xff8036b0>
  803dd4:	d9005884 	addi	r4,sp,354
  803dd8:	080a91c0 	call	80a91c <__sccl>
  803ddc:	1023883a 	mov	r17,r2
  803de0:	84001014 	ori	r16,r16,64
  803de4:	04c00044 	movi	r19,1
  803de8:	003e3106 	br	8036b0 <__alt_data_end+0xff8036b0>
  803dec:	2823883a 	mov	r17,r5
  803df0:	84008014 	ori	r16,r16,512
  803df4:	003fcd06 	br	803d2c <__alt_data_end+0xff803d2c>
  803df8:	1809883a 	mov	r4,r3
  803dfc:	e00b883a 	mov	r5,fp
  803e00:	d8c0ab15 	stw	r3,684(sp)
  803e04:	dac0a615 	stw	r11,664(sp)
  803e08:	080cecc0 	call	80cecc <__ssrefill_r>
  803e0c:	d8c0ab17 	ldw	r3,684(sp)
  803e10:	dac0a617 	ldw	r11,664(sp)
  803e14:	103ecb1e 	bne	r2,zero,803944 <__alt_data_end+0xff803944>
  803e18:	803e4a1e 	bne	r16,zero,803744 <__alt_data_end+0xff803744>
  803e1c:	003ec906 	br	803944 <__alt_data_end+0xff803944>
  803e20:	00800044 	movi	r2,1
  803e24:	9880291e 	bne	r19,r2,803ecc <__ssvfscanf_r+0xc14>
  803e28:	a800011e 	bne	r21,zero,803e30 <__ssvfscanf_r+0xb78>
  803e2c:	057fffc4 	movi	r21,-1
  803e30:	8400040c 	andi	r16,r16,16
  803e34:	80012c26 	beq	r16,zero,8042e8 <__ssvfscanf_r+0x1030>
  803e38:	e1000017 	ldw	r4,0(fp)
  803e3c:	0021883a 	mov	r16,zero
  803e40:	dd005884 	addi	r20,sp,354
  803e44:	20800003 	ldbu	r2,0(r4)
  803e48:	a085883a 	add	r2,r20,r2
  803e4c:	10800007 	ldb	r2,0(r2)
  803e50:	10001126 	beq	r2,zero,803e98 <__ssvfscanf_r+0xbe0>
  803e54:	e0800117 	ldw	r2,4(fp)
  803e58:	21000044 	addi	r4,r4,1
  803e5c:	84000044 	addi	r16,r16,1
  803e60:	10bfffc4 	addi	r2,r2,-1
  803e64:	e0800115 	stw	r2,4(fp)
  803e68:	e1000015 	stw	r4,0(fp)
  803e6c:	ac000b26 	beq	r21,r16,803e9c <__ssvfscanf_r+0xbe4>
  803e70:	00bff416 	blt	zero,r2,803e44 <__alt_data_end+0xff803e44>
  803e74:	b009883a 	mov	r4,r22
  803e78:	e00b883a 	mov	r5,fp
  803e7c:	080cecc0 	call	80cecc <__ssrefill_r>
  803e80:	1000061e 	bne	r2,zero,803e9c <__ssvfscanf_r+0xbe4>
  803e84:	e1000017 	ldw	r4,0(fp)
  803e88:	20800003 	ldbu	r2,0(r4)
  803e8c:	a085883a 	add	r2,r20,r2
  803e90:	10800007 	ldb	r2,0(r2)
  803e94:	103fef1e 	bne	r2,zero,803e54 <__alt_data_end+0xff803e54>
  803e98:	803d4726 	beq	r16,zero,8033b8 <__alt_data_end+0xff8033b8>
  803e9c:	9425883a 	add	r18,r18,r16
  803ea0:	880d883a 	mov	r6,r17
  803ea4:	003d4006 	br	8033a8 <__alt_data_end+0xff8033a8>
  803ea8:	01c000c4 	movi	r7,3
  803eac:	11fed126 	beq	r2,r7,8039f4 <__alt_data_end+0xff8039f4>
  803eb0:	01c00144 	movi	r7,5
  803eb4:	11fecf26 	beq	r2,r7,8039f4 <__alt_data_end+0xff8039f4>
  803eb8:	003ea206 	br	803944 <__alt_data_end+0xff803944>
  803ebc:	00800084 	movi	r2,2
  803ec0:	b0bec51e 	bne	r22,r2,8039d8 <__alt_data_end+0xff8039d8>
  803ec4:	058000c4 	movi	r22,3
  803ec8:	003e9306 	br	803918 <__alt_data_end+0xff803918>
  803ecc:	a800011e 	bne	r21,zero,803ed4 <__ssvfscanf_r+0xc1c>
  803ed0:	05400044 	movi	r21,1
  803ed4:	8080004c 	andi	r2,r16,1
  803ed8:	10017d1e 	bne	r2,zero,8044d0 <__ssvfscanf_r+0x1218>
  803edc:	8400040c 	andi	r16,r16,16
  803ee0:	80020226 	beq	r16,zero,8046ec <__ssvfscanf_r+0x1434>
  803ee4:	0021883a 	mov	r16,zero
  803ee8:	00000906 	br	803f10 <__ssvfscanf_r+0xc58>
  803eec:	e0c00017 	ldw	r3,0(fp)
  803ef0:	b009883a 	mov	r4,r22
  803ef4:	e00b883a 	mov	r5,fp
  803ef8:	1887883a 	add	r3,r3,r2
  803efc:	e0c00015 	stw	r3,0(fp)
  803f00:	80a1883a 	add	r16,r16,r2
  803f04:	a8abc83a 	sub	r21,r21,r2
  803f08:	080cecc0 	call	80cecc <__ssrefill_r>
  803f0c:	1001f41e 	bne	r2,zero,8046e0 <__ssvfscanf_r+0x1428>
  803f10:	e0800117 	ldw	r2,4(fp)
  803f14:	157ff516 	blt	r2,r21,803eec <__alt_data_end+0xff803eec>
  803f18:	e1000017 	ldw	r4,0(fp)
  803f1c:	1545c83a 	sub	r2,r2,r21
  803f20:	ac21883a 	add	r16,r21,r16
  803f24:	2547883a 	add	r3,r4,r21
  803f28:	e0800115 	stw	r2,4(fp)
  803f2c:	e0c00015 	stw	r3,0(fp)
  803f30:	9425883a 	add	r18,r18,r16
  803f34:	003fda06 	br	803ea0 <__alt_data_end+0xff803ea0>
  803f38:	a8bfffc4 	addi	r2,r21,-1
  803f3c:	01005704 	movi	r4,348
  803f40:	2080e72e 	bgeu	r4,r2,8042e0 <__ssvfscanf_r+0x1028>
  803f44:	a9ffa8c4 	addi	r7,r21,-349
  803f48:	05405744 	movi	r21,349
  803f4c:	85036014 	ori	r20,r16,3456
  803f50:	0021883a 	mov	r16,zero
  803f54:	8813883a 	mov	r9,r17
  803f58:	8023883a 	mov	r17,r16
  803f5c:	dc009e17 	ldw	r16,632(sp)
  803f60:	dcc00104 	addi	r19,sp,4
  803f64:	02001344 	movi	r8,77
  803f68:	02808004 	movi	r10,512
  803f6c:	01bf7fc4 	movi	r6,-513
  803f70:	00ffdfc4 	movi	r3,-129
  803f74:	e1000017 	ldw	r4,0(fp)
  803f78:	21400003 	ldbu	r5,0(r4)
  803f7c:	28bff544 	addi	r2,r5,-43
  803f80:	10803fcc 	andi	r2,r2,255
  803f84:	40806336 	bltu	r8,r2,804114 <__ssvfscanf_r+0xe5c>
  803f88:	100490ba 	slli	r2,r2,2
  803f8c:	02c02034 	movhi	r11,128
  803f90:	5acfe804 	addi	r11,r11,16288
  803f94:	12c5883a 	add	r2,r2,r11
  803f98:	10800017 	ldw	r2,0(r2)
  803f9c:	1000683a 	jmp	r2
  803fa0:	0080416c 	andhi	r2,zero,261
  803fa4:	00804114 	movui	r2,260
  803fa8:	0080416c 	andhi	r2,zero,261
  803fac:	00804114 	movui	r2,260
  803fb0:	00804114 	movui	r2,260
  803fb4:	0080419c 	xori	r2,zero,262
  803fb8:	0080417c 	xorhi	r2,zero,261
  803fbc:	0080417c 	xorhi	r2,zero,261
  803fc0:	0080417c 	xorhi	r2,zero,261
  803fc4:	0080417c 	xorhi	r2,zero,261
  803fc8:	0080417c 	xorhi	r2,zero,261
  803fcc:	0080417c 	xorhi	r2,zero,261
  803fd0:	0080417c 	xorhi	r2,zero,261
  803fd4:	00804224 	muli	r2,zero,264
  803fd8:	00804224 	muli	r2,zero,264
  803fdc:	00804114 	movui	r2,260
  803fe0:	00804114 	movui	r2,260
  803fe4:	00804114 	movui	r2,260
  803fe8:	00804114 	movui	r2,260
  803fec:	00804114 	movui	r2,260
  803ff0:	00804114 	movui	r2,260
  803ff4:	00804114 	movui	r2,260
  803ff8:	00804158 	cmpnei	r2,zero,261
  803ffc:	00804158 	cmpnei	r2,zero,261
  804000:	00804158 	cmpnei	r2,zero,261
  804004:	00804158 	cmpnei	r2,zero,261
  804008:	00804158 	cmpnei	r2,zero,261
  80400c:	00804158 	cmpnei	r2,zero,261
  804010:	00804114 	movui	r2,260
  804014:	00804114 	movui	r2,260
  804018:	00804114 	movui	r2,260
  80401c:	00804114 	movui	r2,260
  804020:	00804114 	movui	r2,260
  804024:	00804114 	movui	r2,260
  804028:	00804114 	movui	r2,260
  80402c:	00804114 	movui	r2,260
  804030:	00804114 	movui	r2,260
  804034:	00804114 	movui	r2,260
  804038:	00804114 	movui	r2,260
  80403c:	00804114 	movui	r2,260
  804040:	00804114 	movui	r2,260
  804044:	00804114 	movui	r2,260
  804048:	00804114 	movui	r2,260
  80404c:	00804114 	movui	r2,260
  804050:	00804114 	movui	r2,260
  804054:	008040d8 	cmpnei	r2,zero,259
  804058:	00804114 	movui	r2,260
  80405c:	00804114 	movui	r2,260
  804060:	00804114 	movui	r2,260
  804064:	00804114 	movui	r2,260
  804068:	00804114 	movui	r2,260
  80406c:	00804114 	movui	r2,260
  804070:	00804114 	movui	r2,260
  804074:	00804114 	movui	r2,260
  804078:	00804158 	cmpnei	r2,zero,261
  80407c:	00804158 	cmpnei	r2,zero,261
  804080:	00804158 	cmpnei	r2,zero,261
  804084:	00804158 	cmpnei	r2,zero,261
  804088:	00804158 	cmpnei	r2,zero,261
  80408c:	00804158 	cmpnei	r2,zero,261
  804090:	00804114 	movui	r2,260
  804094:	00804114 	movui	r2,260
  804098:	00804114 	movui	r2,260
  80409c:	00804114 	movui	r2,260
  8040a0:	00804114 	movui	r2,260
  8040a4:	00804114 	movui	r2,260
  8040a8:	00804114 	movui	r2,260
  8040ac:	00804114 	movui	r2,260
  8040b0:	00804114 	movui	r2,260
  8040b4:	00804114 	movui	r2,260
  8040b8:	00804114 	movui	r2,260
  8040bc:	00804114 	movui	r2,260
  8040c0:	00804114 	movui	r2,260
  8040c4:	00804114 	movui	r2,260
  8040c8:	00804114 	movui	r2,260
  8040cc:	00804114 	movui	r2,260
  8040d0:	00804114 	movui	r2,260
  8040d4:	008040d8 	cmpnei	r2,zero,259
  8040d8:	a081800c 	andi	r2,r20,1536
  8040dc:	12800d1e 	bne	r2,r10,804114 <__ssvfscanf_r+0xe5c>
  8040e0:	a1a8703a 	and	r20,r20,r6
  8040e4:	a5014014 	ori	r20,r20,1280
  8040e8:	04000404 	movi	r16,16
  8040ec:	e0800117 	ldw	r2,4(fp)
  8040f0:	99400005 	stb	r5,0(r19)
  8040f4:	9cc00044 	addi	r19,r19,1
  8040f8:	10bfffc4 	addi	r2,r2,-1
  8040fc:	e0800115 	stw	r2,4(fp)
  804100:	0080370e 	bge	zero,r2,8041e0 <__ssvfscanf_r+0xf28>
  804104:	21000044 	addi	r4,r4,1
  804108:	e1000015 	stw	r4,0(fp)
  80410c:	ad7fffc4 	addi	r21,r21,-1
  804110:	a83f981e 	bne	r21,zero,803f74 <__alt_data_end+0xff803f74>
  804114:	dc009e15 	stw	r16,632(sp)
  804118:	a080400c 	andi	r2,r20,256
  80411c:	8821883a 	mov	r16,r17
  804120:	4823883a 	mov	r17,r9
  804124:	10000426 	beq	r2,zero,804138 <__ssvfscanf_r+0xe80>
  804128:	d8800104 	addi	r2,sp,4
  80412c:	14c18736 	bltu	r2,r19,80474c <__ssvfscanf_r+0x1494>
  804130:	d8c00104 	addi	r3,sp,4
  804134:	1cfca026 	beq	r3,r19,8033b8 <__alt_data_end+0xff8033b8>
  804138:	a080040c 	andi	r2,r20,16
  80413c:	1000d226 	beq	r2,zero,804488 <__ssvfscanf_r+0x11d0>
  804140:	d8800104 	addi	r2,sp,4
  804144:	98a7c83a 	sub	r19,r19,r2
  804148:	9c27883a 	add	r19,r19,r16
  80414c:	94e5883a 	add	r18,r18,r19
  804150:	880d883a 	mov	r6,r17
  804154:	003c9406 	br	8033a8 <__alt_data_end+0xff8033a8>
  804158:	00800284 	movi	r2,10
  80415c:	143fed0e 	bge	r2,r16,804114 <__alt_data_end+0xff804114>
  804160:	00bd1fc4 	movi	r2,-2945
  804164:	a0a8703a 	and	r20,r20,r2
  804168:	003fe006 	br	8040ec <__alt_data_end+0xff8040ec>
  80416c:	a080200c 	andi	r2,r20,128
  804170:	103fe826 	beq	r2,zero,804114 <__alt_data_end+0xff804114>
  804174:	a0e8703a 	and	r20,r20,r3
  804178:	003fdc06 	br	8040ec <__alt_data_end+0xff8040ec>
  80417c:	02c020b4 	movhi	r11,130
  804180:	8421883a 	add	r16,r16,r16
  804184:	5aedb884 	addi	r11,r11,-18718
  804188:	5c05883a 	add	r2,r11,r16
  80418c:	1400000f 	ldh	r16,0(r2)
  804190:	00bd1fc4 	movi	r2,-2945
  804194:	a0a8703a 	and	r20,r20,r2
  804198:	003fd406 	br	8040ec <__alt_data_end+0xff8040ec>
  80419c:	a082000c 	andi	r2,r20,2048
  8041a0:	103fd226 	beq	r2,zero,8040ec <__alt_data_end+0xff8040ec>
  8041a4:	8000021e 	bne	r16,zero,8041b0 <__ssvfscanf_r+0xef8>
  8041a8:	a5008014 	ori	r20,r20,512
  8041ac:	04000204 	movi	r16,8
  8041b0:	a081000c 	andi	r2,r20,1024
  8041b4:	10010c1e 	bne	r2,zero,8045e8 <__ssvfscanf_r+0x1330>
  8041b8:	00bf1fc4 	movi	r2,-897
  8041bc:	a0a8703a 	and	r20,r20,r2
  8041c0:	38000226 	beq	r7,zero,8041cc <__ssvfscanf_r+0xf14>
  8041c4:	39ffffc4 	addi	r7,r7,-1
  8041c8:	ad400044 	addi	r21,r21,1
  8041cc:	e0800117 	ldw	r2,4(fp)
  8041d0:	8c400044 	addi	r17,r17,1
  8041d4:	10bfffc4 	addi	r2,r2,-1
  8041d8:	e0800115 	stw	r2,4(fp)
  8041dc:	00bfc916 	blt	zero,r2,804104 <__alt_data_end+0xff804104>
  8041e0:	b009883a 	mov	r4,r22
  8041e4:	e00b883a 	mov	r5,fp
  8041e8:	d8c0ab15 	stw	r3,684(sp)
  8041ec:	d980a815 	stw	r6,672(sp)
  8041f0:	d9c0a915 	stw	r7,676(sp)
  8041f4:	da00a615 	stw	r8,664(sp)
  8041f8:	da40aa15 	stw	r9,680(sp)
  8041fc:	da80a715 	stw	r10,668(sp)
  804200:	080cecc0 	call	80cecc <__ssrefill_r>
  804204:	d8c0ab17 	ldw	r3,684(sp)
  804208:	d980a817 	ldw	r6,672(sp)
  80420c:	d9c0a917 	ldw	r7,676(sp)
  804210:	da00a617 	ldw	r8,664(sp)
  804214:	da40aa17 	ldw	r9,680(sp)
  804218:	da80a717 	ldw	r10,668(sp)
  80421c:	103fbb26 	beq	r2,zero,80410c <__alt_data_end+0xff80410c>
  804220:	003fbc06 	br	804114 <__alt_data_end+0xff804114>
  804224:	02c020b4 	movhi	r11,130
  804228:	8421883a 	add	r16,r16,r16
  80422c:	5aedb884 	addi	r11,r11,-18718
  804230:	5c05883a 	add	r2,r11,r16
  804234:	1400000f 	ldh	r16,0(r2)
  804238:	00800204 	movi	r2,8
  80423c:	143fc816 	blt	r2,r16,804160 <__alt_data_end+0xff804160>
  804240:	003fb406 	br	804114 <__alt_data_end+0xff804114>
  804244:	a800011e 	bne	r21,zero,80424c <__ssvfscanf_r+0xf94>
  804248:	057fffc4 	movi	r21,-1
  80424c:	8080004c 	andi	r2,r16,1
  804250:	10006f1e 	bne	r2,zero,804410 <__ssvfscanf_r+0x1158>
  804254:	8400040c 	andi	r16,r16,16
  804258:	80004526 	beq	r16,zero,804370 <__ssvfscanf_r+0x10b8>
  80425c:	b9400017 	ldw	r5,0(r23)
  804260:	e1000017 	ldw	r4,0(fp)
  804264:	0021883a 	mov	r16,zero
  804268:	20800003 	ldbu	r2,0(r4)
  80426c:	2885883a 	add	r2,r5,r2
  804270:	10800043 	ldbu	r2,1(r2)
  804274:	1080020c 	andi	r2,r2,8
  804278:	103f081e 	bne	r2,zero,803e9c <__alt_data_end+0xff803e9c>
  80427c:	e0800117 	ldw	r2,4(fp)
  804280:	21000044 	addi	r4,r4,1
  804284:	84000044 	addi	r16,r16,1
  804288:	10bfffc4 	addi	r2,r2,-1
  80428c:	e0800115 	stw	r2,4(fp)
  804290:	e1000015 	stw	r4,0(fp)
  804294:	ac3f0126 	beq	r21,r16,803e9c <__alt_data_end+0xff803e9c>
  804298:	00bff316 	blt	zero,r2,804268 <__alt_data_end+0xff804268>
  80429c:	b009883a 	mov	r4,r22
  8042a0:	e00b883a 	mov	r5,fp
  8042a4:	080cecc0 	call	80cecc <__ssrefill_r>
  8042a8:	103efc1e 	bne	r2,zero,803e9c <__alt_data_end+0xff803e9c>
  8042ac:	b9400017 	ldw	r5,0(r23)
  8042b0:	e1000017 	ldw	r4,0(fp)
  8042b4:	003fec06 	br	804268 <__alt_data_end+0xff804268>
  8042b8:	880d883a 	mov	r6,r17
  8042bc:	dc409d17 	ldw	r17,628(sp)
  8042c0:	b019883a 	mov	r12,r22
  8042c4:	a821883a 	mov	r16,r21
  8042c8:	182d883a 	mov	r22,r3
  8042cc:	00bfbfc4 	movi	r2,-257
  8042d0:	98a6703a 	and	r19,r19,r2
  8042d4:	003dd606 	br	803a30 <__alt_data_end+0xff803a30>
  8042d8:	d800a215 	stw	zero,648(sp)
  8042dc:	003d0906 	br	803704 <__alt_data_end+0xff803704>
  8042e0:	000f883a 	mov	r7,zero
  8042e4:	003f1906 	br	803f4c <__alt_data_end+0xff803f4c>
  8042e8:	dac09c17 	ldw	r11,624(sp)
  8042ec:	a8ffffc4 	addi	r3,r21,-1
  8042f0:	dd005884 	addi	r20,sp,354
  8042f4:	5c000017 	ldw	r16,0(r11)
  8042f8:	59800104 	addi	r6,r11,4
  8042fc:	d9809c15 	stw	r6,624(sp)
  804300:	800b883a 	mov	r5,r16
  804304:	80eb883a 	add	r21,r16,r3
  804308:	00000106 	br	804310 <__ssvfscanf_r+0x1058>
  80430c:	980b883a 	mov	r5,r19
  804310:	e0c00017 	ldw	r3,0(fp)
  804314:	280d883a 	mov	r6,r5
  804318:	18800003 	ldbu	r2,0(r3)
  80431c:	a085883a 	add	r2,r20,r2
  804320:	10800007 	ldb	r2,0(r2)
  804324:	1000ec26 	beq	r2,zero,8046d8 <__ssvfscanf_r+0x1420>
  804328:	e0800117 	ldw	r2,4(fp)
  80432c:	19c00044 	addi	r7,r3,1
  804330:	e1c00015 	stw	r7,0(fp)
  804334:	10bfffc4 	addi	r2,r2,-1
  804338:	e0800115 	stw	r2,4(fp)
  80433c:	18800003 	ldbu	r2,0(r3)
  804340:	34c00044 	addi	r19,r6,1
  804344:	28800005 	stb	r2,0(r5)
  804348:	3540da26 	beq	r6,r21,8046b4 <__ssvfscanf_r+0x13fc>
  80434c:	e0800117 	ldw	r2,4(fp)
  804350:	00bfee16 	blt	zero,r2,80430c <__alt_data_end+0xff80430c>
  804354:	b009883a 	mov	r4,r22
  804358:	e00b883a 	mov	r5,fp
  80435c:	080cecc0 	call	80cecc <__ssrefill_r>
  804360:	103fea26 	beq	r2,zero,80430c <__alt_data_end+0xff80430c>
  804364:	9809883a 	mov	r4,r19
  804368:	84c0d31e 	bne	r16,r19,8046b8 <__ssvfscanf_r+0x1400>
  80436c:	003ca906 	br	803614 <__alt_data_end+0xff803614>
  804370:	dac09c17 	ldw	r11,624(sp)
  804374:	a8ffffc4 	addi	r3,r21,-1
  804378:	5cc00017 	ldw	r19,0(r11)
  80437c:	59800104 	addi	r6,r11,4
  804380:	d9809c15 	stw	r6,624(sp)
  804384:	98e9883a 	add	r20,r19,r3
  804388:	980b883a 	mov	r5,r19
  80438c:	00000106 	br	804394 <__ssvfscanf_r+0x10dc>
  804390:	a80b883a 	mov	r5,r21
  804394:	e0c00017 	ldw	r3,0(fp)
  804398:	b9800017 	ldw	r6,0(r23)
  80439c:	18800003 	ldbu	r2,0(r3)
  8043a0:	3085883a 	add	r2,r6,r2
  8043a4:	10800043 	ldbu	r2,1(r2)
  8043a8:	1080020c 	andi	r2,r2,8
  8043ac:	1000e01e 	bne	r2,zero,804730 <__ssvfscanf_r+0x1478>
  8043b0:	e0800117 	ldw	r2,4(fp)
  8043b4:	19800044 	addi	r6,r3,1
  8043b8:	e1800015 	stw	r6,0(fp)
  8043bc:	10bfffc4 	addi	r2,r2,-1
  8043c0:	e0800115 	stw	r2,4(fp)
  8043c4:	18800003 	ldbu	r2,0(r3)
  8043c8:	2d400044 	addi	r21,r5,1
  8043cc:	a821883a 	mov	r16,r21
  8043d0:	28800005 	stb	r2,0(r5)
  8043d4:	2d000626 	beq	r5,r20,8043f0 <__ssvfscanf_r+0x1138>
  8043d8:	e0800117 	ldw	r2,4(fp)
  8043dc:	00bfec16 	blt	zero,r2,804390 <__alt_data_end+0xff804390>
  8043e0:	b009883a 	mov	r4,r22
  8043e4:	e00b883a 	mov	r5,fp
  8043e8:	080cecc0 	call	80cecc <__ssrefill_r>
  8043ec:	103fe826 	beq	r2,zero,804390 <__alt_data_end+0xff804390>
  8043f0:	dac09f17 	ldw	r11,636(sp)
  8043f4:	84e7c83a 	sub	r19,r16,r19
  8043f8:	80000005 	stb	zero,0(r16)
  8043fc:	5ac00044 	addi	r11,r11,1
  804400:	94e5883a 	add	r18,r18,r19
  804404:	dac09f15 	stw	r11,636(sp)
  804408:	880d883a 	mov	r6,r17
  80440c:	003be606 	br	8033a8 <__alt_data_end+0xff8033a8>
  804410:	d8c09904 	addi	r3,sp,612
  804414:	8400040c 	andi	r16,r16,16
  804418:	1809883a 	mov	r4,r3
  80441c:	000b883a 	mov	r5,zero
  804420:	01800204 	movi	r6,8
  804424:	d8c09d15 	stw	r3,628(sp)
  804428:	0802a600 	call	802a60 <memset>
  80442c:	80007126 	beq	r16,zero,8045f4 <__ssvfscanf_r+0x133c>
  804430:	dcc09b04 	addi	r19,sp,620
  804434:	0007883a 	mov	r3,zero
  804438:	dc40a015 	stw	r17,640(sp)
  80443c:	8023883a 	mov	r17,r16
  804440:	1821883a 	mov	r16,r3
  804444:	e0800017 	ldw	r2,0(fp)
  804448:	b8c00017 	ldw	r3,0(r23)
  80444c:	10800003 	ldbu	r2,0(r2)
  804450:	1885883a 	add	r2,r3,r2
  804454:	10800043 	ldbu	r2,1(r2)
  804458:	1080020c 	andi	r2,r2,8
  80445c:	1000011e 	bne	r2,zero,804464 <__ssvfscanf_r+0x11ac>
  804460:	a800ff1e 	bne	r21,zero,804860 <__ssvfscanf_r+0x15a8>
  804464:	8821883a 	mov	r16,r17
  804468:	dc40a017 	ldw	r17,640(sp)
  80446c:	803bcd1e 	bne	r16,zero,8033a4 <__alt_data_end+0xff8033a4>
  804470:	dac09f17 	ldw	r11,636(sp)
  804474:	98000015 	stw	zero,0(r19)
  804478:	880d883a 	mov	r6,r17
  80447c:	5ac00044 	addi	r11,r11,1
  804480:	dac09f15 	stw	r11,636(sp)
  804484:	003bc806 	br	8033a8 <__alt_data_end+0xff8033a8>
  804488:	d9c09e17 	ldw	r7,632(sp)
  80448c:	dac0a117 	ldw	r11,644(sp)
  804490:	b009883a 	mov	r4,r22
  804494:	d9400104 	addi	r5,sp,4
  804498:	000d883a 	mov	r6,zero
  80449c:	98000005 	stb	zero,0(r19)
  8044a0:	583ee83a 	callr	r11
  8044a4:	a0c0080c 	andi	r3,r20,32
  8044a8:	18006326 	beq	r3,zero,804638 <__ssvfscanf_r+0x1380>
  8044ac:	dac09c17 	ldw	r11,624(sp)
  8044b0:	58c00017 	ldw	r3,0(r11)
  8044b4:	5ac00104 	addi	r11,r11,4
  8044b8:	dac09c15 	stw	r11,624(sp)
  8044bc:	18800015 	stw	r2,0(r3)
  8044c0:	dac09f17 	ldw	r11,636(sp)
  8044c4:	5ac00044 	addi	r11,r11,1
  8044c8:	dac09f15 	stw	r11,636(sp)
  8044cc:	003f1c06 	br	804140 <__alt_data_end+0xff804140>
  8044d0:	d8c09904 	addi	r3,sp,612
  8044d4:	8400040c 	andi	r16,r16,16
  8044d8:	1809883a 	mov	r4,r3
  8044dc:	000b883a 	mov	r5,zero
  8044e0:	01800204 	movi	r6,8
  8044e4:	dc00a015 	stw	r16,640(sp)
  8044e8:	d8c09d15 	stw	r3,628(sp)
  8044ec:	0802a600 	call	802a60 <memset>
  8044f0:	dc00a017 	ldw	r16,640(sp)
  8044f4:	80004b26 	beq	r16,zero,804624 <__ssvfscanf_r+0x136c>
  8044f8:	0027883a 	mov	r19,zero
  8044fc:	dc00a017 	ldw	r16,640(sp)
  804500:	0029883a 	mov	r20,zero
  804504:	dc40a215 	stw	r17,648(sp)
  804508:	0808b840 	call	808b84 <__locale_mb_cur_max>
  80450c:	153c4126 	beq	r2,r20,803614 <__alt_data_end+0xff803614>
  804510:	e0800017 	ldw	r2,0(fp)
  804514:	e1000117 	ldw	r4,4(fp)
  804518:	dac09d17 	ldw	r11,628(sp)
  80451c:	12400003 	ldbu	r9,0(r2)
  804520:	213fffc4 	addi	r4,r4,-1
  804524:	10800044 	addi	r2,r2,1
  804528:	d8c00104 	addi	r3,sp,4
  80452c:	e1000115 	stw	r4,4(fp)
  804530:	e0800015 	stw	r2,0(fp)
  804534:	a4400044 	addi	r17,r20,1
  804538:	dac00015 	stw	r11,0(sp)
  80453c:	1d29883a 	add	r20,r3,r20
  804540:	180d883a 	mov	r6,r3
  804544:	b009883a 	mov	r4,r22
  804548:	980b883a 	mov	r5,r19
  80454c:	880f883a 	mov	r7,r17
  804550:	a2400005 	stb	r9,0(r20)
  804554:	0808c380 	call	808c38 <_mbrtowc_r>
  804558:	00ffffc4 	movi	r3,-1
  80455c:	10fc2d26 	beq	r2,r3,803614 <__alt_data_end+0xff803614>
  804560:	10004e1e 	bne	r2,zero,80469c <__ssvfscanf_r+0x13e4>
  804564:	8000011e 	bne	r16,zero,80456c <__ssvfscanf_r+0x12b4>
  804568:	98000015 	stw	zero,0(r19)
  80456c:	9465883a 	add	r18,r18,r17
  804570:	ad7fffc4 	addi	r21,r21,-1
  804574:	80004d1e 	bne	r16,zero,8046ac <__ssvfscanf_r+0x13f4>
  804578:	9cc00104 	addi	r19,r19,4
  80457c:	0029883a 	mov	r20,zero
  804580:	e0800117 	ldw	r2,4(fp)
  804584:	0080200e 	bge	zero,r2,804608 <__ssvfscanf_r+0x1350>
  804588:	a83fdf1e 	bne	r21,zero,804508 <__alt_data_end+0xff804508>
  80458c:	dc40a217 	ldw	r17,648(sp)
  804590:	dac0a017 	ldw	r11,640(sp)
  804594:	583d6e26 	beq	r11,zero,803b50 <__alt_data_end+0xff803b50>
  804598:	003b8206 	br	8033a4 <__alt_data_end+0xff8033a4>
  80459c:	9a80008c 	andi	r10,r19,2
  8045a0:	503d651e 	bne	r10,zero,803b38 <__alt_data_end+0xff803b38>
  8045a4:	dac09c17 	ldw	r11,624(sp)
  8045a8:	180b883a 	mov	r5,r3
  8045ac:	a009883a 	mov	r4,r20
  8045b0:	5cc00017 	ldw	r19,0(r11)
  8045b4:	5c000104 	addi	r16,r11,4
  8045b8:	d8c0ab15 	stw	r3,684(sp)
  8045bc:	080a8a80 	call	80a8a8 <__fpclassifyd>
  8045c0:	d8c0ab17 	ldw	r3,684(sp)
  8045c4:	1000a126 	beq	r2,zero,80484c <__ssvfscanf_r+0x1594>
  8045c8:	a009883a 	mov	r4,r20
  8045cc:	180b883a 	mov	r5,r3
  8045d0:	081707c0 	call	81707c <__truncdfsf2>
  8045d4:	98800015 	stw	r2,0(r19)
  8045d8:	dc009c15 	stw	r16,624(sp)
  8045dc:	003d5c06 	br	803b50 <__alt_data_end+0xff803b50>
  8045e0:	5805883a 	mov	r2,r11
  8045e4:	003c1106 	br	80362c <__alt_data_end+0xff80362c>
  8045e8:	00be9fc4 	movi	r2,-1409
  8045ec:	a0a8703a 	and	r20,r20,r2
  8045f0:	003ebe06 	br	8040ec <__alt_data_end+0xff8040ec>
  8045f4:	dac09c17 	ldw	r11,624(sp)
  8045f8:	5cc00017 	ldw	r19,0(r11)
  8045fc:	5ac00104 	addi	r11,r11,4
  804600:	dac09c15 	stw	r11,624(sp)
  804604:	003f8b06 	br	804434 <__alt_data_end+0xff804434>
  804608:	b009883a 	mov	r4,r22
  80460c:	e00b883a 	mov	r5,fp
  804610:	080cecc0 	call	80cecc <__ssrefill_r>
  804614:	103fdc26 	beq	r2,zero,804588 <__alt_data_end+0xff804588>
  804618:	dc40a217 	ldw	r17,648(sp)
  80461c:	a03fdc26 	beq	r20,zero,804590 <__alt_data_end+0xff804590>
  804620:	003bfc06 	br	803614 <__alt_data_end+0xff803614>
  804624:	dac09c17 	ldw	r11,624(sp)
  804628:	5cc00017 	ldw	r19,0(r11)
  80462c:	5ac00104 	addi	r11,r11,4
  804630:	dac09c15 	stw	r11,624(sp)
  804634:	003fb106 	br	8044fc <__alt_data_end+0xff8044fc>
  804638:	a0c0010c 	andi	r3,r20,4
  80463c:	18006f26 	beq	r3,zero,8047fc <__ssvfscanf_r+0x1544>
  804640:	dac09c17 	ldw	r11,624(sp)
  804644:	58c00017 	ldw	r3,0(r11)
  804648:	5ac00104 	addi	r11,r11,4
  80464c:	dac09c15 	stw	r11,624(sp)
  804650:	1880000d 	sth	r2,0(r3)
  804654:	003f9a06 	br	8044c0 <__alt_data_end+0xff8044c0>
  804658:	dac0a517 	ldw	r11,660(sp)
  80465c:	000d883a 	mov	r6,zero
  804660:	b009883a 	mov	r4,r22
  804664:	59400044 	addi	r5,r11,1
  804668:	01c00284 	movi	r7,10
  80466c:	080c2bc0 	call	80c2bc <_strtol_r>
  804670:	d8c0a417 	ldw	r3,656(sp)
  804674:	dd00a517 	ldw	r20,660(sp)
  804678:	10cdc83a 	sub	r6,r2,r3
  80467c:	d88055c4 	addi	r2,sp,343
  804680:	a0800136 	bltu	r20,r2,804688 <__ssvfscanf_r+0x13d0>
  804684:	dd005584 	addi	r20,sp,342
  804688:	014020b4 	movhi	r5,130
  80468c:	296db704 	addi	r5,r5,-18724
  804690:	a009883a 	mov	r4,r20
  804694:	080aa3c0 	call	80aa3c <sprintf>
  804698:	003d2006 	br	803b1c <__alt_data_end+0xff803b1c>
  80469c:	013fff84 	movi	r4,-2
  8046a0:	113fb21e 	bne	r2,r4,80456c <__alt_data_end+0xff80456c>
  8046a4:	8829883a 	mov	r20,r17
  8046a8:	003fb506 	br	804580 <__alt_data_end+0xff804580>
  8046ac:	0029883a 	mov	r20,zero
  8046b0:	003fb306 	br	804580 <__alt_data_end+0xff804580>
  8046b4:	9809883a 	mov	r4,r19
  8046b8:	2421c83a 	sub	r16,r4,r16
  8046bc:	803b3e26 	beq	r16,zero,8033b8 <__alt_data_end+0xff8033b8>
  8046c0:	dac09f17 	ldw	r11,636(sp)
  8046c4:	20000005 	stb	zero,0(r4)
  8046c8:	9425883a 	add	r18,r18,r16
  8046cc:	5ac00044 	addi	r11,r11,1
  8046d0:	dac09f15 	stw	r11,636(sp)
  8046d4:	003df206 	br	803ea0 <__alt_data_end+0xff803ea0>
  8046d8:	2809883a 	mov	r4,r5
  8046dc:	003ff606 	br	8046b8 <__alt_data_end+0xff8046b8>
  8046e0:	803bcc26 	beq	r16,zero,803614 <__alt_data_end+0xff803614>
  8046e4:	9425883a 	add	r18,r18,r16
  8046e8:	003ded06 	br	803ea0 <__alt_data_end+0xff803ea0>
  8046ec:	dac09c17 	ldw	r11,624(sp)
  8046f0:	df000015 	stw	fp,0(sp)
  8046f4:	b009883a 	mov	r4,r22
  8046f8:	59400017 	ldw	r5,0(r11)
  8046fc:	01800044 	movi	r6,1
  804700:	a80f883a 	mov	r7,r21
  804704:	080cf3c0 	call	80cf3c <_sfread_r>
  804708:	dac09c17 	ldw	r11,624(sp)
  80470c:	58c00104 	addi	r3,r11,4
  804710:	103bc026 	beq	r2,zero,803614 <__alt_data_end+0xff803614>
  804714:	dac09f17 	ldw	r11,636(sp)
  804718:	14a5883a 	add	r18,r2,r18
  80471c:	d8c09c15 	stw	r3,624(sp)
  804720:	5ac00044 	addi	r11,r11,1
  804724:	dac09f15 	stw	r11,636(sp)
  804728:	880d883a 	mov	r6,r17
  80472c:	003b1e06 	br	8033a8 <__alt_data_end+0xff8033a8>
  804730:	2821883a 	mov	r16,r5
  804734:	003f2e06 	br	8043f0 <__alt_data_end+0xff8043f0>
  804738:	b009883a 	mov	r4,r22
  80473c:	e00b883a 	mov	r5,fp
  804740:	080cecc0 	call	80cecc <__ssrefill_r>
  804744:	103bc826 	beq	r2,zero,803668 <__alt_data_end+0xff803668>
  804748:	003bb206 	br	803614 <__alt_data_end+0xff803614>
  80474c:	997fffc7 	ldb	r5,-1(r19)
  804750:	b009883a 	mov	r4,r22
  804754:	e00d883a 	mov	r6,fp
  804758:	9cffffc4 	addi	r19,r19,-1
  80475c:	080cdd40 	call	80cdd4 <_sungetc_r>
  804760:	003e7306 	br	804130 <__alt_data_end+0xff804130>
  804764:	01be1fc4 	movi	r6,-1921
  804768:	99a6703a 	and	r19,r19,r6
  80476c:	04400044 	movi	r17,1
  804770:	003c6906 	br	803918 <__alt_data_end+0xff803918>
  804774:	00be1fc4 	movi	r2,-1921
  804778:	98a6703a 	and	r19,r19,r2
  80477c:	05800044 	movi	r22,1
  804780:	003c6506 	br	803918 <__alt_data_end+0xff803918>
  804784:	dac0a017 	ldw	r11,640(sp)
  804788:	82e1c83a 	sub	r16,r16,r11
  80478c:	040dc83a 	sub	r6,zero,r16
  804790:	803fba1e 	bne	r16,zero,80467c <__alt_data_end+0xff80467c>
  804794:	003ce106 	br	803b1c <__alt_data_end+0xff803b1c>
  804798:	8120b03a 	or	r16,r16,r4
  80479c:	003d4f06 	br	803cdc <__alt_data_end+0xff803cdc>
  8047a0:	88800083 	ldbu	r2,2(r17)
  8047a4:	84000094 	ori	r16,r16,2
  8047a8:	8c400084 	addi	r17,r17,2
  8047ac:	11803fcc 	andi	r6,r2,255
  8047b0:	003b0a06 	br	8033dc <__alt_data_end+0xff8033dc>
  8047b4:	8080004c 	andi	r2,r16,1
  8047b8:	10000a1e 	bne	r2,zero,8047e4 <__ssvfscanf_r+0x152c>
  8047bc:	8400008c 	andi	r16,r16,2
  8047c0:	80000826 	beq	r16,zero,8047e4 <__ssvfscanf_r+0x152c>
  8047c4:	dac09c17 	ldw	r11,624(sp)
  8047c8:	9007d7fa 	srai	r3,r18,31
  8047cc:	58800017 	ldw	r2,0(r11)
  8047d0:	5ac00104 	addi	r11,r11,4
  8047d4:	dac09c15 	stw	r11,624(sp)
  8047d8:	14800015 	stw	r18,0(r2)
  8047dc:	10c00115 	stw	r3,4(r2)
  8047e0:	003af006 	br	8033a4 <__alt_data_end+0xff8033a4>
  8047e4:	dac09c17 	ldw	r11,624(sp)
  8047e8:	58800017 	ldw	r2,0(r11)
  8047ec:	5ac00104 	addi	r11,r11,4
  8047f0:	dac09c15 	stw	r11,624(sp)
  8047f4:	14800015 	stw	r18,0(r2)
  8047f8:	003aea06 	br	8033a4 <__alt_data_end+0xff8033a4>
  8047fc:	a0c0004c 	andi	r3,r20,1
  804800:	183f2a1e 	bne	r3,zero,8044ac <__alt_data_end+0xff8044ac>
  804804:	a500008c 	andi	r20,r20,2
  804808:	a03f2826 	beq	r20,zero,8044ac <__alt_data_end+0xff8044ac>
  80480c:	dac0a117 	ldw	r11,644(sp)
  804810:	00802074 	movhi	r2,129
  804814:	10b20504 	addi	r2,r2,-14316
  804818:	b009883a 	mov	r4,r22
  80481c:	d9400104 	addi	r5,sp,4
  804820:	000d883a 	mov	r6,zero
  804824:	d9c09e17 	ldw	r7,632(sp)
  804828:	58805f26 	beq	r11,r2,8049a8 <__ssvfscanf_r+0x16f0>
  80482c:	080c5200 	call	80c520 <_strtoll_r>
  804830:	dac09c17 	ldw	r11,624(sp)
  804834:	59000017 	ldw	r4,0(r11)
  804838:	5ac00104 	addi	r11,r11,4
  80483c:	dac09c15 	stw	r11,624(sp)
  804840:	20800015 	stw	r2,0(r4)
  804844:	20c00115 	stw	r3,4(r4)
  804848:	003f1d06 	br	8044c0 <__alt_data_end+0xff8044c0>
  80484c:	0009883a 	mov	r4,zero
  804850:	080a9dc0 	call	80a9dc <nanf>
  804854:	98800015 	stw	r2,0(r19)
  804858:	dc009c15 	stw	r16,624(sp)
  80485c:	003cbc06 	br	803b50 <__alt_data_end+0xff803b50>
  804860:	0808b840 	call	808b84 <__locale_mb_cur_max>
  804864:	143b6b26 	beq	r2,r16,803614 <__alt_data_end+0xff803614>
  804868:	e0800017 	ldw	r2,0(fp)
  80486c:	e1000117 	ldw	r4,4(fp)
  804870:	dac09d17 	ldw	r11,628(sp)
  804874:	12000003 	ldbu	r8,0(r2)
  804878:	213fffc4 	addi	r4,r4,-1
  80487c:	10800044 	addi	r2,r2,1
  804880:	d8c00104 	addi	r3,sp,4
  804884:	e1000115 	stw	r4,4(fp)
  804888:	e0800015 	stw	r2,0(fp)
  80488c:	85000044 	addi	r20,r16,1
  804890:	dac00015 	stw	r11,0(sp)
  804894:	1c21883a 	add	r16,r3,r16
  804898:	180d883a 	mov	r6,r3
  80489c:	b009883a 	mov	r4,r22
  8048a0:	980b883a 	mov	r5,r19
  8048a4:	a00f883a 	mov	r7,r20
  8048a8:	82000005 	stb	r8,0(r16)
  8048ac:	0808c380 	call	808c38 <_mbrtowc_r>
  8048b0:	00ffffc4 	movi	r3,-1
  8048b4:	10fb5726 	beq	r2,r3,803614 <__alt_data_end+0xff803614>
  8048b8:	103b491e 	bne	r2,zero,8035e0 <__alt_data_end+0xff8035e0>
  8048bc:	98000015 	stw	zero,0(r19)
  8048c0:	0009883a 	mov	r4,zero
  8048c4:	0808acc0 	call	808acc <iswspace>
  8048c8:	10000c26 	beq	r2,zero,8048fc <__ssvfscanf_r+0x1644>
  8048cc:	8821883a 	mov	r16,r17
  8048d0:	dc40a017 	ldw	r17,640(sp)
  8048d4:	a03ee526 	beq	r20,zero,80446c <__alt_data_end+0xff80446c>
  8048d8:	a53fffc4 	addi	r20,r20,-1
  8048dc:	d9400104 	addi	r5,sp,4
  8048e0:	2d05883a 	add	r2,r5,r20
  8048e4:	11400003 	ldbu	r5,0(r2)
  8048e8:	b009883a 	mov	r4,r22
  8048ec:	e00d883a 	mov	r6,fp
  8048f0:	080cdd40 	call	80cdd4 <_sungetc_r>
  8048f4:	a03ff81e 	bne	r20,zero,8048d8 <__alt_data_end+0xff8048d8>
  8048f8:	003edc06 	br	80446c <__alt_data_end+0xff80446c>
  8048fc:	9525883a 	add	r18,r18,r20
  804900:	ad7fffc4 	addi	r21,r21,-1
  804904:	8800051e 	bne	r17,zero,80491c <__ssvfscanf_r+0x1664>
  804908:	9cc00104 	addi	r19,r19,4
  80490c:	0021883a 	mov	r16,zero
  804910:	003b3606 	br	8035ec <__alt_data_end+0xff8035ec>
  804914:	99000017 	ldw	r4,0(r19)
  804918:	003fea06 	br	8048c4 <__alt_data_end+0xff8048c4>
  80491c:	0021883a 	mov	r16,zero
  804920:	003b3206 	br	8035ec <__alt_data_end+0xff8035ec>
  804924:	d8800104 	addi	r2,sp,4
  804928:	a02b883a 	mov	r21,r20
  80492c:	153aa22e 	bgeu	r2,r20,8033b8 <__alt_data_end+0xff8033b8>
  804930:	ad7fffc4 	addi	r21,r21,-1
  804934:	a9400007 	ldb	r5,0(r21)
  804938:	b009883a 	mov	r4,r22
  80493c:	e00d883a 	mov	r6,fp
  804940:	080cdd40 	call	80cdd4 <_sungetc_r>
  804944:	d8c00104 	addi	r3,sp,4
  804948:	a8fff91e 	bne	r21,r3,804930 <__alt_data_end+0xff804930>
  80494c:	003a9a06 	br	8033b8 <__alt_data_end+0xff8033b8>
  804950:	d8c00104 	addi	r3,sp,4
  804954:	a02b883a 	mov	r21,r20
  804958:	1d3a972e 	bgeu	r3,r20,8033b8 <__alt_data_end+0xff8033b8>
  80495c:	ad7fffc4 	addi	r21,r21,-1
  804960:	a9400007 	ldb	r5,0(r21)
  804964:	b009883a 	mov	r4,r22
  804968:	e00d883a 	mov	r6,fp
  80496c:	080cdd40 	call	80cdd4 <_sungetc_r>
  804970:	d9000104 	addi	r4,sp,4
  804974:	a93ff91e 	bne	r21,r4,80495c <__alt_data_end+0xff80495c>
  804978:	003a8f06 	br	8033b8 <__alt_data_end+0xff8033b8>
  80497c:	d9400104 	addi	r5,sp,4
  804980:	a021883a 	mov	r16,r20
  804984:	2d3a8c2e 	bgeu	r5,r20,8033b8 <__alt_data_end+0xff8033b8>
  804988:	843fffc4 	addi	r16,r16,-1
  80498c:	81400007 	ldb	r5,0(r16)
  804990:	b009883a 	mov	r4,r22
  804994:	e00d883a 	mov	r6,fp
  804998:	080cdd40 	call	80cdd4 <_sungetc_r>
  80499c:	dac00104 	addi	r11,sp,4
  8049a0:	82fff91e 	bne	r16,r11,804988 <__alt_data_end+0xff804988>
  8049a4:	003a8406 	br	8033b8 <__alt_data_end+0xff8033b8>
  8049a8:	080caa00 	call	80caa0 <_strtoull_r>
  8049ac:	003fa006 	br	804830 <__alt_data_end+0xff804830>

008049b0 <___vfprintf_internal_r>:
  8049b0:	deffb604 	addi	sp,sp,-296
  8049b4:	dfc04915 	stw	ra,292(sp)
  8049b8:	ddc04715 	stw	r23,284(sp)
  8049bc:	dd804615 	stw	r22,280(sp)
  8049c0:	282f883a 	mov	r23,r5
  8049c4:	202d883a 	mov	r22,r4
  8049c8:	d9802a15 	stw	r6,168(sp)
  8049cc:	d9c02d15 	stw	r7,180(sp)
  8049d0:	df004815 	stw	fp,288(sp)
  8049d4:	dd404515 	stw	r21,276(sp)
  8049d8:	dd004415 	stw	r20,272(sp)
  8049dc:	dcc04315 	stw	r19,268(sp)
  8049e0:	dc804215 	stw	r18,264(sp)
  8049e4:	dc404115 	stw	r17,260(sp)
  8049e8:	dc004015 	stw	r16,256(sp)
  8049ec:	0808ba80 	call	808ba8 <_localeconv_r>
  8049f0:	10800017 	ldw	r2,0(r2)
  8049f4:	1009883a 	mov	r4,r2
  8049f8:	d8803515 	stw	r2,212(sp)
  8049fc:	08032200 	call	803220 <strlen>
  804a00:	d8803815 	stw	r2,224(sp)
  804a04:	b0000226 	beq	r22,zero,804a10 <___vfprintf_internal_r+0x60>
  804a08:	b0800e17 	ldw	r2,56(r22)
  804a0c:	1000e126 	beq	r2,zero,804d94 <___vfprintf_internal_r+0x3e4>
  804a10:	b880030b 	ldhu	r2,12(r23)
  804a14:	10c8000c 	andi	r3,r2,8192
  804a18:	1800061e 	bne	r3,zero,804a34 <___vfprintf_internal_r+0x84>
  804a1c:	b9001917 	ldw	r4,100(r23)
  804a20:	00f7ffc4 	movi	r3,-8193
  804a24:	10880014 	ori	r2,r2,8192
  804a28:	20c6703a 	and	r3,r4,r3
  804a2c:	b880030d 	sth	r2,12(r23)
  804a30:	b8c01915 	stw	r3,100(r23)
  804a34:	10c0020c 	andi	r3,r2,8
  804a38:	1800a726 	beq	r3,zero,804cd8 <___vfprintf_internal_r+0x328>
  804a3c:	b8c00417 	ldw	r3,16(r23)
  804a40:	1800a526 	beq	r3,zero,804cd8 <___vfprintf_internal_r+0x328>
  804a44:	1080068c 	andi	r2,r2,26
  804a48:	00c00284 	movi	r3,10
  804a4c:	10c0aa26 	beq	r2,r3,804cf8 <___vfprintf_internal_r+0x348>
  804a50:	dac01e04 	addi	r11,sp,120
  804a54:	db001dc4 	addi	r12,sp,119
  804a58:	d8800404 	addi	r2,sp,16
  804a5c:	050020b4 	movhi	r20,130
  804a60:	dac02815 	stw	r11,160(sp)
  804a64:	5b17c83a 	sub	r11,r11,r12
  804a68:	a52dd184 	addi	r20,r20,-18618
  804a6c:	db002915 	stw	r12,164(sp)
  804a70:	d8801e15 	stw	r2,120(sp)
  804a74:	d8002015 	stw	zero,128(sp)
  804a78:	d8001f15 	stw	zero,124(sp)
  804a7c:	d8003315 	stw	zero,204(sp)
  804a80:	d8003715 	stw	zero,220(sp)
  804a84:	d8003915 	stw	zero,228(sp)
  804a88:	1011883a 	mov	r8,r2
  804a8c:	d8003b15 	stw	zero,236(sp)
  804a90:	d8003a15 	stw	zero,232(sp)
  804a94:	d8002f15 	stw	zero,188(sp)
  804a98:	dac03c15 	stw	r11,240(sp)
  804a9c:	db002a17 	ldw	r12,168(sp)
  804aa0:	60800007 	ldb	r2,0(r12)
  804aa4:	1000be26 	beq	r2,zero,804da0 <___vfprintf_internal_r+0x3f0>
  804aa8:	00c00944 	movi	r3,37
  804aac:	10c0bc26 	beq	r2,r3,804da0 <___vfprintf_internal_r+0x3f0>
  804ab0:	6021883a 	mov	r16,r12
  804ab4:	00000106 	br	804abc <___vfprintf_internal_r+0x10c>
  804ab8:	10c08426 	beq	r2,r3,804ccc <___vfprintf_internal_r+0x31c>
  804abc:	84000044 	addi	r16,r16,1
  804ac0:	80800007 	ldb	r2,0(r16)
  804ac4:	103ffc1e 	bne	r2,zero,804ab8 <__alt_data_end+0xff804ab8>
  804ac8:	dac02a17 	ldw	r11,168(sp)
  804acc:	82e3c83a 	sub	r17,r16,r11
  804ad0:	88000f26 	beq	r17,zero,804b10 <___vfprintf_internal_r+0x160>
  804ad4:	d8c02017 	ldw	r3,128(sp)
  804ad8:	d8801f17 	ldw	r2,124(sp)
  804adc:	dac02a17 	ldw	r11,168(sp)
  804ae0:	1c47883a 	add	r3,r3,r17
  804ae4:	10800044 	addi	r2,r2,1
  804ae8:	d8c02015 	stw	r3,128(sp)
  804aec:	42c00015 	stw	r11,0(r8)
  804af0:	44400115 	stw	r17,4(r8)
  804af4:	d8801f15 	stw	r2,124(sp)
  804af8:	00c001c4 	movi	r3,7
  804afc:	18809316 	blt	r3,r2,804d4c <___vfprintf_internal_r+0x39c>
  804b00:	42000204 	addi	r8,r8,8
  804b04:	db002f17 	ldw	r12,188(sp)
  804b08:	6459883a 	add	r12,r12,r17
  804b0c:	db002f15 	stw	r12,188(sp)
  804b10:	80800007 	ldb	r2,0(r16)
  804b14:	10009426 	beq	r2,zero,804d68 <___vfprintf_internal_r+0x3b8>
  804b18:	80800044 	addi	r2,r16,1
  804b1c:	84000047 	ldb	r16,1(r16)
  804b20:	d8002785 	stb	zero,158(sp)
  804b24:	000d883a 	mov	r6,zero
  804b28:	027fffc4 	movi	r9,-1
  804b2c:	d8002e15 	stw	zero,184(sp)
  804b30:	0023883a 	mov	r17,zero
  804b34:	01001604 	movi	r4,88
  804b38:	01400244 	movi	r5,9
  804b3c:	02800a84 	movi	r10,42
  804b40:	01c01b04 	movi	r7,108
  804b44:	10c00044 	addi	r3,r2,1
  804b48:	80bff804 	addi	r2,r16,-32
  804b4c:	2082cd36 	bltu	r4,r2,805684 <___vfprintf_internal_r+0xcd4>
  804b50:	100490ba 	slli	r2,r2,2
  804b54:	02c02034 	movhi	r11,128
  804b58:	5ad2da04 	addi	r11,r11,19304
  804b5c:	12c5883a 	add	r2,r2,r11
  804b60:	10800017 	ldw	r2,0(r2)
  804b64:	1000683a 	jmp	r2
  804b68:	0080549c 	xori	r2,zero,338
  804b6c:	00805684 	movi	r2,346
  804b70:	00805684 	movi	r2,346
  804b74:	008055ec 	andhi	r2,zero,343
  804b78:	00805684 	movi	r2,346
  804b7c:	00805684 	movi	r2,346
  804b80:	00805684 	movi	r2,346
  804b84:	00805684 	movi	r2,346
  804b88:	00805684 	movi	r2,346
  804b8c:	00805684 	movi	r2,346
  804b90:	008054bc 	xorhi	r2,zero,338
  804b94:	008054e8 	cmpgeui	r2,zero,339
  804b98:	00805684 	movi	r2,346
  804b9c:	00804da8 	cmpgeui	r2,zero,310
  804ba0:	00804db8 	rdprs	r2,zero,310
  804ba4:	00805684 	movi	r2,346
  804ba8:	00804df8 	rdprs	r2,zero,311
  804bac:	00804e08 	cmpgei	r2,zero,312
  804bb0:	00804e08 	cmpgei	r2,zero,312
  804bb4:	00804e08 	cmpgei	r2,zero,312
  804bb8:	00804e08 	cmpgei	r2,zero,312
  804bbc:	00804e08 	cmpgei	r2,zero,312
  804bc0:	00804e08 	cmpgei	r2,zero,312
  804bc4:	00804e08 	cmpgei	r2,zero,312
  804bc8:	00804e08 	cmpgei	r2,zero,312
  804bcc:	00804e08 	cmpgei	r2,zero,312
  804bd0:	00805684 	movi	r2,346
  804bd4:	00805684 	movi	r2,346
  804bd8:	00805684 	movi	r2,346
  804bdc:	00805684 	movi	r2,346
  804be0:	00805684 	movi	r2,346
  804be4:	00805684 	movi	r2,346
  804be8:	00805684 	movi	r2,346
  804bec:	00805684 	movi	r2,346
  804bf0:	00805684 	movi	r2,346
  804bf4:	00805684 	movi	r2,346
  804bf8:	00804e3c 	xorhi	r2,zero,312
  804bfc:	008052ac 	andhi	r2,zero,330
  804c00:	00805684 	movi	r2,346
  804c04:	008052ac 	andhi	r2,zero,330
  804c08:	00805684 	movi	r2,346
  804c0c:	00805684 	movi	r2,346
  804c10:	00805684 	movi	r2,346
  804c14:	00805684 	movi	r2,346
  804c18:	00805398 	cmpnei	r2,zero,334
  804c1c:	00805684 	movi	r2,346
  804c20:	00805684 	movi	r2,346
  804c24:	00805240 	call	80524 <__alt_mem_sdram_0-0x77fadc>
  804c28:	00805684 	movi	r2,346
  804c2c:	00805684 	movi	r2,346
  804c30:	00805684 	movi	r2,346
  804c34:	00805684 	movi	r2,346
  804c38:	00805684 	movi	r2,346
  804c3c:	0080527c 	xorhi	r2,zero,329
  804c40:	00805684 	movi	r2,346
  804c44:	00805684 	movi	r2,346
  804c48:	00805440 	call	80544 <__alt_mem_sdram_0-0x77fabc>
  804c4c:	00805684 	movi	r2,346
  804c50:	00805684 	movi	r2,346
  804c54:	00805684 	movi	r2,346
  804c58:	00805684 	movi	r2,346
  804c5c:	00805684 	movi	r2,346
  804c60:	00805684 	movi	r2,346
  804c64:	00805684 	movi	r2,346
  804c68:	00805684 	movi	r2,346
  804c6c:	00805684 	movi	r2,346
  804c70:	00805684 	movi	r2,346
  804c74:	008054f8 	rdprs	r2,zero,339
  804c78:	008053a8 	cmpgeui	r2,zero,334
  804c7c:	008052ac 	andhi	r2,zero,330
  804c80:	008052ac 	andhi	r2,zero,330
  804c84:	008052ac 	andhi	r2,zero,330
  804c88:	008053e8 	cmpgeui	r2,zero,335
  804c8c:	008053a8 	cmpgeui	r2,zero,334
  804c90:	00805684 	movi	r2,346
  804c94:	00805684 	movi	r2,346
  804c98:	008053f8 	rdprs	r2,zero,335
  804c9c:	00805684 	movi	r2,346
  804ca0:	0080540c 	andi	r2,zero,336
  804ca4:	00805648 	cmpgei	r2,zero,345
  804ca8:	00805350 	cmplti	r2,zero,333
  804cac:	008055fc 	xorhi	r2,zero,343
  804cb0:	00805684 	movi	r2,346
  804cb4:	00805538 	rdprs	r2,zero,340
  804cb8:	00805684 	movi	r2,346
  804cbc:	0080560c 	andi	r2,zero,344
  804cc0:	00805684 	movi	r2,346
  804cc4:	00805684 	movi	r2,346
  804cc8:	008055ac 	andhi	r2,zero,342
  804ccc:	db002a17 	ldw	r12,168(sp)
  804cd0:	8323c83a 	sub	r17,r16,r12
  804cd4:	003f7e06 	br	804ad0 <__alt_data_end+0xff804ad0>
  804cd8:	b009883a 	mov	r4,r22
  804cdc:	b80b883a 	mov	r5,r23
  804ce0:	0806a3c0 	call	806a3c <__swsetup_r>
  804ce4:	10000c1e 	bne	r2,zero,804d18 <___vfprintf_internal_r+0x368>
  804ce8:	b880030b 	ldhu	r2,12(r23)
  804cec:	00c00284 	movi	r3,10
  804cf0:	1080068c 	andi	r2,r2,26
  804cf4:	10ff561e 	bne	r2,r3,804a50 <__alt_data_end+0xff804a50>
  804cf8:	b880038f 	ldh	r2,14(r23)
  804cfc:	103f5416 	blt	r2,zero,804a50 <__alt_data_end+0xff804a50>
  804d00:	d9802a17 	ldw	r6,168(sp)
  804d04:	d9c02d17 	ldw	r7,180(sp)
  804d08:	b009883a 	mov	r4,r22
  804d0c:	b80b883a 	mov	r5,r23
  804d10:	08069240 	call	806924 <__sbprintf>
  804d14:	00000106 	br	804d1c <___vfprintf_internal_r+0x36c>
  804d18:	00bfffc4 	movi	r2,-1
  804d1c:	dfc04917 	ldw	ra,292(sp)
  804d20:	df004817 	ldw	fp,288(sp)
  804d24:	ddc04717 	ldw	r23,284(sp)
  804d28:	dd804617 	ldw	r22,280(sp)
  804d2c:	dd404517 	ldw	r21,276(sp)
  804d30:	dd004417 	ldw	r20,272(sp)
  804d34:	dcc04317 	ldw	r19,268(sp)
  804d38:	dc804217 	ldw	r18,264(sp)
  804d3c:	dc404117 	ldw	r17,260(sp)
  804d40:	dc004017 	ldw	r16,256(sp)
  804d44:	dec04a04 	addi	sp,sp,296
  804d48:	f800283a 	ret
  804d4c:	b009883a 	mov	r4,r22
  804d50:	b80b883a 	mov	r5,r23
  804d54:	d9801e04 	addi	r6,sp,120
  804d58:	08103a00 	call	8103a0 <__sprint_r>
  804d5c:	1000081e 	bne	r2,zero,804d80 <___vfprintf_internal_r+0x3d0>
  804d60:	da000404 	addi	r8,sp,16
  804d64:	003f6706 	br	804b04 <__alt_data_end+0xff804b04>
  804d68:	d8802017 	ldw	r2,128(sp)
  804d6c:	10000426 	beq	r2,zero,804d80 <___vfprintf_internal_r+0x3d0>
  804d70:	b009883a 	mov	r4,r22
  804d74:	b80b883a 	mov	r5,r23
  804d78:	d9801e04 	addi	r6,sp,120
  804d7c:	08103a00 	call	8103a0 <__sprint_r>
  804d80:	b880030b 	ldhu	r2,12(r23)
  804d84:	1080100c 	andi	r2,r2,64
  804d88:	103fe31e 	bne	r2,zero,804d18 <__alt_data_end+0xff804d18>
  804d8c:	d8802f17 	ldw	r2,188(sp)
  804d90:	003fe206 	br	804d1c <__alt_data_end+0xff804d1c>
  804d94:	b009883a 	mov	r4,r22
  804d98:	08012d00 	call	8012d0 <__sinit>
  804d9c:	003f1c06 	br	804a10 <__alt_data_end+0xff804a10>
  804da0:	dc002a17 	ldw	r16,168(sp)
  804da4:	003f5a06 	br	804b10 <__alt_data_end+0xff804b10>
  804da8:	1805883a 	mov	r2,r3
  804dac:	8c400114 	ori	r17,r17,4
  804db0:	1c000007 	ldb	r16,0(r3)
  804db4:	003f6306 	br	804b44 <__alt_data_end+0xff804b44>
  804db8:	1c000007 	ldb	r16,0(r3)
  804dbc:	18800044 	addi	r2,r3,1
  804dc0:	8286ad26 	beq	r16,r10,806878 <___vfprintf_internal_r+0x1ec8>
  804dc4:	82fff404 	addi	r11,r16,-48
  804dc8:	1007883a 	mov	r3,r2
  804dcc:	0013883a 	mov	r9,zero
  804dd0:	2aff5d36 	bltu	r5,r11,804b48 <__alt_data_end+0xff804b48>
  804dd4:	1c000007 	ldb	r16,0(r3)
  804dd8:	4a4002a4 	muli	r9,r9,10
  804ddc:	18c00044 	addi	r3,r3,1
  804de0:	5a53883a 	add	r9,r11,r9
  804de4:	82fff404 	addi	r11,r16,-48
  804de8:	2afffa2e 	bgeu	r5,r11,804dd4 <__alt_data_end+0xff804dd4>
  804dec:	483f560e 	bge	r9,zero,804b48 <__alt_data_end+0xff804b48>
  804df0:	027fffc4 	movi	r9,-1
  804df4:	003f5406 	br	804b48 <__alt_data_end+0xff804b48>
  804df8:	8c402014 	ori	r17,r17,128
  804dfc:	1805883a 	mov	r2,r3
  804e00:	1c000007 	ldb	r16,0(r3)
  804e04:	003f4f06 	br	804b44 <__alt_data_end+0xff804b44>
  804e08:	1805883a 	mov	r2,r3
  804e0c:	d8002e15 	stw	zero,184(sp)
  804e10:	82fff404 	addi	r11,r16,-48
  804e14:	0019883a 	mov	r12,zero
  804e18:	14000007 	ldb	r16,0(r2)
  804e1c:	630002a4 	muli	r12,r12,10
  804e20:	18c00044 	addi	r3,r3,1
  804e24:	1805883a 	mov	r2,r3
  804e28:	62d9883a 	add	r12,r12,r11
  804e2c:	82fff404 	addi	r11,r16,-48
  804e30:	2afff92e 	bgeu	r5,r11,804e18 <__alt_data_end+0xff804e18>
  804e34:	db002e15 	stw	r12,184(sp)
  804e38:	003f4306 	br	804b48 <__alt_data_end+0xff804b48>
  804e3c:	8c400414 	ori	r17,r17,16
  804e40:	d8c02a15 	stw	r3,168(sp)
  804e44:	d9802785 	stb	r6,158(sp)
  804e48:	8880080c 	andi	r2,r17,32
  804e4c:	d8c02d17 	ldw	r3,180(sp)
  804e50:	10015a26 	beq	r2,zero,8053bc <___vfprintf_internal_r+0xa0c>
  804e54:	db002d17 	ldw	r12,180(sp)
  804e58:	18800117 	ldw	r2,4(r3)
  804e5c:	1cc00017 	ldw	r19,0(r3)
  804e60:	63000204 	addi	r12,r12,8
  804e64:	db002d15 	stw	r12,180(sp)
  804e68:	1039883a 	mov	fp,r2
  804e6c:	10044516 	blt	r2,zero,805f84 <___vfprintf_internal_r+0x15d4>
  804e70:	dd402783 	ldbu	r21,158(sp)
  804e74:	da403215 	stw	r9,200(sp)
  804e78:	00800044 	movi	r2,1
  804e7c:	9f06b03a 	or	r3,r19,fp
  804e80:	48000216 	blt	r9,zero,804e8c <___vfprintf_internal_r+0x4dc>
  804e84:	013fdfc4 	movi	r4,-129
  804e88:	8922703a 	and	r17,r17,r4
  804e8c:	1802071e 	bne	r3,zero,8056ac <___vfprintf_internal_r+0xcfc>
  804e90:	4802fa26 	beq	r9,zero,805a7c <___vfprintf_internal_r+0x10cc>
  804e94:	10803fcc 	andi	r2,r2,255
  804e98:	00c00044 	movi	r3,1
  804e9c:	10c22926 	beq	r2,r3,805744 <___vfprintf_internal_r+0xd94>
  804ea0:	00c00084 	movi	r3,2
  804ea4:	10c31726 	beq	r2,r3,805b04 <___vfprintf_internal_r+0x1154>
  804ea8:	d8c01e04 	addi	r3,sp,120
  804eac:	9808d0fa 	srli	r4,r19,3
  804eb0:	e00a977a 	slli	r5,fp,29
  804eb4:	e038d0fa 	srli	fp,fp,3
  804eb8:	9cc001cc 	andi	r19,r19,7
  804ebc:	98800c04 	addi	r2,r19,48
  804ec0:	18ffffc4 	addi	r3,r3,-1
  804ec4:	2926b03a 	or	r19,r5,r4
  804ec8:	18800005 	stb	r2,0(r3)
  804ecc:	9f08b03a 	or	r4,r19,fp
  804ed0:	203ff61e 	bne	r4,zero,804eac <__alt_data_end+0xff804eac>
  804ed4:	8900004c 	andi	r4,r17,1
  804ed8:	d8c03115 	stw	r3,196(sp)
  804edc:	2003931e 	bne	r4,zero,805d2c <___vfprintf_internal_r+0x137c>
  804ee0:	dac02817 	ldw	r11,160(sp)
  804ee4:	58e5c83a 	sub	r18,r11,r3
  804ee8:	9005883a 	mov	r2,r18
  804eec:	9240010e 	bge	r18,r9,804ef4 <___vfprintf_internal_r+0x544>
  804ef0:	4805883a 	mov	r2,r9
  804ef4:	d8802b15 	stw	r2,172(sp)
  804ef8:	d8003415 	stw	zero,208(sp)
  804efc:	a8803fcc 	andi	r2,r21,255
  804f00:	1080201c 	xori	r2,r2,128
  804f04:	10bfe004 	addi	r2,r2,-128
  804f08:	10000326 	beq	r2,zero,804f18 <___vfprintf_internal_r+0x568>
  804f0c:	db002b17 	ldw	r12,172(sp)
  804f10:	63000044 	addi	r12,r12,1
  804f14:	db002b15 	stw	r12,172(sp)
  804f18:	88c0008c 	andi	r3,r17,2
  804f1c:	d8c02c15 	stw	r3,176(sp)
  804f20:	18000326 	beq	r3,zero,804f30 <___vfprintf_internal_r+0x580>
  804f24:	dac02b17 	ldw	r11,172(sp)
  804f28:	5ac00084 	addi	r11,r11,2
  804f2c:	dac02b15 	stw	r11,172(sp)
  804f30:	8b00210c 	andi	r12,r17,132
  804f34:	db003015 	stw	r12,192(sp)
  804f38:	6001da1e 	bne	r12,zero,8056a4 <___vfprintf_internal_r+0xcf4>
  804f3c:	dac02e17 	ldw	r11,184(sp)
  804f40:	db002b17 	ldw	r12,172(sp)
  804f44:	5b39c83a 	sub	fp,r11,r12
  804f48:	0701d60e 	bge	zero,fp,8056a4 <___vfprintf_internal_r+0xcf4>
  804f4c:	02400404 	movi	r9,16
  804f50:	d8c02017 	ldw	r3,128(sp)
  804f54:	d8801f17 	ldw	r2,124(sp)
  804f58:	4f053c0e 	bge	r9,fp,80644c <___vfprintf_internal_r+0x1a9c>
  804f5c:	014020b4 	movhi	r5,130
  804f60:	296dd584 	addi	r5,r5,-18602
  804f64:	d9403615 	stw	r5,216(sp)
  804f68:	482b883a 	mov	r21,r9
  804f6c:	04c001c4 	movi	r19,7
  804f70:	00000306 	br	804f80 <___vfprintf_internal_r+0x5d0>
  804f74:	e73ffc04 	addi	fp,fp,-16
  804f78:	42000204 	addi	r8,r8,8
  804f7c:	af00130e 	bge	r21,fp,804fcc <___vfprintf_internal_r+0x61c>
  804f80:	02c020b4 	movhi	r11,130
  804f84:	18c00404 	addi	r3,r3,16
  804f88:	10800044 	addi	r2,r2,1
  804f8c:	5aedd584 	addi	r11,r11,-18602
  804f90:	42c00015 	stw	r11,0(r8)
  804f94:	45400115 	stw	r21,4(r8)
  804f98:	d8c02015 	stw	r3,128(sp)
  804f9c:	d8801f15 	stw	r2,124(sp)
  804fa0:	98bff40e 	bge	r19,r2,804f74 <__alt_data_end+0xff804f74>
  804fa4:	b009883a 	mov	r4,r22
  804fa8:	b80b883a 	mov	r5,r23
  804fac:	d9801e04 	addi	r6,sp,120
  804fb0:	08103a00 	call	8103a0 <__sprint_r>
  804fb4:	103f721e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  804fb8:	e73ffc04 	addi	fp,fp,-16
  804fbc:	d8c02017 	ldw	r3,128(sp)
  804fc0:	d8801f17 	ldw	r2,124(sp)
  804fc4:	da000404 	addi	r8,sp,16
  804fc8:	af3fed16 	blt	r21,fp,804f80 <__alt_data_end+0xff804f80>
  804fcc:	db003617 	ldw	r12,216(sp)
  804fd0:	e0c7883a 	add	r3,fp,r3
  804fd4:	10800044 	addi	r2,r2,1
  804fd8:	43000015 	stw	r12,0(r8)
  804fdc:	47000115 	stw	fp,4(r8)
  804fe0:	d8c02015 	stw	r3,128(sp)
  804fe4:	d8801f15 	stw	r2,124(sp)
  804fe8:	010001c4 	movi	r4,7
  804fec:	20830e16 	blt	r4,r2,805c28 <___vfprintf_internal_r+0x1278>
  804ff0:	d8802787 	ldb	r2,158(sp)
  804ff4:	42000204 	addi	r8,r8,8
  804ff8:	10000c26 	beq	r2,zero,80502c <___vfprintf_internal_r+0x67c>
  804ffc:	d8801f17 	ldw	r2,124(sp)
  805000:	d9002784 	addi	r4,sp,158
  805004:	18c00044 	addi	r3,r3,1
  805008:	10800044 	addi	r2,r2,1
  80500c:	41000015 	stw	r4,0(r8)
  805010:	01000044 	movi	r4,1
  805014:	41000115 	stw	r4,4(r8)
  805018:	d8c02015 	stw	r3,128(sp)
  80501c:	d8801f15 	stw	r2,124(sp)
  805020:	010001c4 	movi	r4,7
  805024:	2082a716 	blt	r4,r2,805ac4 <___vfprintf_internal_r+0x1114>
  805028:	42000204 	addi	r8,r8,8
  80502c:	dac02c17 	ldw	r11,176(sp)
  805030:	58000c26 	beq	r11,zero,805064 <___vfprintf_internal_r+0x6b4>
  805034:	d8801f17 	ldw	r2,124(sp)
  805038:	d9002704 	addi	r4,sp,156
  80503c:	18c00084 	addi	r3,r3,2
  805040:	10800044 	addi	r2,r2,1
  805044:	41000015 	stw	r4,0(r8)
  805048:	01000084 	movi	r4,2
  80504c:	41000115 	stw	r4,4(r8)
  805050:	d8c02015 	stw	r3,128(sp)
  805054:	d8801f15 	stw	r2,124(sp)
  805058:	010001c4 	movi	r4,7
  80505c:	2082a116 	blt	r4,r2,805ae4 <___vfprintf_internal_r+0x1134>
  805060:	42000204 	addi	r8,r8,8
  805064:	db003017 	ldw	r12,192(sp)
  805068:	00802004 	movi	r2,128
  80506c:	60820326 	beq	r12,r2,80587c <___vfprintf_internal_r+0xecc>
  805070:	db003217 	ldw	r12,200(sp)
  805074:	64abc83a 	sub	r21,r12,r18
  805078:	0540260e 	bge	zero,r21,805114 <___vfprintf_internal_r+0x764>
  80507c:	07000404 	movi	fp,16
  805080:	d8801f17 	ldw	r2,124(sp)
  805084:	e544570e 	bge	fp,r21,8061e4 <___vfprintf_internal_r+0x1834>
  805088:	014020b4 	movhi	r5,130
  80508c:	296dd184 	addi	r5,r5,-18618
  805090:	d9402c15 	stw	r5,176(sp)
  805094:	04c001c4 	movi	r19,7
  805098:	00000306 	br	8050a8 <___vfprintf_internal_r+0x6f8>
  80509c:	ad7ffc04 	addi	r21,r21,-16
  8050a0:	42000204 	addi	r8,r8,8
  8050a4:	e540110e 	bge	fp,r21,8050ec <___vfprintf_internal_r+0x73c>
  8050a8:	18c00404 	addi	r3,r3,16
  8050ac:	10800044 	addi	r2,r2,1
  8050b0:	45000015 	stw	r20,0(r8)
  8050b4:	47000115 	stw	fp,4(r8)
  8050b8:	d8c02015 	stw	r3,128(sp)
  8050bc:	d8801f15 	stw	r2,124(sp)
  8050c0:	98bff60e 	bge	r19,r2,80509c <__alt_data_end+0xff80509c>
  8050c4:	b009883a 	mov	r4,r22
  8050c8:	b80b883a 	mov	r5,r23
  8050cc:	d9801e04 	addi	r6,sp,120
  8050d0:	08103a00 	call	8103a0 <__sprint_r>
  8050d4:	103f2a1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  8050d8:	ad7ffc04 	addi	r21,r21,-16
  8050dc:	d8c02017 	ldw	r3,128(sp)
  8050e0:	d8801f17 	ldw	r2,124(sp)
  8050e4:	da000404 	addi	r8,sp,16
  8050e8:	e57fef16 	blt	fp,r21,8050a8 <__alt_data_end+0xff8050a8>
  8050ec:	dac02c17 	ldw	r11,176(sp)
  8050f0:	1d47883a 	add	r3,r3,r21
  8050f4:	10800044 	addi	r2,r2,1
  8050f8:	42c00015 	stw	r11,0(r8)
  8050fc:	45400115 	stw	r21,4(r8)
  805100:	d8c02015 	stw	r3,128(sp)
  805104:	d8801f15 	stw	r2,124(sp)
  805108:	010001c4 	movi	r4,7
  80510c:	20826516 	blt	r4,r2,805aa4 <___vfprintf_internal_r+0x10f4>
  805110:	42000204 	addi	r8,r8,8
  805114:	8880400c 	andi	r2,r17,256
  805118:	1001901e 	bne	r2,zero,80575c <___vfprintf_internal_r+0xdac>
  80511c:	d8801f17 	ldw	r2,124(sp)
  805120:	db003117 	ldw	r12,196(sp)
  805124:	1c87883a 	add	r3,r3,r18
  805128:	10800044 	addi	r2,r2,1
  80512c:	43000015 	stw	r12,0(r8)
  805130:	44800115 	stw	r18,4(r8)
  805134:	d8c02015 	stw	r3,128(sp)
  805138:	d8801f15 	stw	r2,124(sp)
  80513c:	010001c4 	movi	r4,7
  805140:	20824016 	blt	r4,r2,805a44 <___vfprintf_internal_r+0x1094>
  805144:	42000204 	addi	r8,r8,8
  805148:	8c40010c 	andi	r17,r17,4
  80514c:	88003126 	beq	r17,zero,805214 <___vfprintf_internal_r+0x864>
  805150:	db002e17 	ldw	r12,184(sp)
  805154:	dac02b17 	ldw	r11,172(sp)
  805158:	62e1c83a 	sub	r16,r12,r11
  80515c:	04002d0e 	bge	zero,r16,805214 <___vfprintf_internal_r+0x864>
  805160:	04400404 	movi	r17,16
  805164:	d8801f17 	ldw	r2,124(sp)
  805168:	8c05150e 	bge	r17,r16,8065c0 <___vfprintf_internal_r+0x1c10>
  80516c:	010020b4 	movhi	r4,130
  805170:	212dd584 	addi	r4,r4,-18602
  805174:	d9003615 	stw	r4,216(sp)
  805178:	048001c4 	movi	r18,7
  80517c:	00000306 	br	80518c <___vfprintf_internal_r+0x7dc>
  805180:	843ffc04 	addi	r16,r16,-16
  805184:	42000204 	addi	r8,r8,8
  805188:	8c00130e 	bge	r17,r16,8051d8 <___vfprintf_internal_r+0x828>
  80518c:	014020b4 	movhi	r5,130
  805190:	18c00404 	addi	r3,r3,16
  805194:	10800044 	addi	r2,r2,1
  805198:	296dd584 	addi	r5,r5,-18602
  80519c:	41400015 	stw	r5,0(r8)
  8051a0:	44400115 	stw	r17,4(r8)
  8051a4:	d8c02015 	stw	r3,128(sp)
  8051a8:	d8801f15 	stw	r2,124(sp)
  8051ac:	90bff40e 	bge	r18,r2,805180 <__alt_data_end+0xff805180>
  8051b0:	b009883a 	mov	r4,r22
  8051b4:	b80b883a 	mov	r5,r23
  8051b8:	d9801e04 	addi	r6,sp,120
  8051bc:	08103a00 	call	8103a0 <__sprint_r>
  8051c0:	103eef1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  8051c4:	843ffc04 	addi	r16,r16,-16
  8051c8:	d8c02017 	ldw	r3,128(sp)
  8051cc:	d8801f17 	ldw	r2,124(sp)
  8051d0:	da000404 	addi	r8,sp,16
  8051d4:	8c3fed16 	blt	r17,r16,80518c <__alt_data_end+0xff80518c>
  8051d8:	dac03617 	ldw	r11,216(sp)
  8051dc:	1c07883a 	add	r3,r3,r16
  8051e0:	10800044 	addi	r2,r2,1
  8051e4:	42c00015 	stw	r11,0(r8)
  8051e8:	44000115 	stw	r16,4(r8)
  8051ec:	d8c02015 	stw	r3,128(sp)
  8051f0:	d8801f15 	stw	r2,124(sp)
  8051f4:	010001c4 	movi	r4,7
  8051f8:	2080060e 	bge	r4,r2,805214 <___vfprintf_internal_r+0x864>
  8051fc:	b009883a 	mov	r4,r22
  805200:	b80b883a 	mov	r5,r23
  805204:	d9801e04 	addi	r6,sp,120
  805208:	08103a00 	call	8103a0 <__sprint_r>
  80520c:	103edc1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805210:	d8c02017 	ldw	r3,128(sp)
  805214:	d8802b17 	ldw	r2,172(sp)
  805218:	db002e17 	ldw	r12,184(sp)
  80521c:	1300010e 	bge	r2,r12,805224 <___vfprintf_internal_r+0x874>
  805220:	6005883a 	mov	r2,r12
  805224:	dac02f17 	ldw	r11,188(sp)
  805228:	5897883a 	add	r11,r11,r2
  80522c:	dac02f15 	stw	r11,188(sp)
  805230:	18020c1e 	bne	r3,zero,805a64 <___vfprintf_internal_r+0x10b4>
  805234:	d8001f15 	stw	zero,124(sp)
  805238:	da000404 	addi	r8,sp,16
  80523c:	003e1706 	br	804a9c <__alt_data_end+0xff804a9c>
  805240:	8c400414 	ori	r17,r17,16
  805244:	d8c02a15 	stw	r3,168(sp)
  805248:	8880080c 	andi	r2,r17,32
  80524c:	10010126 	beq	r2,zero,805654 <___vfprintf_internal_r+0xca4>
  805250:	db002d17 	ldw	r12,180(sp)
  805254:	0005883a 	mov	r2,zero
  805258:	64c00017 	ldw	r19,0(r12)
  80525c:	67000117 	ldw	fp,4(r12)
  805260:	63000204 	addi	r12,r12,8
  805264:	db002d15 	stw	r12,180(sp)
  805268:	9f06b03a 	or	r3,r19,fp
  80526c:	d8002785 	stb	zero,158(sp)
  805270:	da403215 	stw	r9,200(sp)
  805274:	002b883a 	mov	r21,zero
  805278:	003f0106 	br	804e80 <__alt_data_end+0xff804e80>
  80527c:	8c400414 	ori	r17,r17,16
  805280:	d8c02a15 	stw	r3,168(sp)
  805284:	8880080c 	andi	r2,r17,32
  805288:	1000e326 	beq	r2,zero,805618 <___vfprintf_internal_r+0xc68>
  80528c:	dac02d17 	ldw	r11,180(sp)
  805290:	00800044 	movi	r2,1
  805294:	5cc00017 	ldw	r19,0(r11)
  805298:	5f000117 	ldw	fp,4(r11)
  80529c:	5ac00204 	addi	r11,r11,8
  8052a0:	dac02d15 	stw	r11,180(sp)
  8052a4:	9f06b03a 	or	r3,r19,fp
  8052a8:	003ff006 	br	80526c <__alt_data_end+0xff80526c>
  8052ac:	db002d17 	ldw	r12,180(sp)
  8052b0:	dac02d17 	ldw	r11,180(sp)
  8052b4:	d8c02a15 	stw	r3,168(sp)
  8052b8:	63000017 	ldw	r12,0(r12)
  8052bc:	5ac00117 	ldw	r11,4(r11)
  8052c0:	d9802785 	stb	r6,158(sp)
  8052c4:	6009883a 	mov	r4,r12
  8052c8:	580b883a 	mov	r5,r11
  8052cc:	db003715 	stw	r12,220(sp)
  8052d0:	da003f15 	stw	r8,252(sp)
  8052d4:	da403e15 	stw	r9,248(sp)
  8052d8:	dac03915 	stw	r11,228(sp)
  8052dc:	080a8a80 	call	80a8a8 <__fpclassifyd>
  8052e0:	db002d17 	ldw	r12,180(sp)
  8052e4:	04800044 	movi	r18,1
  8052e8:	da003f17 	ldw	r8,252(sp)
  8052ec:	64c00204 	addi	r19,r12,8
  8052f0:	da403e17 	ldw	r9,248(sp)
  8052f4:	d9003717 	ldw	r4,220(sp)
  8052f8:	d9403917 	ldw	r5,228(sp)
  8052fc:	14832b1e 	bne	r2,r18,805fac <___vfprintf_internal_r+0x15fc>
  805300:	000d883a 	mov	r6,zero
  805304:	000f883a 	mov	r7,zero
  805308:	0815dac0 	call	815dac <__ledf2>
  80530c:	da003f17 	ldw	r8,252(sp)
  805310:	1004b716 	blt	r2,zero,8065f0 <___vfprintf_internal_r+0x1c40>
  805314:	dd402783 	ldbu	r21,158(sp)
  805318:	008011c4 	movi	r2,71
  80531c:	14040e0e 	bge	r2,r16,806358 <___vfprintf_internal_r+0x19a8>
  805320:	00c020b4 	movhi	r3,130
  805324:	18edc204 	addi	r3,r3,-18680
  805328:	d8c03115 	stw	r3,196(sp)
  80532c:	02c000c4 	movi	r11,3
  805330:	00bfdfc4 	movi	r2,-129
  805334:	dac02b15 	stw	r11,172(sp)
  805338:	88a2703a 	and	r17,r17,r2
  80533c:	dcc02d15 	stw	r19,180(sp)
  805340:	5825883a 	mov	r18,r11
  805344:	d8003215 	stw	zero,200(sp)
  805348:	d8003415 	stw	zero,208(sp)
  80534c:	003eeb06 	br	804efc <__alt_data_end+0xff804efc>
  805350:	db002d17 	ldw	r12,180(sp)
  805354:	00800c04 	movi	r2,48
  805358:	d8802705 	stb	r2,156(sp)
  80535c:	64c00017 	ldw	r19,0(r12)
  805360:	00801e04 	movi	r2,120
  805364:	d8802745 	stb	r2,157(sp)
  805368:	008020b4 	movhi	r2,130
  80536c:	10adca04 	addi	r2,r2,-18648
  805370:	63000104 	addi	r12,r12,4
  805374:	d8c02a15 	stw	r3,168(sp)
  805378:	d8803b15 	stw	r2,236(sp)
  80537c:	0039883a 	mov	fp,zero
  805380:	8c400094 	ori	r17,r17,2
  805384:	db002d15 	stw	r12,180(sp)
  805388:	00800084 	movi	r2,2
  80538c:	04001e04 	movi	r16,120
  805390:	9807883a 	mov	r3,r19
  805394:	003fb506 	br	80526c <__alt_data_end+0xff80526c>
  805398:	8c400214 	ori	r17,r17,8
  80539c:	1805883a 	mov	r2,r3
  8053a0:	1c000007 	ldb	r16,0(r3)
  8053a4:	003de706 	br	804b44 <__alt_data_end+0xff804b44>
  8053a8:	d8c02a15 	stw	r3,168(sp)
  8053ac:	d9802785 	stb	r6,158(sp)
  8053b0:	8880080c 	andi	r2,r17,32
  8053b4:	d8c02d17 	ldw	r3,180(sp)
  8053b8:	103ea61e 	bne	r2,zero,804e54 <__alt_data_end+0xff804e54>
  8053bc:	8880040c 	andi	r2,r17,16
  8053c0:	1002221e 	bne	r2,zero,805c4c <___vfprintf_internal_r+0x129c>
  8053c4:	8880100c 	andi	r2,r17,64
  8053c8:	10022026 	beq	r2,zero,805c4c <___vfprintf_internal_r+0x129c>
  8053cc:	1cc0000f 	ldh	r19,0(r3)
  8053d0:	db002d17 	ldw	r12,180(sp)
  8053d4:	9839d7fa 	srai	fp,r19,31
  8053d8:	63000104 	addi	r12,r12,4
  8053dc:	db002d15 	stw	r12,180(sp)
  8053e0:	e005883a 	mov	r2,fp
  8053e4:	003ea106 	br	804e6c <__alt_data_end+0xff804e6c>
  8053e8:	8c401014 	ori	r17,r17,64
  8053ec:	1805883a 	mov	r2,r3
  8053f0:	1c000007 	ldb	r16,0(r3)
  8053f4:	003dd306 	br	804b44 <__alt_data_end+0xff804b44>
  8053f8:	1c000007 	ldb	r16,0(r3)
  8053fc:	81c3e926 	beq	r16,r7,8063a4 <___vfprintf_internal_r+0x19f4>
  805400:	8c400414 	ori	r17,r17,16
  805404:	1805883a 	mov	r2,r3
  805408:	003dce06 	br	804b44 <__alt_data_end+0xff804b44>
  80540c:	d8c02a15 	stw	r3,168(sp)
  805410:	d9802785 	stb	r6,158(sp)
  805414:	8880080c 	andi	r2,r17,32
  805418:	10034726 	beq	r2,zero,806138 <___vfprintf_internal_r+0x1788>
  80541c:	db002d17 	ldw	r12,180(sp)
  805420:	dac02f17 	ldw	r11,188(sp)
  805424:	60800017 	ldw	r2,0(r12)
  805428:	5807d7fa 	srai	r3,r11,31
  80542c:	63000104 	addi	r12,r12,4
  805430:	db002d15 	stw	r12,180(sp)
  805434:	12c00015 	stw	r11,0(r2)
  805438:	10c00115 	stw	r3,4(r2)
  80543c:	003d9706 	br	804a9c <__alt_data_end+0xff804a9c>
  805440:	030020b4 	movhi	r12,130
  805444:	632dc504 	addi	r12,r12,-18668
  805448:	d8c02a15 	stw	r3,168(sp)
  80544c:	d9802785 	stb	r6,158(sp)
  805450:	db003b15 	stw	r12,236(sp)
  805454:	88c0080c 	andi	r3,r17,32
  805458:	d8802d17 	ldw	r2,180(sp)
  80545c:	18005b26 	beq	r3,zero,8055cc <___vfprintf_internal_r+0xc1c>
  805460:	dac02d17 	ldw	r11,180(sp)
  805464:	14c00017 	ldw	r19,0(r2)
  805468:	17000117 	ldw	fp,4(r2)
  80546c:	5ac00204 	addi	r11,r11,8
  805470:	dac02d15 	stw	r11,180(sp)
  805474:	8880004c 	andi	r2,r17,1
  805478:	10022926 	beq	r2,zero,805d20 <___vfprintf_internal_r+0x1370>
  80547c:	9f06b03a 	or	r3,r19,fp
  805480:	18032b26 	beq	r3,zero,806130 <___vfprintf_internal_r+0x1780>
  805484:	00800c04 	movi	r2,48
  805488:	d8802705 	stb	r2,156(sp)
  80548c:	dc002745 	stb	r16,157(sp)
  805490:	8c400094 	ori	r17,r17,2
  805494:	00800084 	movi	r2,2
  805498:	003f7406 	br	80526c <__alt_data_end+0xff80526c>
  80549c:	30803fcc 	andi	r2,r6,255
  8054a0:	1080201c 	xori	r2,r2,128
  8054a4:	10bfe004 	addi	r2,r2,-128
  8054a8:	1003351e 	bne	r2,zero,806180 <___vfprintf_internal_r+0x17d0>
  8054ac:	1805883a 	mov	r2,r3
  8054b0:	01800804 	movi	r6,32
  8054b4:	1c000007 	ldb	r16,0(r3)
  8054b8:	003da206 	br	804b44 <__alt_data_end+0xff804b44>
  8054bc:	dac02d17 	ldw	r11,180(sp)
  8054c0:	db002d17 	ldw	r12,180(sp)
  8054c4:	5ac00017 	ldw	r11,0(r11)
  8054c8:	dac02e15 	stw	r11,184(sp)
  8054cc:	62c00104 	addi	r11,r12,4
  8054d0:	db002e17 	ldw	r12,184(sp)
  8054d4:	6003ad16 	blt	r12,zero,80638c <___vfprintf_internal_r+0x19dc>
  8054d8:	dac02d15 	stw	r11,180(sp)
  8054dc:	1805883a 	mov	r2,r3
  8054e0:	1c000007 	ldb	r16,0(r3)
  8054e4:	003d9706 	br	804b44 <__alt_data_end+0xff804b44>
  8054e8:	1805883a 	mov	r2,r3
  8054ec:	01800ac4 	movi	r6,43
  8054f0:	1c000007 	ldb	r16,0(r3)
  8054f4:	003d9306 	br	804b44 <__alt_data_end+0xff804b44>
  8054f8:	db002d17 	ldw	r12,180(sp)
  8054fc:	d8c02a15 	stw	r3,168(sp)
  805500:	00c00044 	movi	r3,1
  805504:	60800017 	ldw	r2,0(r12)
  805508:	63000104 	addi	r12,r12,4
  80550c:	d8c02b15 	stw	r3,172(sp)
  805510:	d8002785 	stb	zero,158(sp)
  805514:	d8801405 	stb	r2,80(sp)
  805518:	db002d15 	stw	r12,180(sp)
  80551c:	dac01404 	addi	r11,sp,80
  805520:	1825883a 	mov	r18,r3
  805524:	d8003215 	stw	zero,200(sp)
  805528:	d8003415 	stw	zero,208(sp)
  80552c:	dac03115 	stw	r11,196(sp)
  805530:	0005883a 	mov	r2,zero
  805534:	003e7806 	br	804f18 <__alt_data_end+0xff804f18>
  805538:	dac02d17 	ldw	r11,180(sp)
  80553c:	db002d17 	ldw	r12,180(sp)
  805540:	d8c02a15 	stw	r3,168(sp)
  805544:	5ac00017 	ldw	r11,0(r11)
  805548:	d8002785 	stb	zero,158(sp)
  80554c:	64c00104 	addi	r19,r12,4
  805550:	dac03115 	stw	r11,196(sp)
  805554:	5803fe26 	beq	r11,zero,806550 <___vfprintf_internal_r+0x1ba0>
  805558:	d9003117 	ldw	r4,196(sp)
  80555c:	4803b416 	blt	r9,zero,806430 <___vfprintf_internal_r+0x1a80>
  805560:	480d883a 	mov	r6,r9
  805564:	000b883a 	mov	r5,zero
  805568:	da003f15 	stw	r8,252(sp)
  80556c:	da403e15 	stw	r9,248(sp)
  805570:	0808e5c0 	call	808e5c <memchr>
  805574:	da003f17 	ldw	r8,252(sp)
  805578:	da403e17 	ldw	r9,248(sp)
  80557c:	10043026 	beq	r2,zero,806640 <___vfprintf_internal_r+0x1c90>
  805580:	d8c03117 	ldw	r3,196(sp)
  805584:	10e5c83a 	sub	r18,r2,r3
  805588:	4c836b16 	blt	r9,r18,806338 <___vfprintf_internal_r+0x1988>
  80558c:	9005883a 	mov	r2,r18
  805590:	9003ac16 	blt	r18,zero,806444 <___vfprintf_internal_r+0x1a94>
  805594:	dd402783 	ldbu	r21,158(sp)
  805598:	d8802b15 	stw	r2,172(sp)
  80559c:	dcc02d15 	stw	r19,180(sp)
  8055a0:	d8003215 	stw	zero,200(sp)
  8055a4:	d8003415 	stw	zero,208(sp)
  8055a8:	003e5406 	br	804efc <__alt_data_end+0xff804efc>
  8055ac:	008020b4 	movhi	r2,130
  8055b0:	10adca04 	addi	r2,r2,-18648
  8055b4:	d8c02a15 	stw	r3,168(sp)
  8055b8:	d8803b15 	stw	r2,236(sp)
  8055bc:	d9802785 	stb	r6,158(sp)
  8055c0:	88c0080c 	andi	r3,r17,32
  8055c4:	d8802d17 	ldw	r2,180(sp)
  8055c8:	183fa51e 	bne	r3,zero,805460 <__alt_data_end+0xff805460>
  8055cc:	88c0040c 	andi	r3,r17,16
  8055d0:	1802ee26 	beq	r3,zero,80618c <___vfprintf_internal_r+0x17dc>
  8055d4:	db002d17 	ldw	r12,180(sp)
  8055d8:	14c00017 	ldw	r19,0(r2)
  8055dc:	0039883a 	mov	fp,zero
  8055e0:	63000104 	addi	r12,r12,4
  8055e4:	db002d15 	stw	r12,180(sp)
  8055e8:	003fa206 	br	805474 <__alt_data_end+0xff805474>
  8055ec:	8c400054 	ori	r17,r17,1
  8055f0:	1805883a 	mov	r2,r3
  8055f4:	1c000007 	ldb	r16,0(r3)
  8055f8:	003d5206 	br	804b44 <__alt_data_end+0xff804b44>
  8055fc:	8c400814 	ori	r17,r17,32
  805600:	1805883a 	mov	r2,r3
  805604:	1c000007 	ldb	r16,0(r3)
  805608:	003d4e06 	br	804b44 <__alt_data_end+0xff804b44>
  80560c:	d8c02a15 	stw	r3,168(sp)
  805610:	8880080c 	andi	r2,r17,32
  805614:	103f1d1e 	bne	r2,zero,80528c <__alt_data_end+0xff80528c>
  805618:	8880040c 	andi	r2,r17,16
  80561c:	1001b81e 	bne	r2,zero,805d00 <___vfprintf_internal_r+0x1350>
  805620:	8880100c 	andi	r2,r17,64
  805624:	1001b626 	beq	r2,zero,805d00 <___vfprintf_internal_r+0x1350>
  805628:	dac02d17 	ldw	r11,180(sp)
  80562c:	0039883a 	mov	fp,zero
  805630:	00800044 	movi	r2,1
  805634:	5cc0000b 	ldhu	r19,0(r11)
  805638:	5ac00104 	addi	r11,r11,4
  80563c:	dac02d15 	stw	r11,180(sp)
  805640:	9807883a 	mov	r3,r19
  805644:	003f0906 	br	80526c <__alt_data_end+0xff80526c>
  805648:	d8c02a15 	stw	r3,168(sp)
  80564c:	8880080c 	andi	r2,r17,32
  805650:	103eff1e 	bne	r2,zero,805250 <__alt_data_end+0xff805250>
  805654:	8880040c 	andi	r2,r17,16
  805658:	1001a11e 	bne	r2,zero,805ce0 <___vfprintf_internal_r+0x1330>
  80565c:	8880100c 	andi	r2,r17,64
  805660:	10019f26 	beq	r2,zero,805ce0 <___vfprintf_internal_r+0x1330>
  805664:	db002d17 	ldw	r12,180(sp)
  805668:	0039883a 	mov	fp,zero
  80566c:	0005883a 	mov	r2,zero
  805670:	64c0000b 	ldhu	r19,0(r12)
  805674:	63000104 	addi	r12,r12,4
  805678:	db002d15 	stw	r12,180(sp)
  80567c:	9807883a 	mov	r3,r19
  805680:	003efa06 	br	80526c <__alt_data_end+0xff80526c>
  805684:	d8c02a15 	stw	r3,168(sp)
  805688:	d9802785 	stb	r6,158(sp)
  80568c:	803db626 	beq	r16,zero,804d68 <__alt_data_end+0xff804d68>
  805690:	00c00044 	movi	r3,1
  805694:	d8c02b15 	stw	r3,172(sp)
  805698:	dc001405 	stb	r16,80(sp)
  80569c:	d8002785 	stb	zero,158(sp)
  8056a0:	003f9e06 	br	80551c <__alt_data_end+0xff80551c>
  8056a4:	d8c02017 	ldw	r3,128(sp)
  8056a8:	003e5306 	br	804ff8 <__alt_data_end+0xff804ff8>
  8056ac:	10803fcc 	andi	r2,r2,255
  8056b0:	00c00044 	movi	r3,1
  8056b4:	10fdfa1e 	bne	r2,r3,804ea0 <__alt_data_end+0xff804ea0>
  8056b8:	e000021e 	bne	fp,zero,8056c4 <___vfprintf_internal_r+0xd14>
  8056bc:	00800244 	movi	r2,9
  8056c0:	14c0202e 	bgeu	r2,r19,805744 <___vfprintf_internal_r+0xd94>
  8056c4:	dc002b15 	stw	r16,172(sp)
  8056c8:	dc402c15 	stw	r17,176(sp)
  8056cc:	9821883a 	mov	r16,r19
  8056d0:	e023883a 	mov	r17,fp
  8056d4:	dc801e04 	addi	r18,sp,120
  8056d8:	4827883a 	mov	r19,r9
  8056dc:	4039883a 	mov	fp,r8
  8056e0:	8009883a 	mov	r4,r16
  8056e4:	880b883a 	mov	r5,r17
  8056e8:	01800284 	movi	r6,10
  8056ec:	000f883a 	mov	r7,zero
  8056f0:	08142400 	call	814240 <__umoddi3>
  8056f4:	10800c04 	addi	r2,r2,48
  8056f8:	94bfffc4 	addi	r18,r18,-1
  8056fc:	8009883a 	mov	r4,r16
  805700:	880b883a 	mov	r5,r17
  805704:	01800284 	movi	r6,10
  805708:	000f883a 	mov	r7,zero
  80570c:	90800005 	stb	r2,0(r18)
  805710:	0813c800 	call	813c80 <__udivdi3>
  805714:	1021883a 	mov	r16,r2
  805718:	10c4b03a 	or	r2,r2,r3
  80571c:	1823883a 	mov	r17,r3
  805720:	103fef1e 	bne	r2,zero,8056e0 <__alt_data_end+0xff8056e0>
  805724:	dac02817 	ldw	r11,160(sp)
  805728:	dc803115 	stw	r18,196(sp)
  80572c:	dc002b17 	ldw	r16,172(sp)
  805730:	dc402c17 	ldw	r17,176(sp)
  805734:	9813883a 	mov	r9,r19
  805738:	e011883a 	mov	r8,fp
  80573c:	5ca5c83a 	sub	r18,r11,r18
  805740:	003de906 	br	804ee8 <__alt_data_end+0xff804ee8>
  805744:	9cc00c04 	addi	r19,r19,48
  805748:	d8c01dc4 	addi	r3,sp,119
  80574c:	dcc01dc5 	stb	r19,119(sp)
  805750:	dc803c17 	ldw	r18,240(sp)
  805754:	d8c03115 	stw	r3,196(sp)
  805758:	003de306 	br	804ee8 <__alt_data_end+0xff804ee8>
  80575c:	00801944 	movi	r2,101
  805760:	1400710e 	bge	r2,r16,805928 <___vfprintf_internal_r+0xf78>
  805764:	d9003717 	ldw	r4,220(sp)
  805768:	d9403917 	ldw	r5,228(sp)
  80576c:	000d883a 	mov	r6,zero
  805770:	000f883a 	mov	r7,zero
  805774:	d8c03d15 	stw	r3,244(sp)
  805778:	da003f15 	stw	r8,252(sp)
  80577c:	0815c480 	call	815c48 <__eqdf2>
  805780:	d8c03d17 	ldw	r3,244(sp)
  805784:	da003f17 	ldw	r8,252(sp)
  805788:	1000ef1e 	bne	r2,zero,805b48 <___vfprintf_internal_r+0x1198>
  80578c:	d8801f17 	ldw	r2,124(sp)
  805790:	010020b4 	movhi	r4,130
  805794:	212dd104 	addi	r4,r4,-18620
  805798:	18c00044 	addi	r3,r3,1
  80579c:	10800044 	addi	r2,r2,1
  8057a0:	41000015 	stw	r4,0(r8)
  8057a4:	01000044 	movi	r4,1
  8057a8:	41000115 	stw	r4,4(r8)
  8057ac:	d8c02015 	stw	r3,128(sp)
  8057b0:	d8801f15 	stw	r2,124(sp)
  8057b4:	010001c4 	movi	r4,7
  8057b8:	20828e16 	blt	r4,r2,8061f4 <___vfprintf_internal_r+0x1844>
  8057bc:	42000204 	addi	r8,r8,8
  8057c0:	d8802617 	ldw	r2,152(sp)
  8057c4:	dac03317 	ldw	r11,204(sp)
  8057c8:	12c00216 	blt	r2,r11,8057d4 <___vfprintf_internal_r+0xe24>
  8057cc:	8880004c 	andi	r2,r17,1
  8057d0:	103e5d26 	beq	r2,zero,805148 <__alt_data_end+0xff805148>
  8057d4:	db003817 	ldw	r12,224(sp)
  8057d8:	d8801f17 	ldw	r2,124(sp)
  8057dc:	dac03517 	ldw	r11,212(sp)
  8057e0:	1b07883a 	add	r3,r3,r12
  8057e4:	10800044 	addi	r2,r2,1
  8057e8:	42c00015 	stw	r11,0(r8)
  8057ec:	43000115 	stw	r12,4(r8)
  8057f0:	d8c02015 	stw	r3,128(sp)
  8057f4:	d8801f15 	stw	r2,124(sp)
  8057f8:	010001c4 	movi	r4,7
  8057fc:	2082ed16 	blt	r4,r2,8063b4 <___vfprintf_internal_r+0x1a04>
  805800:	42000204 	addi	r8,r8,8
  805804:	db003317 	ldw	r12,204(sp)
  805808:	643fffc4 	addi	r16,r12,-1
  80580c:	043e4e0e 	bge	zero,r16,805148 <__alt_data_end+0xff805148>
  805810:	04800404 	movi	r18,16
  805814:	d8801f17 	ldw	r2,124(sp)
  805818:	94007e0e 	bge	r18,r16,805a14 <___vfprintf_internal_r+0x1064>
  80581c:	014020b4 	movhi	r5,130
  805820:	296dd184 	addi	r5,r5,-18618
  805824:	d9402c15 	stw	r5,176(sp)
  805828:	054001c4 	movi	r21,7
  80582c:	00000306 	br	80583c <___vfprintf_internal_r+0xe8c>
  805830:	42000204 	addi	r8,r8,8
  805834:	843ffc04 	addi	r16,r16,-16
  805838:	9400790e 	bge	r18,r16,805a20 <___vfprintf_internal_r+0x1070>
  80583c:	18c00404 	addi	r3,r3,16
  805840:	10800044 	addi	r2,r2,1
  805844:	45000015 	stw	r20,0(r8)
  805848:	44800115 	stw	r18,4(r8)
  80584c:	d8c02015 	stw	r3,128(sp)
  805850:	d8801f15 	stw	r2,124(sp)
  805854:	a8bff60e 	bge	r21,r2,805830 <__alt_data_end+0xff805830>
  805858:	b009883a 	mov	r4,r22
  80585c:	b80b883a 	mov	r5,r23
  805860:	d9801e04 	addi	r6,sp,120
  805864:	08103a00 	call	8103a0 <__sprint_r>
  805868:	103d451e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  80586c:	d8c02017 	ldw	r3,128(sp)
  805870:	d8801f17 	ldw	r2,124(sp)
  805874:	da000404 	addi	r8,sp,16
  805878:	003fee06 	br	805834 <__alt_data_end+0xff805834>
  80587c:	dac02e17 	ldw	r11,184(sp)
  805880:	db002b17 	ldw	r12,172(sp)
  805884:	5b2bc83a 	sub	r21,r11,r12
  805888:	057df90e 	bge	zero,r21,805070 <__alt_data_end+0xff805070>
  80588c:	07000404 	movi	fp,16
  805890:	d8801f17 	ldw	r2,124(sp)
  805894:	e543640e 	bge	fp,r21,806628 <___vfprintf_internal_r+0x1c78>
  805898:	014020b4 	movhi	r5,130
  80589c:	296dd184 	addi	r5,r5,-18618
  8058a0:	d9402c15 	stw	r5,176(sp)
  8058a4:	04c001c4 	movi	r19,7
  8058a8:	00000306 	br	8058b8 <___vfprintf_internal_r+0xf08>
  8058ac:	ad7ffc04 	addi	r21,r21,-16
  8058b0:	42000204 	addi	r8,r8,8
  8058b4:	e540110e 	bge	fp,r21,8058fc <___vfprintf_internal_r+0xf4c>
  8058b8:	18c00404 	addi	r3,r3,16
  8058bc:	10800044 	addi	r2,r2,1
  8058c0:	45000015 	stw	r20,0(r8)
  8058c4:	47000115 	stw	fp,4(r8)
  8058c8:	d8c02015 	stw	r3,128(sp)
  8058cc:	d8801f15 	stw	r2,124(sp)
  8058d0:	98bff60e 	bge	r19,r2,8058ac <__alt_data_end+0xff8058ac>
  8058d4:	b009883a 	mov	r4,r22
  8058d8:	b80b883a 	mov	r5,r23
  8058dc:	d9801e04 	addi	r6,sp,120
  8058e0:	08103a00 	call	8103a0 <__sprint_r>
  8058e4:	103d261e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  8058e8:	ad7ffc04 	addi	r21,r21,-16
  8058ec:	d8c02017 	ldw	r3,128(sp)
  8058f0:	d8801f17 	ldw	r2,124(sp)
  8058f4:	da000404 	addi	r8,sp,16
  8058f8:	e57fef16 	blt	fp,r21,8058b8 <__alt_data_end+0xff8058b8>
  8058fc:	dac02c17 	ldw	r11,176(sp)
  805900:	1d47883a 	add	r3,r3,r21
  805904:	10800044 	addi	r2,r2,1
  805908:	42c00015 	stw	r11,0(r8)
  80590c:	45400115 	stw	r21,4(r8)
  805910:	d8c02015 	stw	r3,128(sp)
  805914:	d8801f15 	stw	r2,124(sp)
  805918:	010001c4 	movi	r4,7
  80591c:	20819116 	blt	r4,r2,805f64 <___vfprintf_internal_r+0x15b4>
  805920:	42000204 	addi	r8,r8,8
  805924:	003dd206 	br	805070 <__alt_data_end+0xff805070>
  805928:	db003317 	ldw	r12,204(sp)
  80592c:	00800044 	movi	r2,1
  805930:	18c00044 	addi	r3,r3,1
  805934:	1301530e 	bge	r2,r12,805e84 <___vfprintf_internal_r+0x14d4>
  805938:	dc001f17 	ldw	r16,124(sp)
  80593c:	dac03117 	ldw	r11,196(sp)
  805940:	00800044 	movi	r2,1
  805944:	84000044 	addi	r16,r16,1
  805948:	40800115 	stw	r2,4(r8)
  80594c:	42c00015 	stw	r11,0(r8)
  805950:	d8c02015 	stw	r3,128(sp)
  805954:	dc001f15 	stw	r16,124(sp)
  805958:	008001c4 	movi	r2,7
  80595c:	14016b16 	blt	r2,r16,805f0c <___vfprintf_internal_r+0x155c>
  805960:	42000204 	addi	r8,r8,8
  805964:	db003817 	ldw	r12,224(sp)
  805968:	dac03517 	ldw	r11,212(sp)
  80596c:	84000044 	addi	r16,r16,1
  805970:	1b07883a 	add	r3,r3,r12
  805974:	42c00015 	stw	r11,0(r8)
  805978:	43000115 	stw	r12,4(r8)
  80597c:	d8c02015 	stw	r3,128(sp)
  805980:	dc001f15 	stw	r16,124(sp)
  805984:	008001c4 	movi	r2,7
  805988:	14016916 	blt	r2,r16,805f30 <___vfprintf_internal_r+0x1580>
  80598c:	44800204 	addi	r18,r8,8
  805990:	d9003717 	ldw	r4,220(sp)
  805994:	d9403917 	ldw	r5,228(sp)
  805998:	000d883a 	mov	r6,zero
  80599c:	000f883a 	mov	r7,zero
  8059a0:	d8c03d15 	stw	r3,244(sp)
  8059a4:	0815c480 	call	815c48 <__eqdf2>
  8059a8:	d8c03d17 	ldw	r3,244(sp)
  8059ac:	db003317 	ldw	r12,204(sp)
  8059b0:	1000ad26 	beq	r2,zero,805c68 <___vfprintf_internal_r+0x12b8>
  8059b4:	dac03117 	ldw	r11,196(sp)
  8059b8:	60bfffc4 	addi	r2,r12,-1
  8059bc:	1887883a 	add	r3,r3,r2
  8059c0:	59000044 	addi	r4,r11,1
  8059c4:	84000044 	addi	r16,r16,1
  8059c8:	90800115 	stw	r2,4(r18)
  8059cc:	91000015 	stw	r4,0(r18)
  8059d0:	d8c02015 	stw	r3,128(sp)
  8059d4:	dc001f15 	stw	r16,124(sp)
  8059d8:	008001c4 	movi	r2,7
  8059dc:	14014216 	blt	r2,r16,805ee8 <___vfprintf_internal_r+0x1538>
  8059e0:	94800204 	addi	r18,r18,8
  8059e4:	dac03a17 	ldw	r11,232(sp)
  8059e8:	dd4022c4 	addi	r21,sp,139
  8059ec:	84000044 	addi	r16,r16,1
  8059f0:	1ac7883a 	add	r3,r3,r11
  8059f4:	95400015 	stw	r21,0(r18)
  8059f8:	92c00115 	stw	r11,4(r18)
  8059fc:	d8c02015 	stw	r3,128(sp)
  805a00:	dc001f15 	stw	r16,124(sp)
  805a04:	008001c4 	movi	r2,7
  805a08:	14000e16 	blt	r2,r16,805a44 <___vfprintf_internal_r+0x1094>
  805a0c:	92000204 	addi	r8,r18,8
  805a10:	003dcd06 	br	805148 <__alt_data_end+0xff805148>
  805a14:	010020b4 	movhi	r4,130
  805a18:	212dd184 	addi	r4,r4,-18618
  805a1c:	d9002c15 	stw	r4,176(sp)
  805a20:	dac02c17 	ldw	r11,176(sp)
  805a24:	1c07883a 	add	r3,r3,r16
  805a28:	44000115 	stw	r16,4(r8)
  805a2c:	42c00015 	stw	r11,0(r8)
  805a30:	10800044 	addi	r2,r2,1
  805a34:	d8c02015 	stw	r3,128(sp)
  805a38:	d8801f15 	stw	r2,124(sp)
  805a3c:	010001c4 	movi	r4,7
  805a40:	20bdc00e 	bge	r4,r2,805144 <__alt_data_end+0xff805144>
  805a44:	b009883a 	mov	r4,r22
  805a48:	b80b883a 	mov	r5,r23
  805a4c:	d9801e04 	addi	r6,sp,120
  805a50:	08103a00 	call	8103a0 <__sprint_r>
  805a54:	103cca1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805a58:	d8c02017 	ldw	r3,128(sp)
  805a5c:	da000404 	addi	r8,sp,16
  805a60:	003db906 	br	805148 <__alt_data_end+0xff805148>
  805a64:	b009883a 	mov	r4,r22
  805a68:	b80b883a 	mov	r5,r23
  805a6c:	d9801e04 	addi	r6,sp,120
  805a70:	08103a00 	call	8103a0 <__sprint_r>
  805a74:	103def26 	beq	r2,zero,805234 <__alt_data_end+0xff805234>
  805a78:	003cc106 	br	804d80 <__alt_data_end+0xff804d80>
  805a7c:	10803fcc 	andi	r2,r2,255
  805a80:	1000651e 	bne	r2,zero,805c18 <___vfprintf_internal_r+0x1268>
  805a84:	8880004c 	andi	r2,r17,1
  805a88:	10013226 	beq	r2,zero,805f54 <___vfprintf_internal_r+0x15a4>
  805a8c:	00800c04 	movi	r2,48
  805a90:	d8c01dc4 	addi	r3,sp,119
  805a94:	d8801dc5 	stb	r2,119(sp)
  805a98:	dc803c17 	ldw	r18,240(sp)
  805a9c:	d8c03115 	stw	r3,196(sp)
  805aa0:	003d1106 	br	804ee8 <__alt_data_end+0xff804ee8>
  805aa4:	b009883a 	mov	r4,r22
  805aa8:	b80b883a 	mov	r5,r23
  805aac:	d9801e04 	addi	r6,sp,120
  805ab0:	08103a00 	call	8103a0 <__sprint_r>
  805ab4:	103cb21e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805ab8:	d8c02017 	ldw	r3,128(sp)
  805abc:	da000404 	addi	r8,sp,16
  805ac0:	003d9406 	br	805114 <__alt_data_end+0xff805114>
  805ac4:	b009883a 	mov	r4,r22
  805ac8:	b80b883a 	mov	r5,r23
  805acc:	d9801e04 	addi	r6,sp,120
  805ad0:	08103a00 	call	8103a0 <__sprint_r>
  805ad4:	103caa1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805ad8:	d8c02017 	ldw	r3,128(sp)
  805adc:	da000404 	addi	r8,sp,16
  805ae0:	003d5206 	br	80502c <__alt_data_end+0xff80502c>
  805ae4:	b009883a 	mov	r4,r22
  805ae8:	b80b883a 	mov	r5,r23
  805aec:	d9801e04 	addi	r6,sp,120
  805af0:	08103a00 	call	8103a0 <__sprint_r>
  805af4:	103ca21e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805af8:	d8c02017 	ldw	r3,128(sp)
  805afc:	da000404 	addi	r8,sp,16
  805b00:	003d5806 	br	805064 <__alt_data_end+0xff805064>
  805b04:	d9403b17 	ldw	r5,236(sp)
  805b08:	d8c01e04 	addi	r3,sp,120
  805b0c:	988003cc 	andi	r2,r19,15
  805b10:	e008973a 	slli	r4,fp,28
  805b14:	2885883a 	add	r2,r5,r2
  805b18:	9826d13a 	srli	r19,r19,4
  805b1c:	10800003 	ldbu	r2,0(r2)
  805b20:	e038d13a 	srli	fp,fp,4
  805b24:	18ffffc4 	addi	r3,r3,-1
  805b28:	24e6b03a 	or	r19,r4,r19
  805b2c:	18800005 	stb	r2,0(r3)
  805b30:	9f04b03a 	or	r2,r19,fp
  805b34:	103ff51e 	bne	r2,zero,805b0c <__alt_data_end+0xff805b0c>
  805b38:	db002817 	ldw	r12,160(sp)
  805b3c:	d8c03115 	stw	r3,196(sp)
  805b40:	60e5c83a 	sub	r18,r12,r3
  805b44:	003ce806 	br	804ee8 <__alt_data_end+0xff804ee8>
  805b48:	dc002617 	ldw	r16,152(sp)
  805b4c:	0401b10e 	bge	zero,r16,806214 <___vfprintf_internal_r+0x1864>
  805b50:	db003117 	ldw	r12,196(sp)
  805b54:	dac03317 	ldw	r11,204(sp)
  805b58:	62e1883a 	add	r16,r12,r11
  805b5c:	db003417 	ldw	r12,208(sp)
  805b60:	5825883a 	mov	r18,r11
  805b64:	62c0010e 	bge	r12,r11,805b6c <___vfprintf_internal_r+0x11bc>
  805b68:	6025883a 	mov	r18,r12
  805b6c:	04800b0e 	bge	zero,r18,805b9c <___vfprintf_internal_r+0x11ec>
  805b70:	d8801f17 	ldw	r2,124(sp)
  805b74:	dac03117 	ldw	r11,196(sp)
  805b78:	1c87883a 	add	r3,r3,r18
  805b7c:	10800044 	addi	r2,r2,1
  805b80:	42c00015 	stw	r11,0(r8)
  805b84:	44800115 	stw	r18,4(r8)
  805b88:	d8c02015 	stw	r3,128(sp)
  805b8c:	d8801f15 	stw	r2,124(sp)
  805b90:	010001c4 	movi	r4,7
  805b94:	20824f16 	blt	r4,r2,8064d4 <___vfprintf_internal_r+0x1b24>
  805b98:	42000204 	addi	r8,r8,8
  805b9c:	90024b16 	blt	r18,zero,8064cc <___vfprintf_internal_r+0x1b1c>
  805ba0:	db003417 	ldw	r12,208(sp)
  805ba4:	64a5c83a 	sub	r18,r12,r18
  805ba8:	0480730e 	bge	zero,r18,805d78 <___vfprintf_internal_r+0x13c8>
  805bac:	05400404 	movi	r21,16
  805bb0:	d8801f17 	ldw	r2,124(sp)
  805bb4:	ac817d0e 	bge	r21,r18,8061ac <___vfprintf_internal_r+0x17fc>
  805bb8:	014020b4 	movhi	r5,130
  805bbc:	296dd184 	addi	r5,r5,-18618
  805bc0:	d9402c15 	stw	r5,176(sp)
  805bc4:	070001c4 	movi	fp,7
  805bc8:	00000306 	br	805bd8 <___vfprintf_internal_r+0x1228>
  805bcc:	42000204 	addi	r8,r8,8
  805bd0:	94bffc04 	addi	r18,r18,-16
  805bd4:	ac81780e 	bge	r21,r18,8061b8 <___vfprintf_internal_r+0x1808>
  805bd8:	18c00404 	addi	r3,r3,16
  805bdc:	10800044 	addi	r2,r2,1
  805be0:	45000015 	stw	r20,0(r8)
  805be4:	45400115 	stw	r21,4(r8)
  805be8:	d8c02015 	stw	r3,128(sp)
  805bec:	d8801f15 	stw	r2,124(sp)
  805bf0:	e0bff60e 	bge	fp,r2,805bcc <__alt_data_end+0xff805bcc>
  805bf4:	b009883a 	mov	r4,r22
  805bf8:	b80b883a 	mov	r5,r23
  805bfc:	d9801e04 	addi	r6,sp,120
  805c00:	08103a00 	call	8103a0 <__sprint_r>
  805c04:	103c5e1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805c08:	d8c02017 	ldw	r3,128(sp)
  805c0c:	d8801f17 	ldw	r2,124(sp)
  805c10:	da000404 	addi	r8,sp,16
  805c14:	003fee06 	br	805bd0 <__alt_data_end+0xff805bd0>
  805c18:	dac01e04 	addi	r11,sp,120
  805c1c:	0025883a 	mov	r18,zero
  805c20:	dac03115 	stw	r11,196(sp)
  805c24:	003cb006 	br	804ee8 <__alt_data_end+0xff804ee8>
  805c28:	b009883a 	mov	r4,r22
  805c2c:	b80b883a 	mov	r5,r23
  805c30:	d9801e04 	addi	r6,sp,120
  805c34:	08103a00 	call	8103a0 <__sprint_r>
  805c38:	103c511e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805c3c:	d8c02017 	ldw	r3,128(sp)
  805c40:	d8802787 	ldb	r2,158(sp)
  805c44:	da000404 	addi	r8,sp,16
  805c48:	003ceb06 	br	804ff8 <__alt_data_end+0xff804ff8>
  805c4c:	1cc00017 	ldw	r19,0(r3)
  805c50:	dac02d17 	ldw	r11,180(sp)
  805c54:	9839d7fa 	srai	fp,r19,31
  805c58:	5ac00104 	addi	r11,r11,4
  805c5c:	dac02d15 	stw	r11,180(sp)
  805c60:	e005883a 	mov	r2,fp
  805c64:	003c8106 	br	804e6c <__alt_data_end+0xff804e6c>
  805c68:	657fffc4 	addi	r21,r12,-1
  805c6c:	057f5d0e 	bge	zero,r21,8059e4 <__alt_data_end+0xff8059e4>
  805c70:	07000404 	movi	fp,16
  805c74:	e540900e 	bge	fp,r21,805eb8 <___vfprintf_internal_r+0x1508>
  805c78:	010020b4 	movhi	r4,130
  805c7c:	212dd184 	addi	r4,r4,-18618
  805c80:	d9002c15 	stw	r4,176(sp)
  805c84:	01c001c4 	movi	r7,7
  805c88:	00000306 	br	805c98 <___vfprintf_internal_r+0x12e8>
  805c8c:	94800204 	addi	r18,r18,8
  805c90:	ad7ffc04 	addi	r21,r21,-16
  805c94:	e5408b0e 	bge	fp,r21,805ec4 <___vfprintf_internal_r+0x1514>
  805c98:	18c00404 	addi	r3,r3,16
  805c9c:	84000044 	addi	r16,r16,1
  805ca0:	95000015 	stw	r20,0(r18)
  805ca4:	97000115 	stw	fp,4(r18)
  805ca8:	d8c02015 	stw	r3,128(sp)
  805cac:	dc001f15 	stw	r16,124(sp)
  805cb0:	3c3ff60e 	bge	r7,r16,805c8c <__alt_data_end+0xff805c8c>
  805cb4:	b009883a 	mov	r4,r22
  805cb8:	b80b883a 	mov	r5,r23
  805cbc:	d9801e04 	addi	r6,sp,120
  805cc0:	d9c03d15 	stw	r7,244(sp)
  805cc4:	08103a00 	call	8103a0 <__sprint_r>
  805cc8:	d9c03d17 	ldw	r7,244(sp)
  805ccc:	103c2c1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805cd0:	d8c02017 	ldw	r3,128(sp)
  805cd4:	dc001f17 	ldw	r16,124(sp)
  805cd8:	dc800404 	addi	r18,sp,16
  805cdc:	003fec06 	br	805c90 <__alt_data_end+0xff805c90>
  805ce0:	dac02d17 	ldw	r11,180(sp)
  805ce4:	0039883a 	mov	fp,zero
  805ce8:	0005883a 	mov	r2,zero
  805cec:	5cc00017 	ldw	r19,0(r11)
  805cf0:	5ac00104 	addi	r11,r11,4
  805cf4:	dac02d15 	stw	r11,180(sp)
  805cf8:	9807883a 	mov	r3,r19
  805cfc:	003d5b06 	br	80526c <__alt_data_end+0xff80526c>
  805d00:	db002d17 	ldw	r12,180(sp)
  805d04:	0039883a 	mov	fp,zero
  805d08:	00800044 	movi	r2,1
  805d0c:	64c00017 	ldw	r19,0(r12)
  805d10:	63000104 	addi	r12,r12,4
  805d14:	db002d15 	stw	r12,180(sp)
  805d18:	9807883a 	mov	r3,r19
  805d1c:	003d5306 	br	80526c <__alt_data_end+0xff80526c>
  805d20:	00800084 	movi	r2,2
  805d24:	9f06b03a 	or	r3,r19,fp
  805d28:	003d5006 	br	80526c <__alt_data_end+0xff80526c>
  805d2c:	10803fcc 	andi	r2,r2,255
  805d30:	1080201c 	xori	r2,r2,128
  805d34:	10bfe004 	addi	r2,r2,-128
  805d38:	01000c04 	movi	r4,48
  805d3c:	1101a526 	beq	r2,r4,8063d4 <___vfprintf_internal_r+0x1a24>
  805d40:	dac03117 	ldw	r11,196(sp)
  805d44:	db002817 	ldw	r12,160(sp)
  805d48:	193fffc5 	stb	r4,-1(r3)
  805d4c:	5affffc4 	addi	r11,r11,-1
  805d50:	dac03115 	stw	r11,196(sp)
  805d54:	62e5c83a 	sub	r18,r12,r11
  805d58:	003c6306 	br	804ee8 <__alt_data_end+0xff804ee8>
  805d5c:	b009883a 	mov	r4,r22
  805d60:	b80b883a 	mov	r5,r23
  805d64:	d9801e04 	addi	r6,sp,120
  805d68:	08103a00 	call	8103a0 <__sprint_r>
  805d6c:	103c041e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805d70:	d8c02017 	ldw	r3,128(sp)
  805d74:	da000404 	addi	r8,sp,16
  805d78:	db003117 	ldw	r12,196(sp)
  805d7c:	dac03417 	ldw	r11,208(sp)
  805d80:	d8802617 	ldw	r2,152(sp)
  805d84:	62e5883a 	add	r18,r12,r11
  805d88:	db003317 	ldw	r12,204(sp)
  805d8c:	13000216 	blt	r2,r12,805d98 <___vfprintf_internal_r+0x13e8>
  805d90:	8900004c 	andi	r4,r17,1
  805d94:	20000c26 	beq	r4,zero,805dc8 <___vfprintf_internal_r+0x1418>
  805d98:	dac03817 	ldw	r11,224(sp)
  805d9c:	d9001f17 	ldw	r4,124(sp)
  805da0:	db003517 	ldw	r12,212(sp)
  805da4:	1ac7883a 	add	r3,r3,r11
  805da8:	21000044 	addi	r4,r4,1
  805dac:	43000015 	stw	r12,0(r8)
  805db0:	42c00115 	stw	r11,4(r8)
  805db4:	d8c02015 	stw	r3,128(sp)
  805db8:	d9001f15 	stw	r4,124(sp)
  805dbc:	014001c4 	movi	r5,7
  805dc0:	2901cc16 	blt	r5,r4,8064f4 <___vfprintf_internal_r+0x1b44>
  805dc4:	42000204 	addi	r8,r8,8
  805dc8:	dac03317 	ldw	r11,204(sp)
  805dcc:	8489c83a 	sub	r4,r16,r18
  805dd0:	5885c83a 	sub	r2,r11,r2
  805dd4:	1021883a 	mov	r16,r2
  805dd8:	2080010e 	bge	r4,r2,805de0 <___vfprintf_internal_r+0x1430>
  805ddc:	2021883a 	mov	r16,r4
  805de0:	04000a0e 	bge	zero,r16,805e0c <___vfprintf_internal_r+0x145c>
  805de4:	d9001f17 	ldw	r4,124(sp)
  805de8:	1c07883a 	add	r3,r3,r16
  805dec:	44800015 	stw	r18,0(r8)
  805df0:	21000044 	addi	r4,r4,1
  805df4:	44000115 	stw	r16,4(r8)
  805df8:	d8c02015 	stw	r3,128(sp)
  805dfc:	d9001f15 	stw	r4,124(sp)
  805e00:	014001c4 	movi	r5,7
  805e04:	2901e316 	blt	r5,r4,806594 <___vfprintf_internal_r+0x1be4>
  805e08:	42000204 	addi	r8,r8,8
  805e0c:	8001df16 	blt	r16,zero,80658c <___vfprintf_internal_r+0x1bdc>
  805e10:	1421c83a 	sub	r16,r2,r16
  805e14:	043ccc0e 	bge	zero,r16,805148 <__alt_data_end+0xff805148>
  805e18:	04800404 	movi	r18,16
  805e1c:	d8801f17 	ldw	r2,124(sp)
  805e20:	943efc0e 	bge	r18,r16,805a14 <__alt_data_end+0xff805a14>
  805e24:	014020b4 	movhi	r5,130
  805e28:	296dd184 	addi	r5,r5,-18618
  805e2c:	d9402c15 	stw	r5,176(sp)
  805e30:	054001c4 	movi	r21,7
  805e34:	00000306 	br	805e44 <___vfprintf_internal_r+0x1494>
  805e38:	42000204 	addi	r8,r8,8
  805e3c:	843ffc04 	addi	r16,r16,-16
  805e40:	943ef70e 	bge	r18,r16,805a20 <__alt_data_end+0xff805a20>
  805e44:	18c00404 	addi	r3,r3,16
  805e48:	10800044 	addi	r2,r2,1
  805e4c:	45000015 	stw	r20,0(r8)
  805e50:	44800115 	stw	r18,4(r8)
  805e54:	d8c02015 	stw	r3,128(sp)
  805e58:	d8801f15 	stw	r2,124(sp)
  805e5c:	a8bff60e 	bge	r21,r2,805e38 <__alt_data_end+0xff805e38>
  805e60:	b009883a 	mov	r4,r22
  805e64:	b80b883a 	mov	r5,r23
  805e68:	d9801e04 	addi	r6,sp,120
  805e6c:	08103a00 	call	8103a0 <__sprint_r>
  805e70:	103bc31e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805e74:	d8c02017 	ldw	r3,128(sp)
  805e78:	d8801f17 	ldw	r2,124(sp)
  805e7c:	da000404 	addi	r8,sp,16
  805e80:	003fee06 	br	805e3c <__alt_data_end+0xff805e3c>
  805e84:	8888703a 	and	r4,r17,r2
  805e88:	203eab1e 	bne	r4,zero,805938 <__alt_data_end+0xff805938>
  805e8c:	dc001f17 	ldw	r16,124(sp)
  805e90:	db003117 	ldw	r12,196(sp)
  805e94:	40800115 	stw	r2,4(r8)
  805e98:	84000044 	addi	r16,r16,1
  805e9c:	43000015 	stw	r12,0(r8)
  805ea0:	d8c02015 	stw	r3,128(sp)
  805ea4:	dc001f15 	stw	r16,124(sp)
  805ea8:	008001c4 	movi	r2,7
  805eac:	14000e16 	blt	r2,r16,805ee8 <___vfprintf_internal_r+0x1538>
  805eb0:	44800204 	addi	r18,r8,8
  805eb4:	003ecb06 	br	8059e4 <__alt_data_end+0xff8059e4>
  805eb8:	008020b4 	movhi	r2,130
  805ebc:	10add184 	addi	r2,r2,-18618
  805ec0:	d8802c15 	stw	r2,176(sp)
  805ec4:	dac02c17 	ldw	r11,176(sp)
  805ec8:	1d47883a 	add	r3,r3,r21
  805ecc:	84000044 	addi	r16,r16,1
  805ed0:	92c00015 	stw	r11,0(r18)
  805ed4:	95400115 	stw	r21,4(r18)
  805ed8:	d8c02015 	stw	r3,128(sp)
  805edc:	dc001f15 	stw	r16,124(sp)
  805ee0:	008001c4 	movi	r2,7
  805ee4:	143ebe0e 	bge	r2,r16,8059e0 <__alt_data_end+0xff8059e0>
  805ee8:	b009883a 	mov	r4,r22
  805eec:	b80b883a 	mov	r5,r23
  805ef0:	d9801e04 	addi	r6,sp,120
  805ef4:	08103a00 	call	8103a0 <__sprint_r>
  805ef8:	103ba11e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805efc:	d8c02017 	ldw	r3,128(sp)
  805f00:	dc001f17 	ldw	r16,124(sp)
  805f04:	dc800404 	addi	r18,sp,16
  805f08:	003eb606 	br	8059e4 <__alt_data_end+0xff8059e4>
  805f0c:	b009883a 	mov	r4,r22
  805f10:	b80b883a 	mov	r5,r23
  805f14:	d9801e04 	addi	r6,sp,120
  805f18:	08103a00 	call	8103a0 <__sprint_r>
  805f1c:	103b981e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805f20:	d8c02017 	ldw	r3,128(sp)
  805f24:	dc001f17 	ldw	r16,124(sp)
  805f28:	da000404 	addi	r8,sp,16
  805f2c:	003e8d06 	br	805964 <__alt_data_end+0xff805964>
  805f30:	b009883a 	mov	r4,r22
  805f34:	b80b883a 	mov	r5,r23
  805f38:	d9801e04 	addi	r6,sp,120
  805f3c:	08103a00 	call	8103a0 <__sprint_r>
  805f40:	103b8f1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805f44:	d8c02017 	ldw	r3,128(sp)
  805f48:	dc001f17 	ldw	r16,124(sp)
  805f4c:	dc800404 	addi	r18,sp,16
  805f50:	003e8f06 	br	805990 <__alt_data_end+0xff805990>
  805f54:	db001e04 	addi	r12,sp,120
  805f58:	0025883a 	mov	r18,zero
  805f5c:	db003115 	stw	r12,196(sp)
  805f60:	003be106 	br	804ee8 <__alt_data_end+0xff804ee8>
  805f64:	b009883a 	mov	r4,r22
  805f68:	b80b883a 	mov	r5,r23
  805f6c:	d9801e04 	addi	r6,sp,120
  805f70:	08103a00 	call	8103a0 <__sprint_r>
  805f74:	103b821e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  805f78:	d8c02017 	ldw	r3,128(sp)
  805f7c:	da000404 	addi	r8,sp,16
  805f80:	003c3b06 	br	805070 <__alt_data_end+0xff805070>
  805f84:	04e7c83a 	sub	r19,zero,r19
  805f88:	9804c03a 	cmpne	r2,r19,zero
  805f8c:	0739c83a 	sub	fp,zero,fp
  805f90:	e0b9c83a 	sub	fp,fp,r2
  805f94:	05400b44 	movi	r21,45
  805f98:	dd402785 	stb	r21,158(sp)
  805f9c:	da403215 	stw	r9,200(sp)
  805fa0:	00800044 	movi	r2,1
  805fa4:	9f06b03a 	or	r3,r19,fp
  805fa8:	003bb506 	br	804e80 <__alt_data_end+0xff804e80>
  805fac:	da003f15 	stw	r8,252(sp)
  805fb0:	da403e15 	stw	r9,248(sp)
  805fb4:	080a8a80 	call	80a8a8 <__fpclassifyd>
  805fb8:	da003f17 	ldw	r8,252(sp)
  805fbc:	da403e17 	ldw	r9,248(sp)
  805fc0:	1000ce26 	beq	r2,zero,8062fc <___vfprintf_internal_r+0x194c>
  805fc4:	057ff7c4 	movi	r21,-33
  805fc8:	00bfffc4 	movi	r2,-1
  805fcc:	856a703a 	and	r21,r16,r21
  805fd0:	4881e826 	beq	r9,r2,806774 <___vfprintf_internal_r+0x1dc4>
  805fd4:	008011c4 	movi	r2,71
  805fd8:	a881e326 	beq	r21,r2,806768 <___vfprintf_internal_r+0x1db8>
  805fdc:	db003917 	ldw	r12,228(sp)
  805fe0:	8ac04014 	ori	r11,r17,256
  805fe4:	dac02d15 	stw	r11,180(sp)
  805fe8:	6001ed16 	blt	r12,zero,8067a0 <___vfprintf_internal_r+0x1df0>
  805fec:	dc803917 	ldw	r18,228(sp)
  805ff0:	d8002b05 	stb	zero,172(sp)
  805ff4:	00801984 	movi	r2,102
  805ff8:	80811826 	beq	r16,r2,80645c <___vfprintf_internal_r+0x1aac>
  805ffc:	00801184 	movi	r2,70
  806000:	80811626 	beq	r16,r2,80645c <___vfprintf_internal_r+0x1aac>
  806004:	00801144 	movi	r2,69
  806008:	a881e926 	beq	r21,r2,8067b0 <___vfprintf_internal_r+0x1e00>
  80600c:	4839883a 	mov	fp,r9
  806010:	d8802604 	addi	r2,sp,152
  806014:	d8800115 	stw	r2,4(sp)
  806018:	d9403717 	ldw	r5,220(sp)
  80601c:	d8802504 	addi	r2,sp,148
  806020:	d8800215 	stw	r2,8(sp)
  806024:	d8802104 	addi	r2,sp,132
  806028:	df000015 	stw	fp,0(sp)
  80602c:	d8800315 	stw	r2,12(sp)
  806030:	b009883a 	mov	r4,r22
  806034:	900d883a 	mov	r6,r18
  806038:	01c00084 	movi	r7,2
  80603c:	da003f15 	stw	r8,252(sp)
  806040:	da403e15 	stw	r9,248(sp)
  806044:	0806de40 	call	806de4 <_dtoa_r>
  806048:	d8803115 	stw	r2,196(sp)
  80604c:	008019c4 	movi	r2,103
  806050:	da003f17 	ldw	r8,252(sp)
  806054:	da403e17 	ldw	r9,248(sp)
  806058:	80800226 	beq	r16,r2,806064 <___vfprintf_internal_r+0x16b4>
  80605c:	008011c4 	movi	r2,71
  806060:	8081101e 	bne	r16,r2,8064a4 <___vfprintf_internal_r+0x1af4>
  806064:	8880004c 	andi	r2,r17,1
  806068:	1001dd26 	beq	r2,zero,8067e0 <___vfprintf_internal_r+0x1e30>
  80606c:	db003117 	ldw	r12,196(sp)
  806070:	6715883a 	add	r10,r12,fp
  806074:	d9003717 	ldw	r4,220(sp)
  806078:	900b883a 	mov	r5,r18
  80607c:	000d883a 	mov	r6,zero
  806080:	000f883a 	mov	r7,zero
  806084:	da003f15 	stw	r8,252(sp)
  806088:	da403e15 	stw	r9,248(sp)
  80608c:	da803d15 	stw	r10,244(sp)
  806090:	0815c480 	call	815c48 <__eqdf2>
  806094:	da003f17 	ldw	r8,252(sp)
  806098:	da403e17 	ldw	r9,248(sp)
  80609c:	da803d17 	ldw	r10,244(sp)
  8060a0:	10016526 	beq	r2,zero,806638 <___vfprintf_internal_r+0x1c88>
  8060a4:	d8802117 	ldw	r2,132(sp)
  8060a8:	1280062e 	bgeu	r2,r10,8060c4 <___vfprintf_internal_r+0x1714>
  8060ac:	01000c04 	movi	r4,48
  8060b0:	10c00044 	addi	r3,r2,1
  8060b4:	d8c02115 	stw	r3,132(sp)
  8060b8:	11000005 	stb	r4,0(r2)
  8060bc:	d8802117 	ldw	r2,132(sp)
  8060c0:	12bffb36 	bltu	r2,r10,8060b0 <__alt_data_end+0xff8060b0>
  8060c4:	db003117 	ldw	r12,196(sp)
  8060c8:	1305c83a 	sub	r2,r2,r12
  8060cc:	d8803315 	stw	r2,204(sp)
  8060d0:	008011c4 	movi	r2,71
  8060d4:	a8814d26 	beq	r21,r2,80660c <___vfprintf_internal_r+0x1c5c>
  8060d8:	00801944 	movi	r2,101
  8060dc:	1402060e 	bge	r2,r16,8068f8 <___vfprintf_internal_r+0x1f48>
  8060e0:	00801984 	movi	r2,102
  8060e4:	8081b426 	beq	r16,r2,8067b8 <___vfprintf_internal_r+0x1e08>
  8060e8:	db002617 	ldw	r12,152(sp)
  8060ec:	db003415 	stw	r12,208(sp)
  8060f0:	db003417 	ldw	r12,208(sp)
  8060f4:	dac03317 	ldw	r11,204(sp)
  8060f8:	62c1a016 	blt	r12,r11,80677c <___vfprintf_internal_r+0x1dcc>
  8060fc:	8c40004c 	andi	r17,r17,1
  806100:	8801bf1e 	bne	r17,zero,806800 <___vfprintf_internal_r+0x1e50>
  806104:	6005883a 	mov	r2,r12
  806108:	6001b316 	blt	r12,zero,8067d8 <___vfprintf_internal_r+0x1e28>
  80610c:	dc803417 	ldw	r18,208(sp)
  806110:	df002b07 	ldb	fp,172(sp)
  806114:	e0012e1e 	bne	fp,zero,8065d0 <___vfprintf_internal_r+0x1c20>
  806118:	dc402d17 	ldw	r17,180(sp)
  80611c:	dd402783 	ldbu	r21,158(sp)
  806120:	d8802b15 	stw	r2,172(sp)
  806124:	dcc02d15 	stw	r19,180(sp)
  806128:	d8003215 	stw	zero,200(sp)
  80612c:	003b7306 	br	804efc <__alt_data_end+0xff804efc>
  806130:	00800084 	movi	r2,2
  806134:	003c4d06 	br	80526c <__alt_data_end+0xff80526c>
  806138:	8880040c 	andi	r2,r17,16
  80613c:	1000091e 	bne	r2,zero,806164 <___vfprintf_internal_r+0x17b4>
  806140:	8c40100c 	andi	r17,r17,64
  806144:	88000726 	beq	r17,zero,806164 <___vfprintf_internal_r+0x17b4>
  806148:	db002d17 	ldw	r12,180(sp)
  80614c:	dac02f17 	ldw	r11,188(sp)
  806150:	60800017 	ldw	r2,0(r12)
  806154:	63000104 	addi	r12,r12,4
  806158:	db002d15 	stw	r12,180(sp)
  80615c:	12c0000d 	sth	r11,0(r2)
  806160:	003a4e06 	br	804a9c <__alt_data_end+0xff804a9c>
  806164:	db002d17 	ldw	r12,180(sp)
  806168:	dac02f17 	ldw	r11,188(sp)
  80616c:	60800017 	ldw	r2,0(r12)
  806170:	63000104 	addi	r12,r12,4
  806174:	db002d15 	stw	r12,180(sp)
  806178:	12c00015 	stw	r11,0(r2)
  80617c:	003a4706 	br	804a9c <__alt_data_end+0xff804a9c>
  806180:	1c000007 	ldb	r16,0(r3)
  806184:	1805883a 	mov	r2,r3
  806188:	003a6e06 	br	804b44 <__alt_data_end+0xff804b44>
  80618c:	88c0100c 	andi	r3,r17,64
  806190:	18006b26 	beq	r3,zero,806340 <___vfprintf_internal_r+0x1990>
  806194:	dac02d17 	ldw	r11,180(sp)
  806198:	14c0000b 	ldhu	r19,0(r2)
  80619c:	0039883a 	mov	fp,zero
  8061a0:	5ac00104 	addi	r11,r11,4
  8061a4:	dac02d15 	stw	r11,180(sp)
  8061a8:	003cb206 	br	805474 <__alt_data_end+0xff805474>
  8061ac:	010020b4 	movhi	r4,130
  8061b0:	212dd184 	addi	r4,r4,-18618
  8061b4:	d9002c15 	stw	r4,176(sp)
  8061b8:	dac02c17 	ldw	r11,176(sp)
  8061bc:	1c87883a 	add	r3,r3,r18
  8061c0:	10800044 	addi	r2,r2,1
  8061c4:	42c00015 	stw	r11,0(r8)
  8061c8:	44800115 	stw	r18,4(r8)
  8061cc:	d8c02015 	stw	r3,128(sp)
  8061d0:	d8801f15 	stw	r2,124(sp)
  8061d4:	010001c4 	movi	r4,7
  8061d8:	20bee016 	blt	r4,r2,805d5c <__alt_data_end+0xff805d5c>
  8061dc:	42000204 	addi	r8,r8,8
  8061e0:	003ee506 	br	805d78 <__alt_data_end+0xff805d78>
  8061e4:	010020b4 	movhi	r4,130
  8061e8:	212dd184 	addi	r4,r4,-18618
  8061ec:	d9002c15 	stw	r4,176(sp)
  8061f0:	003bbe06 	br	8050ec <__alt_data_end+0xff8050ec>
  8061f4:	b009883a 	mov	r4,r22
  8061f8:	b80b883a 	mov	r5,r23
  8061fc:	d9801e04 	addi	r6,sp,120
  806200:	08103a00 	call	8103a0 <__sprint_r>
  806204:	103ade1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  806208:	d8c02017 	ldw	r3,128(sp)
  80620c:	da000404 	addi	r8,sp,16
  806210:	003d6b06 	br	8057c0 <__alt_data_end+0xff8057c0>
  806214:	d8801f17 	ldw	r2,124(sp)
  806218:	030020b4 	movhi	r12,130
  80621c:	01000044 	movi	r4,1
  806220:	18c00044 	addi	r3,r3,1
  806224:	10800044 	addi	r2,r2,1
  806228:	632dd104 	addi	r12,r12,-18620
  80622c:	41000115 	stw	r4,4(r8)
  806230:	43000015 	stw	r12,0(r8)
  806234:	d8c02015 	stw	r3,128(sp)
  806238:	d8801f15 	stw	r2,124(sp)
  80623c:	010001c4 	movi	r4,7
  806240:	20804916 	blt	r4,r2,806368 <___vfprintf_internal_r+0x19b8>
  806244:	42000204 	addi	r8,r8,8
  806248:	8000041e 	bne	r16,zero,80625c <___vfprintf_internal_r+0x18ac>
  80624c:	dac03317 	ldw	r11,204(sp)
  806250:	5800021e 	bne	r11,zero,80625c <___vfprintf_internal_r+0x18ac>
  806254:	8880004c 	andi	r2,r17,1
  806258:	103bbb26 	beq	r2,zero,805148 <__alt_data_end+0xff805148>
  80625c:	db003817 	ldw	r12,224(sp)
  806260:	d8801f17 	ldw	r2,124(sp)
  806264:	dac03517 	ldw	r11,212(sp)
  806268:	1b07883a 	add	r3,r3,r12
  80626c:	10800044 	addi	r2,r2,1
  806270:	42c00015 	stw	r11,0(r8)
  806274:	43000115 	stw	r12,4(r8)
  806278:	d8c02015 	stw	r3,128(sp)
  80627c:	d8801f15 	stw	r2,124(sp)
  806280:	010001c4 	movi	r4,7
  806284:	20812e16 	blt	r4,r2,806740 <___vfprintf_internal_r+0x1d90>
  806288:	42000204 	addi	r8,r8,8
  80628c:	0421c83a 	sub	r16,zero,r16
  806290:	04005c0e 	bge	zero,r16,806404 <___vfprintf_internal_r+0x1a54>
  806294:	04800404 	movi	r18,16
  806298:	94009f0e 	bge	r18,r16,806518 <___vfprintf_internal_r+0x1b68>
  80629c:	010020b4 	movhi	r4,130
  8062a0:	212dd184 	addi	r4,r4,-18618
  8062a4:	d9002c15 	stw	r4,176(sp)
  8062a8:	054001c4 	movi	r21,7
  8062ac:	00000306 	br	8062bc <___vfprintf_internal_r+0x190c>
  8062b0:	42000204 	addi	r8,r8,8
  8062b4:	843ffc04 	addi	r16,r16,-16
  8062b8:	94009a0e 	bge	r18,r16,806524 <___vfprintf_internal_r+0x1b74>
  8062bc:	18c00404 	addi	r3,r3,16
  8062c0:	10800044 	addi	r2,r2,1
  8062c4:	45000015 	stw	r20,0(r8)
  8062c8:	44800115 	stw	r18,4(r8)
  8062cc:	d8c02015 	stw	r3,128(sp)
  8062d0:	d8801f15 	stw	r2,124(sp)
  8062d4:	a8bff60e 	bge	r21,r2,8062b0 <__alt_data_end+0xff8062b0>
  8062d8:	b009883a 	mov	r4,r22
  8062dc:	b80b883a 	mov	r5,r23
  8062e0:	d9801e04 	addi	r6,sp,120
  8062e4:	08103a00 	call	8103a0 <__sprint_r>
  8062e8:	103aa51e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  8062ec:	d8c02017 	ldw	r3,128(sp)
  8062f0:	d8801f17 	ldw	r2,124(sp)
  8062f4:	da000404 	addi	r8,sp,16
  8062f8:	003fee06 	br	8062b4 <__alt_data_end+0xff8062b4>
  8062fc:	008011c4 	movi	r2,71
  806300:	1400be16 	blt	r2,r16,8065fc <___vfprintf_internal_r+0x1c4c>
  806304:	030020b4 	movhi	r12,130
  806308:	632dc304 	addi	r12,r12,-18676
  80630c:	db003115 	stw	r12,196(sp)
  806310:	00c000c4 	movi	r3,3
  806314:	00bfdfc4 	movi	r2,-129
  806318:	d8c02b15 	stw	r3,172(sp)
  80631c:	88a2703a 	and	r17,r17,r2
  806320:	dd402783 	ldbu	r21,158(sp)
  806324:	dcc02d15 	stw	r19,180(sp)
  806328:	1825883a 	mov	r18,r3
  80632c:	d8003215 	stw	zero,200(sp)
  806330:	d8003415 	stw	zero,208(sp)
  806334:	003af106 	br	804efc <__alt_data_end+0xff804efc>
  806338:	4825883a 	mov	r18,r9
  80633c:	003c9306 	br	80558c <__alt_data_end+0xff80558c>
  806340:	db002d17 	ldw	r12,180(sp)
  806344:	14c00017 	ldw	r19,0(r2)
  806348:	0039883a 	mov	fp,zero
  80634c:	63000104 	addi	r12,r12,4
  806350:	db002d15 	stw	r12,180(sp)
  806354:	003c4706 	br	805474 <__alt_data_end+0xff805474>
  806358:	008020b4 	movhi	r2,130
  80635c:	10adc104 	addi	r2,r2,-18684
  806360:	d8803115 	stw	r2,196(sp)
  806364:	003bf106 	br	80532c <__alt_data_end+0xff80532c>
  806368:	b009883a 	mov	r4,r22
  80636c:	b80b883a 	mov	r5,r23
  806370:	d9801e04 	addi	r6,sp,120
  806374:	08103a00 	call	8103a0 <__sprint_r>
  806378:	103a811e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  80637c:	dc002617 	ldw	r16,152(sp)
  806380:	d8c02017 	ldw	r3,128(sp)
  806384:	da000404 	addi	r8,sp,16
  806388:	003faf06 	br	806248 <__alt_data_end+0xff806248>
  80638c:	db002e17 	ldw	r12,184(sp)
  806390:	1805883a 	mov	r2,r3
  806394:	dac02d15 	stw	r11,180(sp)
  806398:	0319c83a 	sub	r12,zero,r12
  80639c:	db002e15 	stw	r12,184(sp)
  8063a0:	003a8206 	br	804dac <__alt_data_end+0xff804dac>
  8063a4:	18800044 	addi	r2,r3,1
  8063a8:	8c400814 	ori	r17,r17,32
  8063ac:	1c000047 	ldb	r16,1(r3)
  8063b0:	0039e406 	br	804b44 <__alt_data_end+0xff804b44>
  8063b4:	b009883a 	mov	r4,r22
  8063b8:	b80b883a 	mov	r5,r23
  8063bc:	d9801e04 	addi	r6,sp,120
  8063c0:	08103a00 	call	8103a0 <__sprint_r>
  8063c4:	103a6e1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  8063c8:	d8c02017 	ldw	r3,128(sp)
  8063cc:	da000404 	addi	r8,sp,16
  8063d0:	003d0c06 	br	805804 <__alt_data_end+0xff805804>
  8063d4:	db002817 	ldw	r12,160(sp)
  8063d8:	d8c03117 	ldw	r3,196(sp)
  8063dc:	60e5c83a 	sub	r18,r12,r3
  8063e0:	003ac106 	br	804ee8 <__alt_data_end+0xff804ee8>
  8063e4:	b009883a 	mov	r4,r22
  8063e8:	b80b883a 	mov	r5,r23
  8063ec:	d9801e04 	addi	r6,sp,120
  8063f0:	08103a00 	call	8103a0 <__sprint_r>
  8063f4:	103a621e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  8063f8:	d8c02017 	ldw	r3,128(sp)
  8063fc:	d8801f17 	ldw	r2,124(sp)
  806400:	da000404 	addi	r8,sp,16
  806404:	db003317 	ldw	r12,204(sp)
  806408:	dac03117 	ldw	r11,196(sp)
  80640c:	10800044 	addi	r2,r2,1
  806410:	1b07883a 	add	r3,r3,r12
  806414:	42c00015 	stw	r11,0(r8)
  806418:	43000115 	stw	r12,4(r8)
  80641c:	d8c02015 	stw	r3,128(sp)
  806420:	d8801f15 	stw	r2,124(sp)
  806424:	010001c4 	movi	r4,7
  806428:	20bb460e 	bge	r4,r2,805144 <__alt_data_end+0xff805144>
  80642c:	003d8506 	br	805a44 <__alt_data_end+0xff805a44>
  806430:	da003f15 	stw	r8,252(sp)
  806434:	08032200 	call	803220 <strlen>
  806438:	1025883a 	mov	r18,r2
  80643c:	da003f17 	ldw	r8,252(sp)
  806440:	903c540e 	bge	r18,zero,805594 <__alt_data_end+0xff805594>
  806444:	0005883a 	mov	r2,zero
  806448:	003c5206 	br	805594 <__alt_data_end+0xff805594>
  80644c:	010020b4 	movhi	r4,130
  806450:	212dd584 	addi	r4,r4,-18602
  806454:	d9003615 	stw	r4,216(sp)
  806458:	003adc06 	br	804fcc <__alt_data_end+0xff804fcc>
  80645c:	d8802604 	addi	r2,sp,152
  806460:	d8800115 	stw	r2,4(sp)
  806464:	d9403717 	ldw	r5,220(sp)
  806468:	d8802504 	addi	r2,sp,148
  80646c:	d8800215 	stw	r2,8(sp)
  806470:	d8802104 	addi	r2,sp,132
  806474:	da400015 	stw	r9,0(sp)
  806478:	d8800315 	stw	r2,12(sp)
  80647c:	b009883a 	mov	r4,r22
  806480:	900d883a 	mov	r6,r18
  806484:	01c000c4 	movi	r7,3
  806488:	da003f15 	stw	r8,252(sp)
  80648c:	da403e15 	stw	r9,248(sp)
  806490:	0806de40 	call	806de4 <_dtoa_r>
  806494:	da403e17 	ldw	r9,248(sp)
  806498:	da003f17 	ldw	r8,252(sp)
  80649c:	d8803115 	stw	r2,196(sp)
  8064a0:	4839883a 	mov	fp,r9
  8064a4:	dac03117 	ldw	r11,196(sp)
  8064a8:	00801184 	movi	r2,70
  8064ac:	5f15883a 	add	r10,r11,fp
  8064b0:	a8bef01e 	bne	r21,r2,806074 <__alt_data_end+0xff806074>
  8064b4:	59000007 	ldb	r4,0(r11)
  8064b8:	00800c04 	movi	r2,48
  8064bc:	2080d526 	beq	r4,r2,806814 <___vfprintf_internal_r+0x1e64>
  8064c0:	d8c02617 	ldw	r3,152(sp)
  8064c4:	50d5883a 	add	r10,r10,r3
  8064c8:	003eea06 	br	806074 <__alt_data_end+0xff806074>
  8064cc:	0025883a 	mov	r18,zero
  8064d0:	003db306 	br	805ba0 <__alt_data_end+0xff805ba0>
  8064d4:	b009883a 	mov	r4,r22
  8064d8:	b80b883a 	mov	r5,r23
  8064dc:	d9801e04 	addi	r6,sp,120
  8064e0:	08103a00 	call	8103a0 <__sprint_r>
  8064e4:	103a261e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  8064e8:	d8c02017 	ldw	r3,128(sp)
  8064ec:	da000404 	addi	r8,sp,16
  8064f0:	003daa06 	br	805b9c <__alt_data_end+0xff805b9c>
  8064f4:	b009883a 	mov	r4,r22
  8064f8:	b80b883a 	mov	r5,r23
  8064fc:	d9801e04 	addi	r6,sp,120
  806500:	08103a00 	call	8103a0 <__sprint_r>
  806504:	103a1e1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  806508:	d8802617 	ldw	r2,152(sp)
  80650c:	d8c02017 	ldw	r3,128(sp)
  806510:	da000404 	addi	r8,sp,16
  806514:	003e2c06 	br	805dc8 <__alt_data_end+0xff805dc8>
  806518:	030020b4 	movhi	r12,130
  80651c:	632dd184 	addi	r12,r12,-18618
  806520:	db002c15 	stw	r12,176(sp)
  806524:	dac02c17 	ldw	r11,176(sp)
  806528:	1c07883a 	add	r3,r3,r16
  80652c:	10800044 	addi	r2,r2,1
  806530:	42c00015 	stw	r11,0(r8)
  806534:	44000115 	stw	r16,4(r8)
  806538:	d8c02015 	stw	r3,128(sp)
  80653c:	d8801f15 	stw	r2,124(sp)
  806540:	010001c4 	movi	r4,7
  806544:	20bfa716 	blt	r4,r2,8063e4 <__alt_data_end+0xff8063e4>
  806548:	42000204 	addi	r8,r8,8
  80654c:	003fad06 	br	806404 <__alt_data_end+0xff806404>
  806550:	00800184 	movi	r2,6
  806554:	1240012e 	bgeu	r2,r9,80655c <___vfprintf_internal_r+0x1bac>
  806558:	1013883a 	mov	r9,r2
  80655c:	4825883a 	mov	r18,r9
  806560:	4805883a 	mov	r2,r9
  806564:	4800c216 	blt	r9,zero,806870 <___vfprintf_internal_r+0x1ec0>
  806568:	d8802b15 	stw	r2,172(sp)
  80656c:	008020b4 	movhi	r2,130
  806570:	10adcf04 	addi	r2,r2,-18628
  806574:	d8803115 	stw	r2,196(sp)
  806578:	dcc02d15 	stw	r19,180(sp)
  80657c:	d8003215 	stw	zero,200(sp)
  806580:	d8003415 	stw	zero,208(sp)
  806584:	0005883a 	mov	r2,zero
  806588:	003a6306 	br	804f18 <__alt_data_end+0xff804f18>
  80658c:	0021883a 	mov	r16,zero
  806590:	003e1f06 	br	805e10 <__alt_data_end+0xff805e10>
  806594:	b009883a 	mov	r4,r22
  806598:	b80b883a 	mov	r5,r23
  80659c:	d9801e04 	addi	r6,sp,120
  8065a0:	08103a00 	call	8103a0 <__sprint_r>
  8065a4:	1039f61e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  8065a8:	d8802617 	ldw	r2,152(sp)
  8065ac:	db003317 	ldw	r12,204(sp)
  8065b0:	d8c02017 	ldw	r3,128(sp)
  8065b4:	da000404 	addi	r8,sp,16
  8065b8:	6085c83a 	sub	r2,r12,r2
  8065bc:	003e1306 	br	805e0c <__alt_data_end+0xff805e0c>
  8065c0:	030020b4 	movhi	r12,130
  8065c4:	632dd584 	addi	r12,r12,-18602
  8065c8:	db003615 	stw	r12,216(sp)
  8065cc:	003b0206 	br	8051d8 <__alt_data_end+0xff8051d8>
  8065d0:	00c00b44 	movi	r3,45
  8065d4:	d8802b15 	stw	r2,172(sp)
  8065d8:	dc402d17 	ldw	r17,180(sp)
  8065dc:	d8c02785 	stb	r3,158(sp)
  8065e0:	dcc02d15 	stw	r19,180(sp)
  8065e4:	d8003215 	stw	zero,200(sp)
  8065e8:	00800b44 	movi	r2,45
  8065ec:	003a4706 	br	804f0c <__alt_data_end+0xff804f0c>
  8065f0:	05400b44 	movi	r21,45
  8065f4:	dd402785 	stb	r21,158(sp)
  8065f8:	003b4706 	br	805318 <__alt_data_end+0xff805318>
  8065fc:	008020b4 	movhi	r2,130
  806600:	10adc404 	addi	r2,r2,-18672
  806604:	d8803115 	stw	r2,196(sp)
  806608:	003f4106 	br	806310 <__alt_data_end+0xff806310>
  80660c:	d8c02617 	ldw	r3,152(sp)
  806610:	00bfff44 	movi	r2,-3
  806614:	18801116 	blt	r3,r2,80665c <___vfprintf_internal_r+0x1cac>
  806618:	48c01016 	blt	r9,r3,80665c <___vfprintf_internal_r+0x1cac>
  80661c:	d8c03415 	stw	r3,208(sp)
  806620:	040019c4 	movi	r16,103
  806624:	003eb206 	br	8060f0 <__alt_data_end+0xff8060f0>
  806628:	010020b4 	movhi	r4,130
  80662c:	212dd184 	addi	r4,r4,-18618
  806630:	d9002c15 	stw	r4,176(sp)
  806634:	003cb106 	br	8058fc <__alt_data_end+0xff8058fc>
  806638:	5005883a 	mov	r2,r10
  80663c:	003ea106 	br	8060c4 <__alt_data_end+0xff8060c4>
  806640:	da402b15 	stw	r9,172(sp)
  806644:	dd402783 	ldbu	r21,158(sp)
  806648:	4825883a 	mov	r18,r9
  80664c:	dcc02d15 	stw	r19,180(sp)
  806650:	d8003215 	stw	zero,200(sp)
  806654:	d8003415 	stw	zero,208(sp)
  806658:	003a2806 	br	804efc <__alt_data_end+0xff804efc>
  80665c:	843fff84 	addi	r16,r16,-2
  806660:	1f3fffc4 	addi	fp,r3,-1
  806664:	df002615 	stw	fp,152(sp)
  806668:	dc0022c5 	stb	r16,139(sp)
  80666c:	e0009816 	blt	fp,zero,8068d0 <___vfprintf_internal_r+0x1f20>
  806670:	00800ac4 	movi	r2,43
  806674:	d8802305 	stb	r2,140(sp)
  806678:	00800244 	movi	r2,9
  80667c:	1700750e 	bge	r2,fp,806854 <___vfprintf_internal_r+0x1ea4>
  806680:	dd4022c4 	addi	r21,sp,139
  806684:	dc002c15 	stw	r16,176(sp)
  806688:	4025883a 	mov	r18,r8
  80668c:	a821883a 	mov	r16,r21
  806690:	e009883a 	mov	r4,fp
  806694:	01400284 	movi	r5,10
  806698:	08148900 	call	814890 <__modsi3>
  80669c:	10800c04 	addi	r2,r2,48
  8066a0:	843fffc4 	addi	r16,r16,-1
  8066a4:	e009883a 	mov	r4,fp
  8066a8:	01400284 	movi	r5,10
  8066ac:	80800005 	stb	r2,0(r16)
  8066b0:	081483c0 	call	81483c <__divsi3>
  8066b4:	1039883a 	mov	fp,r2
  8066b8:	00800244 	movi	r2,9
  8066bc:	173ff416 	blt	r2,fp,806690 <__alt_data_end+0xff806690>
  8066c0:	9011883a 	mov	r8,r18
  8066c4:	e0800c04 	addi	r2,fp,48
  8066c8:	8025883a 	mov	r18,r16
  8066cc:	913fffc4 	addi	r4,r18,-1
  8066d0:	90bfffc5 	stb	r2,-1(r18)
  8066d4:	dc002c17 	ldw	r16,176(sp)
  8066d8:	2540852e 	bgeu	r4,r21,8068f0 <___vfprintf_internal_r+0x1f40>
  8066dc:	d9402384 	addi	r5,sp,142
  8066e0:	2c8bc83a 	sub	r5,r5,r18
  8066e4:	d8c02344 	addi	r3,sp,141
  8066e8:	a94b883a 	add	r5,r21,r5
  8066ec:	00000106 	br	8066f4 <___vfprintf_internal_r+0x1d44>
  8066f0:	20800003 	ldbu	r2,0(r4)
  8066f4:	18800005 	stb	r2,0(r3)
  8066f8:	18c00044 	addi	r3,r3,1
  8066fc:	21000044 	addi	r4,r4,1
  806700:	197ffb1e 	bne	r3,r5,8066f0 <__alt_data_end+0xff8066f0>
  806704:	d8802304 	addi	r2,sp,140
  806708:	1485c83a 	sub	r2,r2,r18
  80670c:	d8c02344 	addi	r3,sp,141
  806710:	1885883a 	add	r2,r3,r2
  806714:	dac03317 	ldw	r11,204(sp)
  806718:	156bc83a 	sub	r21,r2,r21
  80671c:	dd403a15 	stw	r21,232(sp)
  806720:	00800044 	movi	r2,1
  806724:	5d65883a 	add	r18,r11,r21
  806728:	12c0660e 	bge	r2,r11,8068c4 <___vfprintf_internal_r+0x1f14>
  80672c:	94800044 	addi	r18,r18,1
  806730:	9005883a 	mov	r2,r18
  806734:	90006116 	blt	r18,zero,8068bc <___vfprintf_internal_r+0x1f0c>
  806738:	d8003415 	stw	zero,208(sp)
  80673c:	003e7406 	br	806110 <__alt_data_end+0xff806110>
  806740:	b009883a 	mov	r4,r22
  806744:	b80b883a 	mov	r5,r23
  806748:	d9801e04 	addi	r6,sp,120
  80674c:	08103a00 	call	8103a0 <__sprint_r>
  806750:	10398b1e 	bne	r2,zero,804d80 <__alt_data_end+0xff804d80>
  806754:	dc002617 	ldw	r16,152(sp)
  806758:	d8c02017 	ldw	r3,128(sp)
  80675c:	d8801f17 	ldw	r2,124(sp)
  806760:	da000404 	addi	r8,sp,16
  806764:	003ec906 	br	80628c <__alt_data_end+0xff80628c>
  806768:	483e1c1e 	bne	r9,zero,805fdc <__alt_data_end+0xff805fdc>
  80676c:	9013883a 	mov	r9,r18
  806770:	003e1a06 	br	805fdc <__alt_data_end+0xff805fdc>
  806774:	02400184 	movi	r9,6
  806778:	003e1806 	br	805fdc <__alt_data_end+0xff805fdc>
  80677c:	d8c03417 	ldw	r3,208(sp)
  806780:	00c04b0e 	bge	zero,r3,8068b0 <___vfprintf_internal_r+0x1f00>
  806784:	04800044 	movi	r18,1
  806788:	dac03317 	ldw	r11,204(sp)
  80678c:	92e5883a 	add	r18,r18,r11
  806790:	9005883a 	mov	r2,r18
  806794:	903e5e0e 	bge	r18,zero,806110 <__alt_data_end+0xff806110>
  806798:	0005883a 	mov	r2,zero
  80679c:	003e5c06 	br	806110 <__alt_data_end+0xff806110>
  8067a0:	00c00b44 	movi	r3,45
  8067a4:	64a0003c 	xorhi	r18,r12,32768
  8067a8:	d8c02b05 	stb	r3,172(sp)
  8067ac:	003e1106 	br	805ff4 <__alt_data_end+0xff805ff4>
  8067b0:	4f000044 	addi	fp,r9,1
  8067b4:	003e1606 	br	806010 <__alt_data_end+0xff806010>
  8067b8:	d8c02617 	ldw	r3,152(sp)
  8067bc:	d8c03415 	stw	r3,208(sp)
  8067c0:	00c0350e 	bge	zero,r3,806898 <___vfprintf_internal_r+0x1ee8>
  8067c4:	4800081e 	bne	r9,zero,8067e8 <___vfprintf_internal_r+0x1e38>
  8067c8:	8c40004c 	andi	r17,r17,1
  8067cc:	8800061e 	bne	r17,zero,8067e8 <___vfprintf_internal_r+0x1e38>
  8067d0:	1805883a 	mov	r2,r3
  8067d4:	183e4d0e 	bge	r3,zero,80610c <__alt_data_end+0xff80610c>
  8067d8:	0005883a 	mov	r2,zero
  8067dc:	003e4b06 	br	80610c <__alt_data_end+0xff80610c>
  8067e0:	d8802117 	ldw	r2,132(sp)
  8067e4:	003e3706 	br	8060c4 <__alt_data_end+0xff8060c4>
  8067e8:	dac03417 	ldw	r11,208(sp)
  8067ec:	4a400044 	addi	r9,r9,1
  8067f0:	5a65883a 	add	r18,r11,r9
  8067f4:	9005883a 	mov	r2,r18
  8067f8:	903e450e 	bge	r18,zero,806110 <__alt_data_end+0xff806110>
  8067fc:	003fe606 	br	806798 <__alt_data_end+0xff806798>
  806800:	db003417 	ldw	r12,208(sp)
  806804:	64800044 	addi	r18,r12,1
  806808:	9005883a 	mov	r2,r18
  80680c:	903e400e 	bge	r18,zero,806110 <__alt_data_end+0xff806110>
  806810:	003fe106 	br	806798 <__alt_data_end+0xff806798>
  806814:	d9003717 	ldw	r4,220(sp)
  806818:	900b883a 	mov	r5,r18
  80681c:	000d883a 	mov	r6,zero
  806820:	000f883a 	mov	r7,zero
  806824:	da003f15 	stw	r8,252(sp)
  806828:	da403e15 	stw	r9,248(sp)
  80682c:	da803d15 	stw	r10,244(sp)
  806830:	0815c480 	call	815c48 <__eqdf2>
  806834:	da003f17 	ldw	r8,252(sp)
  806838:	da403e17 	ldw	r9,248(sp)
  80683c:	da803d17 	ldw	r10,244(sp)
  806840:	103f1f26 	beq	r2,zero,8064c0 <__alt_data_end+0xff8064c0>
  806844:	00800044 	movi	r2,1
  806848:	1707c83a 	sub	r3,r2,fp
  80684c:	d8c02615 	stw	r3,152(sp)
  806850:	003f1c06 	br	8064c4 <__alt_data_end+0xff8064c4>
  806854:	00800c04 	movi	r2,48
  806858:	e0c00c04 	addi	r3,fp,48
  80685c:	d8802345 	stb	r2,141(sp)
  806860:	d8c02385 	stb	r3,142(sp)
  806864:	d88023c4 	addi	r2,sp,143
  806868:	dd4022c4 	addi	r21,sp,139
  80686c:	003fa906 	br	806714 <__alt_data_end+0xff806714>
  806870:	0005883a 	mov	r2,zero
  806874:	003f3c06 	br	806568 <__alt_data_end+0xff806568>
  806878:	dac02d17 	ldw	r11,180(sp)
  80687c:	5a400017 	ldw	r9,0(r11)
  806880:	5ac00104 	addi	r11,r11,4
  806884:	dac02d15 	stw	r11,180(sp)
  806888:	483ec80e 	bge	r9,zero,8063ac <__alt_data_end+0xff8063ac>
  80688c:	027fffc4 	movi	r9,-1
  806890:	1c000047 	ldb	r16,1(r3)
  806894:	0038ab06 	br	804b44 <__alt_data_end+0xff804b44>
  806898:	4800111e 	bne	r9,zero,8068e0 <___vfprintf_internal_r+0x1f30>
  80689c:	8c40004c 	andi	r17,r17,1
  8068a0:	88000f1e 	bne	r17,zero,8068e0 <___vfprintf_internal_r+0x1f30>
  8068a4:	00800044 	movi	r2,1
  8068a8:	1025883a 	mov	r18,r2
  8068ac:	003e1806 	br	806110 <__alt_data_end+0xff806110>
  8068b0:	04800084 	movi	r18,2
  8068b4:	90e5c83a 	sub	r18,r18,r3
  8068b8:	003fb306 	br	806788 <__alt_data_end+0xff806788>
  8068bc:	0005883a 	mov	r2,zero
  8068c0:	003f9d06 	br	806738 <__alt_data_end+0xff806738>
  8068c4:	88a2703a 	and	r17,r17,r2
  8068c8:	883f9926 	beq	r17,zero,806730 <__alt_data_end+0xff806730>
  8068cc:	003f9706 	br	80672c <__alt_data_end+0xff80672c>
  8068d0:	00800b44 	movi	r2,45
  8068d4:	0739c83a 	sub	fp,zero,fp
  8068d8:	d8802305 	stb	r2,140(sp)
  8068dc:	003f6606 	br	806678 <__alt_data_end+0xff806678>
  8068e0:	4c800084 	addi	r18,r9,2
  8068e4:	9005883a 	mov	r2,r18
  8068e8:	903e090e 	bge	r18,zero,806110 <__alt_data_end+0xff806110>
  8068ec:	003faa06 	br	806798 <__alt_data_end+0xff806798>
  8068f0:	d8802344 	addi	r2,sp,141
  8068f4:	003f8706 	br	806714 <__alt_data_end+0xff806714>
  8068f8:	d8c02617 	ldw	r3,152(sp)
  8068fc:	003f5806 	br	806660 <__alt_data_end+0xff806660>

00806900 <__vfprintf_internal>:
  806900:	2007883a 	mov	r3,r4
  806904:	010020b4 	movhi	r4,130
  806908:	2136e204 	addi	r4,r4,-9336
  80690c:	21000017 	ldw	r4,0(r4)
  806910:	2805883a 	mov	r2,r5
  806914:	300f883a 	mov	r7,r6
  806918:	180b883a 	mov	r5,r3
  80691c:	100d883a 	mov	r6,r2
  806920:	08049b01 	jmpi	8049b0 <___vfprintf_internal_r>

00806924 <__sbprintf>:
  806924:	2880030b 	ldhu	r2,12(r5)
  806928:	2ac01917 	ldw	r11,100(r5)
  80692c:	2a80038b 	ldhu	r10,14(r5)
  806930:	2a400717 	ldw	r9,28(r5)
  806934:	2a000917 	ldw	r8,36(r5)
  806938:	defee204 	addi	sp,sp,-1144
  80693c:	00c10004 	movi	r3,1024
  806940:	dc011a15 	stw	r16,1128(sp)
  806944:	10bfff4c 	andi	r2,r2,65533
  806948:	2821883a 	mov	r16,r5
  80694c:	d8cb883a 	add	r5,sp,r3
  806950:	dc811c15 	stw	r18,1136(sp)
  806954:	dc411b15 	stw	r17,1132(sp)
  806958:	dfc11d15 	stw	ra,1140(sp)
  80695c:	2025883a 	mov	r18,r4
  806960:	d881030d 	sth	r2,1036(sp)
  806964:	dac11915 	stw	r11,1124(sp)
  806968:	da81038d 	sth	r10,1038(sp)
  80696c:	da410715 	stw	r9,1052(sp)
  806970:	da010915 	stw	r8,1060(sp)
  806974:	dec10015 	stw	sp,1024(sp)
  806978:	dec10415 	stw	sp,1040(sp)
  80697c:	d8c10215 	stw	r3,1032(sp)
  806980:	d8c10515 	stw	r3,1044(sp)
  806984:	d8010615 	stw	zero,1048(sp)
  806988:	08049b00 	call	8049b0 <___vfprintf_internal_r>
  80698c:	1023883a 	mov	r17,r2
  806990:	10000416 	blt	r2,zero,8069a4 <__sbprintf+0x80>
  806994:	9009883a 	mov	r4,r18
  806998:	d9410004 	addi	r5,sp,1024
  80699c:	0800ef40 	call	800ef4 <_fflush_r>
  8069a0:	10000d1e 	bne	r2,zero,8069d8 <__sbprintf+0xb4>
  8069a4:	d8c1030b 	ldhu	r3,1036(sp)
  8069a8:	18c0100c 	andi	r3,r3,64
  8069ac:	18000326 	beq	r3,zero,8069bc <__sbprintf+0x98>
  8069b0:	8080030b 	ldhu	r2,12(r16)
  8069b4:	10801014 	ori	r2,r2,64
  8069b8:	8080030d 	sth	r2,12(r16)
  8069bc:	8805883a 	mov	r2,r17
  8069c0:	dfc11d17 	ldw	ra,1140(sp)
  8069c4:	dc811c17 	ldw	r18,1136(sp)
  8069c8:	dc411b17 	ldw	r17,1132(sp)
  8069cc:	dc011a17 	ldw	r16,1128(sp)
  8069d0:	dec11e04 	addi	sp,sp,1144
  8069d4:	f800283a 	ret
  8069d8:	047fffc4 	movi	r17,-1
  8069dc:	003ff106 	br	8069a4 <__alt_data_end+0xff8069a4>

008069e0 <_write_r>:
  8069e0:	defffd04 	addi	sp,sp,-12
  8069e4:	dc000015 	stw	r16,0(sp)
  8069e8:	040020b4 	movhi	r16,130
  8069ec:	dc400115 	stw	r17,4(sp)
  8069f0:	843e4d04 	addi	r16,r16,-1740
  8069f4:	2023883a 	mov	r17,r4
  8069f8:	2809883a 	mov	r4,r5
  8069fc:	300b883a 	mov	r5,r6
  806a00:	380d883a 	mov	r6,r7
  806a04:	dfc00215 	stw	ra,8(sp)
  806a08:	80000015 	stw	zero,0(r16)
  806a0c:	0817dc80 	call	817dc8 <write>
  806a10:	00ffffc4 	movi	r3,-1
  806a14:	10c00526 	beq	r2,r3,806a2c <_write_r+0x4c>
  806a18:	dfc00217 	ldw	ra,8(sp)
  806a1c:	dc400117 	ldw	r17,4(sp)
  806a20:	dc000017 	ldw	r16,0(sp)
  806a24:	dec00304 	addi	sp,sp,12
  806a28:	f800283a 	ret
  806a2c:	80c00017 	ldw	r3,0(r16)
  806a30:	183ff926 	beq	r3,zero,806a18 <__alt_data_end+0xff806a18>
  806a34:	88c00015 	stw	r3,0(r17)
  806a38:	003ff706 	br	806a18 <__alt_data_end+0xff806a18>

00806a3c <__swsetup_r>:
  806a3c:	008020b4 	movhi	r2,130
  806a40:	defffd04 	addi	sp,sp,-12
  806a44:	10b6e204 	addi	r2,r2,-9336
  806a48:	dc400115 	stw	r17,4(sp)
  806a4c:	2023883a 	mov	r17,r4
  806a50:	11000017 	ldw	r4,0(r2)
  806a54:	dc000015 	stw	r16,0(sp)
  806a58:	dfc00215 	stw	ra,8(sp)
  806a5c:	2821883a 	mov	r16,r5
  806a60:	20000226 	beq	r4,zero,806a6c <__swsetup_r+0x30>
  806a64:	20c00e17 	ldw	r3,56(r4)
  806a68:	18003126 	beq	r3,zero,806b30 <__swsetup_r+0xf4>
  806a6c:	8080030b 	ldhu	r2,12(r16)
  806a70:	10c0020c 	andi	r3,r2,8
  806a74:	100d883a 	mov	r6,r2
  806a78:	18000f26 	beq	r3,zero,806ab8 <__swsetup_r+0x7c>
  806a7c:	80c00417 	ldw	r3,16(r16)
  806a80:	18001526 	beq	r3,zero,806ad8 <__swsetup_r+0x9c>
  806a84:	1100004c 	andi	r4,r2,1
  806a88:	20001c1e 	bne	r4,zero,806afc <__swsetup_r+0xc0>
  806a8c:	1080008c 	andi	r2,r2,2
  806a90:	1000291e 	bne	r2,zero,806b38 <__swsetup_r+0xfc>
  806a94:	80800517 	ldw	r2,20(r16)
  806a98:	80800215 	stw	r2,8(r16)
  806a9c:	18001c26 	beq	r3,zero,806b10 <__swsetup_r+0xd4>
  806aa0:	0005883a 	mov	r2,zero
  806aa4:	dfc00217 	ldw	ra,8(sp)
  806aa8:	dc400117 	ldw	r17,4(sp)
  806aac:	dc000017 	ldw	r16,0(sp)
  806ab0:	dec00304 	addi	sp,sp,12
  806ab4:	f800283a 	ret
  806ab8:	3080040c 	andi	r2,r6,16
  806abc:	10002e26 	beq	r2,zero,806b78 <__swsetup_r+0x13c>
  806ac0:	3080010c 	andi	r2,r6,4
  806ac4:	10001e1e 	bne	r2,zero,806b40 <__swsetup_r+0x104>
  806ac8:	80c00417 	ldw	r3,16(r16)
  806acc:	30800214 	ori	r2,r6,8
  806ad0:	8080030d 	sth	r2,12(r16)
  806ad4:	183feb1e 	bne	r3,zero,806a84 <__alt_data_end+0xff806a84>
  806ad8:	1140a00c 	andi	r5,r2,640
  806adc:	01008004 	movi	r4,512
  806ae0:	293fe826 	beq	r5,r4,806a84 <__alt_data_end+0xff806a84>
  806ae4:	8809883a 	mov	r4,r17
  806ae8:	800b883a 	mov	r5,r16
  806aec:	08021000 	call	802100 <__smakebuf_r>
  806af0:	8080030b 	ldhu	r2,12(r16)
  806af4:	80c00417 	ldw	r3,16(r16)
  806af8:	003fe206 	br	806a84 <__alt_data_end+0xff806a84>
  806afc:	80800517 	ldw	r2,20(r16)
  806b00:	80000215 	stw	zero,8(r16)
  806b04:	0085c83a 	sub	r2,zero,r2
  806b08:	80800615 	stw	r2,24(r16)
  806b0c:	183fe41e 	bne	r3,zero,806aa0 <__alt_data_end+0xff806aa0>
  806b10:	80c0030b 	ldhu	r3,12(r16)
  806b14:	0005883a 	mov	r2,zero
  806b18:	1900200c 	andi	r4,r3,128
  806b1c:	203fe126 	beq	r4,zero,806aa4 <__alt_data_end+0xff806aa4>
  806b20:	18c01014 	ori	r3,r3,64
  806b24:	80c0030d 	sth	r3,12(r16)
  806b28:	00bfffc4 	movi	r2,-1
  806b2c:	003fdd06 	br	806aa4 <__alt_data_end+0xff806aa4>
  806b30:	08012d00 	call	8012d0 <__sinit>
  806b34:	003fcd06 	br	806a6c <__alt_data_end+0xff806a6c>
  806b38:	0005883a 	mov	r2,zero
  806b3c:	003fd606 	br	806a98 <__alt_data_end+0xff806a98>
  806b40:	81400c17 	ldw	r5,48(r16)
  806b44:	28000626 	beq	r5,zero,806b60 <__swsetup_r+0x124>
  806b48:	80801004 	addi	r2,r16,64
  806b4c:	28800326 	beq	r5,r2,806b5c <__swsetup_r+0x120>
  806b50:	8809883a 	mov	r4,r17
  806b54:	080159c0 	call	80159c <_free_r>
  806b58:	8180030b 	ldhu	r6,12(r16)
  806b5c:	80000c15 	stw	zero,48(r16)
  806b60:	80c00417 	ldw	r3,16(r16)
  806b64:	00bff6c4 	movi	r2,-37
  806b68:	118c703a 	and	r6,r2,r6
  806b6c:	80000115 	stw	zero,4(r16)
  806b70:	80c00015 	stw	r3,0(r16)
  806b74:	003fd506 	br	806acc <__alt_data_end+0xff806acc>
  806b78:	00800244 	movi	r2,9
  806b7c:	88800015 	stw	r2,0(r17)
  806b80:	30801014 	ori	r2,r6,64
  806b84:	8080030d 	sth	r2,12(r16)
  806b88:	00bfffc4 	movi	r2,-1
  806b8c:	003fc506 	br	806aa4 <__alt_data_end+0xff806aa4>

00806b90 <_close_r>:
  806b90:	defffd04 	addi	sp,sp,-12
  806b94:	dc000015 	stw	r16,0(sp)
  806b98:	040020b4 	movhi	r16,130
  806b9c:	dc400115 	stw	r17,4(sp)
  806ba0:	843e4d04 	addi	r16,r16,-1740
  806ba4:	2023883a 	mov	r17,r4
  806ba8:	2809883a 	mov	r4,r5
  806bac:	dfc00215 	stw	ra,8(sp)
  806bb0:	80000015 	stw	zero,0(r16)
  806bb4:	08172c80 	call	8172c8 <close>
  806bb8:	00ffffc4 	movi	r3,-1
  806bbc:	10c00526 	beq	r2,r3,806bd4 <_close_r+0x44>
  806bc0:	dfc00217 	ldw	ra,8(sp)
  806bc4:	dc400117 	ldw	r17,4(sp)
  806bc8:	dc000017 	ldw	r16,0(sp)
  806bcc:	dec00304 	addi	sp,sp,12
  806bd0:	f800283a 	ret
  806bd4:	80c00017 	ldw	r3,0(r16)
  806bd8:	183ff926 	beq	r3,zero,806bc0 <__alt_data_end+0xff806bc0>
  806bdc:	88c00015 	stw	r3,0(r17)
  806be0:	003ff706 	br	806bc0 <__alt_data_end+0xff806bc0>

00806be4 <quorem>:
  806be4:	defff704 	addi	sp,sp,-36
  806be8:	dc800215 	stw	r18,8(sp)
  806bec:	20800417 	ldw	r2,16(r4)
  806bf0:	2c800417 	ldw	r18,16(r5)
  806bf4:	dfc00815 	stw	ra,32(sp)
  806bf8:	ddc00715 	stw	r23,28(sp)
  806bfc:	dd800615 	stw	r22,24(sp)
  806c00:	dd400515 	stw	r21,20(sp)
  806c04:	dd000415 	stw	r20,16(sp)
  806c08:	dcc00315 	stw	r19,12(sp)
  806c0c:	dc400115 	stw	r17,4(sp)
  806c10:	dc000015 	stw	r16,0(sp)
  806c14:	14807116 	blt	r2,r18,806ddc <quorem+0x1f8>
  806c18:	94bfffc4 	addi	r18,r18,-1
  806c1c:	94ad883a 	add	r22,r18,r18
  806c20:	b5ad883a 	add	r22,r22,r22
  806c24:	2c400504 	addi	r17,r5,20
  806c28:	8da9883a 	add	r20,r17,r22
  806c2c:	25400504 	addi	r21,r4,20
  806c30:	282f883a 	mov	r23,r5
  806c34:	adad883a 	add	r22,r21,r22
  806c38:	a1400017 	ldw	r5,0(r20)
  806c3c:	2021883a 	mov	r16,r4
  806c40:	b1000017 	ldw	r4,0(r22)
  806c44:	29400044 	addi	r5,r5,1
  806c48:	08148ec0 	call	8148ec <__udivsi3>
  806c4c:	1027883a 	mov	r19,r2
  806c50:	10002c26 	beq	r2,zero,806d04 <quorem+0x120>
  806c54:	a813883a 	mov	r9,r21
  806c58:	8811883a 	mov	r8,r17
  806c5c:	0009883a 	mov	r4,zero
  806c60:	000d883a 	mov	r6,zero
  806c64:	41c00017 	ldw	r7,0(r8)
  806c68:	49400017 	ldw	r5,0(r9)
  806c6c:	42000104 	addi	r8,r8,4
  806c70:	38bfffcc 	andi	r2,r7,65535
  806c74:	14c5383a 	mul	r2,r2,r19
  806c78:	380ed43a 	srli	r7,r7,16
  806c7c:	28ffffcc 	andi	r3,r5,65535
  806c80:	2085883a 	add	r2,r4,r2
  806c84:	1008d43a 	srli	r4,r2,16
  806c88:	3ccf383a 	mul	r7,r7,r19
  806c8c:	198d883a 	add	r6,r3,r6
  806c90:	10ffffcc 	andi	r3,r2,65535
  806c94:	30c7c83a 	sub	r3,r6,r3
  806c98:	280ad43a 	srli	r5,r5,16
  806c9c:	21c9883a 	add	r4,r4,r7
  806ca0:	180dd43a 	srai	r6,r3,16
  806ca4:	20bfffcc 	andi	r2,r4,65535
  806ca8:	288bc83a 	sub	r5,r5,r2
  806cac:	298b883a 	add	r5,r5,r6
  806cb0:	280e943a 	slli	r7,r5,16
  806cb4:	18ffffcc 	andi	r3,r3,65535
  806cb8:	2008d43a 	srli	r4,r4,16
  806cbc:	38ceb03a 	or	r7,r7,r3
  806cc0:	49c00015 	stw	r7,0(r9)
  806cc4:	280dd43a 	srai	r6,r5,16
  806cc8:	4a400104 	addi	r9,r9,4
  806ccc:	a23fe52e 	bgeu	r20,r8,806c64 <__alt_data_end+0xff806c64>
  806cd0:	b0800017 	ldw	r2,0(r22)
  806cd4:	10000b1e 	bne	r2,zero,806d04 <quorem+0x120>
  806cd8:	b0bfff04 	addi	r2,r22,-4
  806cdc:	a880082e 	bgeu	r21,r2,806d00 <quorem+0x11c>
  806ce0:	b0ffff17 	ldw	r3,-4(r22)
  806ce4:	18000326 	beq	r3,zero,806cf4 <quorem+0x110>
  806ce8:	00000506 	br	806d00 <quorem+0x11c>
  806cec:	10c00017 	ldw	r3,0(r2)
  806cf0:	1800031e 	bne	r3,zero,806d00 <quorem+0x11c>
  806cf4:	10bfff04 	addi	r2,r2,-4
  806cf8:	94bfffc4 	addi	r18,r18,-1
  806cfc:	a8bffb36 	bltu	r21,r2,806cec <__alt_data_end+0xff806cec>
  806d00:	84800415 	stw	r18,16(r16)
  806d04:	8009883a 	mov	r4,r16
  806d08:	b80b883a 	mov	r5,r23
  806d0c:	0809aac0 	call	809aac <__mcmp>
  806d10:	10002616 	blt	r2,zero,806dac <quorem+0x1c8>
  806d14:	9cc00044 	addi	r19,r19,1
  806d18:	a80d883a 	mov	r6,r21
  806d1c:	000b883a 	mov	r5,zero
  806d20:	31000017 	ldw	r4,0(r6)
  806d24:	88800017 	ldw	r2,0(r17)
  806d28:	31800104 	addi	r6,r6,4
  806d2c:	20ffffcc 	andi	r3,r4,65535
  806d30:	194b883a 	add	r5,r3,r5
  806d34:	10ffffcc 	andi	r3,r2,65535
  806d38:	28c7c83a 	sub	r3,r5,r3
  806d3c:	1004d43a 	srli	r2,r2,16
  806d40:	2008d43a 	srli	r4,r4,16
  806d44:	180bd43a 	srai	r5,r3,16
  806d48:	18ffffcc 	andi	r3,r3,65535
  806d4c:	2089c83a 	sub	r4,r4,r2
  806d50:	2149883a 	add	r4,r4,r5
  806d54:	2004943a 	slli	r2,r4,16
  806d58:	8c400104 	addi	r17,r17,4
  806d5c:	200bd43a 	srai	r5,r4,16
  806d60:	10c6b03a 	or	r3,r2,r3
  806d64:	30ffff15 	stw	r3,-4(r6)
  806d68:	a47fed2e 	bgeu	r20,r17,806d20 <__alt_data_end+0xff806d20>
  806d6c:	9485883a 	add	r2,r18,r18
  806d70:	1085883a 	add	r2,r2,r2
  806d74:	a887883a 	add	r3,r21,r2
  806d78:	18800017 	ldw	r2,0(r3)
  806d7c:	10000b1e 	bne	r2,zero,806dac <quorem+0x1c8>
  806d80:	18bfff04 	addi	r2,r3,-4
  806d84:	a880082e 	bgeu	r21,r2,806da8 <quorem+0x1c4>
  806d88:	18ffff17 	ldw	r3,-4(r3)
  806d8c:	18000326 	beq	r3,zero,806d9c <quorem+0x1b8>
  806d90:	00000506 	br	806da8 <quorem+0x1c4>
  806d94:	10c00017 	ldw	r3,0(r2)
  806d98:	1800031e 	bne	r3,zero,806da8 <quorem+0x1c4>
  806d9c:	10bfff04 	addi	r2,r2,-4
  806da0:	94bfffc4 	addi	r18,r18,-1
  806da4:	a8bffb36 	bltu	r21,r2,806d94 <__alt_data_end+0xff806d94>
  806da8:	84800415 	stw	r18,16(r16)
  806dac:	9805883a 	mov	r2,r19
  806db0:	dfc00817 	ldw	ra,32(sp)
  806db4:	ddc00717 	ldw	r23,28(sp)
  806db8:	dd800617 	ldw	r22,24(sp)
  806dbc:	dd400517 	ldw	r21,20(sp)
  806dc0:	dd000417 	ldw	r20,16(sp)
  806dc4:	dcc00317 	ldw	r19,12(sp)
  806dc8:	dc800217 	ldw	r18,8(sp)
  806dcc:	dc400117 	ldw	r17,4(sp)
  806dd0:	dc000017 	ldw	r16,0(sp)
  806dd4:	dec00904 	addi	sp,sp,36
  806dd8:	f800283a 	ret
  806ddc:	0005883a 	mov	r2,zero
  806de0:	003ff306 	br	806db0 <__alt_data_end+0xff806db0>

00806de4 <_dtoa_r>:
  806de4:	20801017 	ldw	r2,64(r4)
  806de8:	deffde04 	addi	sp,sp,-136
  806dec:	dd401d15 	stw	r21,116(sp)
  806df0:	dcc01b15 	stw	r19,108(sp)
  806df4:	dc801a15 	stw	r18,104(sp)
  806df8:	dc401915 	stw	r17,100(sp)
  806dfc:	dc001815 	stw	r16,96(sp)
  806e00:	dfc02115 	stw	ra,132(sp)
  806e04:	df002015 	stw	fp,128(sp)
  806e08:	ddc01f15 	stw	r23,124(sp)
  806e0c:	dd801e15 	stw	r22,120(sp)
  806e10:	dd001c15 	stw	r20,112(sp)
  806e14:	d9c00315 	stw	r7,12(sp)
  806e18:	2021883a 	mov	r16,r4
  806e1c:	302b883a 	mov	r21,r6
  806e20:	2825883a 	mov	r18,r5
  806e24:	dc402417 	ldw	r17,144(sp)
  806e28:	3027883a 	mov	r19,r6
  806e2c:	10000826 	beq	r2,zero,806e50 <_dtoa_r+0x6c>
  806e30:	21801117 	ldw	r6,68(r4)
  806e34:	00c00044 	movi	r3,1
  806e38:	100b883a 	mov	r5,r2
  806e3c:	1986983a 	sll	r3,r3,r6
  806e40:	11800115 	stw	r6,4(r2)
  806e44:	10c00215 	stw	r3,8(r2)
  806e48:	08092800 	call	809280 <_Bfree>
  806e4c:	80001015 	stw	zero,64(r16)
  806e50:	a8002d16 	blt	r21,zero,806f08 <_dtoa_r+0x124>
  806e54:	88000015 	stw	zero,0(r17)
  806e58:	a8dffc2c 	andhi	r3,r21,32752
  806e5c:	009ffc34 	movhi	r2,32752
  806e60:	18801b26 	beq	r3,r2,806ed0 <_dtoa_r+0xec>
  806e64:	9009883a 	mov	r4,r18
  806e68:	980b883a 	mov	r5,r19
  806e6c:	000d883a 	mov	r6,zero
  806e70:	000f883a 	mov	r7,zero
  806e74:	0815c480 	call	815c48 <__eqdf2>
  806e78:	10002a1e 	bne	r2,zero,806f24 <_dtoa_r+0x140>
  806e7c:	d8c02317 	ldw	r3,140(sp)
  806e80:	d9002517 	ldw	r4,148(sp)
  806e84:	00800044 	movi	r2,1
  806e88:	18800015 	stw	r2,0(r3)
  806e8c:	2001a226 	beq	r4,zero,807518 <_dtoa_r+0x734>
  806e90:	008020b4 	movhi	r2,130
  806e94:	10add144 	addi	r2,r2,-18619
  806e98:	20800015 	stw	r2,0(r4)
  806e9c:	10bfffc4 	addi	r2,r2,-1
  806ea0:	dfc02117 	ldw	ra,132(sp)
  806ea4:	df002017 	ldw	fp,128(sp)
  806ea8:	ddc01f17 	ldw	r23,124(sp)
  806eac:	dd801e17 	ldw	r22,120(sp)
  806eb0:	dd401d17 	ldw	r21,116(sp)
  806eb4:	dd001c17 	ldw	r20,112(sp)
  806eb8:	dcc01b17 	ldw	r19,108(sp)
  806ebc:	dc801a17 	ldw	r18,104(sp)
  806ec0:	dc401917 	ldw	r17,100(sp)
  806ec4:	dc001817 	ldw	r16,96(sp)
  806ec8:	dec02204 	addi	sp,sp,136
  806ecc:	f800283a 	ret
  806ed0:	d8c02317 	ldw	r3,140(sp)
  806ed4:	0089c3c4 	movi	r2,9999
  806ed8:	18800015 	stw	r2,0(r3)
  806edc:	90017c26 	beq	r18,zero,8074d0 <_dtoa_r+0x6ec>
  806ee0:	008020b4 	movhi	r2,130
  806ee4:	10ae7d04 	addi	r2,r2,-17932
  806ee8:	d9002517 	ldw	r4,148(sp)
  806eec:	203fec26 	beq	r4,zero,806ea0 <__alt_data_end+0xff806ea0>
  806ef0:	10c000c7 	ldb	r3,3(r2)
  806ef4:	18017d1e 	bne	r3,zero,8074ec <_dtoa_r+0x708>
  806ef8:	10c000c4 	addi	r3,r2,3
  806efc:	d9802517 	ldw	r6,148(sp)
  806f00:	30c00015 	stw	r3,0(r6)
  806f04:	003fe606 	br	806ea0 <__alt_data_end+0xff806ea0>
  806f08:	04e00034 	movhi	r19,32768
  806f0c:	9cffffc4 	addi	r19,r19,-1
  806f10:	00800044 	movi	r2,1
  806f14:	ace6703a 	and	r19,r21,r19
  806f18:	88800015 	stw	r2,0(r17)
  806f1c:	982b883a 	mov	r21,r19
  806f20:	003fcd06 	br	806e58 <__alt_data_end+0xff806e58>
  806f24:	d8800204 	addi	r2,sp,8
  806f28:	a822d53a 	srli	r17,r21,20
  806f2c:	d8800015 	stw	r2,0(sp)
  806f30:	8009883a 	mov	r4,r16
  806f34:	900b883a 	mov	r5,r18
  806f38:	980d883a 	mov	r6,r19
  806f3c:	d9c00104 	addi	r7,sp,4
  806f40:	0809e200 	call	809e20 <__d2b>
  806f44:	1039883a 	mov	fp,r2
  806f48:	88016a1e 	bne	r17,zero,8074f4 <_dtoa_r+0x710>
  806f4c:	dd000217 	ldw	r20,8(sp)
  806f50:	dc400117 	ldw	r17,4(sp)
  806f54:	00befbc4 	movi	r2,-1041
  806f58:	a463883a 	add	r17,r20,r17
  806f5c:	8882ea16 	blt	r17,r2,807b08 <_dtoa_r+0xd24>
  806f60:	00bf0384 	movi	r2,-1010
  806f64:	1445c83a 	sub	r2,r2,r17
  806f68:	89010484 	addi	r4,r17,1042
  806f6c:	a8aa983a 	sll	r21,r21,r2
  806f70:	9108d83a 	srl	r4,r18,r4
  806f74:	a908b03a 	or	r4,r21,r4
  806f78:	0816fd80 	call	816fd8 <__floatunsidf>
  806f7c:	017f8434 	movhi	r5,65040
  806f80:	01800044 	movi	r6,1
  806f84:	1009883a 	mov	r4,r2
  806f88:	194b883a 	add	r5,r3,r5
  806f8c:	8c7fffc4 	addi	r17,r17,-1
  806f90:	d9800f15 	stw	r6,60(sp)
  806f94:	000d883a 	mov	r6,zero
  806f98:	01cffe34 	movhi	r7,16376
  806f9c:	08165b00 	call	8165b0 <__subdf3>
  806fa0:	0198dbf4 	movhi	r6,25455
  806fa4:	01cff4f4 	movhi	r7,16339
  806fa8:	1009883a 	mov	r4,r2
  806fac:	180b883a 	mov	r5,r3
  806fb0:	3190d844 	addi	r6,r6,17249
  806fb4:	39e1e9c4 	addi	r7,r7,-30809
  806fb8:	0815e8c0 	call	815e8c <__muldf3>
  806fbc:	01a2d874 	movhi	r6,35681
  806fc0:	01cff1f4 	movhi	r7,16327
  806fc4:	180b883a 	mov	r5,r3
  806fc8:	31b22cc4 	addi	r6,r6,-14157
  806fcc:	39e28a04 	addi	r7,r7,-30168
  806fd0:	1009883a 	mov	r4,r2
  806fd4:	0814ae00 	call	814ae0 <__adddf3>
  806fd8:	8809883a 	mov	r4,r17
  806fdc:	102d883a 	mov	r22,r2
  806fe0:	182b883a 	mov	r21,r3
  806fe4:	0816f080 	call	816f08 <__floatsidf>
  806fe8:	019427f4 	movhi	r6,20639
  806fec:	01cff4f4 	movhi	r7,16339
  806ff0:	1009883a 	mov	r4,r2
  806ff4:	180b883a 	mov	r5,r3
  806ff8:	319e7ec4 	addi	r6,r6,31227
  806ffc:	39d104c4 	addi	r7,r7,17427
  807000:	0815e8c0 	call	815e8c <__muldf3>
  807004:	b009883a 	mov	r4,r22
  807008:	a80b883a 	mov	r5,r21
  80700c:	100d883a 	mov	r6,r2
  807010:	180f883a 	mov	r7,r3
  807014:	0814ae00 	call	814ae0 <__adddf3>
  807018:	1009883a 	mov	r4,r2
  80701c:	180b883a 	mov	r5,r3
  807020:	102d883a 	mov	r22,r2
  807024:	182b883a 	mov	r21,r3
  807028:	0816e800 	call	816e80 <__fixdfsi>
  80702c:	b009883a 	mov	r4,r22
  807030:	a80b883a 	mov	r5,r21
  807034:	000d883a 	mov	r6,zero
  807038:	000f883a 	mov	r7,zero
  80703c:	d8800515 	stw	r2,20(sp)
  807040:	0815dac0 	call	815dac <__ledf2>
  807044:	10023116 	blt	r2,zero,80790c <_dtoa_r+0xb28>
  807048:	d8c00517 	ldw	r3,20(sp)
  80704c:	00800584 	movi	r2,22
  807050:	10c21f36 	bltu	r2,r3,8078d0 <_dtoa_r+0xaec>
  807054:	180490fa 	slli	r2,r3,3
  807058:	00c020b4 	movhi	r3,130
  80705c:	18ee9804 	addi	r3,r3,-17824
  807060:	1885883a 	add	r2,r3,r2
  807064:	11000017 	ldw	r4,0(r2)
  807068:	11400117 	ldw	r5,4(r2)
  80706c:	900d883a 	mov	r6,r18
  807070:	980f883a 	mov	r7,r19
  807074:	0815ccc0 	call	815ccc <__gedf2>
  807078:	0082a70e 	bge	zero,r2,807b18 <_dtoa_r+0xd34>
  80707c:	d9000517 	ldw	r4,20(sp)
  807080:	d8000d15 	stw	zero,52(sp)
  807084:	213fffc4 	addi	r4,r4,-1
  807088:	d9000515 	stw	r4,20(sp)
  80708c:	a463c83a 	sub	r17,r20,r17
  807090:	8dbfffc4 	addi	r22,r17,-1
  807094:	b0021916 	blt	r22,zero,8078fc <_dtoa_r+0xb18>
  807098:	d8000815 	stw	zero,32(sp)
  80709c:	d8800517 	ldw	r2,20(sp)
  8070a0:	10020e16 	blt	r2,zero,8078dc <_dtoa_r+0xaf8>
  8070a4:	b0ad883a 	add	r22,r22,r2
  8070a8:	d8800a15 	stw	r2,40(sp)
  8070ac:	d8000915 	stw	zero,36(sp)
  8070b0:	d8c00317 	ldw	r3,12(sp)
  8070b4:	00800244 	movi	r2,9
  8070b8:	10c11a36 	bltu	r2,r3,807524 <_dtoa_r+0x740>
  8070bc:	00800144 	movi	r2,5
  8070c0:	10c4fc0e 	bge	r2,r3,8084b4 <_dtoa_r+0x16d0>
  8070c4:	18ffff04 	addi	r3,r3,-4
  8070c8:	d8c00315 	stw	r3,12(sp)
  8070cc:	0029883a 	mov	r20,zero
  8070d0:	d9800317 	ldw	r6,12(sp)
  8070d4:	008000c4 	movi	r2,3
  8070d8:	3083bd26 	beq	r6,r2,807fd0 <_dtoa_r+0x11ec>
  8070dc:	1183670e 	bge	r2,r6,807e7c <_dtoa_r+0x1098>
  8070e0:	d8c00317 	ldw	r3,12(sp)
  8070e4:	00800104 	movi	r2,4
  8070e8:	1882e726 	beq	r3,r2,807c88 <_dtoa_r+0xea4>
  8070ec:	00800144 	movi	r2,5
  8070f0:	1884f21e 	bne	r3,r2,8084bc <_dtoa_r+0x16d8>
  8070f4:	00800044 	movi	r2,1
  8070f8:	d8800b15 	stw	r2,44(sp)
  8070fc:	d8c02217 	ldw	r3,136(sp)
  807100:	d9000517 	ldw	r4,20(sp)
  807104:	1907883a 	add	r3,r3,r4
  807108:	19800044 	addi	r6,r3,1
  80710c:	d8c00c15 	stw	r3,48(sp)
  807110:	d9800615 	stw	r6,24(sp)
  807114:	0183c30e 	bge	zero,r6,808024 <_dtoa_r+0x1240>
  807118:	d9800617 	ldw	r6,24(sp)
  80711c:	3023883a 	mov	r17,r6
  807120:	80001115 	stw	zero,68(r16)
  807124:	008005c4 	movi	r2,23
  807128:	1184f62e 	bgeu	r2,r6,808504 <_dtoa_r+0x1720>
  80712c:	00c00044 	movi	r3,1
  807130:	00800104 	movi	r2,4
  807134:	1085883a 	add	r2,r2,r2
  807138:	11000504 	addi	r4,r2,20
  80713c:	180b883a 	mov	r5,r3
  807140:	18c00044 	addi	r3,r3,1
  807144:	313ffb2e 	bgeu	r6,r4,807134 <__alt_data_end+0xff807134>
  807148:	81401115 	stw	r5,68(r16)
  80714c:	8009883a 	mov	r4,r16
  807150:	08091d80 	call	8091d8 <_Balloc>
  807154:	d8800715 	stw	r2,28(sp)
  807158:	80801015 	stw	r2,64(r16)
  80715c:	00800384 	movi	r2,14
  807160:	1440fd36 	bltu	r2,r17,807558 <_dtoa_r+0x774>
  807164:	a000fc26 	beq	r20,zero,807558 <_dtoa_r+0x774>
  807168:	d8800517 	ldw	r2,20(sp)
  80716c:	0083b90e 	bge	zero,r2,808054 <_dtoa_r+0x1270>
  807170:	d8c00517 	ldw	r3,20(sp)
  807174:	108003cc 	andi	r2,r2,15
  807178:	100490fa 	slli	r2,r2,3
  80717c:	182fd13a 	srai	r23,r3,4
  807180:	00c020b4 	movhi	r3,130
  807184:	18ee9804 	addi	r3,r3,-17824
  807188:	1885883a 	add	r2,r3,r2
  80718c:	b8c0040c 	andi	r3,r23,16
  807190:	12c00017 	ldw	r11,0(r2)
  807194:	12800117 	ldw	r10,4(r2)
  807198:	18039726 	beq	r3,zero,807ff8 <_dtoa_r+0x1214>
  80719c:	008020b4 	movhi	r2,130
  8071a0:	10ae8e04 	addi	r2,r2,-17864
  8071a4:	11800817 	ldw	r6,32(r2)
  8071a8:	11c00917 	ldw	r7,36(r2)
  8071ac:	9009883a 	mov	r4,r18
  8071b0:	980b883a 	mov	r5,r19
  8071b4:	da801615 	stw	r10,88(sp)
  8071b8:	dac01515 	stw	r11,84(sp)
  8071bc:	081537c0 	call	81537c <__divdf3>
  8071c0:	da801617 	ldw	r10,88(sp)
  8071c4:	dac01517 	ldw	r11,84(sp)
  8071c8:	bdc003cc 	andi	r23,r23,15
  8071cc:	044000c4 	movi	r17,3
  8071d0:	d8800e15 	stw	r2,56(sp)
  8071d4:	182b883a 	mov	r21,r3
  8071d8:	b8001126 	beq	r23,zero,807220 <_dtoa_r+0x43c>
  8071dc:	050020b4 	movhi	r20,130
  8071e0:	a52e8e04 	addi	r20,r20,-17864
  8071e4:	5805883a 	mov	r2,r11
  8071e8:	5007883a 	mov	r3,r10
  8071ec:	b980004c 	andi	r6,r23,1
  8071f0:	1009883a 	mov	r4,r2
  8071f4:	b82fd07a 	srai	r23,r23,1
  8071f8:	180b883a 	mov	r5,r3
  8071fc:	30000426 	beq	r6,zero,807210 <_dtoa_r+0x42c>
  807200:	a1800017 	ldw	r6,0(r20)
  807204:	a1c00117 	ldw	r7,4(r20)
  807208:	8c400044 	addi	r17,r17,1
  80720c:	0815e8c0 	call	815e8c <__muldf3>
  807210:	a5000204 	addi	r20,r20,8
  807214:	b83ff51e 	bne	r23,zero,8071ec <__alt_data_end+0xff8071ec>
  807218:	1017883a 	mov	r11,r2
  80721c:	1815883a 	mov	r10,r3
  807220:	d9000e17 	ldw	r4,56(sp)
  807224:	a80b883a 	mov	r5,r21
  807228:	580d883a 	mov	r6,r11
  80722c:	500f883a 	mov	r7,r10
  807230:	081537c0 	call	81537c <__divdf3>
  807234:	1029883a 	mov	r20,r2
  807238:	182b883a 	mov	r21,r3
  80723c:	d9800d17 	ldw	r6,52(sp)
  807240:	30000626 	beq	r6,zero,80725c <_dtoa_r+0x478>
  807244:	a009883a 	mov	r4,r20
  807248:	a80b883a 	mov	r5,r21
  80724c:	000d883a 	mov	r6,zero
  807250:	01cffc34 	movhi	r7,16368
  807254:	0815dac0 	call	815dac <__ledf2>
  807258:	10043216 	blt	r2,zero,808324 <_dtoa_r+0x1540>
  80725c:	8809883a 	mov	r4,r17
  807260:	0816f080 	call	816f08 <__floatsidf>
  807264:	1009883a 	mov	r4,r2
  807268:	180b883a 	mov	r5,r3
  80726c:	a00d883a 	mov	r6,r20
  807270:	a80f883a 	mov	r7,r21
  807274:	0815e8c0 	call	815e8c <__muldf3>
  807278:	000d883a 	mov	r6,zero
  80727c:	1009883a 	mov	r4,r2
  807280:	180b883a 	mov	r5,r3
  807284:	01d00734 	movhi	r7,16412
  807288:	0814ae00 	call	814ae0 <__adddf3>
  80728c:	1023883a 	mov	r17,r2
  807290:	d9800617 	ldw	r6,24(sp)
  807294:	00bf3034 	movhi	r2,64704
  807298:	1885883a 	add	r2,r3,r2
  80729c:	d8800e15 	stw	r2,56(sp)
  8072a0:	30032e26 	beq	r6,zero,807f5c <_dtoa_r+0x1178>
  8072a4:	d8c00517 	ldw	r3,20(sp)
  8072a8:	da800617 	ldw	r10,24(sp)
  8072ac:	d8c01215 	stw	r3,72(sp)
  8072b0:	d9000b17 	ldw	r4,44(sp)
  8072b4:	2003b026 	beq	r4,zero,808178 <_dtoa_r+0x1394>
  8072b8:	50bfffc4 	addi	r2,r10,-1
  8072bc:	100490fa 	slli	r2,r2,3
  8072c0:	00c020b4 	movhi	r3,130
  8072c4:	18ee9804 	addi	r3,r3,-17824
  8072c8:	1885883a 	add	r2,r3,r2
  8072cc:	11800017 	ldw	r6,0(r2)
  8072d0:	11c00117 	ldw	r7,4(r2)
  8072d4:	d8800717 	ldw	r2,28(sp)
  8072d8:	0009883a 	mov	r4,zero
  8072dc:	014ff834 	movhi	r5,16352
  8072e0:	da801615 	stw	r10,88(sp)
  8072e4:	15c00044 	addi	r23,r2,1
  8072e8:	081537c0 	call	81537c <__divdf3>
  8072ec:	d9c00e17 	ldw	r7,56(sp)
  8072f0:	880d883a 	mov	r6,r17
  8072f4:	1009883a 	mov	r4,r2
  8072f8:	180b883a 	mov	r5,r3
  8072fc:	08165b00 	call	8165b0 <__subdf3>
  807300:	a80b883a 	mov	r5,r21
  807304:	a009883a 	mov	r4,r20
  807308:	d8c01015 	stw	r3,64(sp)
  80730c:	d8800e15 	stw	r2,56(sp)
  807310:	0816e800 	call	816e80 <__fixdfsi>
  807314:	1009883a 	mov	r4,r2
  807318:	d8801715 	stw	r2,92(sp)
  80731c:	0816f080 	call	816f08 <__floatsidf>
  807320:	a009883a 	mov	r4,r20
  807324:	a80b883a 	mov	r5,r21
  807328:	100d883a 	mov	r6,r2
  80732c:	180f883a 	mov	r7,r3
  807330:	08165b00 	call	8165b0 <__subdf3>
  807334:	da001717 	ldw	r8,92(sp)
  807338:	1829883a 	mov	r20,r3
  80733c:	d8c00717 	ldw	r3,28(sp)
  807340:	d9000e17 	ldw	r4,56(sp)
  807344:	d9401017 	ldw	r5,64(sp)
  807348:	42000c04 	addi	r8,r8,48
  80734c:	1023883a 	mov	r17,r2
  807350:	1a000005 	stb	r8,0(r3)
  807354:	880d883a 	mov	r6,r17
  807358:	a00f883a 	mov	r7,r20
  80735c:	402b883a 	mov	r21,r8
  807360:	0815ccc0 	call	815ccc <__gedf2>
  807364:	00844516 	blt	zero,r2,80847c <_dtoa_r+0x1698>
  807368:	0009883a 	mov	r4,zero
  80736c:	014ffc34 	movhi	r5,16368
  807370:	880d883a 	mov	r6,r17
  807374:	a00f883a 	mov	r7,r20
  807378:	08165b00 	call	8165b0 <__subdf3>
  80737c:	d9000e17 	ldw	r4,56(sp)
  807380:	d9401017 	ldw	r5,64(sp)
  807384:	100d883a 	mov	r6,r2
  807388:	180f883a 	mov	r7,r3
  80738c:	0815ccc0 	call	815ccc <__gedf2>
  807390:	da801617 	ldw	r10,88(sp)
  807394:	00843616 	blt	zero,r2,808470 <_dtoa_r+0x168c>
  807398:	00800044 	movi	r2,1
  80739c:	12806e0e 	bge	r2,r10,807558 <_dtoa_r+0x774>
  8073a0:	d9000717 	ldw	r4,28(sp)
  8073a4:	dd801315 	stw	r22,76(sp)
  8073a8:	dc001115 	stw	r16,68(sp)
  8073ac:	2295883a 	add	r10,r4,r10
  8073b0:	dcc01415 	stw	r19,80(sp)
  8073b4:	502d883a 	mov	r22,r10
  8073b8:	dcc01017 	ldw	r19,64(sp)
  8073bc:	b821883a 	mov	r16,r23
  8073c0:	dc801015 	stw	r18,64(sp)
  8073c4:	dc800e17 	ldw	r18,56(sp)
  8073c8:	00000906 	br	8073f0 <_dtoa_r+0x60c>
  8073cc:	08165b00 	call	8165b0 <__subdf3>
  8073d0:	1009883a 	mov	r4,r2
  8073d4:	180b883a 	mov	r5,r3
  8073d8:	900d883a 	mov	r6,r18
  8073dc:	980f883a 	mov	r7,r19
  8073e0:	0815dac0 	call	815dac <__ledf2>
  8073e4:	10040e16 	blt	r2,zero,808420 <_dtoa_r+0x163c>
  8073e8:	b821883a 	mov	r16,r23
  8073ec:	bd841026 	beq	r23,r22,808430 <_dtoa_r+0x164c>
  8073f0:	9009883a 	mov	r4,r18
  8073f4:	980b883a 	mov	r5,r19
  8073f8:	000d883a 	mov	r6,zero
  8073fc:	01d00934 	movhi	r7,16420
  807400:	0815e8c0 	call	815e8c <__muldf3>
  807404:	000d883a 	mov	r6,zero
  807408:	01d00934 	movhi	r7,16420
  80740c:	8809883a 	mov	r4,r17
  807410:	a00b883a 	mov	r5,r20
  807414:	1025883a 	mov	r18,r2
  807418:	1827883a 	mov	r19,r3
  80741c:	0815e8c0 	call	815e8c <__muldf3>
  807420:	180b883a 	mov	r5,r3
  807424:	1009883a 	mov	r4,r2
  807428:	1823883a 	mov	r17,r3
  80742c:	1029883a 	mov	r20,r2
  807430:	0816e800 	call	816e80 <__fixdfsi>
  807434:	1009883a 	mov	r4,r2
  807438:	102b883a 	mov	r21,r2
  80743c:	0816f080 	call	816f08 <__floatsidf>
  807440:	a009883a 	mov	r4,r20
  807444:	880b883a 	mov	r5,r17
  807448:	100d883a 	mov	r6,r2
  80744c:	180f883a 	mov	r7,r3
  807450:	08165b00 	call	8165b0 <__subdf3>
  807454:	ad400c04 	addi	r21,r21,48
  807458:	1009883a 	mov	r4,r2
  80745c:	180b883a 	mov	r5,r3
  807460:	900d883a 	mov	r6,r18
  807464:	980f883a 	mov	r7,r19
  807468:	85400005 	stb	r21,0(r16)
  80746c:	1023883a 	mov	r17,r2
  807470:	1829883a 	mov	r20,r3
  807474:	0815dac0 	call	815dac <__ledf2>
  807478:	bdc00044 	addi	r23,r23,1
  80747c:	0009883a 	mov	r4,zero
  807480:	014ffc34 	movhi	r5,16368
  807484:	880d883a 	mov	r6,r17
  807488:	a00f883a 	mov	r7,r20
  80748c:	103fcf0e 	bge	r2,zero,8073cc <__alt_data_end+0xff8073cc>
  807490:	d9801217 	ldw	r6,72(sp)
  807494:	dc001117 	ldw	r16,68(sp)
  807498:	d9800515 	stw	r6,20(sp)
  80749c:	8009883a 	mov	r4,r16
  8074a0:	e00b883a 	mov	r5,fp
  8074a4:	08092800 	call	809280 <_Bfree>
  8074a8:	d8c00517 	ldw	r3,20(sp)
  8074ac:	d9002317 	ldw	r4,140(sp)
  8074b0:	d9802517 	ldw	r6,148(sp)
  8074b4:	b8000005 	stb	zero,0(r23)
  8074b8:	18800044 	addi	r2,r3,1
  8074bc:	20800015 	stw	r2,0(r4)
  8074c0:	30027226 	beq	r6,zero,807e8c <_dtoa_r+0x10a8>
  8074c4:	35c00015 	stw	r23,0(r6)
  8074c8:	d8800717 	ldw	r2,28(sp)
  8074cc:	003e7406 	br	806ea0 <__alt_data_end+0xff806ea0>
  8074d0:	00800434 	movhi	r2,16
  8074d4:	10bfffc4 	addi	r2,r2,-1
  8074d8:	a8aa703a 	and	r21,r21,r2
  8074dc:	a83e801e 	bne	r21,zero,806ee0 <__alt_data_end+0xff806ee0>
  8074e0:	008020b4 	movhi	r2,130
  8074e4:	10ae7a04 	addi	r2,r2,-17944
  8074e8:	003e7f06 	br	806ee8 <__alt_data_end+0xff806ee8>
  8074ec:	10c00204 	addi	r3,r2,8
  8074f0:	003e8206 	br	806efc <__alt_data_end+0xff806efc>
  8074f4:	01400434 	movhi	r5,16
  8074f8:	297fffc4 	addi	r5,r5,-1
  8074fc:	994a703a 	and	r5,r19,r5
  807500:	9009883a 	mov	r4,r18
  807504:	8c7f0044 	addi	r17,r17,-1023
  807508:	294ffc34 	orhi	r5,r5,16368
  80750c:	dd000217 	ldw	r20,8(sp)
  807510:	d8000f15 	stw	zero,60(sp)
  807514:	003e9f06 	br	806f94 <__alt_data_end+0xff806f94>
  807518:	008020b4 	movhi	r2,130
  80751c:	10add104 	addi	r2,r2,-18620
  807520:	003e5f06 	br	806ea0 <__alt_data_end+0xff806ea0>
  807524:	80001115 	stw	zero,68(r16)
  807528:	8009883a 	mov	r4,r16
  80752c:	000b883a 	mov	r5,zero
  807530:	08091d80 	call	8091d8 <_Balloc>
  807534:	01bfffc4 	movi	r6,-1
  807538:	d8800715 	stw	r2,28(sp)
  80753c:	80801015 	stw	r2,64(r16)
  807540:	00800044 	movi	r2,1
  807544:	d9800c15 	stw	r6,48(sp)
  807548:	d8800b15 	stw	r2,44(sp)
  80754c:	d9800615 	stw	r6,24(sp)
  807550:	d8002215 	stw	zero,136(sp)
  807554:	d8000315 	stw	zero,12(sp)
  807558:	d8800117 	ldw	r2,4(sp)
  80755c:	10008e16 	blt	r2,zero,807798 <_dtoa_r+0x9b4>
  807560:	d9000517 	ldw	r4,20(sp)
  807564:	00c00384 	movi	r3,14
  807568:	19008b16 	blt	r3,r4,807798 <_dtoa_r+0x9b4>
  80756c:	200490fa 	slli	r2,r4,3
  807570:	00c020b4 	movhi	r3,130
  807574:	d9802217 	ldw	r6,136(sp)
  807578:	18ee9804 	addi	r3,r3,-17824
  80757c:	1885883a 	add	r2,r3,r2
  807580:	14400017 	ldw	r17,0(r2)
  807584:	15000117 	ldw	r20,4(r2)
  807588:	3001c716 	blt	r6,zero,807ca8 <_dtoa_r+0xec4>
  80758c:	880d883a 	mov	r6,r17
  807590:	a00f883a 	mov	r7,r20
  807594:	9009883a 	mov	r4,r18
  807598:	980b883a 	mov	r5,r19
  80759c:	081537c0 	call	81537c <__divdf3>
  8075a0:	180b883a 	mov	r5,r3
  8075a4:	1009883a 	mov	r4,r2
  8075a8:	0816e800 	call	816e80 <__fixdfsi>
  8075ac:	1009883a 	mov	r4,r2
  8075b0:	102d883a 	mov	r22,r2
  8075b4:	0816f080 	call	816f08 <__floatsidf>
  8075b8:	1009883a 	mov	r4,r2
  8075bc:	180b883a 	mov	r5,r3
  8075c0:	880d883a 	mov	r6,r17
  8075c4:	a00f883a 	mov	r7,r20
  8075c8:	0815e8c0 	call	815e8c <__muldf3>
  8075cc:	9009883a 	mov	r4,r18
  8075d0:	980b883a 	mov	r5,r19
  8075d4:	100d883a 	mov	r6,r2
  8075d8:	180f883a 	mov	r7,r3
  8075dc:	08165b00 	call	8165b0 <__subdf3>
  8075e0:	d9000717 	ldw	r4,28(sp)
  8075e4:	d9800617 	ldw	r6,24(sp)
  8075e8:	180b883a 	mov	r5,r3
  8075ec:	b0c00c04 	addi	r3,r22,48
  8075f0:	20c00005 	stb	r3,0(r4)
  8075f4:	25c00044 	addi	r23,r4,1
  8075f8:	01000044 	movi	r4,1
  8075fc:	1011883a 	mov	r8,r2
  807600:	2807883a 	mov	r3,r5
  807604:	31003d26 	beq	r6,r4,8076fc <_dtoa_r+0x918>
  807608:	000d883a 	mov	r6,zero
  80760c:	01d00934 	movhi	r7,16420
  807610:	1009883a 	mov	r4,r2
  807614:	0815e8c0 	call	815e8c <__muldf3>
  807618:	1009883a 	mov	r4,r2
  80761c:	180b883a 	mov	r5,r3
  807620:	000d883a 	mov	r6,zero
  807624:	000f883a 	mov	r7,zero
  807628:	1027883a 	mov	r19,r2
  80762c:	182b883a 	mov	r21,r3
  807630:	0815c480 	call	815c48 <__eqdf2>
  807634:	103f9926 	beq	r2,zero,80749c <__alt_data_end+0xff80749c>
  807638:	d8c00617 	ldw	r3,24(sp)
  80763c:	d9000717 	ldw	r4,28(sp)
  807640:	b825883a 	mov	r18,r23
  807644:	18bfffc4 	addi	r2,r3,-1
  807648:	20ad883a 	add	r22,r4,r2
  80764c:	dc000315 	stw	r16,12(sp)
  807650:	00000a06 	br	80767c <_dtoa_r+0x898>
  807654:	0815e8c0 	call	815e8c <__muldf3>
  807658:	1009883a 	mov	r4,r2
  80765c:	180b883a 	mov	r5,r3
  807660:	000d883a 	mov	r6,zero
  807664:	000f883a 	mov	r7,zero
  807668:	1027883a 	mov	r19,r2
  80766c:	182b883a 	mov	r21,r3
  807670:	b825883a 	mov	r18,r23
  807674:	0815c480 	call	815c48 <__eqdf2>
  807678:	10022626 	beq	r2,zero,807f14 <_dtoa_r+0x1130>
  80767c:	880d883a 	mov	r6,r17
  807680:	a00f883a 	mov	r7,r20
  807684:	9809883a 	mov	r4,r19
  807688:	a80b883a 	mov	r5,r21
  80768c:	081537c0 	call	81537c <__divdf3>
  807690:	180b883a 	mov	r5,r3
  807694:	1009883a 	mov	r4,r2
  807698:	0816e800 	call	816e80 <__fixdfsi>
  80769c:	1009883a 	mov	r4,r2
  8076a0:	1021883a 	mov	r16,r2
  8076a4:	0816f080 	call	816f08 <__floatsidf>
  8076a8:	1009883a 	mov	r4,r2
  8076ac:	180b883a 	mov	r5,r3
  8076b0:	880d883a 	mov	r6,r17
  8076b4:	a00f883a 	mov	r7,r20
  8076b8:	0815e8c0 	call	815e8c <__muldf3>
  8076bc:	9809883a 	mov	r4,r19
  8076c0:	a80b883a 	mov	r5,r21
  8076c4:	100d883a 	mov	r6,r2
  8076c8:	180f883a 	mov	r7,r3
  8076cc:	08165b00 	call	8165b0 <__subdf3>
  8076d0:	82000c04 	addi	r8,r16,48
  8076d4:	92000005 	stb	r8,0(r18)
  8076d8:	1009883a 	mov	r4,r2
  8076dc:	180b883a 	mov	r5,r3
  8076e0:	000d883a 	mov	r6,zero
  8076e4:	01d00934 	movhi	r7,16420
  8076e8:	1011883a 	mov	r8,r2
  8076ec:	bdc00044 	addi	r23,r23,1
  8076f0:	95bfd81e 	bne	r18,r22,807654 <__alt_data_end+0xff807654>
  8076f4:	802d883a 	mov	r22,r16
  8076f8:	dc000317 	ldw	r16,12(sp)
  8076fc:	4009883a 	mov	r4,r8
  807700:	180b883a 	mov	r5,r3
  807704:	400d883a 	mov	r6,r8
  807708:	180f883a 	mov	r7,r3
  80770c:	0814ae00 	call	814ae0 <__adddf3>
  807710:	8809883a 	mov	r4,r17
  807714:	a00b883a 	mov	r5,r20
  807718:	100d883a 	mov	r6,r2
  80771c:	180f883a 	mov	r7,r3
  807720:	1027883a 	mov	r19,r2
  807724:	1825883a 	mov	r18,r3
  807728:	0815dac0 	call	815dac <__ledf2>
  80772c:	10000816 	blt	r2,zero,807750 <_dtoa_r+0x96c>
  807730:	8809883a 	mov	r4,r17
  807734:	a00b883a 	mov	r5,r20
  807738:	980d883a 	mov	r6,r19
  80773c:	900f883a 	mov	r7,r18
  807740:	0815c480 	call	815c48 <__eqdf2>
  807744:	103f551e 	bne	r2,zero,80749c <__alt_data_end+0xff80749c>
  807748:	b580004c 	andi	r22,r22,1
  80774c:	b03f5326 	beq	r22,zero,80749c <__alt_data_end+0xff80749c>
  807750:	bd7fffc3 	ldbu	r21,-1(r23)
  807754:	b8bfffc4 	addi	r2,r23,-1
  807758:	1007883a 	mov	r3,r2
  80775c:	01400e44 	movi	r5,57
  807760:	d9800717 	ldw	r6,28(sp)
  807764:	00000506 	br	80777c <_dtoa_r+0x998>
  807768:	18ffffc4 	addi	r3,r3,-1
  80776c:	30825e26 	beq	r6,r2,8080e8 <_dtoa_r+0x1304>
  807770:	1d400003 	ldbu	r21,0(r3)
  807774:	102f883a 	mov	r23,r2
  807778:	10bfffc4 	addi	r2,r2,-1
  80777c:	a9003fcc 	andi	r4,r21,255
  807780:	2100201c 	xori	r4,r4,128
  807784:	213fe004 	addi	r4,r4,-128
  807788:	217ff726 	beq	r4,r5,807768 <__alt_data_end+0xff807768>
  80778c:	aa000044 	addi	r8,r21,1
  807790:	12000005 	stb	r8,0(r2)
  807794:	003f4106 	br	80749c <__alt_data_end+0xff80749c>
  807798:	d8c00b17 	ldw	r3,44(sp)
  80779c:	18006726 	beq	r3,zero,80793c <_dtoa_r+0xb58>
  8077a0:	d9000317 	ldw	r4,12(sp)
  8077a4:	00c00044 	movi	r3,1
  8077a8:	19016a0e 	bge	r3,r4,807d54 <_dtoa_r+0xf70>
  8077ac:	d8800617 	ldw	r2,24(sp)
  8077b0:	d8c00917 	ldw	r3,36(sp)
  8077b4:	157fffc4 	addi	r21,r2,-1
  8077b8:	1d420716 	blt	r3,r21,807fd8 <_dtoa_r+0x11f4>
  8077bc:	1d6bc83a 	sub	r21,r3,r21
  8077c0:	d8800617 	ldw	r2,24(sp)
  8077c4:	1002c716 	blt	r2,zero,8082e4 <_dtoa_r+0x1500>
  8077c8:	dd000817 	ldw	r20,32(sp)
  8077cc:	d8800617 	ldw	r2,24(sp)
  8077d0:	d9800817 	ldw	r6,32(sp)
  8077d4:	8009883a 	mov	r4,r16
  8077d8:	01400044 	movi	r5,1
  8077dc:	308d883a 	add	r6,r6,r2
  8077e0:	d9800815 	stw	r6,32(sp)
  8077e4:	b0ad883a 	add	r22,r22,r2
  8077e8:	08095e40 	call	8095e4 <__i2b>
  8077ec:	1023883a 	mov	r17,r2
  8077f0:	a0000826 	beq	r20,zero,807814 <_dtoa_r+0xa30>
  8077f4:	0580070e 	bge	zero,r22,807814 <_dtoa_r+0xa30>
  8077f8:	b005883a 	mov	r2,r22
  8077fc:	a5812016 	blt	r20,r22,807c80 <_dtoa_r+0xe9c>
  807800:	d8c00817 	ldw	r3,32(sp)
  807804:	a0a9c83a 	sub	r20,r20,r2
  807808:	b0adc83a 	sub	r22,r22,r2
  80780c:	1887c83a 	sub	r3,r3,r2
  807810:	d8c00815 	stw	r3,32(sp)
  807814:	d9000917 	ldw	r4,36(sp)
  807818:	0100140e 	bge	zero,r4,80786c <_dtoa_r+0xa88>
  80781c:	d9800b17 	ldw	r6,44(sp)
  807820:	3001e526 	beq	r6,zero,807fb8 <_dtoa_r+0x11d4>
  807824:	05400e0e 	bge	zero,r21,807860 <_dtoa_r+0xa7c>
  807828:	880b883a 	mov	r5,r17
  80782c:	8009883a 	mov	r4,r16
  807830:	a80d883a 	mov	r6,r21
  807834:	080981c0 	call	80981c <__pow5mult>
  807838:	e00d883a 	mov	r6,fp
  80783c:	8009883a 	mov	r4,r16
  807840:	100b883a 	mov	r5,r2
  807844:	1023883a 	mov	r17,r2
  807848:	08096200 	call	809620 <__multiply>
  80784c:	102f883a 	mov	r23,r2
  807850:	e00b883a 	mov	r5,fp
  807854:	8009883a 	mov	r4,r16
  807858:	08092800 	call	809280 <_Bfree>
  80785c:	b839883a 	mov	fp,r23
  807860:	d8800917 	ldw	r2,36(sp)
  807864:	154dc83a 	sub	r6,r2,r21
  807868:	3001281e 	bne	r6,zero,807d0c <_dtoa_r+0xf28>
  80786c:	05c00044 	movi	r23,1
  807870:	8009883a 	mov	r4,r16
  807874:	b80b883a 	mov	r5,r23
  807878:	08095e40 	call	8095e4 <__i2b>
  80787c:	d8c00a17 	ldw	r3,40(sp)
  807880:	102b883a 	mov	r21,r2
  807884:	00c0310e 	bge	zero,r3,80794c <_dtoa_r+0xb68>
  807888:	8009883a 	mov	r4,r16
  80788c:	100b883a 	mov	r5,r2
  807890:	180d883a 	mov	r6,r3
  807894:	080981c0 	call	80981c <__pow5mult>
  807898:	d9000317 	ldw	r4,12(sp)
  80789c:	102b883a 	mov	r21,r2
  8078a0:	b9011f0e 	bge	r23,r4,807d20 <_dtoa_r+0xf3c>
  8078a4:	0027883a 	mov	r19,zero
  8078a8:	a8800417 	ldw	r2,16(r21)
  8078ac:	10800104 	addi	r2,r2,4
  8078b0:	1085883a 	add	r2,r2,r2
  8078b4:	1085883a 	add	r2,r2,r2
  8078b8:	a885883a 	add	r2,r21,r2
  8078bc:	11000017 	ldw	r4,0(r2)
  8078c0:	08094cc0 	call	8094cc <__hi0bits>
  8078c4:	00c00804 	movi	r3,32
  8078c8:	1885c83a 	sub	r2,r3,r2
  8078cc:	00002506 	br	807964 <_dtoa_r+0xb80>
  8078d0:	01800044 	movi	r6,1
  8078d4:	d9800d15 	stw	r6,52(sp)
  8078d8:	003dec06 	br	80708c <__alt_data_end+0xff80708c>
  8078dc:	d8c00817 	ldw	r3,32(sp)
  8078e0:	d9000517 	ldw	r4,20(sp)
  8078e4:	d8000a15 	stw	zero,40(sp)
  8078e8:	1907c83a 	sub	r3,r3,r4
  8078ec:	010dc83a 	sub	r6,zero,r4
  8078f0:	d8c00815 	stw	r3,32(sp)
  8078f4:	d9800915 	stw	r6,36(sp)
  8078f8:	003ded06 	br	8070b0 <__alt_data_end+0xff8070b0>
  8078fc:	05adc83a 	sub	r22,zero,r22
  807900:	dd800815 	stw	r22,32(sp)
  807904:	002d883a 	mov	r22,zero
  807908:	003de406 	br	80709c <__alt_data_end+0xff80709c>
  80790c:	d9000517 	ldw	r4,20(sp)
  807910:	0816f080 	call	816f08 <__floatsidf>
  807914:	1009883a 	mov	r4,r2
  807918:	180b883a 	mov	r5,r3
  80791c:	b00d883a 	mov	r6,r22
  807920:	a80f883a 	mov	r7,r21
  807924:	0815c480 	call	815c48 <__eqdf2>
  807928:	103dc726 	beq	r2,zero,807048 <__alt_data_end+0xff807048>
  80792c:	d8800517 	ldw	r2,20(sp)
  807930:	10bfffc4 	addi	r2,r2,-1
  807934:	d8800515 	stw	r2,20(sp)
  807938:	003dc306 	br	807048 <__alt_data_end+0xff807048>
  80793c:	dd400917 	ldw	r21,36(sp)
  807940:	dd000817 	ldw	r20,32(sp)
  807944:	0023883a 	mov	r17,zero
  807948:	003fa906 	br	8077f0 <__alt_data_end+0xff8077f0>
  80794c:	d9800317 	ldw	r6,12(sp)
  807950:	b981670e 	bge	r23,r6,807ef0 <_dtoa_r+0x110c>
  807954:	0027883a 	mov	r19,zero
  807958:	d8c00a17 	ldw	r3,40(sp)
  80795c:	183fd21e 	bne	r3,zero,8078a8 <__alt_data_end+0xff8078a8>
  807960:	00800044 	movi	r2,1
  807964:	1585883a 	add	r2,r2,r22
  807968:	108007cc 	andi	r2,r2,31
  80796c:	10005f26 	beq	r2,zero,807aec <_dtoa_r+0xd08>
  807970:	00c00804 	movi	r3,32
  807974:	1887c83a 	sub	r3,r3,r2
  807978:	01000104 	movi	r4,4
  80797c:	20c2dd0e 	bge	r4,r3,8084f4 <_dtoa_r+0x1710>
  807980:	d9000817 	ldw	r4,32(sp)
  807984:	00c00704 	movi	r3,28
  807988:	1885c83a 	sub	r2,r3,r2
  80798c:	2089883a 	add	r4,r4,r2
  807990:	d9000815 	stw	r4,32(sp)
  807994:	a0a9883a 	add	r20,r20,r2
  807998:	b0ad883a 	add	r22,r22,r2
  80799c:	d8800817 	ldw	r2,32(sp)
  8079a0:	0080050e 	bge	zero,r2,8079b8 <_dtoa_r+0xbd4>
  8079a4:	e00b883a 	mov	r5,fp
  8079a8:	8009883a 	mov	r4,r16
  8079ac:	100d883a 	mov	r6,r2
  8079b0:	080995c0 	call	80995c <__lshift>
  8079b4:	1039883a 	mov	fp,r2
  8079b8:	0580050e 	bge	zero,r22,8079d0 <_dtoa_r+0xbec>
  8079bc:	a80b883a 	mov	r5,r21
  8079c0:	8009883a 	mov	r4,r16
  8079c4:	b00d883a 	mov	r6,r22
  8079c8:	080995c0 	call	80995c <__lshift>
  8079cc:	102b883a 	mov	r21,r2
  8079d0:	d8c00d17 	ldw	r3,52(sp)
  8079d4:	1801161e 	bne	r3,zero,807e30 <_dtoa_r+0x104c>
  8079d8:	d8c00617 	ldw	r3,24(sp)
  8079dc:	00c12d0e 	bge	zero,r3,807e94 <_dtoa_r+0x10b0>
  8079e0:	d8c00b17 	ldw	r3,44(sp)
  8079e4:	1800571e 	bne	r3,zero,807b44 <_dtoa_r+0xd60>
  8079e8:	dc800717 	ldw	r18,28(sp)
  8079ec:	dcc00617 	ldw	r19,24(sp)
  8079f0:	9029883a 	mov	r20,r18
  8079f4:	00000206 	br	807a00 <_dtoa_r+0xc1c>
  8079f8:	08092a80 	call	8092a8 <__multadd>
  8079fc:	1039883a 	mov	fp,r2
  807a00:	e009883a 	mov	r4,fp
  807a04:	a80b883a 	mov	r5,r21
  807a08:	0806be40 	call	806be4 <quorem>
  807a0c:	10800c04 	addi	r2,r2,48
  807a10:	90800005 	stb	r2,0(r18)
  807a14:	94800044 	addi	r18,r18,1
  807a18:	9507c83a 	sub	r3,r18,r20
  807a1c:	8009883a 	mov	r4,r16
  807a20:	e00b883a 	mov	r5,fp
  807a24:	01800284 	movi	r6,10
  807a28:	000f883a 	mov	r7,zero
  807a2c:	1cfff216 	blt	r3,r19,8079f8 <__alt_data_end+0xff8079f8>
  807a30:	1011883a 	mov	r8,r2
  807a34:	d8800617 	ldw	r2,24(sp)
  807a38:	00822e0e 	bge	zero,r2,8082f4 <_dtoa_r+0x1510>
  807a3c:	d9000717 	ldw	r4,28(sp)
  807a40:	0025883a 	mov	r18,zero
  807a44:	20af883a 	add	r23,r4,r2
  807a48:	e00b883a 	mov	r5,fp
  807a4c:	01800044 	movi	r6,1
  807a50:	8009883a 	mov	r4,r16
  807a54:	da001715 	stw	r8,92(sp)
  807a58:	080995c0 	call	80995c <__lshift>
  807a5c:	1009883a 	mov	r4,r2
  807a60:	a80b883a 	mov	r5,r21
  807a64:	1039883a 	mov	fp,r2
  807a68:	0809aac0 	call	809aac <__mcmp>
  807a6c:	da001717 	ldw	r8,92(sp)
  807a70:	00816e0e 	bge	zero,r2,80802c <_dtoa_r+0x1248>
  807a74:	b93fffc3 	ldbu	r4,-1(r23)
  807a78:	b8bfffc4 	addi	r2,r23,-1
  807a7c:	1007883a 	mov	r3,r2
  807a80:	01800e44 	movi	r6,57
  807a84:	d9c00717 	ldw	r7,28(sp)
  807a88:	00000506 	br	807aa0 <_dtoa_r+0xcbc>
  807a8c:	18ffffc4 	addi	r3,r3,-1
  807a90:	38811926 	beq	r7,r2,807ef8 <_dtoa_r+0x1114>
  807a94:	19000003 	ldbu	r4,0(r3)
  807a98:	102f883a 	mov	r23,r2
  807a9c:	10bfffc4 	addi	r2,r2,-1
  807aa0:	21403fcc 	andi	r5,r4,255
  807aa4:	2940201c 	xori	r5,r5,128
  807aa8:	297fe004 	addi	r5,r5,-128
  807aac:	29bff726 	beq	r5,r6,807a8c <__alt_data_end+0xff807a8c>
  807ab0:	21000044 	addi	r4,r4,1
  807ab4:	11000005 	stb	r4,0(r2)
  807ab8:	8009883a 	mov	r4,r16
  807abc:	a80b883a 	mov	r5,r21
  807ac0:	08092800 	call	809280 <_Bfree>
  807ac4:	883e7526 	beq	r17,zero,80749c <__alt_data_end+0xff80749c>
  807ac8:	90000426 	beq	r18,zero,807adc <_dtoa_r+0xcf8>
  807acc:	94400326 	beq	r18,r17,807adc <_dtoa_r+0xcf8>
  807ad0:	8009883a 	mov	r4,r16
  807ad4:	900b883a 	mov	r5,r18
  807ad8:	08092800 	call	809280 <_Bfree>
  807adc:	8009883a 	mov	r4,r16
  807ae0:	880b883a 	mov	r5,r17
  807ae4:	08092800 	call	809280 <_Bfree>
  807ae8:	003e6c06 	br	80749c <__alt_data_end+0xff80749c>
  807aec:	00800704 	movi	r2,28
  807af0:	d9800817 	ldw	r6,32(sp)
  807af4:	a0a9883a 	add	r20,r20,r2
  807af8:	b0ad883a 	add	r22,r22,r2
  807afc:	308d883a 	add	r6,r6,r2
  807b00:	d9800815 	stw	r6,32(sp)
  807b04:	003fa506 	br	80799c <__alt_data_end+0xff80799c>
  807b08:	013efb84 	movi	r4,-1042
  807b0c:	246bc83a 	sub	r21,r4,r17
  807b10:	9548983a 	sll	r4,r18,r21
  807b14:	003d1806 	br	806f78 <__alt_data_end+0xff806f78>
  807b18:	d8000d15 	stw	zero,52(sp)
  807b1c:	003d5b06 	br	80708c <__alt_data_end+0xff80708c>
  807b20:	880b883a 	mov	r5,r17
  807b24:	8009883a 	mov	r4,r16
  807b28:	01800284 	movi	r6,10
  807b2c:	000f883a 	mov	r7,zero
  807b30:	08092a80 	call	8092a8 <__multadd>
  807b34:	1023883a 	mov	r17,r2
  807b38:	d8800c17 	ldw	r2,48(sp)
  807b3c:	0082550e 	bge	zero,r2,808494 <_dtoa_r+0x16b0>
  807b40:	d8800615 	stw	r2,24(sp)
  807b44:	0500050e 	bge	zero,r20,807b5c <_dtoa_r+0xd78>
  807b48:	880b883a 	mov	r5,r17
  807b4c:	8009883a 	mov	r4,r16
  807b50:	a00d883a 	mov	r6,r20
  807b54:	080995c0 	call	80995c <__lshift>
  807b58:	1023883a 	mov	r17,r2
  807b5c:	98016a1e 	bne	r19,zero,808108 <_dtoa_r+0x1324>
  807b60:	8829883a 	mov	r20,r17
  807b64:	d9000617 	ldw	r4,24(sp)
  807b68:	dcc00717 	ldw	r19,28(sp)
  807b6c:	9480004c 	andi	r18,r18,1
  807b70:	20bfffc4 	addi	r2,r4,-1
  807b74:	9885883a 	add	r2,r19,r2
  807b78:	d8800415 	stw	r2,16(sp)
  807b7c:	dc800615 	stw	r18,24(sp)
  807b80:	e009883a 	mov	r4,fp
  807b84:	a80b883a 	mov	r5,r21
  807b88:	0806be40 	call	806be4 <quorem>
  807b8c:	e009883a 	mov	r4,fp
  807b90:	880b883a 	mov	r5,r17
  807b94:	102f883a 	mov	r23,r2
  807b98:	0809aac0 	call	809aac <__mcmp>
  807b9c:	8009883a 	mov	r4,r16
  807ba0:	a80b883a 	mov	r5,r21
  807ba4:	a00d883a 	mov	r6,r20
  807ba8:	102d883a 	mov	r22,r2
  807bac:	0809b0c0 	call	809b0c <__mdiff>
  807bb0:	1007883a 	mov	r3,r2
  807bb4:	10800317 	ldw	r2,12(r2)
  807bb8:	bc800c04 	addi	r18,r23,48
  807bbc:	1000971e 	bne	r2,zero,807e1c <_dtoa_r+0x1038>
  807bc0:	180b883a 	mov	r5,r3
  807bc4:	e009883a 	mov	r4,fp
  807bc8:	d8c01515 	stw	r3,84(sp)
  807bcc:	0809aac0 	call	809aac <__mcmp>
  807bd0:	d8c01517 	ldw	r3,84(sp)
  807bd4:	8009883a 	mov	r4,r16
  807bd8:	d8801515 	stw	r2,84(sp)
  807bdc:	180b883a 	mov	r5,r3
  807be0:	08092800 	call	809280 <_Bfree>
  807be4:	d8801517 	ldw	r2,84(sp)
  807be8:	1000041e 	bne	r2,zero,807bfc <_dtoa_r+0xe18>
  807bec:	d9800317 	ldw	r6,12(sp)
  807bf0:	3000021e 	bne	r6,zero,807bfc <_dtoa_r+0xe18>
  807bf4:	d8c00617 	ldw	r3,24(sp)
  807bf8:	18007626 	beq	r3,zero,807dd4 <_dtoa_r+0xff0>
  807bfc:	b0005b16 	blt	r22,zero,807d6c <_dtoa_r+0xf88>
  807c00:	b000041e 	bne	r22,zero,807c14 <_dtoa_r+0xe30>
  807c04:	d9000317 	ldw	r4,12(sp)
  807c08:	2000021e 	bne	r4,zero,807c14 <_dtoa_r+0xe30>
  807c0c:	d8c00617 	ldw	r3,24(sp)
  807c10:	18005626 	beq	r3,zero,807d6c <_dtoa_r+0xf88>
  807c14:	00814d16 	blt	zero,r2,80814c <_dtoa_r+0x1368>
  807c18:	d8c00417 	ldw	r3,16(sp)
  807c1c:	9d800044 	addi	r22,r19,1
  807c20:	9c800005 	stb	r18,0(r19)
  807c24:	b02f883a 	mov	r23,r22
  807c28:	98c14c26 	beq	r19,r3,80815c <_dtoa_r+0x1378>
  807c2c:	e00b883a 	mov	r5,fp
  807c30:	8009883a 	mov	r4,r16
  807c34:	01800284 	movi	r6,10
  807c38:	000f883a 	mov	r7,zero
  807c3c:	08092a80 	call	8092a8 <__multadd>
  807c40:	1039883a 	mov	fp,r2
  807c44:	8d006d26 	beq	r17,r20,807dfc <_dtoa_r+0x1018>
  807c48:	880b883a 	mov	r5,r17
  807c4c:	01800284 	movi	r6,10
  807c50:	000f883a 	mov	r7,zero
  807c54:	8009883a 	mov	r4,r16
  807c58:	08092a80 	call	8092a8 <__multadd>
  807c5c:	a00b883a 	mov	r5,r20
  807c60:	8009883a 	mov	r4,r16
  807c64:	01800284 	movi	r6,10
  807c68:	000f883a 	mov	r7,zero
  807c6c:	1023883a 	mov	r17,r2
  807c70:	08092a80 	call	8092a8 <__multadd>
  807c74:	1029883a 	mov	r20,r2
  807c78:	b027883a 	mov	r19,r22
  807c7c:	003fc006 	br	807b80 <__alt_data_end+0xff807b80>
  807c80:	a005883a 	mov	r2,r20
  807c84:	003ede06 	br	807800 <__alt_data_end+0xff807800>
  807c88:	01000044 	movi	r4,1
  807c8c:	d9000b15 	stw	r4,44(sp)
  807c90:	d9802217 	ldw	r6,136(sp)
  807c94:	0180dc0e 	bge	zero,r6,808008 <_dtoa_r+0x1224>
  807c98:	3023883a 	mov	r17,r6
  807c9c:	d9800c15 	stw	r6,48(sp)
  807ca0:	d9800615 	stw	r6,24(sp)
  807ca4:	003d1e06 	br	807120 <__alt_data_end+0xff807120>
  807ca8:	d8800617 	ldw	r2,24(sp)
  807cac:	00be3716 	blt	zero,r2,80758c <__alt_data_end+0xff80758c>
  807cb0:	1000be1e 	bne	r2,zero,807fac <_dtoa_r+0x11c8>
  807cb4:	8809883a 	mov	r4,r17
  807cb8:	a00b883a 	mov	r5,r20
  807cbc:	000d883a 	mov	r6,zero
  807cc0:	01d00534 	movhi	r7,16404
  807cc4:	0815e8c0 	call	815e8c <__muldf3>
  807cc8:	1009883a 	mov	r4,r2
  807ccc:	180b883a 	mov	r5,r3
  807cd0:	900d883a 	mov	r6,r18
  807cd4:	980f883a 	mov	r7,r19
  807cd8:	0815ccc0 	call	815ccc <__gedf2>
  807cdc:	002b883a 	mov	r21,zero
  807ce0:	0023883a 	mov	r17,zero
  807ce4:	10007a16 	blt	r2,zero,807ed0 <_dtoa_r+0x10ec>
  807ce8:	d9002217 	ldw	r4,136(sp)
  807cec:	ddc00717 	ldw	r23,28(sp)
  807cf0:	0108303a 	nor	r4,zero,r4
  807cf4:	d9000515 	stw	r4,20(sp)
  807cf8:	8009883a 	mov	r4,r16
  807cfc:	a80b883a 	mov	r5,r21
  807d00:	08092800 	call	809280 <_Bfree>
  807d04:	883f751e 	bne	r17,zero,807adc <__alt_data_end+0xff807adc>
  807d08:	003de406 	br	80749c <__alt_data_end+0xff80749c>
  807d0c:	e00b883a 	mov	r5,fp
  807d10:	8009883a 	mov	r4,r16
  807d14:	080981c0 	call	80981c <__pow5mult>
  807d18:	1039883a 	mov	fp,r2
  807d1c:	003ed306 	br	80786c <__alt_data_end+0xff80786c>
  807d20:	903ee01e 	bne	r18,zero,8078a4 <__alt_data_end+0xff8078a4>
  807d24:	00800434 	movhi	r2,16
  807d28:	10bfffc4 	addi	r2,r2,-1
  807d2c:	9884703a 	and	r2,r19,r2
  807d30:	103f081e 	bne	r2,zero,807954 <__alt_data_end+0xff807954>
  807d34:	9cdffc2c 	andhi	r19,r19,32752
  807d38:	983f0626 	beq	r19,zero,807954 <__alt_data_end+0xff807954>
  807d3c:	d8800817 	ldw	r2,32(sp)
  807d40:	b5800044 	addi	r22,r22,1
  807d44:	04c00044 	movi	r19,1
  807d48:	10800044 	addi	r2,r2,1
  807d4c:	d8800815 	stw	r2,32(sp)
  807d50:	003f0106 	br	807958 <__alt_data_end+0xff807958>
  807d54:	d9800f17 	ldw	r6,60(sp)
  807d58:	30016826 	beq	r6,zero,8082fc <_dtoa_r+0x1518>
  807d5c:	10810cc4 	addi	r2,r2,1075
  807d60:	dd400917 	ldw	r21,36(sp)
  807d64:	dd000817 	ldw	r20,32(sp)
  807d68:	003e9906 	br	8077d0 <__alt_data_end+0xff8077d0>
  807d6c:	9011883a 	mov	r8,r18
  807d70:	4007883a 	mov	r3,r8
  807d74:	e02d883a 	mov	r22,fp
  807d78:	0080100e 	bge	zero,r2,807dbc <_dtoa_r+0xfd8>
  807d7c:	01800044 	movi	r6,1
  807d80:	8009883a 	mov	r4,r16
  807d84:	e00b883a 	mov	r5,fp
  807d88:	da001515 	stw	r8,84(sp)
  807d8c:	da001715 	stw	r8,92(sp)
  807d90:	080995c0 	call	80995c <__lshift>
  807d94:	1009883a 	mov	r4,r2
  807d98:	a80b883a 	mov	r5,r21
  807d9c:	102d883a 	mov	r22,r2
  807da0:	0809aac0 	call	809aac <__mcmp>
  807da4:	d8c01517 	ldw	r3,84(sp)
  807da8:	da001717 	ldw	r8,92(sp)
  807dac:	0081a50e 	bge	zero,r2,808444 <_dtoa_r+0x1660>
  807db0:	00800e44 	movi	r2,57
  807db4:	40817b26 	beq	r8,r2,8083a4 <_dtoa_r+0x15c0>
  807db8:	40c00044 	addi	r3,r8,1
  807dbc:	8825883a 	mov	r18,r17
  807dc0:	9dc00044 	addi	r23,r19,1
  807dc4:	98c00005 	stb	r3,0(r19)
  807dc8:	a023883a 	mov	r17,r20
  807dcc:	b039883a 	mov	fp,r22
  807dd0:	003f3906 	br	807ab8 <__alt_data_end+0xff807ab8>
  807dd4:	00800e44 	movi	r2,57
  807dd8:	9011883a 	mov	r8,r18
  807ddc:	90817226 	beq	r18,r2,8083a8 <_dtoa_r+0x15c4>
  807de0:	0580010e 	bge	zero,r22,807de8 <_dtoa_r+0x1004>
  807de4:	ba000c44 	addi	r8,r23,49
  807de8:	8825883a 	mov	r18,r17
  807dec:	9dc00044 	addi	r23,r19,1
  807df0:	9a000005 	stb	r8,0(r19)
  807df4:	a023883a 	mov	r17,r20
  807df8:	003f2f06 	br	807ab8 <__alt_data_end+0xff807ab8>
  807dfc:	880b883a 	mov	r5,r17
  807e00:	8009883a 	mov	r4,r16
  807e04:	01800284 	movi	r6,10
  807e08:	000f883a 	mov	r7,zero
  807e0c:	08092a80 	call	8092a8 <__multadd>
  807e10:	1023883a 	mov	r17,r2
  807e14:	1029883a 	mov	r20,r2
  807e18:	003f9706 	br	807c78 <__alt_data_end+0xff807c78>
  807e1c:	8009883a 	mov	r4,r16
  807e20:	180b883a 	mov	r5,r3
  807e24:	08092800 	call	809280 <_Bfree>
  807e28:	00800044 	movi	r2,1
  807e2c:	003f7306 	br	807bfc <__alt_data_end+0xff807bfc>
  807e30:	e009883a 	mov	r4,fp
  807e34:	a80b883a 	mov	r5,r21
  807e38:	0809aac0 	call	809aac <__mcmp>
  807e3c:	103ee60e 	bge	r2,zero,8079d8 <__alt_data_end+0xff8079d8>
  807e40:	8009883a 	mov	r4,r16
  807e44:	e00b883a 	mov	r5,fp
  807e48:	01800284 	movi	r6,10
  807e4c:	000f883a 	mov	r7,zero
  807e50:	08092a80 	call	8092a8 <__multadd>
  807e54:	d9000517 	ldw	r4,20(sp)
  807e58:	d9800b17 	ldw	r6,44(sp)
  807e5c:	1039883a 	mov	fp,r2
  807e60:	213fffc4 	addi	r4,r4,-1
  807e64:	d9000515 	stw	r4,20(sp)
  807e68:	303f2d1e 	bne	r6,zero,807b20 <__alt_data_end+0xff807b20>
  807e6c:	d9000c17 	ldw	r4,48(sp)
  807e70:	0101780e 	bge	zero,r4,808454 <_dtoa_r+0x1670>
  807e74:	d9000615 	stw	r4,24(sp)
  807e78:	003edb06 	br	8079e8 <__alt_data_end+0xff8079e8>
  807e7c:	00800084 	movi	r2,2
  807e80:	30818e1e 	bne	r6,r2,8084bc <_dtoa_r+0x16d8>
  807e84:	d8000b15 	stw	zero,44(sp)
  807e88:	003f8106 	br	807c90 <__alt_data_end+0xff807c90>
  807e8c:	d8800717 	ldw	r2,28(sp)
  807e90:	003c0306 	br	806ea0 <__alt_data_end+0xff806ea0>
  807e94:	d9000317 	ldw	r4,12(sp)
  807e98:	00800084 	movi	r2,2
  807e9c:	113ed00e 	bge	r2,r4,8079e0 <__alt_data_end+0xff8079e0>
  807ea0:	d8c00617 	ldw	r3,24(sp)
  807ea4:	183f901e 	bne	r3,zero,807ce8 <__alt_data_end+0xff807ce8>
  807ea8:	a80b883a 	mov	r5,r21
  807eac:	8009883a 	mov	r4,r16
  807eb0:	01800144 	movi	r6,5
  807eb4:	000f883a 	mov	r7,zero
  807eb8:	08092a80 	call	8092a8 <__multadd>
  807ebc:	e009883a 	mov	r4,fp
  807ec0:	100b883a 	mov	r5,r2
  807ec4:	102b883a 	mov	r21,r2
  807ec8:	0809aac0 	call	809aac <__mcmp>
  807ecc:	00bf860e 	bge	zero,r2,807ce8 <__alt_data_end+0xff807ce8>
  807ed0:	d9800717 	ldw	r6,28(sp)
  807ed4:	00800c44 	movi	r2,49
  807ed8:	30800005 	stb	r2,0(r6)
  807edc:	d8800517 	ldw	r2,20(sp)
  807ee0:	35c00044 	addi	r23,r6,1
  807ee4:	10800044 	addi	r2,r2,1
  807ee8:	d8800515 	stw	r2,20(sp)
  807eec:	003f8206 	br	807cf8 <__alt_data_end+0xff807cf8>
  807ef0:	903e981e 	bne	r18,zero,807954 <__alt_data_end+0xff807954>
  807ef4:	003f8b06 	br	807d24 <__alt_data_end+0xff807d24>
  807ef8:	d9800517 	ldw	r6,20(sp)
  807efc:	d8c00717 	ldw	r3,28(sp)
  807f00:	00800c44 	movi	r2,49
  807f04:	31800044 	addi	r6,r6,1
  807f08:	d9800515 	stw	r6,20(sp)
  807f0c:	18800005 	stb	r2,0(r3)
  807f10:	003ee906 	br	807ab8 <__alt_data_end+0xff807ab8>
  807f14:	dc000317 	ldw	r16,12(sp)
  807f18:	003d6006 	br	80749c <__alt_data_end+0xff80749c>
  807f1c:	8809883a 	mov	r4,r17
  807f20:	0816f080 	call	816f08 <__floatsidf>
  807f24:	a009883a 	mov	r4,r20
  807f28:	a80b883a 	mov	r5,r21
  807f2c:	100d883a 	mov	r6,r2
  807f30:	180f883a 	mov	r7,r3
  807f34:	0815e8c0 	call	815e8c <__muldf3>
  807f38:	1009883a 	mov	r4,r2
  807f3c:	180b883a 	mov	r5,r3
  807f40:	000d883a 	mov	r6,zero
  807f44:	01d00734 	movhi	r7,16412
  807f48:	0814ae00 	call	814ae0 <__adddf3>
  807f4c:	1023883a 	mov	r17,r2
  807f50:	00bf3034 	movhi	r2,64704
  807f54:	1885883a 	add	r2,r3,r2
  807f58:	d8800e15 	stw	r2,56(sp)
  807f5c:	a009883a 	mov	r4,r20
  807f60:	a80b883a 	mov	r5,r21
  807f64:	000d883a 	mov	r6,zero
  807f68:	01d00534 	movhi	r7,16404
  807f6c:	08165b00 	call	8165b0 <__subdf3>
  807f70:	d9c00e17 	ldw	r7,56(sp)
  807f74:	1009883a 	mov	r4,r2
  807f78:	180b883a 	mov	r5,r3
  807f7c:	880d883a 	mov	r6,r17
  807f80:	102b883a 	mov	r21,r2
  807f84:	1829883a 	mov	r20,r3
  807f88:	0815ccc0 	call	815ccc <__gedf2>
  807f8c:	00807716 	blt	zero,r2,80816c <_dtoa_r+0x1388>
  807f90:	d8800e17 	ldw	r2,56(sp)
  807f94:	a809883a 	mov	r4,r21
  807f98:	a00b883a 	mov	r5,r20
  807f9c:	11e0003c 	xorhi	r7,r2,32768
  807fa0:	880d883a 	mov	r6,r17
  807fa4:	0815dac0 	call	815dac <__ledf2>
  807fa8:	103d6b0e 	bge	r2,zero,807558 <__alt_data_end+0xff807558>
  807fac:	002b883a 	mov	r21,zero
  807fb0:	0023883a 	mov	r17,zero
  807fb4:	003f4c06 	br	807ce8 <__alt_data_end+0xff807ce8>
  807fb8:	d9800917 	ldw	r6,36(sp)
  807fbc:	e00b883a 	mov	r5,fp
  807fc0:	8009883a 	mov	r4,r16
  807fc4:	080981c0 	call	80981c <__pow5mult>
  807fc8:	1039883a 	mov	fp,r2
  807fcc:	003e2706 	br	80786c <__alt_data_end+0xff80786c>
  807fd0:	d8000b15 	stw	zero,44(sp)
  807fd4:	003c4906 	br	8070fc <__alt_data_end+0xff8070fc>
  807fd8:	d9000917 	ldw	r4,36(sp)
  807fdc:	d9800a17 	ldw	r6,40(sp)
  807fe0:	dd400915 	stw	r21,36(sp)
  807fe4:	a905c83a 	sub	r2,r21,r4
  807fe8:	308d883a 	add	r6,r6,r2
  807fec:	d9800a15 	stw	r6,40(sp)
  807ff0:	002b883a 	mov	r21,zero
  807ff4:	003df206 	br	8077c0 <__alt_data_end+0xff8077c0>
  807ff8:	dc800e15 	stw	r18,56(sp)
  807ffc:	982b883a 	mov	r21,r19
  808000:	04400084 	movi	r17,2
  808004:	003c7406 	br	8071d8 <__alt_data_end+0xff8071d8>
  808008:	04400044 	movi	r17,1
  80800c:	dc400c15 	stw	r17,48(sp)
  808010:	dc400615 	stw	r17,24(sp)
  808014:	dc402215 	stw	r17,136(sp)
  808018:	80001115 	stw	zero,68(r16)
  80801c:	000b883a 	mov	r5,zero
  808020:	003c4a06 	br	80714c <__alt_data_end+0xff80714c>
  808024:	3023883a 	mov	r17,r6
  808028:	003ffb06 	br	808018 <__alt_data_end+0xff808018>
  80802c:	1000021e 	bne	r2,zero,808038 <_dtoa_r+0x1254>
  808030:	4200004c 	andi	r8,r8,1
  808034:	403e8f1e 	bne	r8,zero,807a74 <__alt_data_end+0xff807a74>
  808038:	01000c04 	movi	r4,48
  80803c:	00000106 	br	808044 <_dtoa_r+0x1260>
  808040:	102f883a 	mov	r23,r2
  808044:	b8bfffc4 	addi	r2,r23,-1
  808048:	10c00007 	ldb	r3,0(r2)
  80804c:	193ffc26 	beq	r3,r4,808040 <__alt_data_end+0xff808040>
  808050:	003e9906 	br	807ab8 <__alt_data_end+0xff807ab8>
  808054:	d9000517 	ldw	r4,20(sp)
  808058:	012fc83a 	sub	r23,zero,r4
  80805c:	b800ad26 	beq	r23,zero,808314 <_dtoa_r+0x1530>
  808060:	b88003cc 	andi	r2,r23,15
  808064:	100490fa 	slli	r2,r2,3
  808068:	00c020b4 	movhi	r3,130
  80806c:	18ee9804 	addi	r3,r3,-17824
  808070:	1885883a 	add	r2,r3,r2
  808074:	11800017 	ldw	r6,0(r2)
  808078:	11c00117 	ldw	r7,4(r2)
  80807c:	b82fd13a 	srai	r23,r23,4
  808080:	9009883a 	mov	r4,r18
  808084:	980b883a 	mov	r5,r19
  808088:	0815e8c0 	call	815e8c <__muldf3>
  80808c:	1029883a 	mov	r20,r2
  808090:	182b883a 	mov	r21,r3
  808094:	b800f426 	beq	r23,zero,808468 <_dtoa_r+0x1684>
  808098:	020020b4 	movhi	r8,130
  80809c:	422e8e04 	addi	r8,r8,-17864
  8080a0:	8029883a 	mov	r20,r16
  8080a4:	04400084 	movi	r17,2
  8080a8:	4021883a 	mov	r16,r8
  8080ac:	b980004c 	andi	r6,r23,1
  8080b0:	1009883a 	mov	r4,r2
  8080b4:	b82fd07a 	srai	r23,r23,1
  8080b8:	180b883a 	mov	r5,r3
  8080bc:	30000426 	beq	r6,zero,8080d0 <_dtoa_r+0x12ec>
  8080c0:	81800017 	ldw	r6,0(r16)
  8080c4:	81c00117 	ldw	r7,4(r16)
  8080c8:	8c400044 	addi	r17,r17,1
  8080cc:	0815e8c0 	call	815e8c <__muldf3>
  8080d0:	84000204 	addi	r16,r16,8
  8080d4:	b83ff51e 	bne	r23,zero,8080ac <__alt_data_end+0xff8080ac>
  8080d8:	a021883a 	mov	r16,r20
  8080dc:	182b883a 	mov	r21,r3
  8080e0:	1029883a 	mov	r20,r2
  8080e4:	003c5506 	br	80723c <__alt_data_end+0xff80723c>
  8080e8:	d9800517 	ldw	r6,20(sp)
  8080ec:	d9000717 	ldw	r4,28(sp)
  8080f0:	00c00c04 	movi	r3,48
  8080f4:	31800044 	addi	r6,r6,1
  8080f8:	d9800515 	stw	r6,20(sp)
  8080fc:	20c00005 	stb	r3,0(r4)
  808100:	02000c44 	movi	r8,49
  808104:	003da206 	br	807790 <__alt_data_end+0xff807790>
  808108:	89400117 	ldw	r5,4(r17)
  80810c:	8009883a 	mov	r4,r16
  808110:	08091d80 	call	8091d8 <_Balloc>
  808114:	89800417 	ldw	r6,16(r17)
  808118:	11000304 	addi	r4,r2,12
  80811c:	89400304 	addi	r5,r17,12
  808120:	31800084 	addi	r6,r6,2
  808124:	318d883a 	add	r6,r6,r6
  808128:	318d883a 	add	r6,r6,r6
  80812c:	1027883a 	mov	r19,r2
  808130:	0808f440 	call	808f44 <memcpy>
  808134:	8009883a 	mov	r4,r16
  808138:	980b883a 	mov	r5,r19
  80813c:	01800044 	movi	r6,1
  808140:	080995c0 	call	80995c <__lshift>
  808144:	1029883a 	mov	r20,r2
  808148:	003e8606 	br	807b64 <__alt_data_end+0xff807b64>
  80814c:	00800e44 	movi	r2,57
  808150:	90809526 	beq	r18,r2,8083a8 <_dtoa_r+0x15c4>
  808154:	92000044 	addi	r8,r18,1
  808158:	003f2306 	br	807de8 <__alt_data_end+0xff807de8>
  80815c:	9011883a 	mov	r8,r18
  808160:	8825883a 	mov	r18,r17
  808164:	a023883a 	mov	r17,r20
  808168:	003e3706 	br	807a48 <__alt_data_end+0xff807a48>
  80816c:	002b883a 	mov	r21,zero
  808170:	0023883a 	mov	r17,zero
  808174:	003f5606 	br	807ed0 <__alt_data_end+0xff807ed0>
  808178:	51bfffc4 	addi	r6,r10,-1
  80817c:	300490fa 	slli	r2,r6,3
  808180:	00c020b4 	movhi	r3,130
  808184:	18ee9804 	addi	r3,r3,-17824
  808188:	1885883a 	add	r2,r3,r2
  80818c:	d9c00e17 	ldw	r7,56(sp)
  808190:	11000017 	ldw	r4,0(r2)
  808194:	11400117 	ldw	r5,4(r2)
  808198:	d8800717 	ldw	r2,28(sp)
  80819c:	d9801015 	stw	r6,64(sp)
  8081a0:	880d883a 	mov	r6,r17
  8081a4:	da801615 	stw	r10,88(sp)
  8081a8:	15c00044 	addi	r23,r2,1
  8081ac:	0815e8c0 	call	815e8c <__muldf3>
  8081b0:	a80b883a 	mov	r5,r21
  8081b4:	a009883a 	mov	r4,r20
  8081b8:	d8c01115 	stw	r3,68(sp)
  8081bc:	d8800e15 	stw	r2,56(sp)
  8081c0:	0816e800 	call	816e80 <__fixdfsi>
  8081c4:	1009883a 	mov	r4,r2
  8081c8:	1023883a 	mov	r17,r2
  8081cc:	0816f080 	call	816f08 <__floatsidf>
  8081d0:	a009883a 	mov	r4,r20
  8081d4:	a80b883a 	mov	r5,r21
  8081d8:	100d883a 	mov	r6,r2
  8081dc:	180f883a 	mov	r7,r3
  8081e0:	08165b00 	call	8165b0 <__subdf3>
  8081e4:	1813883a 	mov	r9,r3
  8081e8:	d8c00717 	ldw	r3,28(sp)
  8081ec:	8c400c04 	addi	r17,r17,48
  8081f0:	1011883a 	mov	r8,r2
  8081f4:	1c400005 	stb	r17,0(r3)
  8081f8:	da801617 	ldw	r10,88(sp)
  8081fc:	00800044 	movi	r2,1
  808200:	50802326 	beq	r10,r2,808290 <_dtoa_r+0x14ac>
  808204:	d8800717 	ldw	r2,28(sp)
  808208:	b82b883a 	mov	r21,r23
  80820c:	dc001315 	stw	r16,76(sp)
  808210:	12a9883a 	add	r20,r2,r10
  808214:	4807883a 	mov	r3,r9
  808218:	4005883a 	mov	r2,r8
  80821c:	dc801415 	stw	r18,80(sp)
  808220:	000d883a 	mov	r6,zero
  808224:	01d00934 	movhi	r7,16420
  808228:	1009883a 	mov	r4,r2
  80822c:	180b883a 	mov	r5,r3
  808230:	0815e8c0 	call	815e8c <__muldf3>
  808234:	180b883a 	mov	r5,r3
  808238:	1009883a 	mov	r4,r2
  80823c:	1821883a 	mov	r16,r3
  808240:	1025883a 	mov	r18,r2
  808244:	0816e800 	call	816e80 <__fixdfsi>
  808248:	1009883a 	mov	r4,r2
  80824c:	1023883a 	mov	r17,r2
  808250:	0816f080 	call	816f08 <__floatsidf>
  808254:	9009883a 	mov	r4,r18
  808258:	800b883a 	mov	r5,r16
  80825c:	100d883a 	mov	r6,r2
  808260:	180f883a 	mov	r7,r3
  808264:	8c400c04 	addi	r17,r17,48
  808268:	08165b00 	call	8165b0 <__subdf3>
  80826c:	ad400044 	addi	r21,r21,1
  808270:	ac7fffc5 	stb	r17,-1(r21)
  808274:	ad3fea1e 	bne	r21,r20,808220 <__alt_data_end+0xff808220>
  808278:	1813883a 	mov	r9,r3
  80827c:	d8c01017 	ldw	r3,64(sp)
  808280:	dc001317 	ldw	r16,76(sp)
  808284:	dc801417 	ldw	r18,80(sp)
  808288:	1011883a 	mov	r8,r2
  80828c:	b8ef883a 	add	r23,r23,r3
  808290:	d9000e17 	ldw	r4,56(sp)
  808294:	d9401117 	ldw	r5,68(sp)
  808298:	000d883a 	mov	r6,zero
  80829c:	01cff834 	movhi	r7,16352
  8082a0:	da001715 	stw	r8,92(sp)
  8082a4:	da401515 	stw	r9,84(sp)
  8082a8:	0814ae00 	call	814ae0 <__adddf3>
  8082ac:	da001717 	ldw	r8,92(sp)
  8082b0:	da401517 	ldw	r9,84(sp)
  8082b4:	1009883a 	mov	r4,r2
  8082b8:	400d883a 	mov	r6,r8
  8082bc:	480f883a 	mov	r7,r9
  8082c0:	180b883a 	mov	r5,r3
  8082c4:	0815dac0 	call	815dac <__ledf2>
  8082c8:	da001717 	ldw	r8,92(sp)
  8082cc:	da401517 	ldw	r9,84(sp)
  8082d0:	10003b0e 	bge	r2,zero,8083c0 <_dtoa_r+0x15dc>
  8082d4:	d9001217 	ldw	r4,72(sp)
  8082d8:	bd7fffc3 	ldbu	r21,-1(r23)
  8082dc:	d9000515 	stw	r4,20(sp)
  8082e0:	003d1c06 	br	807754 <__alt_data_end+0xff807754>
  8082e4:	d8c00817 	ldw	r3,32(sp)
  8082e8:	18a9c83a 	sub	r20,r3,r2
  8082ec:	0005883a 	mov	r2,zero
  8082f0:	003d3706 	br	8077d0 <__alt_data_end+0xff8077d0>
  8082f4:	00800044 	movi	r2,1
  8082f8:	003dd006 	br	807a3c <__alt_data_end+0xff807a3c>
  8082fc:	d8c00217 	ldw	r3,8(sp)
  808300:	00800d84 	movi	r2,54
  808304:	dd400917 	ldw	r21,36(sp)
  808308:	10c5c83a 	sub	r2,r2,r3
  80830c:	dd000817 	ldw	r20,32(sp)
  808310:	003d2f06 	br	8077d0 <__alt_data_end+0xff8077d0>
  808314:	9029883a 	mov	r20,r18
  808318:	982b883a 	mov	r21,r19
  80831c:	04400084 	movi	r17,2
  808320:	003bc606 	br	80723c <__alt_data_end+0xff80723c>
  808324:	d8800617 	ldw	r2,24(sp)
  808328:	103efc26 	beq	r2,zero,807f1c <__alt_data_end+0xff807f1c>
  80832c:	d8c00c17 	ldw	r3,48(sp)
  808330:	00fc890e 	bge	zero,r3,807558 <__alt_data_end+0xff807558>
  808334:	a80b883a 	mov	r5,r21
  808338:	a009883a 	mov	r4,r20
  80833c:	000d883a 	mov	r6,zero
  808340:	01d00934 	movhi	r7,16420
  808344:	0815e8c0 	call	815e8c <__muldf3>
  808348:	89000044 	addi	r4,r17,1
  80834c:	1029883a 	mov	r20,r2
  808350:	182b883a 	mov	r21,r3
  808354:	0816f080 	call	816f08 <__floatsidf>
  808358:	a009883a 	mov	r4,r20
  80835c:	a80b883a 	mov	r5,r21
  808360:	100d883a 	mov	r6,r2
  808364:	180f883a 	mov	r7,r3
  808368:	0815e8c0 	call	815e8c <__muldf3>
  80836c:	1009883a 	mov	r4,r2
  808370:	180b883a 	mov	r5,r3
  808374:	000d883a 	mov	r6,zero
  808378:	01d00734 	movhi	r7,16412
  80837c:	0814ae00 	call	814ae0 <__adddf3>
  808380:	d9000517 	ldw	r4,20(sp)
  808384:	1023883a 	mov	r17,r2
  808388:	00bf3034 	movhi	r2,64704
  80838c:	213fffc4 	addi	r4,r4,-1
  808390:	1885883a 	add	r2,r3,r2
  808394:	d9001215 	stw	r4,72(sp)
  808398:	d8800e15 	stw	r2,56(sp)
  80839c:	da800c17 	ldw	r10,48(sp)
  8083a0:	003bc306 	br	8072b0 <__alt_data_end+0xff8072b0>
  8083a4:	b039883a 	mov	fp,r22
  8083a8:	01000e44 	movi	r4,57
  8083ac:	8825883a 	mov	r18,r17
  8083b0:	9dc00044 	addi	r23,r19,1
  8083b4:	99000005 	stb	r4,0(r19)
  8083b8:	a023883a 	mov	r17,r20
  8083bc:	003dae06 	br	807a78 <__alt_data_end+0xff807a78>
  8083c0:	d9800e17 	ldw	r6,56(sp)
  8083c4:	d9c01117 	ldw	r7,68(sp)
  8083c8:	0009883a 	mov	r4,zero
  8083cc:	014ff834 	movhi	r5,16352
  8083d0:	da001715 	stw	r8,92(sp)
  8083d4:	da401515 	stw	r9,84(sp)
  8083d8:	08165b00 	call	8165b0 <__subdf3>
  8083dc:	da001717 	ldw	r8,92(sp)
  8083e0:	da401517 	ldw	r9,84(sp)
  8083e4:	1009883a 	mov	r4,r2
  8083e8:	180b883a 	mov	r5,r3
  8083ec:	400d883a 	mov	r6,r8
  8083f0:	480f883a 	mov	r7,r9
  8083f4:	0815ccc0 	call	815ccc <__gedf2>
  8083f8:	00bc570e 	bge	zero,r2,807558 <__alt_data_end+0xff807558>
  8083fc:	01000c04 	movi	r4,48
  808400:	00000106 	br	808408 <_dtoa_r+0x1624>
  808404:	102f883a 	mov	r23,r2
  808408:	b8bfffc4 	addi	r2,r23,-1
  80840c:	10c00007 	ldb	r3,0(r2)
  808410:	193ffc26 	beq	r3,r4,808404 <__alt_data_end+0xff808404>
  808414:	d9801217 	ldw	r6,72(sp)
  808418:	d9800515 	stw	r6,20(sp)
  80841c:	003c1f06 	br	80749c <__alt_data_end+0xff80749c>
  808420:	d8801217 	ldw	r2,72(sp)
  808424:	dc001117 	ldw	r16,68(sp)
  808428:	d8800515 	stw	r2,20(sp)
  80842c:	003cc906 	br	807754 <__alt_data_end+0xff807754>
  808430:	dd801317 	ldw	r22,76(sp)
  808434:	dc001117 	ldw	r16,68(sp)
  808438:	dcc01417 	ldw	r19,80(sp)
  80843c:	dc801017 	ldw	r18,64(sp)
  808440:	003c4506 	br	807558 <__alt_data_end+0xff807558>
  808444:	103e5d1e 	bne	r2,zero,807dbc <__alt_data_end+0xff807dbc>
  808448:	4080004c 	andi	r2,r8,1
  80844c:	103e5b26 	beq	r2,zero,807dbc <__alt_data_end+0xff807dbc>
  808450:	003e5706 	br	807db0 <__alt_data_end+0xff807db0>
  808454:	d8c00317 	ldw	r3,12(sp)
  808458:	00800084 	movi	r2,2
  80845c:	10c00a16 	blt	r2,r3,808488 <_dtoa_r+0x16a4>
  808460:	d9000c17 	ldw	r4,48(sp)
  808464:	003e8306 	br	807e74 <__alt_data_end+0xff807e74>
  808468:	04400084 	movi	r17,2
  80846c:	003b7306 	br	80723c <__alt_data_end+0xff80723c>
  808470:	d9801217 	ldw	r6,72(sp)
  808474:	d9800515 	stw	r6,20(sp)
  808478:	003cb606 	br	807754 <__alt_data_end+0xff807754>
  80847c:	d9001217 	ldw	r4,72(sp)
  808480:	d9000515 	stw	r4,20(sp)
  808484:	003c0506 	br	80749c <__alt_data_end+0xff80749c>
  808488:	d9800c17 	ldw	r6,48(sp)
  80848c:	d9800615 	stw	r6,24(sp)
  808490:	003e8306 	br	807ea0 <__alt_data_end+0xff807ea0>
  808494:	d9800317 	ldw	r6,12(sp)
  808498:	00800084 	movi	r2,2
  80849c:	11800216 	blt	r2,r6,8084a8 <_dtoa_r+0x16c4>
  8084a0:	d8800c17 	ldw	r2,48(sp)
  8084a4:	003da606 	br	807b40 <__alt_data_end+0xff807b40>
  8084a8:	d8800c17 	ldw	r2,48(sp)
  8084ac:	d8800615 	stw	r2,24(sp)
  8084b0:	003e7b06 	br	807ea0 <__alt_data_end+0xff807ea0>
  8084b4:	05000044 	movi	r20,1
  8084b8:	003b0506 	br	8070d0 <__alt_data_end+0xff8070d0>
  8084bc:	8009883a 	mov	r4,r16
  8084c0:	80001115 	stw	zero,68(r16)
  8084c4:	000b883a 	mov	r5,zero
  8084c8:	08091d80 	call	8091d8 <_Balloc>
  8084cc:	d8800715 	stw	r2,28(sp)
  8084d0:	d8c00717 	ldw	r3,28(sp)
  8084d4:	00bfffc4 	movi	r2,-1
  8084d8:	01000044 	movi	r4,1
  8084dc:	d8800c15 	stw	r2,48(sp)
  8084e0:	80c01015 	stw	r3,64(r16)
  8084e4:	d9000b15 	stw	r4,44(sp)
  8084e8:	d8800615 	stw	r2,24(sp)
  8084ec:	d8002215 	stw	zero,136(sp)
  8084f0:	003c1906 	br	807558 <__alt_data_end+0xff807558>
  8084f4:	193d2926 	beq	r3,r4,80799c <__alt_data_end+0xff80799c>
  8084f8:	00c00f04 	movi	r3,60
  8084fc:	1885c83a 	sub	r2,r3,r2
  808500:	003d7b06 	br	807af0 <__alt_data_end+0xff807af0>
  808504:	000b883a 	mov	r5,zero
  808508:	003b1006 	br	80714c <__alt_data_end+0xff80714c>

0080850c <__sflags>:
  80850c:	28800007 	ldb	r2,0(r5)
  808510:	00c01c84 	movi	r3,114
  808514:	10c02426 	beq	r2,r3,8085a8 <__sflags+0x9c>
  808518:	00c01dc4 	movi	r3,119
  80851c:	10c01e26 	beq	r2,r3,808598 <__sflags+0x8c>
  808520:	00c01844 	movi	r3,97
  808524:	10c00426 	beq	r2,r3,808538 <__sflags+0x2c>
  808528:	00800584 	movi	r2,22
  80852c:	20800015 	stw	r2,0(r4)
  808530:	0005883a 	mov	r2,zero
  808534:	f800283a 	ret
  808538:	02c08204 	movi	r11,520
  80853c:	01000044 	movi	r4,1
  808540:	00804204 	movi	r2,264
  808544:	01c00ac4 	movi	r7,43
  808548:	02bff8c4 	movi	r10,-29
  80854c:	027fff04 	movi	r9,-4
  808550:	02001e04 	movi	r8,120
  808554:	29400044 	addi	r5,r5,1
  808558:	28c00007 	ldb	r3,0(r5)
  80855c:	18000626 	beq	r3,zero,808578 <__sflags+0x6c>
  808560:	19c00826 	beq	r3,r7,808584 <__sflags+0x78>
  808564:	1a3ffb1e 	bne	r3,r8,808554 <__alt_data_end+0xff808554>
  808568:	29400044 	addi	r5,r5,1
  80856c:	28c00007 	ldb	r3,0(r5)
  808570:	21020014 	ori	r4,r4,2048
  808574:	183ffa1e 	bne	r3,zero,808560 <__alt_data_end+0xff808560>
  808578:	22c8b03a 	or	r4,r4,r11
  80857c:	31000015 	stw	r4,0(r6)
  808580:	f800283a 	ret
  808584:	1284703a 	and	r2,r2,r10
  808588:	2248703a 	and	r4,r4,r9
  80858c:	10800414 	ori	r2,r2,16
  808590:	21000094 	ori	r4,r4,2
  808594:	003fef06 	br	808554 <__alt_data_end+0xff808554>
  808598:	02c18004 	movi	r11,1536
  80859c:	01000044 	movi	r4,1
  8085a0:	00800204 	movi	r2,8
  8085a4:	003fe706 	br	808544 <__alt_data_end+0xff808544>
  8085a8:	0017883a 	mov	r11,zero
  8085ac:	0009883a 	mov	r4,zero
  8085b0:	00800104 	movi	r2,4
  8085b4:	003fe306 	br	808544 <__alt_data_end+0xff808544>

008085b8 <__sfvwrite_r>:
  8085b8:	30800217 	ldw	r2,8(r6)
  8085bc:	10006726 	beq	r2,zero,80875c <__sfvwrite_r+0x1a4>
  8085c0:	defff404 	addi	sp,sp,-48
  8085c4:	dd000615 	stw	r20,24(sp)
  8085c8:	2029883a 	mov	r20,r4
  8085cc:	2900030b 	ldhu	r4,12(r5)
  8085d0:	ddc00915 	stw	r23,36(sp)
  8085d4:	dc000215 	stw	r16,8(sp)
  8085d8:	dfc00b15 	stw	ra,44(sp)
  8085dc:	df000a15 	stw	fp,40(sp)
  8085e0:	dd800815 	stw	r22,32(sp)
  8085e4:	dd400715 	stw	r21,28(sp)
  8085e8:	dcc00515 	stw	r19,20(sp)
  8085ec:	dc800415 	stw	r18,16(sp)
  8085f0:	dc400315 	stw	r17,12(sp)
  8085f4:	2080020c 	andi	r2,r4,8
  8085f8:	2821883a 	mov	r16,r5
  8085fc:	302f883a 	mov	r23,r6
  808600:	10002726 	beq	r2,zero,8086a0 <__sfvwrite_r+0xe8>
  808604:	28800417 	ldw	r2,16(r5)
  808608:	10002526 	beq	r2,zero,8086a0 <__sfvwrite_r+0xe8>
  80860c:	2080008c 	andi	r2,r4,2
  808610:	bc400017 	ldw	r17,0(r23)
  808614:	10002a26 	beq	r2,zero,8086c0 <__sfvwrite_r+0x108>
  808618:	05600034 	movhi	r21,32768
  80861c:	0027883a 	mov	r19,zero
  808620:	0025883a 	mov	r18,zero
  808624:	ad7f0004 	addi	r21,r21,-1024
  808628:	980d883a 	mov	r6,r19
  80862c:	a009883a 	mov	r4,r20
  808630:	90004626 	beq	r18,zero,80874c <__sfvwrite_r+0x194>
  808634:	900f883a 	mov	r7,r18
  808638:	81400717 	ldw	r5,28(r16)
  80863c:	ac80022e 	bgeu	r21,r18,808648 <__sfvwrite_r+0x90>
  808640:	01e00034 	movhi	r7,32768
  808644:	39ff0004 	addi	r7,r7,-1024
  808648:	80800917 	ldw	r2,36(r16)
  80864c:	103ee83a 	callr	r2
  808650:	0080520e 	bge	zero,r2,80879c <__sfvwrite_r+0x1e4>
  808654:	b8c00217 	ldw	r3,8(r23)
  808658:	98a7883a 	add	r19,r19,r2
  80865c:	90a5c83a 	sub	r18,r18,r2
  808660:	1885c83a 	sub	r2,r3,r2
  808664:	b8800215 	stw	r2,8(r23)
  808668:	103fef1e 	bne	r2,zero,808628 <__alt_data_end+0xff808628>
  80866c:	0005883a 	mov	r2,zero
  808670:	dfc00b17 	ldw	ra,44(sp)
  808674:	df000a17 	ldw	fp,40(sp)
  808678:	ddc00917 	ldw	r23,36(sp)
  80867c:	dd800817 	ldw	r22,32(sp)
  808680:	dd400717 	ldw	r21,28(sp)
  808684:	dd000617 	ldw	r20,24(sp)
  808688:	dcc00517 	ldw	r19,20(sp)
  80868c:	dc800417 	ldw	r18,16(sp)
  808690:	dc400317 	ldw	r17,12(sp)
  808694:	dc000217 	ldw	r16,8(sp)
  808698:	dec00c04 	addi	sp,sp,48
  80869c:	f800283a 	ret
  8086a0:	a009883a 	mov	r4,r20
  8086a4:	800b883a 	mov	r5,r16
  8086a8:	0806a3c0 	call	806a3c <__swsetup_r>
  8086ac:	1000ec1e 	bne	r2,zero,808a60 <__sfvwrite_r+0x4a8>
  8086b0:	8100030b 	ldhu	r4,12(r16)
  8086b4:	bc400017 	ldw	r17,0(r23)
  8086b8:	2080008c 	andi	r2,r4,2
  8086bc:	103fd61e 	bne	r2,zero,808618 <__alt_data_end+0xff808618>
  8086c0:	2080004c 	andi	r2,r4,1
  8086c4:	10003a1e 	bne	r2,zero,8087b0 <__sfvwrite_r+0x1f8>
  8086c8:	0039883a 	mov	fp,zero
  8086cc:	0025883a 	mov	r18,zero
  8086d0:	90001a26 	beq	r18,zero,80873c <__sfvwrite_r+0x184>
  8086d4:	2080800c 	andi	r2,r4,512
  8086d8:	85800217 	ldw	r22,8(r16)
  8086dc:	10007626 	beq	r2,zero,8088b8 <__sfvwrite_r+0x300>
  8086e0:	b027883a 	mov	r19,r22
  8086e4:	95809436 	bltu	r18,r22,808938 <__sfvwrite_r+0x380>
  8086e8:	2081200c 	andi	r2,r4,1152
  8086ec:	10009f1e 	bne	r2,zero,80896c <__sfvwrite_r+0x3b4>
  8086f0:	81000017 	ldw	r4,0(r16)
  8086f4:	e00b883a 	mov	r5,fp
  8086f8:	980d883a 	mov	r6,r19
  8086fc:	080907c0 	call	80907c <memmove>
  808700:	81000217 	ldw	r4,8(r16)
  808704:	81400017 	ldw	r5,0(r16)
  808708:	9005883a 	mov	r2,r18
  80870c:	2587c83a 	sub	r3,r4,r22
  808710:	2ce7883a 	add	r19,r5,r19
  808714:	80c00215 	stw	r3,8(r16)
  808718:	84c00015 	stw	r19,0(r16)
  80871c:	b8c00217 	ldw	r3,8(r23)
  808720:	e0b9883a 	add	fp,fp,r2
  808724:	90a5c83a 	sub	r18,r18,r2
  808728:	1885c83a 	sub	r2,r3,r2
  80872c:	b8800215 	stw	r2,8(r23)
  808730:	103fce26 	beq	r2,zero,80866c <__alt_data_end+0xff80866c>
  808734:	8100030b 	ldhu	r4,12(r16)
  808738:	903fe61e 	bne	r18,zero,8086d4 <__alt_data_end+0xff8086d4>
  80873c:	8f000017 	ldw	fp,0(r17)
  808740:	8c800117 	ldw	r18,4(r17)
  808744:	8c400204 	addi	r17,r17,8
  808748:	003fe106 	br	8086d0 <__alt_data_end+0xff8086d0>
  80874c:	8cc00017 	ldw	r19,0(r17)
  808750:	8c800117 	ldw	r18,4(r17)
  808754:	8c400204 	addi	r17,r17,8
  808758:	003fb306 	br	808628 <__alt_data_end+0xff808628>
  80875c:	0005883a 	mov	r2,zero
  808760:	f800283a 	ret
  808764:	00a00034 	movhi	r2,32768
  808768:	10bfffc4 	addi	r2,r2,-1
  80876c:	9009883a 	mov	r4,r18
  808770:	1480012e 	bgeu	r2,r18,808778 <__sfvwrite_r+0x1c0>
  808774:	1009883a 	mov	r4,r2
  808778:	980b883a 	mov	r5,r19
  80877c:	081483c0 	call	81483c <__divsi3>
  808780:	81400717 	ldw	r5,28(r16)
  808784:	80c00917 	ldw	r3,36(r16)
  808788:	988f383a 	mul	r7,r19,r2
  80878c:	a009883a 	mov	r4,r20
  808790:	e00d883a 	mov	r6,fp
  808794:	183ee83a 	callr	r3
  808798:	00bfe016 	blt	zero,r2,80871c <__alt_data_end+0xff80871c>
  80879c:	8080030b 	ldhu	r2,12(r16)
  8087a0:	10801014 	ori	r2,r2,64
  8087a4:	8080030d 	sth	r2,12(r16)
  8087a8:	00bfffc4 	movi	r2,-1
  8087ac:	003fb006 	br	808670 <__alt_data_end+0xff808670>
  8087b0:	0027883a 	mov	r19,zero
  8087b4:	0011883a 	mov	r8,zero
  8087b8:	0039883a 	mov	fp,zero
  8087bc:	0025883a 	mov	r18,zero
  8087c0:	90001f26 	beq	r18,zero,808840 <__sfvwrite_r+0x288>
  8087c4:	40006026 	beq	r8,zero,808948 <__sfvwrite_r+0x390>
  8087c8:	982b883a 	mov	r21,r19
  8087cc:	94c0012e 	bgeu	r18,r19,8087d4 <__sfvwrite_r+0x21c>
  8087d0:	902b883a 	mov	r21,r18
  8087d4:	81000017 	ldw	r4,0(r16)
  8087d8:	80800417 	ldw	r2,16(r16)
  8087dc:	a82d883a 	mov	r22,r21
  8087e0:	81800217 	ldw	r6,8(r16)
  8087e4:	81c00517 	ldw	r7,20(r16)
  8087e8:	1100022e 	bgeu	r2,r4,8087f4 <__sfvwrite_r+0x23c>
  8087ec:	31c7883a 	add	r3,r6,r7
  8087f0:	1d401816 	blt	r3,r21,808854 <__sfvwrite_r+0x29c>
  8087f4:	a9c04416 	blt	r21,r7,808908 <__sfvwrite_r+0x350>
  8087f8:	80800917 	ldw	r2,36(r16)
  8087fc:	81400717 	ldw	r5,28(r16)
  808800:	a009883a 	mov	r4,r20
  808804:	da000115 	stw	r8,4(sp)
  808808:	e00d883a 	mov	r6,fp
  80880c:	103ee83a 	callr	r2
  808810:	102d883a 	mov	r22,r2
  808814:	da000117 	ldw	r8,4(sp)
  808818:	00bfe00e 	bge	zero,r2,80879c <__alt_data_end+0xff80879c>
  80881c:	9da7c83a 	sub	r19,r19,r22
  808820:	98001f26 	beq	r19,zero,8088a0 <__sfvwrite_r+0x2e8>
  808824:	b8800217 	ldw	r2,8(r23)
  808828:	e5b9883a 	add	fp,fp,r22
  80882c:	95a5c83a 	sub	r18,r18,r22
  808830:	15adc83a 	sub	r22,r2,r22
  808834:	bd800215 	stw	r22,8(r23)
  808838:	b03f8c26 	beq	r22,zero,80866c <__alt_data_end+0xff80866c>
  80883c:	903fe11e 	bne	r18,zero,8087c4 <__alt_data_end+0xff8087c4>
  808840:	8f000017 	ldw	fp,0(r17)
  808844:	8c800117 	ldw	r18,4(r17)
  808848:	0011883a 	mov	r8,zero
  80884c:	8c400204 	addi	r17,r17,8
  808850:	003fdb06 	br	8087c0 <__alt_data_end+0xff8087c0>
  808854:	180d883a 	mov	r6,r3
  808858:	e00b883a 	mov	r5,fp
  80885c:	da000115 	stw	r8,4(sp)
  808860:	d8c00015 	stw	r3,0(sp)
  808864:	080907c0 	call	80907c <memmove>
  808868:	d8c00017 	ldw	r3,0(sp)
  80886c:	80800017 	ldw	r2,0(r16)
  808870:	a009883a 	mov	r4,r20
  808874:	800b883a 	mov	r5,r16
  808878:	10c5883a 	add	r2,r2,r3
  80887c:	80800015 	stw	r2,0(r16)
  808880:	d8c00015 	stw	r3,0(sp)
  808884:	0800ef40 	call	800ef4 <_fflush_r>
  808888:	d8c00017 	ldw	r3,0(sp)
  80888c:	da000117 	ldw	r8,4(sp)
  808890:	103fc21e 	bne	r2,zero,80879c <__alt_data_end+0xff80879c>
  808894:	182d883a 	mov	r22,r3
  808898:	9da7c83a 	sub	r19,r19,r22
  80889c:	983fe11e 	bne	r19,zero,808824 <__alt_data_end+0xff808824>
  8088a0:	a009883a 	mov	r4,r20
  8088a4:	800b883a 	mov	r5,r16
  8088a8:	0800ef40 	call	800ef4 <_fflush_r>
  8088ac:	103fbb1e 	bne	r2,zero,80879c <__alt_data_end+0xff80879c>
  8088b0:	0011883a 	mov	r8,zero
  8088b4:	003fdb06 	br	808824 <__alt_data_end+0xff808824>
  8088b8:	81000017 	ldw	r4,0(r16)
  8088bc:	80800417 	ldw	r2,16(r16)
  8088c0:	11000236 	bltu	r2,r4,8088cc <__sfvwrite_r+0x314>
  8088c4:	84c00517 	ldw	r19,20(r16)
  8088c8:	94ffa62e 	bgeu	r18,r19,808764 <__alt_data_end+0xff808764>
  8088cc:	9027883a 	mov	r19,r18
  8088d0:	b480012e 	bgeu	r22,r18,8088d8 <__sfvwrite_r+0x320>
  8088d4:	b027883a 	mov	r19,r22
  8088d8:	e00b883a 	mov	r5,fp
  8088dc:	980d883a 	mov	r6,r19
  8088e0:	080907c0 	call	80907c <memmove>
  8088e4:	80800217 	ldw	r2,8(r16)
  8088e8:	80c00017 	ldw	r3,0(r16)
  8088ec:	14c5c83a 	sub	r2,r2,r19
  8088f0:	1cc7883a 	add	r3,r3,r19
  8088f4:	80800215 	stw	r2,8(r16)
  8088f8:	80c00015 	stw	r3,0(r16)
  8088fc:	10004326 	beq	r2,zero,808a0c <__sfvwrite_r+0x454>
  808900:	9805883a 	mov	r2,r19
  808904:	003f8506 	br	80871c <__alt_data_end+0xff80871c>
  808908:	a80d883a 	mov	r6,r21
  80890c:	e00b883a 	mov	r5,fp
  808910:	da000115 	stw	r8,4(sp)
  808914:	080907c0 	call	80907c <memmove>
  808918:	80800217 	ldw	r2,8(r16)
  80891c:	80c00017 	ldw	r3,0(r16)
  808920:	da000117 	ldw	r8,4(sp)
  808924:	1545c83a 	sub	r2,r2,r21
  808928:	1d6b883a 	add	r21,r3,r21
  80892c:	80800215 	stw	r2,8(r16)
  808930:	85400015 	stw	r21,0(r16)
  808934:	003fb906 	br	80881c <__alt_data_end+0xff80881c>
  808938:	81000017 	ldw	r4,0(r16)
  80893c:	902d883a 	mov	r22,r18
  808940:	9027883a 	mov	r19,r18
  808944:	003f6b06 	br	8086f4 <__alt_data_end+0xff8086f4>
  808948:	e009883a 	mov	r4,fp
  80894c:	01400284 	movi	r5,10
  808950:	900d883a 	mov	r6,r18
  808954:	0808e5c0 	call	808e5c <memchr>
  808958:	10003e26 	beq	r2,zero,808a54 <__sfvwrite_r+0x49c>
  80895c:	10800044 	addi	r2,r2,1
  808960:	1727c83a 	sub	r19,r2,fp
  808964:	02000044 	movi	r8,1
  808968:	003f9706 	br	8087c8 <__alt_data_end+0xff8087c8>
  80896c:	80800517 	ldw	r2,20(r16)
  808970:	81400417 	ldw	r5,16(r16)
  808974:	80c00017 	ldw	r3,0(r16)
  808978:	10a7883a 	add	r19,r2,r2
  80897c:	9885883a 	add	r2,r19,r2
  808980:	1026d7fa 	srli	r19,r2,31
  808984:	196bc83a 	sub	r21,r3,r5
  808988:	a9800044 	addi	r6,r21,1
  80898c:	9885883a 	add	r2,r19,r2
  808990:	1027d07a 	srai	r19,r2,1
  808994:	3485883a 	add	r2,r6,r18
  808998:	980d883a 	mov	r6,r19
  80899c:	9880022e 	bgeu	r19,r2,8089a8 <__sfvwrite_r+0x3f0>
  8089a0:	1027883a 	mov	r19,r2
  8089a4:	100d883a 	mov	r6,r2
  8089a8:	2101000c 	andi	r4,r4,1024
  8089ac:	20001c26 	beq	r4,zero,808a20 <__sfvwrite_r+0x468>
  8089b0:	a009883a 	mov	r4,r20
  8089b4:	300b883a 	mov	r5,r6
  8089b8:	08022b80 	call	8022b8 <_malloc_r>
  8089bc:	102d883a 	mov	r22,r2
  8089c0:	10002926 	beq	r2,zero,808a68 <__sfvwrite_r+0x4b0>
  8089c4:	81400417 	ldw	r5,16(r16)
  8089c8:	1009883a 	mov	r4,r2
  8089cc:	a80d883a 	mov	r6,r21
  8089d0:	0808f440 	call	808f44 <memcpy>
  8089d4:	8080030b 	ldhu	r2,12(r16)
  8089d8:	00fedfc4 	movi	r3,-1153
  8089dc:	10c4703a 	and	r2,r2,r3
  8089e0:	10802014 	ori	r2,r2,128
  8089e4:	8080030d 	sth	r2,12(r16)
  8089e8:	b549883a 	add	r4,r22,r21
  8089ec:	9d4bc83a 	sub	r5,r19,r21
  8089f0:	85800415 	stw	r22,16(r16)
  8089f4:	84c00515 	stw	r19,20(r16)
  8089f8:	81000015 	stw	r4,0(r16)
  8089fc:	902d883a 	mov	r22,r18
  808a00:	81400215 	stw	r5,8(r16)
  808a04:	9027883a 	mov	r19,r18
  808a08:	003f3a06 	br	8086f4 <__alt_data_end+0xff8086f4>
  808a0c:	a009883a 	mov	r4,r20
  808a10:	800b883a 	mov	r5,r16
  808a14:	0800ef40 	call	800ef4 <_fflush_r>
  808a18:	103fb926 	beq	r2,zero,808900 <__alt_data_end+0xff808900>
  808a1c:	003f5f06 	br	80879c <__alt_data_end+0xff80879c>
  808a20:	a009883a 	mov	r4,r20
  808a24:	080a3400 	call	80a340 <_realloc_r>
  808a28:	102d883a 	mov	r22,r2
  808a2c:	103fee1e 	bne	r2,zero,8089e8 <__alt_data_end+0xff8089e8>
  808a30:	81400417 	ldw	r5,16(r16)
  808a34:	a009883a 	mov	r4,r20
  808a38:	080159c0 	call	80159c <_free_r>
  808a3c:	8080030b 	ldhu	r2,12(r16)
  808a40:	00ffdfc4 	movi	r3,-129
  808a44:	1884703a 	and	r2,r3,r2
  808a48:	00c00304 	movi	r3,12
  808a4c:	a0c00015 	stw	r3,0(r20)
  808a50:	003f5306 	br	8087a0 <__alt_data_end+0xff8087a0>
  808a54:	94c00044 	addi	r19,r18,1
  808a58:	02000044 	movi	r8,1
  808a5c:	003f5a06 	br	8087c8 <__alt_data_end+0xff8087c8>
  808a60:	00bfffc4 	movi	r2,-1
  808a64:	003f0206 	br	808670 <__alt_data_end+0xff808670>
  808a68:	00800304 	movi	r2,12
  808a6c:	a0800015 	stw	r2,0(r20)
  808a70:	8080030b 	ldhu	r2,12(r16)
  808a74:	003f4a06 	br	8087a0 <__alt_data_end+0xff8087a0>

00808a78 <_isatty_r>:
  808a78:	defffd04 	addi	sp,sp,-12
  808a7c:	dc000015 	stw	r16,0(sp)
  808a80:	040020b4 	movhi	r16,130
  808a84:	dc400115 	stw	r17,4(sp)
  808a88:	843e4d04 	addi	r16,r16,-1740
  808a8c:	2023883a 	mov	r17,r4
  808a90:	2809883a 	mov	r4,r5
  808a94:	dfc00215 	stw	ra,8(sp)
  808a98:	80000015 	stw	zero,0(r16)
  808a9c:	08175140 	call	817514 <isatty>
  808aa0:	00ffffc4 	movi	r3,-1
  808aa4:	10c00526 	beq	r2,r3,808abc <_isatty_r+0x44>
  808aa8:	dfc00217 	ldw	ra,8(sp)
  808aac:	dc400117 	ldw	r17,4(sp)
  808ab0:	dc000017 	ldw	r16,0(sp)
  808ab4:	dec00304 	addi	sp,sp,12
  808ab8:	f800283a 	ret
  808abc:	80c00017 	ldw	r3,0(r16)
  808ac0:	183ff926 	beq	r3,zero,808aa8 <__alt_data_end+0xff808aa8>
  808ac4:	88c00015 	stw	r3,0(r17)
  808ac8:	003ff706 	br	808aa8 <__alt_data_end+0xff808aa8>

00808acc <iswspace>:
  808acc:	00803fc4 	movi	r2,255
  808ad0:	11000836 	bltu	r2,r4,808af4 <iswspace+0x28>
  808ad4:	008020b4 	movhi	r2,130
  808ad8:	10b6e504 	addi	r2,r2,-9324
  808adc:	10800017 	ldw	r2,0(r2)
  808ae0:	1109883a 	add	r4,r2,r4
  808ae4:	20800043 	ldbu	r2,1(r4)
  808ae8:	1080020c 	andi	r2,r2,8
  808aec:	10803fcc 	andi	r2,r2,255
  808af0:	f800283a 	ret
  808af4:	0005883a 	mov	r2,zero
  808af8:	f800283a 	ret

00808afc <_setlocale_r>:
  808afc:	30001b26 	beq	r6,zero,808b6c <_setlocale_r+0x70>
  808b00:	014020b4 	movhi	r5,130
  808b04:	defffe04 	addi	sp,sp,-8
  808b08:	296e7e04 	addi	r5,r5,-17928
  808b0c:	3009883a 	mov	r4,r6
  808b10:	dc000015 	stw	r16,0(sp)
  808b14:	dfc00115 	stw	ra,4(sp)
  808b18:	3021883a 	mov	r16,r6
  808b1c:	080aaa80 	call	80aaa8 <strcmp>
  808b20:	1000061e 	bne	r2,zero,808b3c <_setlocale_r+0x40>
  808b24:	008020b4 	movhi	r2,130
  808b28:	10adb504 	addi	r2,r2,-18732
  808b2c:	dfc00117 	ldw	ra,4(sp)
  808b30:	dc000017 	ldw	r16,0(sp)
  808b34:	dec00204 	addi	sp,sp,8
  808b38:	f800283a 	ret
  808b3c:	014020b4 	movhi	r5,130
  808b40:	296db504 	addi	r5,r5,-18732
  808b44:	8009883a 	mov	r4,r16
  808b48:	080aaa80 	call	80aaa8 <strcmp>
  808b4c:	103ff526 	beq	r2,zero,808b24 <__alt_data_end+0xff808b24>
  808b50:	014020b4 	movhi	r5,130
  808b54:	296dc904 	addi	r5,r5,-18652
  808b58:	8009883a 	mov	r4,r16
  808b5c:	080aaa80 	call	80aaa8 <strcmp>
  808b60:	103ff026 	beq	r2,zero,808b24 <__alt_data_end+0xff808b24>
  808b64:	0005883a 	mov	r2,zero
  808b68:	003ff006 	br	808b2c <__alt_data_end+0xff808b2c>
  808b6c:	008020b4 	movhi	r2,130
  808b70:	10adb504 	addi	r2,r2,-18732
  808b74:	f800283a 	ret

00808b78 <__locale_charset>:
  808b78:	008020b4 	movhi	r2,130
  808b7c:	10b1b804 	addi	r2,r2,-14624
  808b80:	f800283a 	ret

00808b84 <__locale_mb_cur_max>:
  808b84:	008020b4 	movhi	r2,130
  808b88:	10b6e604 	addi	r2,r2,-9320
  808b8c:	10800017 	ldw	r2,0(r2)
  808b90:	f800283a 	ret

00808b94 <__locale_msgcharset>:
  808b94:	008020b4 	movhi	r2,130
  808b98:	10b1b004 	addi	r2,r2,-14656
  808b9c:	f800283a 	ret

00808ba0 <__locale_cjk_lang>:
  808ba0:	0005883a 	mov	r2,zero
  808ba4:	f800283a 	ret

00808ba8 <_localeconv_r>:
  808ba8:	008020b4 	movhi	r2,130
  808bac:	10b1c004 	addi	r2,r2,-14592
  808bb0:	f800283a 	ret

00808bb4 <setlocale>:
  808bb4:	00c020b4 	movhi	r3,130
  808bb8:	18f6e204 	addi	r3,r3,-9336
  808bbc:	2005883a 	mov	r2,r4
  808bc0:	19000017 	ldw	r4,0(r3)
  808bc4:	280d883a 	mov	r6,r5
  808bc8:	100b883a 	mov	r5,r2
  808bcc:	0808afc1 	jmpi	808afc <_setlocale_r>

00808bd0 <localeconv>:
  808bd0:	008020b4 	movhi	r2,130
  808bd4:	10b1c004 	addi	r2,r2,-14592
  808bd8:	f800283a 	ret

00808bdc <_lseek_r>:
  808bdc:	defffd04 	addi	sp,sp,-12
  808be0:	dc000015 	stw	r16,0(sp)
  808be4:	040020b4 	movhi	r16,130
  808be8:	dc400115 	stw	r17,4(sp)
  808bec:	843e4d04 	addi	r16,r16,-1740
  808bf0:	2023883a 	mov	r17,r4
  808bf4:	2809883a 	mov	r4,r5
  808bf8:	300b883a 	mov	r5,r6
  808bfc:	380d883a 	mov	r6,r7
  808c00:	dfc00215 	stw	ra,8(sp)
  808c04:	80000015 	stw	zero,0(r16)
  808c08:	08176ec0 	call	8176ec <lseek>
  808c0c:	00ffffc4 	movi	r3,-1
  808c10:	10c00526 	beq	r2,r3,808c28 <_lseek_r+0x4c>
  808c14:	dfc00217 	ldw	ra,8(sp)
  808c18:	dc400117 	ldw	r17,4(sp)
  808c1c:	dc000017 	ldw	r16,0(sp)
  808c20:	dec00304 	addi	sp,sp,12
  808c24:	f800283a 	ret
  808c28:	80c00017 	ldw	r3,0(r16)
  808c2c:	183ff926 	beq	r3,zero,808c14 <__alt_data_end+0xff808c14>
  808c30:	88c00015 	stw	r3,0(r17)
  808c34:	003ff706 	br	808c14 <__alt_data_end+0xff808c14>

00808c38 <_mbrtowc_r>:
  808c38:	defff704 	addi	sp,sp,-36
  808c3c:	008020b4 	movhi	r2,130
  808c40:	dc800715 	stw	r18,28(sp)
  808c44:	dc400615 	stw	r17,24(sp)
  808c48:	dc000515 	stw	r16,20(sp)
  808c4c:	10b6e704 	addi	r2,r2,-9316
  808c50:	dfc00815 	stw	ra,32(sp)
  808c54:	2021883a 	mov	r16,r4
  808c58:	dc400917 	ldw	r17,36(sp)
  808c5c:	14800017 	ldw	r18,0(r2)
  808c60:	30001626 	beq	r6,zero,808cbc <_mbrtowc_r+0x84>
  808c64:	d9400215 	stw	r5,8(sp)
  808c68:	d9800315 	stw	r6,12(sp)
  808c6c:	d9c00415 	stw	r7,16(sp)
  808c70:	0808b780 	call	808b78 <__locale_charset>
  808c74:	d9400217 	ldw	r5,8(sp)
  808c78:	d9800317 	ldw	r6,12(sp)
  808c7c:	d9c00417 	ldw	r7,16(sp)
  808c80:	d8800015 	stw	r2,0(sp)
  808c84:	dc400115 	stw	r17,4(sp)
  808c88:	8009883a 	mov	r4,r16
  808c8c:	903ee83a 	callr	r18
  808c90:	00ffffc4 	movi	r3,-1
  808c94:	10c0031e 	bne	r2,r3,808ca4 <_mbrtowc_r+0x6c>
  808c98:	88000015 	stw	zero,0(r17)
  808c9c:	00c02284 	movi	r3,138
  808ca0:	80c00015 	stw	r3,0(r16)
  808ca4:	dfc00817 	ldw	ra,32(sp)
  808ca8:	dc800717 	ldw	r18,28(sp)
  808cac:	dc400617 	ldw	r17,24(sp)
  808cb0:	dc000517 	ldw	r16,20(sp)
  808cb4:	dec00904 	addi	sp,sp,36
  808cb8:	f800283a 	ret
  808cbc:	0808b780 	call	808b78 <__locale_charset>
  808cc0:	018020b4 	movhi	r6,130
  808cc4:	31adc904 	addi	r6,r6,-18652
  808cc8:	d8800015 	stw	r2,0(sp)
  808ccc:	dc400115 	stw	r17,4(sp)
  808cd0:	8009883a 	mov	r4,r16
  808cd4:	000b883a 	mov	r5,zero
  808cd8:	01c00044 	movi	r7,1
  808cdc:	903ee83a 	callr	r18
  808ce0:	003feb06 	br	808c90 <__alt_data_end+0xff808c90>

00808ce4 <mbrtowc>:
  808ce4:	defff704 	addi	sp,sp,-36
  808ce8:	008020b4 	movhi	r2,130
  808cec:	dc800415 	stw	r18,16(sp)
  808cf0:	dc400315 	stw	r17,12(sp)
  808cf4:	dc000215 	stw	r16,8(sp)
  808cf8:	10b6e204 	addi	r2,r2,-9336
  808cfc:	dfc00815 	stw	ra,32(sp)
  808d00:	dd400715 	stw	r21,28(sp)
  808d04:	dd000615 	stw	r20,24(sp)
  808d08:	dcc00515 	stw	r19,20(sp)
  808d0c:	2821883a 	mov	r16,r5
  808d10:	3825883a 	mov	r18,r7
  808d14:	14400017 	ldw	r17,0(r2)
  808d18:	28001b26 	beq	r5,zero,808d88 <mbrtowc+0xa4>
  808d1c:	008020b4 	movhi	r2,130
  808d20:	10b6e704 	addi	r2,r2,-9316
  808d24:	15400017 	ldw	r21,0(r2)
  808d28:	2029883a 	mov	r20,r4
  808d2c:	3027883a 	mov	r19,r6
  808d30:	0808b780 	call	808b78 <__locale_charset>
  808d34:	d8800015 	stw	r2,0(sp)
  808d38:	dc800115 	stw	r18,4(sp)
  808d3c:	8809883a 	mov	r4,r17
  808d40:	a00b883a 	mov	r5,r20
  808d44:	800d883a 	mov	r6,r16
  808d48:	980f883a 	mov	r7,r19
  808d4c:	a83ee83a 	callr	r21
  808d50:	00ffffc4 	movi	r3,-1
  808d54:	10c0031e 	bne	r2,r3,808d64 <mbrtowc+0x80>
  808d58:	90000015 	stw	zero,0(r18)
  808d5c:	00c02284 	movi	r3,138
  808d60:	88c00015 	stw	r3,0(r17)
  808d64:	dfc00817 	ldw	ra,32(sp)
  808d68:	dd400717 	ldw	r21,28(sp)
  808d6c:	dd000617 	ldw	r20,24(sp)
  808d70:	dcc00517 	ldw	r19,20(sp)
  808d74:	dc800417 	ldw	r18,16(sp)
  808d78:	dc400317 	ldw	r17,12(sp)
  808d7c:	dc000217 	ldw	r16,8(sp)
  808d80:	dec00904 	addi	sp,sp,36
  808d84:	f800283a 	ret
  808d88:	008020b4 	movhi	r2,130
  808d8c:	10b6e704 	addi	r2,r2,-9316
  808d90:	14000017 	ldw	r16,0(r2)
  808d94:	0808b780 	call	808b78 <__locale_charset>
  808d98:	018020b4 	movhi	r6,130
  808d9c:	31adc904 	addi	r6,r6,-18652
  808da0:	d8800015 	stw	r2,0(sp)
  808da4:	dc800115 	stw	r18,4(sp)
  808da8:	8809883a 	mov	r4,r17
  808dac:	000b883a 	mov	r5,zero
  808db0:	01c00044 	movi	r7,1
  808db4:	803ee83a 	callr	r16
  808db8:	003fe506 	br	808d50 <__alt_data_end+0xff808d50>

00808dbc <__ascii_mbtowc>:
  808dbc:	deffff04 	addi	sp,sp,-4
  808dc0:	28000826 	beq	r5,zero,808de4 <__ascii_mbtowc+0x28>
  808dc4:	30000926 	beq	r6,zero,808dec <__ascii_mbtowc+0x30>
  808dc8:	38000b26 	beq	r7,zero,808df8 <__ascii_mbtowc+0x3c>
  808dcc:	30800003 	ldbu	r2,0(r6)
  808dd0:	28800015 	stw	r2,0(r5)
  808dd4:	30800003 	ldbu	r2,0(r6)
  808dd8:	1004c03a 	cmpne	r2,r2,zero
  808ddc:	dec00104 	addi	sp,sp,4
  808de0:	f800283a 	ret
  808de4:	d80b883a 	mov	r5,sp
  808de8:	303ff71e 	bne	r6,zero,808dc8 <__alt_data_end+0xff808dc8>
  808dec:	0005883a 	mov	r2,zero
  808df0:	dec00104 	addi	sp,sp,4
  808df4:	f800283a 	ret
  808df8:	00bfff84 	movi	r2,-2
  808dfc:	003ff706 	br	808ddc <__alt_data_end+0xff808ddc>

00808e00 <_mbtowc_r>:
  808e00:	008020b4 	movhi	r2,130
  808e04:	defff804 	addi	sp,sp,-32
  808e08:	10b6e704 	addi	r2,r2,-9316
  808e0c:	dfc00715 	stw	ra,28(sp)
  808e10:	dc000615 	stw	r16,24(sp)
  808e14:	14000017 	ldw	r16,0(r2)
  808e18:	d9000215 	stw	r4,8(sp)
  808e1c:	d9400315 	stw	r5,12(sp)
  808e20:	d9800415 	stw	r6,16(sp)
  808e24:	d9c00515 	stw	r7,20(sp)
  808e28:	0808b780 	call	808b78 <__locale_charset>
  808e2c:	d8800015 	stw	r2,0(sp)
  808e30:	d8800817 	ldw	r2,32(sp)
  808e34:	d9000217 	ldw	r4,8(sp)
  808e38:	d9400317 	ldw	r5,12(sp)
  808e3c:	d9800417 	ldw	r6,16(sp)
  808e40:	d9c00517 	ldw	r7,20(sp)
  808e44:	d8800115 	stw	r2,4(sp)
  808e48:	803ee83a 	callr	r16
  808e4c:	dfc00717 	ldw	ra,28(sp)
  808e50:	dc000617 	ldw	r16,24(sp)
  808e54:	dec00804 	addi	sp,sp,32
  808e58:	f800283a 	ret

00808e5c <memchr>:
  808e5c:	208000cc 	andi	r2,r4,3
  808e60:	280f883a 	mov	r7,r5
  808e64:	10003526 	beq	r2,zero,808f3c <memchr+0xe0>
  808e68:	30bfffc4 	addi	r2,r6,-1
  808e6c:	30001b26 	beq	r6,zero,808edc <memchr+0x80>
  808e70:	21800003 	ldbu	r6,0(r4)
  808e74:	28c03fcc 	andi	r3,r5,255
  808e78:	30c01a26 	beq	r6,r3,808ee4 <memchr+0x88>
  808e7c:	180d883a 	mov	r6,r3
  808e80:	00000406 	br	808e94 <memchr+0x38>
  808e84:	10001526 	beq	r2,zero,808edc <memchr+0x80>
  808e88:	20c00003 	ldbu	r3,0(r4)
  808e8c:	10bfffc4 	addi	r2,r2,-1
  808e90:	19801426 	beq	r3,r6,808ee4 <memchr+0x88>
  808e94:	21000044 	addi	r4,r4,1
  808e98:	20c000cc 	andi	r3,r4,3
  808e9c:	183ff91e 	bne	r3,zero,808e84 <__alt_data_end+0xff808e84>
  808ea0:	024000c4 	movi	r9,3
  808ea4:	48801136 	bltu	r9,r2,808eec <memchr+0x90>
  808ea8:	10000c26 	beq	r2,zero,808edc <memchr+0x80>
  808eac:	20c00003 	ldbu	r3,0(r4)
  808eb0:	29403fcc 	andi	r5,r5,255
  808eb4:	19400b26 	beq	r3,r5,808ee4 <memchr+0x88>
  808eb8:	20c00044 	addi	r3,r4,1
  808ebc:	2085883a 	add	r2,r4,r2
  808ec0:	39803fcc 	andi	r6,r7,255
  808ec4:	00000306 	br	808ed4 <memchr+0x78>
  808ec8:	18c00044 	addi	r3,r3,1
  808ecc:	197fffc3 	ldbu	r5,-1(r3)
  808ed0:	29800426 	beq	r5,r6,808ee4 <memchr+0x88>
  808ed4:	1809883a 	mov	r4,r3
  808ed8:	18bffb1e 	bne	r3,r2,808ec8 <__alt_data_end+0xff808ec8>
  808edc:	0005883a 	mov	r2,zero
  808ee0:	f800283a 	ret
  808ee4:	2005883a 	mov	r2,r4
  808ee8:	f800283a 	ret
  808eec:	28c03fcc 	andi	r3,r5,255
  808ef0:	1810923a 	slli	r8,r3,8
  808ef4:	02ffbff4 	movhi	r11,65279
  808ef8:	02a02074 	movhi	r10,32897
  808efc:	40c6b03a 	or	r3,r8,r3
  808f00:	1810943a 	slli	r8,r3,16
  808f04:	5affbfc4 	addi	r11,r11,-257
  808f08:	52a02004 	addi	r10,r10,-32640
  808f0c:	40d0b03a 	or	r8,r8,r3
  808f10:	20c00017 	ldw	r3,0(r4)
  808f14:	40c6f03a 	xor	r3,r8,r3
  808f18:	1acd883a 	add	r6,r3,r11
  808f1c:	00c6303a 	nor	r3,zero,r3
  808f20:	30c6703a 	and	r3,r6,r3
  808f24:	1a86703a 	and	r3,r3,r10
  808f28:	183fdf1e 	bne	r3,zero,808ea8 <__alt_data_end+0xff808ea8>
  808f2c:	10bfff04 	addi	r2,r2,-4
  808f30:	21000104 	addi	r4,r4,4
  808f34:	48bff636 	bltu	r9,r2,808f10 <__alt_data_end+0xff808f10>
  808f38:	003fdb06 	br	808ea8 <__alt_data_end+0xff808ea8>
  808f3c:	3005883a 	mov	r2,r6
  808f40:	003fd706 	br	808ea0 <__alt_data_end+0xff808ea0>

00808f44 <memcpy>:
  808f44:	deffff04 	addi	sp,sp,-4
  808f48:	dc000015 	stw	r16,0(sp)
  808f4c:	00c003c4 	movi	r3,15
  808f50:	2005883a 	mov	r2,r4
  808f54:	1980432e 	bgeu	r3,r6,809064 <memcpy+0x120>
  808f58:	2146b03a 	or	r3,r4,r5
  808f5c:	18c000cc 	andi	r3,r3,3
  808f60:	1800421e 	bne	r3,zero,80906c <memcpy+0x128>
  808f64:	343ffc04 	addi	r16,r6,-16
  808f68:	8020d13a 	srli	r16,r16,4
  808f6c:	28c00104 	addi	r3,r5,4
  808f70:	23400104 	addi	r13,r4,4
  808f74:	801e913a 	slli	r15,r16,4
  808f78:	2b000204 	addi	r12,r5,8
  808f7c:	22c00204 	addi	r11,r4,8
  808f80:	7bc00504 	addi	r15,r15,20
  808f84:	2a800304 	addi	r10,r5,12
  808f88:	22400304 	addi	r9,r4,12
  808f8c:	2bdf883a 	add	r15,r5,r15
  808f90:	2811883a 	mov	r8,r5
  808f94:	200f883a 	mov	r7,r4
  808f98:	41000017 	ldw	r4,0(r8)
  808f9c:	39c00404 	addi	r7,r7,16
  808fa0:	18c00404 	addi	r3,r3,16
  808fa4:	393ffc15 	stw	r4,-16(r7)
  808fa8:	1bbffc17 	ldw	r14,-16(r3)
  808fac:	6b400404 	addi	r13,r13,16
  808fb0:	5ac00404 	addi	r11,r11,16
  808fb4:	6bbffc15 	stw	r14,-16(r13)
  808fb8:	63800017 	ldw	r14,0(r12)
  808fbc:	4a400404 	addi	r9,r9,16
  808fc0:	42000404 	addi	r8,r8,16
  808fc4:	5bbffc15 	stw	r14,-16(r11)
  808fc8:	53800017 	ldw	r14,0(r10)
  808fcc:	63000404 	addi	r12,r12,16
  808fd0:	52800404 	addi	r10,r10,16
  808fd4:	4bbffc15 	stw	r14,-16(r9)
  808fd8:	1bffef1e 	bne	r3,r15,808f98 <__alt_data_end+0xff808f98>
  808fdc:	81c00044 	addi	r7,r16,1
  808fe0:	380e913a 	slli	r7,r7,4
  808fe4:	310003cc 	andi	r4,r6,15
  808fe8:	02c000c4 	movi	r11,3
  808fec:	11c7883a 	add	r3,r2,r7
  808ff0:	29cb883a 	add	r5,r5,r7
  808ff4:	59001f2e 	bgeu	r11,r4,809074 <memcpy+0x130>
  808ff8:	1813883a 	mov	r9,r3
  808ffc:	2811883a 	mov	r8,r5
  809000:	200f883a 	mov	r7,r4
  809004:	42800017 	ldw	r10,0(r8)
  809008:	4a400104 	addi	r9,r9,4
  80900c:	39ffff04 	addi	r7,r7,-4
  809010:	4abfff15 	stw	r10,-4(r9)
  809014:	42000104 	addi	r8,r8,4
  809018:	59fffa36 	bltu	r11,r7,809004 <__alt_data_end+0xff809004>
  80901c:	213fff04 	addi	r4,r4,-4
  809020:	2008d0ba 	srli	r4,r4,2
  809024:	318000cc 	andi	r6,r6,3
  809028:	21000044 	addi	r4,r4,1
  80902c:	2109883a 	add	r4,r4,r4
  809030:	2109883a 	add	r4,r4,r4
  809034:	1907883a 	add	r3,r3,r4
  809038:	290b883a 	add	r5,r5,r4
  80903c:	30000626 	beq	r6,zero,809058 <memcpy+0x114>
  809040:	198d883a 	add	r6,r3,r6
  809044:	29c00003 	ldbu	r7,0(r5)
  809048:	18c00044 	addi	r3,r3,1
  80904c:	29400044 	addi	r5,r5,1
  809050:	19ffffc5 	stb	r7,-1(r3)
  809054:	19bffb1e 	bne	r3,r6,809044 <__alt_data_end+0xff809044>
  809058:	dc000017 	ldw	r16,0(sp)
  80905c:	dec00104 	addi	sp,sp,4
  809060:	f800283a 	ret
  809064:	2007883a 	mov	r3,r4
  809068:	003ff406 	br	80903c <__alt_data_end+0xff80903c>
  80906c:	2007883a 	mov	r3,r4
  809070:	003ff306 	br	809040 <__alt_data_end+0xff809040>
  809074:	200d883a 	mov	r6,r4
  809078:	003ff006 	br	80903c <__alt_data_end+0xff80903c>

0080907c <memmove>:
  80907c:	2005883a 	mov	r2,r4
  809080:	29000b2e 	bgeu	r5,r4,8090b0 <memmove+0x34>
  809084:	298f883a 	add	r7,r5,r6
  809088:	21c0092e 	bgeu	r4,r7,8090b0 <memmove+0x34>
  80908c:	2187883a 	add	r3,r4,r6
  809090:	198bc83a 	sub	r5,r3,r6
  809094:	30004b26 	beq	r6,zero,8091c4 <memmove+0x148>
  809098:	39ffffc4 	addi	r7,r7,-1
  80909c:	39000003 	ldbu	r4,0(r7)
  8090a0:	18ffffc4 	addi	r3,r3,-1
  8090a4:	19000005 	stb	r4,0(r3)
  8090a8:	197ffb1e 	bne	r3,r5,809098 <__alt_data_end+0xff809098>
  8090ac:	f800283a 	ret
  8090b0:	00c003c4 	movi	r3,15
  8090b4:	1980412e 	bgeu	r3,r6,8091bc <memmove+0x140>
  8090b8:	1146b03a 	or	r3,r2,r5
  8090bc:	18c000cc 	andi	r3,r3,3
  8090c0:	1800411e 	bne	r3,zero,8091c8 <memmove+0x14c>
  8090c4:	33fffc04 	addi	r15,r6,-16
  8090c8:	781ed13a 	srli	r15,r15,4
  8090cc:	28c00104 	addi	r3,r5,4
  8090d0:	13400104 	addi	r13,r2,4
  8090d4:	781c913a 	slli	r14,r15,4
  8090d8:	2b000204 	addi	r12,r5,8
  8090dc:	12c00204 	addi	r11,r2,8
  8090e0:	73800504 	addi	r14,r14,20
  8090e4:	2a800304 	addi	r10,r5,12
  8090e8:	12400304 	addi	r9,r2,12
  8090ec:	2b9d883a 	add	r14,r5,r14
  8090f0:	2811883a 	mov	r8,r5
  8090f4:	100f883a 	mov	r7,r2
  8090f8:	41000017 	ldw	r4,0(r8)
  8090fc:	39c00404 	addi	r7,r7,16
  809100:	18c00404 	addi	r3,r3,16
  809104:	393ffc15 	stw	r4,-16(r7)
  809108:	193ffc17 	ldw	r4,-16(r3)
  80910c:	6b400404 	addi	r13,r13,16
  809110:	5ac00404 	addi	r11,r11,16
  809114:	693ffc15 	stw	r4,-16(r13)
  809118:	61000017 	ldw	r4,0(r12)
  80911c:	4a400404 	addi	r9,r9,16
  809120:	42000404 	addi	r8,r8,16
  809124:	593ffc15 	stw	r4,-16(r11)
  809128:	51000017 	ldw	r4,0(r10)
  80912c:	63000404 	addi	r12,r12,16
  809130:	52800404 	addi	r10,r10,16
  809134:	493ffc15 	stw	r4,-16(r9)
  809138:	1bbfef1e 	bne	r3,r14,8090f8 <__alt_data_end+0xff8090f8>
  80913c:	79000044 	addi	r4,r15,1
  809140:	2008913a 	slli	r4,r4,4
  809144:	328003cc 	andi	r10,r6,15
  809148:	02c000c4 	movi	r11,3
  80914c:	1107883a 	add	r3,r2,r4
  809150:	290b883a 	add	r5,r5,r4
  809154:	5a801e2e 	bgeu	r11,r10,8091d0 <memmove+0x154>
  809158:	1813883a 	mov	r9,r3
  80915c:	2811883a 	mov	r8,r5
  809160:	500f883a 	mov	r7,r10
  809164:	41000017 	ldw	r4,0(r8)
  809168:	4a400104 	addi	r9,r9,4
  80916c:	39ffff04 	addi	r7,r7,-4
  809170:	493fff15 	stw	r4,-4(r9)
  809174:	42000104 	addi	r8,r8,4
  809178:	59fffa36 	bltu	r11,r7,809164 <__alt_data_end+0xff809164>
  80917c:	513fff04 	addi	r4,r10,-4
  809180:	2008d0ba 	srli	r4,r4,2
  809184:	318000cc 	andi	r6,r6,3
  809188:	21000044 	addi	r4,r4,1
  80918c:	2109883a 	add	r4,r4,r4
  809190:	2109883a 	add	r4,r4,r4
  809194:	1907883a 	add	r3,r3,r4
  809198:	290b883a 	add	r5,r5,r4
  80919c:	30000926 	beq	r6,zero,8091c4 <memmove+0x148>
  8091a0:	198d883a 	add	r6,r3,r6
  8091a4:	29c00003 	ldbu	r7,0(r5)
  8091a8:	18c00044 	addi	r3,r3,1
  8091ac:	29400044 	addi	r5,r5,1
  8091b0:	19ffffc5 	stb	r7,-1(r3)
  8091b4:	19bffb1e 	bne	r3,r6,8091a4 <__alt_data_end+0xff8091a4>
  8091b8:	f800283a 	ret
  8091bc:	1007883a 	mov	r3,r2
  8091c0:	003ff606 	br	80919c <__alt_data_end+0xff80919c>
  8091c4:	f800283a 	ret
  8091c8:	1007883a 	mov	r3,r2
  8091cc:	003ff406 	br	8091a0 <__alt_data_end+0xff8091a0>
  8091d0:	500d883a 	mov	r6,r10
  8091d4:	003ff106 	br	80919c <__alt_data_end+0xff80919c>

008091d8 <_Balloc>:
  8091d8:	20801317 	ldw	r2,76(r4)
  8091dc:	defffc04 	addi	sp,sp,-16
  8091e0:	dc400115 	stw	r17,4(sp)
  8091e4:	dc000015 	stw	r16,0(sp)
  8091e8:	dfc00315 	stw	ra,12(sp)
  8091ec:	dc800215 	stw	r18,8(sp)
  8091f0:	2023883a 	mov	r17,r4
  8091f4:	2821883a 	mov	r16,r5
  8091f8:	10000f26 	beq	r2,zero,809238 <_Balloc+0x60>
  8091fc:	8407883a 	add	r3,r16,r16
  809200:	18c7883a 	add	r3,r3,r3
  809204:	10c7883a 	add	r3,r2,r3
  809208:	18800017 	ldw	r2,0(r3)
  80920c:	10001126 	beq	r2,zero,809254 <_Balloc+0x7c>
  809210:	11000017 	ldw	r4,0(r2)
  809214:	19000015 	stw	r4,0(r3)
  809218:	10000415 	stw	zero,16(r2)
  80921c:	10000315 	stw	zero,12(r2)
  809220:	dfc00317 	ldw	ra,12(sp)
  809224:	dc800217 	ldw	r18,8(sp)
  809228:	dc400117 	ldw	r17,4(sp)
  80922c:	dc000017 	ldw	r16,0(sp)
  809230:	dec00404 	addi	sp,sp,16
  809234:	f800283a 	ret
  809238:	01400104 	movi	r5,4
  80923c:	01800844 	movi	r6,33
  809240:	08118bc0 	call	8118bc <_calloc_r>
  809244:	88801315 	stw	r2,76(r17)
  809248:	103fec1e 	bne	r2,zero,8091fc <__alt_data_end+0xff8091fc>
  80924c:	0005883a 	mov	r2,zero
  809250:	003ff306 	br	809220 <__alt_data_end+0xff809220>
  809254:	01400044 	movi	r5,1
  809258:	2c24983a 	sll	r18,r5,r16
  80925c:	8809883a 	mov	r4,r17
  809260:	91800144 	addi	r6,r18,5
  809264:	318d883a 	add	r6,r6,r6
  809268:	318d883a 	add	r6,r6,r6
  80926c:	08118bc0 	call	8118bc <_calloc_r>
  809270:	103ff626 	beq	r2,zero,80924c <__alt_data_end+0xff80924c>
  809274:	14000115 	stw	r16,4(r2)
  809278:	14800215 	stw	r18,8(r2)
  80927c:	003fe606 	br	809218 <__alt_data_end+0xff809218>

00809280 <_Bfree>:
  809280:	28000826 	beq	r5,zero,8092a4 <_Bfree+0x24>
  809284:	28c00117 	ldw	r3,4(r5)
  809288:	20801317 	ldw	r2,76(r4)
  80928c:	18c7883a 	add	r3,r3,r3
  809290:	18c7883a 	add	r3,r3,r3
  809294:	10c5883a 	add	r2,r2,r3
  809298:	10c00017 	ldw	r3,0(r2)
  80929c:	28c00015 	stw	r3,0(r5)
  8092a0:	11400015 	stw	r5,0(r2)
  8092a4:	f800283a 	ret

008092a8 <__multadd>:
  8092a8:	defffa04 	addi	sp,sp,-24
  8092ac:	dc000115 	stw	r16,4(sp)
  8092b0:	2c000417 	ldw	r16,16(r5)
  8092b4:	dc800315 	stw	r18,12(sp)
  8092b8:	dc400215 	stw	r17,8(sp)
  8092bc:	dfc00515 	stw	ra,20(sp)
  8092c0:	dcc00415 	stw	r19,16(sp)
  8092c4:	2823883a 	mov	r17,r5
  8092c8:	2025883a 	mov	r18,r4
  8092cc:	2a400504 	addi	r9,r5,20
  8092d0:	0015883a 	mov	r10,zero
  8092d4:	4a000017 	ldw	r8,0(r9)
  8092d8:	4a400104 	addi	r9,r9,4
  8092dc:	52800044 	addi	r10,r10,1
  8092e0:	40ffffcc 	andi	r3,r8,65535
  8092e4:	1987383a 	mul	r3,r3,r6
  8092e8:	4010d43a 	srli	r8,r8,16
  8092ec:	19cf883a 	add	r7,r3,r7
  8092f0:	4191383a 	mul	r8,r8,r6
  8092f4:	3816d43a 	srli	r11,r7,16
  8092f8:	38ffffcc 	andi	r3,r7,65535
  8092fc:	5a0f883a 	add	r7,r11,r8
  809300:	3810943a 	slli	r8,r7,16
  809304:	380ed43a 	srli	r7,r7,16
  809308:	40c7883a 	add	r3,r8,r3
  80930c:	48ffff15 	stw	r3,-4(r9)
  809310:	543ff016 	blt	r10,r16,8092d4 <__alt_data_end+0xff8092d4>
  809314:	38000926 	beq	r7,zero,80933c <__multadd+0x94>
  809318:	88800217 	ldw	r2,8(r17)
  80931c:	80800f0e 	bge	r16,r2,80935c <__multadd+0xb4>
  809320:	80800144 	addi	r2,r16,5
  809324:	1085883a 	add	r2,r2,r2
  809328:	1085883a 	add	r2,r2,r2
  80932c:	8885883a 	add	r2,r17,r2
  809330:	11c00015 	stw	r7,0(r2)
  809334:	84000044 	addi	r16,r16,1
  809338:	8c000415 	stw	r16,16(r17)
  80933c:	8805883a 	mov	r2,r17
  809340:	dfc00517 	ldw	ra,20(sp)
  809344:	dcc00417 	ldw	r19,16(sp)
  809348:	dc800317 	ldw	r18,12(sp)
  80934c:	dc400217 	ldw	r17,8(sp)
  809350:	dc000117 	ldw	r16,4(sp)
  809354:	dec00604 	addi	sp,sp,24
  809358:	f800283a 	ret
  80935c:	89400117 	ldw	r5,4(r17)
  809360:	9009883a 	mov	r4,r18
  809364:	d9c00015 	stw	r7,0(sp)
  809368:	29400044 	addi	r5,r5,1
  80936c:	08091d80 	call	8091d8 <_Balloc>
  809370:	89800417 	ldw	r6,16(r17)
  809374:	11000304 	addi	r4,r2,12
  809378:	89400304 	addi	r5,r17,12
  80937c:	31800084 	addi	r6,r6,2
  809380:	318d883a 	add	r6,r6,r6
  809384:	318d883a 	add	r6,r6,r6
  809388:	1027883a 	mov	r19,r2
  80938c:	0808f440 	call	808f44 <memcpy>
  809390:	d9c00017 	ldw	r7,0(sp)
  809394:	88000a26 	beq	r17,zero,8093c0 <__multadd+0x118>
  809398:	89000117 	ldw	r4,4(r17)
  80939c:	90c01317 	ldw	r3,76(r18)
  8093a0:	2109883a 	add	r4,r4,r4
  8093a4:	2109883a 	add	r4,r4,r4
  8093a8:	1907883a 	add	r3,r3,r4
  8093ac:	18800017 	ldw	r2,0(r3)
  8093b0:	88800015 	stw	r2,0(r17)
  8093b4:	1c400015 	stw	r17,0(r3)
  8093b8:	9823883a 	mov	r17,r19
  8093bc:	003fd806 	br	809320 <__alt_data_end+0xff809320>
  8093c0:	9823883a 	mov	r17,r19
  8093c4:	003fd606 	br	809320 <__alt_data_end+0xff809320>

008093c8 <__s2b>:
  8093c8:	defff904 	addi	sp,sp,-28
  8093cc:	dc400115 	stw	r17,4(sp)
  8093d0:	dc000015 	stw	r16,0(sp)
  8093d4:	2023883a 	mov	r17,r4
  8093d8:	2821883a 	mov	r16,r5
  8093dc:	39000204 	addi	r4,r7,8
  8093e0:	01400244 	movi	r5,9
  8093e4:	dcc00315 	stw	r19,12(sp)
  8093e8:	dc800215 	stw	r18,8(sp)
  8093ec:	dfc00615 	stw	ra,24(sp)
  8093f0:	dd400515 	stw	r21,20(sp)
  8093f4:	dd000415 	stw	r20,16(sp)
  8093f8:	3825883a 	mov	r18,r7
  8093fc:	3027883a 	mov	r19,r6
  809400:	081483c0 	call	81483c <__divsi3>
  809404:	00c00044 	movi	r3,1
  809408:	000b883a 	mov	r5,zero
  80940c:	1880030e 	bge	r3,r2,80941c <__s2b+0x54>
  809410:	18c7883a 	add	r3,r3,r3
  809414:	29400044 	addi	r5,r5,1
  809418:	18bffd16 	blt	r3,r2,809410 <__alt_data_end+0xff809410>
  80941c:	8809883a 	mov	r4,r17
  809420:	08091d80 	call	8091d8 <_Balloc>
  809424:	d8c00717 	ldw	r3,28(sp)
  809428:	10c00515 	stw	r3,20(r2)
  80942c:	00c00044 	movi	r3,1
  809430:	10c00415 	stw	r3,16(r2)
  809434:	00c00244 	movi	r3,9
  809438:	1cc0210e 	bge	r3,r19,8094c0 <__s2b+0xf8>
  80943c:	80eb883a 	add	r21,r16,r3
  809440:	a829883a 	mov	r20,r21
  809444:	84e1883a 	add	r16,r16,r19
  809448:	a1c00007 	ldb	r7,0(r20)
  80944c:	8809883a 	mov	r4,r17
  809450:	a5000044 	addi	r20,r20,1
  809454:	100b883a 	mov	r5,r2
  809458:	01800284 	movi	r6,10
  80945c:	39fff404 	addi	r7,r7,-48
  809460:	08092a80 	call	8092a8 <__multadd>
  809464:	a43ff81e 	bne	r20,r16,809448 <__alt_data_end+0xff809448>
  809468:	ace1883a 	add	r16,r21,r19
  80946c:	843ffe04 	addi	r16,r16,-8
  809470:	9c800a0e 	bge	r19,r18,80949c <__s2b+0xd4>
  809474:	94e5c83a 	sub	r18,r18,r19
  809478:	84a5883a 	add	r18,r16,r18
  80947c:	81c00007 	ldb	r7,0(r16)
  809480:	8809883a 	mov	r4,r17
  809484:	84000044 	addi	r16,r16,1
  809488:	100b883a 	mov	r5,r2
  80948c:	01800284 	movi	r6,10
  809490:	39fff404 	addi	r7,r7,-48
  809494:	08092a80 	call	8092a8 <__multadd>
  809498:	84bff81e 	bne	r16,r18,80947c <__alt_data_end+0xff80947c>
  80949c:	dfc00617 	ldw	ra,24(sp)
  8094a0:	dd400517 	ldw	r21,20(sp)
  8094a4:	dd000417 	ldw	r20,16(sp)
  8094a8:	dcc00317 	ldw	r19,12(sp)
  8094ac:	dc800217 	ldw	r18,8(sp)
  8094b0:	dc400117 	ldw	r17,4(sp)
  8094b4:	dc000017 	ldw	r16,0(sp)
  8094b8:	dec00704 	addi	sp,sp,28
  8094bc:	f800283a 	ret
  8094c0:	84000284 	addi	r16,r16,10
  8094c4:	1827883a 	mov	r19,r3
  8094c8:	003fe906 	br	809470 <__alt_data_end+0xff809470>

008094cc <__hi0bits>:
  8094cc:	20bfffec 	andhi	r2,r4,65535
  8094d0:	1000141e 	bne	r2,zero,809524 <__hi0bits+0x58>
  8094d4:	2008943a 	slli	r4,r4,16
  8094d8:	00800404 	movi	r2,16
  8094dc:	20ffc02c 	andhi	r3,r4,65280
  8094e0:	1800021e 	bne	r3,zero,8094ec <__hi0bits+0x20>
  8094e4:	2008923a 	slli	r4,r4,8
  8094e8:	10800204 	addi	r2,r2,8
  8094ec:	20fc002c 	andhi	r3,r4,61440
  8094f0:	1800021e 	bne	r3,zero,8094fc <__hi0bits+0x30>
  8094f4:	2008913a 	slli	r4,r4,4
  8094f8:	10800104 	addi	r2,r2,4
  8094fc:	20f0002c 	andhi	r3,r4,49152
  809500:	1800031e 	bne	r3,zero,809510 <__hi0bits+0x44>
  809504:	2109883a 	add	r4,r4,r4
  809508:	10800084 	addi	r2,r2,2
  80950c:	2109883a 	add	r4,r4,r4
  809510:	20000316 	blt	r4,zero,809520 <__hi0bits+0x54>
  809514:	2110002c 	andhi	r4,r4,16384
  809518:	2000041e 	bne	r4,zero,80952c <__hi0bits+0x60>
  80951c:	00800804 	movi	r2,32
  809520:	f800283a 	ret
  809524:	0005883a 	mov	r2,zero
  809528:	003fec06 	br	8094dc <__alt_data_end+0xff8094dc>
  80952c:	10800044 	addi	r2,r2,1
  809530:	f800283a 	ret

00809534 <__lo0bits>:
  809534:	20c00017 	ldw	r3,0(r4)
  809538:	188001cc 	andi	r2,r3,7
  80953c:	10000826 	beq	r2,zero,809560 <__lo0bits+0x2c>
  809540:	1880004c 	andi	r2,r3,1
  809544:	1000211e 	bne	r2,zero,8095cc <__lo0bits+0x98>
  809548:	1880008c 	andi	r2,r3,2
  80954c:	1000211e 	bne	r2,zero,8095d4 <__lo0bits+0xa0>
  809550:	1806d0ba 	srli	r3,r3,2
  809554:	00800084 	movi	r2,2
  809558:	20c00015 	stw	r3,0(r4)
  80955c:	f800283a 	ret
  809560:	18bfffcc 	andi	r2,r3,65535
  809564:	10001326 	beq	r2,zero,8095b4 <__lo0bits+0x80>
  809568:	0005883a 	mov	r2,zero
  80956c:	19403fcc 	andi	r5,r3,255
  809570:	2800021e 	bne	r5,zero,80957c <__lo0bits+0x48>
  809574:	1806d23a 	srli	r3,r3,8
  809578:	10800204 	addi	r2,r2,8
  80957c:	194003cc 	andi	r5,r3,15
  809580:	2800021e 	bne	r5,zero,80958c <__lo0bits+0x58>
  809584:	1806d13a 	srli	r3,r3,4
  809588:	10800104 	addi	r2,r2,4
  80958c:	194000cc 	andi	r5,r3,3
  809590:	2800021e 	bne	r5,zero,80959c <__lo0bits+0x68>
  809594:	1806d0ba 	srli	r3,r3,2
  809598:	10800084 	addi	r2,r2,2
  80959c:	1940004c 	andi	r5,r3,1
  8095a0:	2800081e 	bne	r5,zero,8095c4 <__lo0bits+0x90>
  8095a4:	1806d07a 	srli	r3,r3,1
  8095a8:	1800051e 	bne	r3,zero,8095c0 <__lo0bits+0x8c>
  8095ac:	00800804 	movi	r2,32
  8095b0:	f800283a 	ret
  8095b4:	1806d43a 	srli	r3,r3,16
  8095b8:	00800404 	movi	r2,16
  8095bc:	003feb06 	br	80956c <__alt_data_end+0xff80956c>
  8095c0:	10800044 	addi	r2,r2,1
  8095c4:	20c00015 	stw	r3,0(r4)
  8095c8:	f800283a 	ret
  8095cc:	0005883a 	mov	r2,zero
  8095d0:	f800283a 	ret
  8095d4:	1806d07a 	srli	r3,r3,1
  8095d8:	00800044 	movi	r2,1
  8095dc:	20c00015 	stw	r3,0(r4)
  8095e0:	f800283a 	ret

008095e4 <__i2b>:
  8095e4:	defffd04 	addi	sp,sp,-12
  8095e8:	dc000015 	stw	r16,0(sp)
  8095ec:	04000044 	movi	r16,1
  8095f0:	dc400115 	stw	r17,4(sp)
  8095f4:	2823883a 	mov	r17,r5
  8095f8:	800b883a 	mov	r5,r16
  8095fc:	dfc00215 	stw	ra,8(sp)
  809600:	08091d80 	call	8091d8 <_Balloc>
  809604:	14400515 	stw	r17,20(r2)
  809608:	14000415 	stw	r16,16(r2)
  80960c:	dfc00217 	ldw	ra,8(sp)
  809610:	dc400117 	ldw	r17,4(sp)
  809614:	dc000017 	ldw	r16,0(sp)
  809618:	dec00304 	addi	sp,sp,12
  80961c:	f800283a 	ret

00809620 <__multiply>:
  809620:	defffa04 	addi	sp,sp,-24
  809624:	dcc00315 	stw	r19,12(sp)
  809628:	dc800215 	stw	r18,8(sp)
  80962c:	2cc00417 	ldw	r19,16(r5)
  809630:	34800417 	ldw	r18,16(r6)
  809634:	dd000415 	stw	r20,16(sp)
  809638:	dc400115 	stw	r17,4(sp)
  80963c:	dfc00515 	stw	ra,20(sp)
  809640:	dc000015 	stw	r16,0(sp)
  809644:	2829883a 	mov	r20,r5
  809648:	3023883a 	mov	r17,r6
  80964c:	9c807016 	blt	r19,r18,809810 <__multiply+0x1f0>
  809650:	9005883a 	mov	r2,r18
  809654:	9825883a 	mov	r18,r19
  809658:	1027883a 	mov	r19,r2
  80965c:	a0800217 	ldw	r2,8(r20)
  809660:	94e1883a 	add	r16,r18,r19
  809664:	a1400117 	ldw	r5,4(r20)
  809668:	1400010e 	bge	r2,r16,809670 <__multiply+0x50>
  80966c:	29400044 	addi	r5,r5,1
  809670:	08091d80 	call	8091d8 <_Balloc>
  809674:	8417883a 	add	r11,r16,r16
  809678:	13000504 	addi	r12,r2,20
  80967c:	5ad7883a 	add	r11,r11,r11
  809680:	62d7883a 	add	r11,r12,r11
  809684:	6007883a 	mov	r3,r12
  809688:	62c0032e 	bgeu	r12,r11,809698 <__multiply+0x78>
  80968c:	18000015 	stw	zero,0(r3)
  809690:	18c00104 	addi	r3,r3,4
  809694:	1afffd36 	bltu	r3,r11,80968c <__alt_data_end+0xff80968c>
  809698:	9ce7883a 	add	r19,r19,r19
  80969c:	94a5883a 	add	r18,r18,r18
  8096a0:	89800504 	addi	r6,r17,20
  8096a4:	9ce7883a 	add	r19,r19,r19
  8096a8:	a3800504 	addi	r14,r20,20
  8096ac:	94a5883a 	add	r18,r18,r18
  8096b0:	34db883a 	add	r13,r6,r19
  8096b4:	7495883a 	add	r10,r14,r18
  8096b8:	3340422e 	bgeu	r6,r13,8097c4 <__multiply+0x1a4>
  8096bc:	34400017 	ldw	r17,0(r6)
  8096c0:	8cbfffcc 	andi	r18,r17,65535
  8096c4:	90001b26 	beq	r18,zero,809734 <__multiply+0x114>
  8096c8:	6013883a 	mov	r9,r12
  8096cc:	7023883a 	mov	r17,r14
  8096d0:	0011883a 	mov	r8,zero
  8096d4:	88c00017 	ldw	r3,0(r17)
  8096d8:	4bc00017 	ldw	r15,0(r9)
  8096dc:	8c400104 	addi	r17,r17,4
  8096e0:	19ffffcc 	andi	r7,r3,65535
  8096e4:	3c8f383a 	mul	r7,r7,r18
  8096e8:	1808d43a 	srli	r4,r3,16
  8096ec:	797fffcc 	andi	r5,r15,65535
  8096f0:	29cb883a 	add	r5,r5,r7
  8096f4:	2a0b883a 	add	r5,r5,r8
  8096f8:	2489383a 	mul	r4,r4,r18
  8096fc:	7806d43a 	srli	r3,r15,16
  809700:	2810d43a 	srli	r8,r5,16
  809704:	297fffcc 	andi	r5,r5,65535
  809708:	1907883a 	add	r3,r3,r4
  80970c:	1a07883a 	add	r3,r3,r8
  809710:	1808943a 	slli	r4,r3,16
  809714:	480f883a 	mov	r7,r9
  809718:	1810d43a 	srli	r8,r3,16
  80971c:	214ab03a 	or	r5,r4,r5
  809720:	49400015 	stw	r5,0(r9)
  809724:	4a400104 	addi	r9,r9,4
  809728:	8abfea36 	bltu	r17,r10,8096d4 <__alt_data_end+0xff8096d4>
  80972c:	3a000115 	stw	r8,4(r7)
  809730:	34400017 	ldw	r17,0(r6)
  809734:	8822d43a 	srli	r17,r17,16
  809738:	88001f26 	beq	r17,zero,8097b8 <__multiply+0x198>
  80973c:	60c00017 	ldw	r3,0(r12)
  809740:	7013883a 	mov	r9,r14
  809744:	601f883a 	mov	r15,r12
  809748:	1811883a 	mov	r8,r3
  80974c:	6027883a 	mov	r19,r12
  809750:	000f883a 	mov	r7,zero
  809754:	00000106 	br	80975c <__multiply+0x13c>
  809758:	9027883a 	mov	r19,r18
  80975c:	4940000b 	ldhu	r5,0(r9)
  809760:	4010d43a 	srli	r8,r8,16
  809764:	193fffcc 	andi	r4,r3,65535
  809768:	2c4b383a 	mul	r5,r5,r17
  80976c:	7bc00104 	addi	r15,r15,4
  809770:	4a400104 	addi	r9,r9,4
  809774:	2a0b883a 	add	r5,r5,r8
  809778:	29cb883a 	add	r5,r5,r7
  80977c:	2806943a 	slli	r3,r5,16
  809780:	9c800104 	addi	r18,r19,4
  809784:	280ad43a 	srli	r5,r5,16
  809788:	1908b03a 	or	r4,r3,r4
  80978c:	793fff15 	stw	r4,-4(r15)
  809790:	48ffff17 	ldw	r3,-4(r9)
  809794:	92000017 	ldw	r8,0(r18)
  809798:	1806d43a 	srli	r3,r3,16
  80979c:	413fffcc 	andi	r4,r8,65535
  8097a0:	1c47383a 	mul	r3,r3,r17
  8097a4:	1907883a 	add	r3,r3,r4
  8097a8:	1947883a 	add	r3,r3,r5
  8097ac:	180ed43a 	srli	r7,r3,16
  8097b0:	4abfe936 	bltu	r9,r10,809758 <__alt_data_end+0xff809758>
  8097b4:	98c00115 	stw	r3,4(r19)
  8097b8:	31800104 	addi	r6,r6,4
  8097bc:	63000104 	addi	r12,r12,4
  8097c0:	337fbe36 	bltu	r6,r13,8096bc <__alt_data_end+0xff8096bc>
  8097c4:	0400090e 	bge	zero,r16,8097ec <__multiply+0x1cc>
  8097c8:	58ffff17 	ldw	r3,-4(r11)
  8097cc:	5affff04 	addi	r11,r11,-4
  8097d0:	18000326 	beq	r3,zero,8097e0 <__multiply+0x1c0>
  8097d4:	00000506 	br	8097ec <__multiply+0x1cc>
  8097d8:	58c00017 	ldw	r3,0(r11)
  8097dc:	1800031e 	bne	r3,zero,8097ec <__multiply+0x1cc>
  8097e0:	843fffc4 	addi	r16,r16,-1
  8097e4:	5affff04 	addi	r11,r11,-4
  8097e8:	803ffb1e 	bne	r16,zero,8097d8 <__alt_data_end+0xff8097d8>
  8097ec:	14000415 	stw	r16,16(r2)
  8097f0:	dfc00517 	ldw	ra,20(sp)
  8097f4:	dd000417 	ldw	r20,16(sp)
  8097f8:	dcc00317 	ldw	r19,12(sp)
  8097fc:	dc800217 	ldw	r18,8(sp)
  809800:	dc400117 	ldw	r17,4(sp)
  809804:	dc000017 	ldw	r16,0(sp)
  809808:	dec00604 	addi	sp,sp,24
  80980c:	f800283a 	ret
  809810:	3029883a 	mov	r20,r6
  809814:	2823883a 	mov	r17,r5
  809818:	003f9006 	br	80965c <__alt_data_end+0xff80965c>

0080981c <__pow5mult>:
  80981c:	defffa04 	addi	sp,sp,-24
  809820:	dcc00315 	stw	r19,12(sp)
  809824:	dc800215 	stw	r18,8(sp)
  809828:	dc000015 	stw	r16,0(sp)
  80982c:	dfc00515 	stw	ra,20(sp)
  809830:	dd000415 	stw	r20,16(sp)
  809834:	dc400115 	stw	r17,4(sp)
  809838:	308000cc 	andi	r2,r6,3
  80983c:	3021883a 	mov	r16,r6
  809840:	2027883a 	mov	r19,r4
  809844:	2825883a 	mov	r18,r5
  809848:	10002e1e 	bne	r2,zero,809904 <__pow5mult+0xe8>
  80984c:	8021d0ba 	srai	r16,r16,2
  809850:	80001a26 	beq	r16,zero,8098bc <__pow5mult+0xa0>
  809854:	9c401217 	ldw	r17,72(r19)
  809858:	8800061e 	bne	r17,zero,809874 <__pow5mult+0x58>
  80985c:	00003406 	br	809930 <__pow5mult+0x114>
  809860:	8021d07a 	srai	r16,r16,1
  809864:	80001526 	beq	r16,zero,8098bc <__pow5mult+0xa0>
  809868:	88800017 	ldw	r2,0(r17)
  80986c:	10001c26 	beq	r2,zero,8098e0 <__pow5mult+0xc4>
  809870:	1023883a 	mov	r17,r2
  809874:	80c0004c 	andi	r3,r16,1
  809878:	183ff926 	beq	r3,zero,809860 <__alt_data_end+0xff809860>
  80987c:	900b883a 	mov	r5,r18
  809880:	880d883a 	mov	r6,r17
  809884:	9809883a 	mov	r4,r19
  809888:	08096200 	call	809620 <__multiply>
  80988c:	90001b26 	beq	r18,zero,8098fc <__pow5mult+0xe0>
  809890:	91c00117 	ldw	r7,4(r18)
  809894:	98c01317 	ldw	r3,76(r19)
  809898:	8021d07a 	srai	r16,r16,1
  80989c:	39cf883a 	add	r7,r7,r7
  8098a0:	39cf883a 	add	r7,r7,r7
  8098a4:	19c7883a 	add	r3,r3,r7
  8098a8:	19000017 	ldw	r4,0(r3)
  8098ac:	91000015 	stw	r4,0(r18)
  8098b0:	1c800015 	stw	r18,0(r3)
  8098b4:	1025883a 	mov	r18,r2
  8098b8:	803feb1e 	bne	r16,zero,809868 <__alt_data_end+0xff809868>
  8098bc:	9005883a 	mov	r2,r18
  8098c0:	dfc00517 	ldw	ra,20(sp)
  8098c4:	dd000417 	ldw	r20,16(sp)
  8098c8:	dcc00317 	ldw	r19,12(sp)
  8098cc:	dc800217 	ldw	r18,8(sp)
  8098d0:	dc400117 	ldw	r17,4(sp)
  8098d4:	dc000017 	ldw	r16,0(sp)
  8098d8:	dec00604 	addi	sp,sp,24
  8098dc:	f800283a 	ret
  8098e0:	9809883a 	mov	r4,r19
  8098e4:	880b883a 	mov	r5,r17
  8098e8:	880d883a 	mov	r6,r17
  8098ec:	08096200 	call	809620 <__multiply>
  8098f0:	88800015 	stw	r2,0(r17)
  8098f4:	10000015 	stw	zero,0(r2)
  8098f8:	003fdd06 	br	809870 <__alt_data_end+0xff809870>
  8098fc:	1025883a 	mov	r18,r2
  809900:	003fd706 	br	809860 <__alt_data_end+0xff809860>
  809904:	10bfffc4 	addi	r2,r2,-1
  809908:	1085883a 	add	r2,r2,r2
  80990c:	00c020b4 	movhi	r3,130
  809910:	18ee8104 	addi	r3,r3,-17916
  809914:	1085883a 	add	r2,r2,r2
  809918:	1885883a 	add	r2,r3,r2
  80991c:	11800017 	ldw	r6,0(r2)
  809920:	000f883a 	mov	r7,zero
  809924:	08092a80 	call	8092a8 <__multadd>
  809928:	1025883a 	mov	r18,r2
  80992c:	003fc706 	br	80984c <__alt_data_end+0xff80984c>
  809930:	05000044 	movi	r20,1
  809934:	9809883a 	mov	r4,r19
  809938:	a00b883a 	mov	r5,r20
  80993c:	08091d80 	call	8091d8 <_Balloc>
  809940:	1023883a 	mov	r17,r2
  809944:	00809c44 	movi	r2,625
  809948:	88800515 	stw	r2,20(r17)
  80994c:	8d000415 	stw	r20,16(r17)
  809950:	9c401215 	stw	r17,72(r19)
  809954:	88000015 	stw	zero,0(r17)
  809958:	003fc606 	br	809874 <__alt_data_end+0xff809874>

0080995c <__lshift>:
  80995c:	defff904 	addi	sp,sp,-28
  809960:	dd000415 	stw	r20,16(sp)
  809964:	dcc00315 	stw	r19,12(sp)
  809968:	3029d17a 	srai	r20,r6,5
  80996c:	2cc00417 	ldw	r19,16(r5)
  809970:	28800217 	ldw	r2,8(r5)
  809974:	dd400515 	stw	r21,20(sp)
  809978:	a4e7883a 	add	r19,r20,r19
  80997c:	dc800215 	stw	r18,8(sp)
  809980:	dc400115 	stw	r17,4(sp)
  809984:	dc000015 	stw	r16,0(sp)
  809988:	dfc00615 	stw	ra,24(sp)
  80998c:	9c000044 	addi	r16,r19,1
  809990:	2823883a 	mov	r17,r5
  809994:	302b883a 	mov	r21,r6
  809998:	2025883a 	mov	r18,r4
  80999c:	29400117 	ldw	r5,4(r5)
  8099a0:	1400030e 	bge	r2,r16,8099b0 <__lshift+0x54>
  8099a4:	1085883a 	add	r2,r2,r2
  8099a8:	29400044 	addi	r5,r5,1
  8099ac:	143ffd16 	blt	r2,r16,8099a4 <__alt_data_end+0xff8099a4>
  8099b0:	9009883a 	mov	r4,r18
  8099b4:	08091d80 	call	8091d8 <_Balloc>
  8099b8:	11c00504 	addi	r7,r2,20
  8099bc:	0500090e 	bge	zero,r20,8099e4 <__lshift+0x88>
  8099c0:	3811883a 	mov	r8,r7
  8099c4:	0007883a 	mov	r3,zero
  8099c8:	40000015 	stw	zero,0(r8)
  8099cc:	18c00044 	addi	r3,r3,1
  8099d0:	42000104 	addi	r8,r8,4
  8099d4:	1d3ffc1e 	bne	r3,r20,8099c8 <__alt_data_end+0xff8099c8>
  8099d8:	18c7883a 	add	r3,r3,r3
  8099dc:	18c7883a 	add	r3,r3,r3
  8099e0:	38cf883a 	add	r7,r7,r3
  8099e4:	89000417 	ldw	r4,16(r17)
  8099e8:	88c00504 	addi	r3,r17,20
  8099ec:	a98007cc 	andi	r6,r21,31
  8099f0:	2109883a 	add	r4,r4,r4
  8099f4:	2109883a 	add	r4,r4,r4
  8099f8:	1909883a 	add	r4,r3,r4
  8099fc:	30002326 	beq	r6,zero,809a8c <__lshift+0x130>
  809a00:	01400804 	movi	r5,32
  809a04:	298bc83a 	sub	r5,r5,r6
  809a08:	0013883a 	mov	r9,zero
  809a0c:	1a000017 	ldw	r8,0(r3)
  809a10:	3815883a 	mov	r10,r7
  809a14:	39c00104 	addi	r7,r7,4
  809a18:	4190983a 	sll	r8,r8,r6
  809a1c:	18c00104 	addi	r3,r3,4
  809a20:	4a10b03a 	or	r8,r9,r8
  809a24:	3a3fff15 	stw	r8,-4(r7)
  809a28:	1a3fff17 	ldw	r8,-4(r3)
  809a2c:	4152d83a 	srl	r9,r8,r5
  809a30:	193ff636 	bltu	r3,r4,809a0c <__alt_data_end+0xff809a0c>
  809a34:	52400115 	stw	r9,4(r10)
  809a38:	48001a1e 	bne	r9,zero,809aa4 <__lshift+0x148>
  809a3c:	843fffc4 	addi	r16,r16,-1
  809a40:	14000415 	stw	r16,16(r2)
  809a44:	88000826 	beq	r17,zero,809a68 <__lshift+0x10c>
  809a48:	89000117 	ldw	r4,4(r17)
  809a4c:	90c01317 	ldw	r3,76(r18)
  809a50:	2109883a 	add	r4,r4,r4
  809a54:	2109883a 	add	r4,r4,r4
  809a58:	1907883a 	add	r3,r3,r4
  809a5c:	19000017 	ldw	r4,0(r3)
  809a60:	89000015 	stw	r4,0(r17)
  809a64:	1c400015 	stw	r17,0(r3)
  809a68:	dfc00617 	ldw	ra,24(sp)
  809a6c:	dd400517 	ldw	r21,20(sp)
  809a70:	dd000417 	ldw	r20,16(sp)
  809a74:	dcc00317 	ldw	r19,12(sp)
  809a78:	dc800217 	ldw	r18,8(sp)
  809a7c:	dc400117 	ldw	r17,4(sp)
  809a80:	dc000017 	ldw	r16,0(sp)
  809a84:	dec00704 	addi	sp,sp,28
  809a88:	f800283a 	ret
  809a8c:	19400017 	ldw	r5,0(r3)
  809a90:	39c00104 	addi	r7,r7,4
  809a94:	18c00104 	addi	r3,r3,4
  809a98:	397fff15 	stw	r5,-4(r7)
  809a9c:	193ffb36 	bltu	r3,r4,809a8c <__alt_data_end+0xff809a8c>
  809aa0:	003fe606 	br	809a3c <__alt_data_end+0xff809a3c>
  809aa4:	9c000084 	addi	r16,r19,2
  809aa8:	003fe406 	br	809a3c <__alt_data_end+0xff809a3c>

00809aac <__mcmp>:
  809aac:	20800417 	ldw	r2,16(r4)
  809ab0:	28c00417 	ldw	r3,16(r5)
  809ab4:	10c5c83a 	sub	r2,r2,r3
  809ab8:	1000111e 	bne	r2,zero,809b00 <__mcmp+0x54>
  809abc:	18c7883a 	add	r3,r3,r3
  809ac0:	18c7883a 	add	r3,r3,r3
  809ac4:	21000504 	addi	r4,r4,20
  809ac8:	29400504 	addi	r5,r5,20
  809acc:	20c5883a 	add	r2,r4,r3
  809ad0:	28cb883a 	add	r5,r5,r3
  809ad4:	00000106 	br	809adc <__mcmp+0x30>
  809ad8:	20800a2e 	bgeu	r4,r2,809b04 <__mcmp+0x58>
  809adc:	10bfff04 	addi	r2,r2,-4
  809ae0:	297fff04 	addi	r5,r5,-4
  809ae4:	11800017 	ldw	r6,0(r2)
  809ae8:	28c00017 	ldw	r3,0(r5)
  809aec:	30fffa26 	beq	r6,r3,809ad8 <__alt_data_end+0xff809ad8>
  809af0:	30c00236 	bltu	r6,r3,809afc <__mcmp+0x50>
  809af4:	00800044 	movi	r2,1
  809af8:	f800283a 	ret
  809afc:	00bfffc4 	movi	r2,-1
  809b00:	f800283a 	ret
  809b04:	0005883a 	mov	r2,zero
  809b08:	f800283a 	ret

00809b0c <__mdiff>:
  809b0c:	defffb04 	addi	sp,sp,-20
  809b10:	dc000015 	stw	r16,0(sp)
  809b14:	2821883a 	mov	r16,r5
  809b18:	dcc00315 	stw	r19,12(sp)
  809b1c:	300b883a 	mov	r5,r6
  809b20:	2027883a 	mov	r19,r4
  809b24:	8009883a 	mov	r4,r16
  809b28:	dc800215 	stw	r18,8(sp)
  809b2c:	dfc00415 	stw	ra,16(sp)
  809b30:	dc400115 	stw	r17,4(sp)
  809b34:	3025883a 	mov	r18,r6
  809b38:	0809aac0 	call	809aac <__mcmp>
  809b3c:	10005226 	beq	r2,zero,809c88 <__mdiff+0x17c>
  809b40:	10004c16 	blt	r2,zero,809c74 <__mdiff+0x168>
  809b44:	0023883a 	mov	r17,zero
  809b48:	81400117 	ldw	r5,4(r16)
  809b4c:	9809883a 	mov	r4,r19
  809b50:	08091d80 	call	8091d8 <_Balloc>
  809b54:	83400417 	ldw	r13,16(r16)
  809b58:	93800417 	ldw	r14,16(r18)
  809b5c:	81000504 	addi	r4,r16,20
  809b60:	6b59883a 	add	r12,r13,r13
  809b64:	739d883a 	add	r14,r14,r14
  809b68:	6319883a 	add	r12,r12,r12
  809b6c:	91800504 	addi	r6,r18,20
  809b70:	739d883a 	add	r14,r14,r14
  809b74:	14400315 	stw	r17,12(r2)
  809b78:	2319883a 	add	r12,r4,r12
  809b7c:	339d883a 	add	r14,r6,r14
  809b80:	12400504 	addi	r9,r2,20
  809b84:	0007883a 	mov	r3,zero
  809b88:	22000017 	ldw	r8,0(r4)
  809b8c:	32800017 	ldw	r10,0(r6)
  809b90:	4ac00104 	addi	r11,r9,4
  809b94:	41ffffcc 	andi	r7,r8,65535
  809b98:	38c7883a 	add	r3,r7,r3
  809b9c:	51ffffcc 	andi	r7,r10,65535
  809ba0:	19cfc83a 	sub	r7,r3,r7
  809ba4:	4010d43a 	srli	r8,r8,16
  809ba8:	5014d43a 	srli	r10,r10,16
  809bac:	3807d43a 	srai	r3,r7,16
  809bb0:	39ffffcc 	andi	r7,r7,65535
  809bb4:	4291c83a 	sub	r8,r8,r10
  809bb8:	40c7883a 	add	r3,r8,r3
  809bbc:	1810943a 	slli	r8,r3,16
  809bc0:	31800104 	addi	r6,r6,4
  809bc4:	21000104 	addi	r4,r4,4
  809bc8:	41ceb03a 	or	r7,r8,r7
  809bcc:	49c00015 	stw	r7,0(r9)
  809bd0:	1807d43a 	srai	r3,r3,16
  809bd4:	580b883a 	mov	r5,r11
  809bd8:	5813883a 	mov	r9,r11
  809bdc:	33bfea36 	bltu	r6,r14,809b88 <__alt_data_end+0xff809b88>
  809be0:	2011883a 	mov	r8,r4
  809be4:	2300152e 	bgeu	r4,r12,809c3c <__mdiff+0x130>
  809be8:	21400017 	ldw	r5,0(r4)
  809bec:	4a400104 	addi	r9,r9,4
  809bf0:	21000104 	addi	r4,r4,4
  809bf4:	29ffffcc 	andi	r7,r5,65535
  809bf8:	38c7883a 	add	r3,r7,r3
  809bfc:	280ad43a 	srli	r5,r5,16
  809c00:	180dd43a 	srai	r6,r3,16
  809c04:	19ffffcc 	andi	r7,r3,65535
  809c08:	3147883a 	add	r3,r6,r5
  809c0c:	180a943a 	slli	r5,r3,16
  809c10:	1807d43a 	srai	r3,r3,16
  809c14:	29ceb03a 	or	r7,r5,r7
  809c18:	49ffff15 	stw	r7,-4(r9)
  809c1c:	233ff236 	bltu	r4,r12,809be8 <__alt_data_end+0xff809be8>
  809c20:	0206303a 	nor	r3,zero,r8
  809c24:	1b07883a 	add	r3,r3,r12
  809c28:	1806d0ba 	srli	r3,r3,2
  809c2c:	18c00044 	addi	r3,r3,1
  809c30:	18c7883a 	add	r3,r3,r3
  809c34:	18c7883a 	add	r3,r3,r3
  809c38:	58cb883a 	add	r5,r11,r3
  809c3c:	28ffff04 	addi	r3,r5,-4
  809c40:	3800041e 	bne	r7,zero,809c54 <__mdiff+0x148>
  809c44:	18ffff04 	addi	r3,r3,-4
  809c48:	19000017 	ldw	r4,0(r3)
  809c4c:	6b7fffc4 	addi	r13,r13,-1
  809c50:	203ffc26 	beq	r4,zero,809c44 <__alt_data_end+0xff809c44>
  809c54:	13400415 	stw	r13,16(r2)
  809c58:	dfc00417 	ldw	ra,16(sp)
  809c5c:	dcc00317 	ldw	r19,12(sp)
  809c60:	dc800217 	ldw	r18,8(sp)
  809c64:	dc400117 	ldw	r17,4(sp)
  809c68:	dc000017 	ldw	r16,0(sp)
  809c6c:	dec00504 	addi	sp,sp,20
  809c70:	f800283a 	ret
  809c74:	8005883a 	mov	r2,r16
  809c78:	04400044 	movi	r17,1
  809c7c:	9021883a 	mov	r16,r18
  809c80:	1025883a 	mov	r18,r2
  809c84:	003fb006 	br	809b48 <__alt_data_end+0xff809b48>
  809c88:	9809883a 	mov	r4,r19
  809c8c:	000b883a 	mov	r5,zero
  809c90:	08091d80 	call	8091d8 <_Balloc>
  809c94:	00c00044 	movi	r3,1
  809c98:	10c00415 	stw	r3,16(r2)
  809c9c:	10000515 	stw	zero,20(r2)
  809ca0:	003fed06 	br	809c58 <__alt_data_end+0xff809c58>

00809ca4 <__ulp>:
  809ca4:	295ffc2c 	andhi	r5,r5,32752
  809ca8:	00bf3034 	movhi	r2,64704
  809cac:	2887883a 	add	r3,r5,r2
  809cb0:	00c0020e 	bge	zero,r3,809cbc <__ulp+0x18>
  809cb4:	0005883a 	mov	r2,zero
  809cb8:	f800283a 	ret
  809cbc:	00c7c83a 	sub	r3,zero,r3
  809cc0:	180bd53a 	srai	r5,r3,20
  809cc4:	008004c4 	movi	r2,19
  809cc8:	11400a0e 	bge	r2,r5,809cf4 <__ulp+0x50>
  809ccc:	00800c84 	movi	r2,50
  809cd0:	0007883a 	mov	r3,zero
  809cd4:	11400516 	blt	r2,r5,809cec <__ulp+0x48>
  809cd8:	00800cc4 	movi	r2,51
  809cdc:	114bc83a 	sub	r5,r2,r5
  809ce0:	00800044 	movi	r2,1
  809ce4:	1144983a 	sll	r2,r2,r5
  809ce8:	f800283a 	ret
  809cec:	00800044 	movi	r2,1
  809cf0:	f800283a 	ret
  809cf4:	00800234 	movhi	r2,8
  809cf8:	1147d83a 	sra	r3,r2,r5
  809cfc:	0005883a 	mov	r2,zero
  809d00:	f800283a 	ret

00809d04 <__b2d>:
  809d04:	defffa04 	addi	sp,sp,-24
  809d08:	dc000015 	stw	r16,0(sp)
  809d0c:	24000417 	ldw	r16,16(r4)
  809d10:	dc400115 	stw	r17,4(sp)
  809d14:	24400504 	addi	r17,r4,20
  809d18:	8421883a 	add	r16,r16,r16
  809d1c:	8421883a 	add	r16,r16,r16
  809d20:	8c21883a 	add	r16,r17,r16
  809d24:	dc800215 	stw	r18,8(sp)
  809d28:	84bfff17 	ldw	r18,-4(r16)
  809d2c:	dd000415 	stw	r20,16(sp)
  809d30:	dcc00315 	stw	r19,12(sp)
  809d34:	9009883a 	mov	r4,r18
  809d38:	2829883a 	mov	r20,r5
  809d3c:	dfc00515 	stw	ra,20(sp)
  809d40:	08094cc0 	call	8094cc <__hi0bits>
  809d44:	00c00804 	movi	r3,32
  809d48:	1887c83a 	sub	r3,r3,r2
  809d4c:	a0c00015 	stw	r3,0(r20)
  809d50:	00c00284 	movi	r3,10
  809d54:	84ffff04 	addi	r19,r16,-4
  809d58:	18801216 	blt	r3,r2,809da4 <__b2d+0xa0>
  809d5c:	014002c4 	movi	r5,11
  809d60:	2889c83a 	sub	r4,r5,r2
  809d64:	9106d83a 	srl	r3,r18,r4
  809d68:	18cffc34 	orhi	r3,r3,16368
  809d6c:	8cc0282e 	bgeu	r17,r19,809e10 <__b2d+0x10c>
  809d70:	817ffe17 	ldw	r5,-8(r16)
  809d74:	290ad83a 	srl	r5,r5,r4
  809d78:	10800544 	addi	r2,r2,21
  809d7c:	9084983a 	sll	r2,r18,r2
  809d80:	2884b03a 	or	r2,r5,r2
  809d84:	dfc00517 	ldw	ra,20(sp)
  809d88:	dd000417 	ldw	r20,16(sp)
  809d8c:	dcc00317 	ldw	r19,12(sp)
  809d90:	dc800217 	ldw	r18,8(sp)
  809d94:	dc400117 	ldw	r17,4(sp)
  809d98:	dc000017 	ldw	r16,0(sp)
  809d9c:	dec00604 	addi	sp,sp,24
  809da0:	f800283a 	ret
  809da4:	113ffd44 	addi	r4,r2,-11
  809da8:	8cc00f2e 	bgeu	r17,r19,809de8 <__b2d+0xe4>
  809dac:	81bffe04 	addi	r6,r16,-8
  809db0:	817ffe17 	ldw	r5,-8(r16)
  809db4:	20001326 	beq	r4,zero,809e04 <__b2d+0x100>
  809db8:	00c00ac4 	movi	r3,43
  809dbc:	1885c83a 	sub	r2,r3,r2
  809dc0:	2886d83a 	srl	r3,r5,r2
  809dc4:	9124983a 	sll	r18,r18,r4
  809dc8:	90e4b03a 	or	r18,r18,r3
  809dcc:	90cffc34 	orhi	r3,r18,16368
  809dd0:	8980112e 	bgeu	r17,r6,809e18 <__b2d+0x114>
  809dd4:	81bffd17 	ldw	r6,-12(r16)
  809dd8:	308cd83a 	srl	r6,r6,r2
  809ddc:	2904983a 	sll	r2,r5,r4
  809de0:	1184b03a 	or	r2,r2,r6
  809de4:	003fe706 	br	809d84 <__alt_data_end+0xff809d84>
  809de8:	20000526 	beq	r4,zero,809e00 <__b2d+0xfc>
  809dec:	9124983a 	sll	r18,r18,r4
  809df0:	000d883a 	mov	r6,zero
  809df4:	000b883a 	mov	r5,zero
  809df8:	90cffc34 	orhi	r3,r18,16368
  809dfc:	003ff706 	br	809ddc <__alt_data_end+0xff809ddc>
  809e00:	000b883a 	mov	r5,zero
  809e04:	90cffc34 	orhi	r3,r18,16368
  809e08:	2805883a 	mov	r2,r5
  809e0c:	003fdd06 	br	809d84 <__alt_data_end+0xff809d84>
  809e10:	000b883a 	mov	r5,zero
  809e14:	003fd806 	br	809d78 <__alt_data_end+0xff809d78>
  809e18:	000d883a 	mov	r6,zero
  809e1c:	003fef06 	br	809ddc <__alt_data_end+0xff809ddc>

00809e20 <__d2b>:
  809e20:	defff704 	addi	sp,sp,-36
  809e24:	dc000215 	stw	r16,8(sp)
  809e28:	3021883a 	mov	r16,r6
  809e2c:	dc400315 	stw	r17,12(sp)
  809e30:	8022907a 	slli	r17,r16,1
  809e34:	dd400715 	stw	r21,28(sp)
  809e38:	282b883a 	mov	r21,r5
  809e3c:	01400044 	movi	r5,1
  809e40:	dd000615 	stw	r20,24(sp)
  809e44:	dcc00515 	stw	r19,20(sp)
  809e48:	dc800415 	stw	r18,16(sp)
  809e4c:	dfc00815 	stw	ra,32(sp)
  809e50:	3829883a 	mov	r20,r7
  809e54:	dc800917 	ldw	r18,36(sp)
  809e58:	8822d57a 	srli	r17,r17,21
  809e5c:	08091d80 	call	8091d8 <_Balloc>
  809e60:	1027883a 	mov	r19,r2
  809e64:	00800434 	movhi	r2,16
  809e68:	10bfffc4 	addi	r2,r2,-1
  809e6c:	808c703a 	and	r6,r16,r2
  809e70:	88000126 	beq	r17,zero,809e78 <__d2b+0x58>
  809e74:	31800434 	orhi	r6,r6,16
  809e78:	d9800015 	stw	r6,0(sp)
  809e7c:	a8001f26 	beq	r21,zero,809efc <__d2b+0xdc>
  809e80:	d9000104 	addi	r4,sp,4
  809e84:	dd400115 	stw	r21,4(sp)
  809e88:	08095340 	call	809534 <__lo0bits>
  809e8c:	d8c00017 	ldw	r3,0(sp)
  809e90:	1000291e 	bne	r2,zero,809f38 <__d2b+0x118>
  809e94:	d9000117 	ldw	r4,4(sp)
  809e98:	99000515 	stw	r4,20(r19)
  809e9c:	1820c03a 	cmpne	r16,r3,zero
  809ea0:	84000044 	addi	r16,r16,1
  809ea4:	98c00615 	stw	r3,24(r19)
  809ea8:	9c000415 	stw	r16,16(r19)
  809eac:	88001b1e 	bne	r17,zero,809f1c <__d2b+0xfc>
  809eb0:	800690ba 	slli	r3,r16,2
  809eb4:	10bef384 	addi	r2,r2,-1074
  809eb8:	a0800015 	stw	r2,0(r20)
  809ebc:	98c5883a 	add	r2,r19,r3
  809ec0:	11000417 	ldw	r4,16(r2)
  809ec4:	8020917a 	slli	r16,r16,5
  809ec8:	08094cc0 	call	8094cc <__hi0bits>
  809ecc:	8085c83a 	sub	r2,r16,r2
  809ed0:	90800015 	stw	r2,0(r18)
  809ed4:	9805883a 	mov	r2,r19
  809ed8:	dfc00817 	ldw	ra,32(sp)
  809edc:	dd400717 	ldw	r21,28(sp)
  809ee0:	dd000617 	ldw	r20,24(sp)
  809ee4:	dcc00517 	ldw	r19,20(sp)
  809ee8:	dc800417 	ldw	r18,16(sp)
  809eec:	dc400317 	ldw	r17,12(sp)
  809ef0:	dc000217 	ldw	r16,8(sp)
  809ef4:	dec00904 	addi	sp,sp,36
  809ef8:	f800283a 	ret
  809efc:	d809883a 	mov	r4,sp
  809f00:	08095340 	call	809534 <__lo0bits>
  809f04:	d8c00017 	ldw	r3,0(sp)
  809f08:	04000044 	movi	r16,1
  809f0c:	9c000415 	stw	r16,16(r19)
  809f10:	98c00515 	stw	r3,20(r19)
  809f14:	10800804 	addi	r2,r2,32
  809f18:	883fe526 	beq	r17,zero,809eb0 <__alt_data_end+0xff809eb0>
  809f1c:	8c7ef344 	addi	r17,r17,-1075
  809f20:	88a3883a 	add	r17,r17,r2
  809f24:	00c00d44 	movi	r3,53
  809f28:	a4400015 	stw	r17,0(r20)
  809f2c:	1885c83a 	sub	r2,r3,r2
  809f30:	90800015 	stw	r2,0(r18)
  809f34:	003fe706 	br	809ed4 <__alt_data_end+0xff809ed4>
  809f38:	01000804 	movi	r4,32
  809f3c:	2089c83a 	sub	r4,r4,r2
  809f40:	1908983a 	sll	r4,r3,r4
  809f44:	d9400117 	ldw	r5,4(sp)
  809f48:	1886d83a 	srl	r3,r3,r2
  809f4c:	2148b03a 	or	r4,r4,r5
  809f50:	99000515 	stw	r4,20(r19)
  809f54:	d8c00015 	stw	r3,0(sp)
  809f58:	003fd006 	br	809e9c <__alt_data_end+0xff809e9c>

00809f5c <__ratio>:
  809f5c:	defff904 	addi	sp,sp,-28
  809f60:	dc400315 	stw	r17,12(sp)
  809f64:	2823883a 	mov	r17,r5
  809f68:	d9400104 	addi	r5,sp,4
  809f6c:	dfc00615 	stw	ra,24(sp)
  809f70:	dcc00515 	stw	r19,20(sp)
  809f74:	dc800415 	stw	r18,16(sp)
  809f78:	2027883a 	mov	r19,r4
  809f7c:	dc000215 	stw	r16,8(sp)
  809f80:	0809d040 	call	809d04 <__b2d>
  809f84:	8809883a 	mov	r4,r17
  809f88:	d80b883a 	mov	r5,sp
  809f8c:	1025883a 	mov	r18,r2
  809f90:	1821883a 	mov	r16,r3
  809f94:	0809d040 	call	809d04 <__b2d>
  809f98:	8a400417 	ldw	r9,16(r17)
  809f9c:	9a000417 	ldw	r8,16(r19)
  809fa0:	100d883a 	mov	r6,r2
  809fa4:	d8800017 	ldw	r2,0(sp)
  809fa8:	4251c83a 	sub	r8,r8,r9
  809fac:	4012917a 	slli	r9,r8,5
  809fb0:	da000117 	ldw	r8,4(sp)
  809fb4:	4091c83a 	sub	r8,r8,r2
  809fb8:	4251883a 	add	r8,r8,r9
  809fbc:	02000d0e 	bge	zero,r8,809ff4 <__ratio+0x98>
  809fc0:	4010953a 	slli	r8,r8,20
  809fc4:	4421883a 	add	r16,r8,r16
  809fc8:	9009883a 	mov	r4,r18
  809fcc:	800b883a 	mov	r5,r16
  809fd0:	180f883a 	mov	r7,r3
  809fd4:	081537c0 	call	81537c <__divdf3>
  809fd8:	dfc00617 	ldw	ra,24(sp)
  809fdc:	dcc00517 	ldw	r19,20(sp)
  809fe0:	dc800417 	ldw	r18,16(sp)
  809fe4:	dc400317 	ldw	r17,12(sp)
  809fe8:	dc000217 	ldw	r16,8(sp)
  809fec:	dec00704 	addi	sp,sp,28
  809ff0:	f800283a 	ret
  809ff4:	4010953a 	slli	r8,r8,20
  809ff8:	1a07c83a 	sub	r3,r3,r8
  809ffc:	003ff206 	br	809fc8 <__alt_data_end+0xff809fc8>

0080a000 <_mprec_log10>:
  80a000:	defffe04 	addi	sp,sp,-8
  80a004:	dc000015 	stw	r16,0(sp)
  80a008:	dfc00115 	stw	ra,4(sp)
  80a00c:	008005c4 	movi	r2,23
  80a010:	2021883a 	mov	r16,r4
  80a014:	11000d0e 	bge	r2,r4,80a04c <_mprec_log10+0x4c>
  80a018:	0005883a 	mov	r2,zero
  80a01c:	00cffc34 	movhi	r3,16368
  80a020:	843fffc4 	addi	r16,r16,-1
  80a024:	1009883a 	mov	r4,r2
  80a028:	180b883a 	mov	r5,r3
  80a02c:	000d883a 	mov	r6,zero
  80a030:	01d00934 	movhi	r7,16420
  80a034:	0815e8c0 	call	815e8c <__muldf3>
  80a038:	803ff91e 	bne	r16,zero,80a020 <__alt_data_end+0xff80a020>
  80a03c:	dfc00117 	ldw	ra,4(sp)
  80a040:	dc000017 	ldw	r16,0(sp)
  80a044:	dec00204 	addi	sp,sp,8
  80a048:	f800283a 	ret
  80a04c:	202090fa 	slli	r16,r4,3
  80a050:	008020b4 	movhi	r2,130
  80a054:	10ae9804 	addi	r2,r2,-17824
  80a058:	1421883a 	add	r16,r2,r16
  80a05c:	80800017 	ldw	r2,0(r16)
  80a060:	80c00117 	ldw	r3,4(r16)
  80a064:	dfc00117 	ldw	ra,4(sp)
  80a068:	dc000017 	ldw	r16,0(sp)
  80a06c:	dec00204 	addi	sp,sp,8
  80a070:	f800283a 	ret

0080a074 <__copybits>:
  80a074:	297fffc4 	addi	r5,r5,-1
  80a078:	280fd17a 	srai	r7,r5,5
  80a07c:	30c00417 	ldw	r3,16(r6)
  80a080:	30800504 	addi	r2,r6,20
  80a084:	39c00044 	addi	r7,r7,1
  80a088:	18c7883a 	add	r3,r3,r3
  80a08c:	39cf883a 	add	r7,r7,r7
  80a090:	18c7883a 	add	r3,r3,r3
  80a094:	39cf883a 	add	r7,r7,r7
  80a098:	10c7883a 	add	r3,r2,r3
  80a09c:	21cf883a 	add	r7,r4,r7
  80a0a0:	10c00d2e 	bgeu	r2,r3,80a0d8 <__copybits+0x64>
  80a0a4:	200b883a 	mov	r5,r4
  80a0a8:	12000017 	ldw	r8,0(r2)
  80a0ac:	29400104 	addi	r5,r5,4
  80a0b0:	10800104 	addi	r2,r2,4
  80a0b4:	2a3fff15 	stw	r8,-4(r5)
  80a0b8:	10fffb36 	bltu	r2,r3,80a0a8 <__alt_data_end+0xff80a0a8>
  80a0bc:	1985c83a 	sub	r2,r3,r6
  80a0c0:	10bffac4 	addi	r2,r2,-21
  80a0c4:	1004d0ba 	srli	r2,r2,2
  80a0c8:	10800044 	addi	r2,r2,1
  80a0cc:	1085883a 	add	r2,r2,r2
  80a0d0:	1085883a 	add	r2,r2,r2
  80a0d4:	2089883a 	add	r4,r4,r2
  80a0d8:	21c0032e 	bgeu	r4,r7,80a0e8 <__copybits+0x74>
  80a0dc:	20000015 	stw	zero,0(r4)
  80a0e0:	21000104 	addi	r4,r4,4
  80a0e4:	21fffd36 	bltu	r4,r7,80a0dc <__alt_data_end+0xff80a0dc>
  80a0e8:	f800283a 	ret

0080a0ec <__any_on>:
  80a0ec:	20c00417 	ldw	r3,16(r4)
  80a0f0:	2805d17a 	srai	r2,r5,5
  80a0f4:	21000504 	addi	r4,r4,20
  80a0f8:	18800d0e 	bge	r3,r2,80a130 <__any_on+0x44>
  80a0fc:	18c7883a 	add	r3,r3,r3
  80a100:	18c7883a 	add	r3,r3,r3
  80a104:	20c7883a 	add	r3,r4,r3
  80a108:	20c0192e 	bgeu	r4,r3,80a170 <__any_on+0x84>
  80a10c:	18bfff17 	ldw	r2,-4(r3)
  80a110:	18ffff04 	addi	r3,r3,-4
  80a114:	1000041e 	bne	r2,zero,80a128 <__any_on+0x3c>
  80a118:	20c0142e 	bgeu	r4,r3,80a16c <__any_on+0x80>
  80a11c:	18ffff04 	addi	r3,r3,-4
  80a120:	19400017 	ldw	r5,0(r3)
  80a124:	283ffc26 	beq	r5,zero,80a118 <__alt_data_end+0xff80a118>
  80a128:	00800044 	movi	r2,1
  80a12c:	f800283a 	ret
  80a130:	10c00a0e 	bge	r2,r3,80a15c <__any_on+0x70>
  80a134:	1085883a 	add	r2,r2,r2
  80a138:	1085883a 	add	r2,r2,r2
  80a13c:	294007cc 	andi	r5,r5,31
  80a140:	2087883a 	add	r3,r4,r2
  80a144:	283ff026 	beq	r5,zero,80a108 <__alt_data_end+0xff80a108>
  80a148:	19800017 	ldw	r6,0(r3)
  80a14c:	3144d83a 	srl	r2,r6,r5
  80a150:	114a983a 	sll	r5,r2,r5
  80a154:	29bff41e 	bne	r5,r6,80a128 <__alt_data_end+0xff80a128>
  80a158:	003feb06 	br	80a108 <__alt_data_end+0xff80a108>
  80a15c:	1085883a 	add	r2,r2,r2
  80a160:	1085883a 	add	r2,r2,r2
  80a164:	2087883a 	add	r3,r4,r2
  80a168:	003fe706 	br	80a108 <__alt_data_end+0xff80a108>
  80a16c:	f800283a 	ret
  80a170:	0005883a 	mov	r2,zero
  80a174:	f800283a 	ret

0080a178 <_putc_r>:
  80a178:	defffc04 	addi	sp,sp,-16
  80a17c:	dc000215 	stw	r16,8(sp)
  80a180:	dfc00315 	stw	ra,12(sp)
  80a184:	2021883a 	mov	r16,r4
  80a188:	20000226 	beq	r4,zero,80a194 <_putc_r+0x1c>
  80a18c:	20800e17 	ldw	r2,56(r4)
  80a190:	10001b26 	beq	r2,zero,80a200 <_putc_r+0x88>
  80a194:	30800217 	ldw	r2,8(r6)
  80a198:	10bfffc4 	addi	r2,r2,-1
  80a19c:	30800215 	stw	r2,8(r6)
  80a1a0:	10000a16 	blt	r2,zero,80a1cc <_putc_r+0x54>
  80a1a4:	30800017 	ldw	r2,0(r6)
  80a1a8:	11400005 	stb	r5,0(r2)
  80a1ac:	30800017 	ldw	r2,0(r6)
  80a1b0:	10c00044 	addi	r3,r2,1
  80a1b4:	30c00015 	stw	r3,0(r6)
  80a1b8:	10800003 	ldbu	r2,0(r2)
  80a1bc:	dfc00317 	ldw	ra,12(sp)
  80a1c0:	dc000217 	ldw	r16,8(sp)
  80a1c4:	dec00404 	addi	sp,sp,16
  80a1c8:	f800283a 	ret
  80a1cc:	30c00617 	ldw	r3,24(r6)
  80a1d0:	10c00616 	blt	r2,r3,80a1ec <_putc_r+0x74>
  80a1d4:	30800017 	ldw	r2,0(r6)
  80a1d8:	00c00284 	movi	r3,10
  80a1dc:	11400005 	stb	r5,0(r2)
  80a1e0:	30800017 	ldw	r2,0(r6)
  80a1e4:	11400003 	ldbu	r5,0(r2)
  80a1e8:	28fff11e 	bne	r5,r3,80a1b0 <__alt_data_end+0xff80a1b0>
  80a1ec:	8009883a 	mov	r4,r16
  80a1f0:	dfc00317 	ldw	ra,12(sp)
  80a1f4:	dc000217 	ldw	r16,8(sp)
  80a1f8:	dec00404 	addi	sp,sp,16
  80a1fc:	08117681 	jmpi	811768 <__swbuf_r>
  80a200:	d9400015 	stw	r5,0(sp)
  80a204:	d9800115 	stw	r6,4(sp)
  80a208:	08012d00 	call	8012d0 <__sinit>
  80a20c:	d9800117 	ldw	r6,4(sp)
  80a210:	d9400017 	ldw	r5,0(sp)
  80a214:	003fdf06 	br	80a194 <__alt_data_end+0xff80a194>

0080a218 <putc>:
  80a218:	008020b4 	movhi	r2,130
  80a21c:	defffc04 	addi	sp,sp,-16
  80a220:	10b6e204 	addi	r2,r2,-9336
  80a224:	dc400115 	stw	r17,4(sp)
  80a228:	14400017 	ldw	r17,0(r2)
  80a22c:	dc800215 	stw	r18,8(sp)
  80a230:	dc000015 	stw	r16,0(sp)
  80a234:	dfc00315 	stw	ra,12(sp)
  80a238:	2025883a 	mov	r18,r4
  80a23c:	2821883a 	mov	r16,r5
  80a240:	88000226 	beq	r17,zero,80a24c <putc+0x34>
  80a244:	88800e17 	ldw	r2,56(r17)
  80a248:	10001a26 	beq	r2,zero,80a2b4 <putc+0x9c>
  80a24c:	80800217 	ldw	r2,8(r16)
  80a250:	10bfffc4 	addi	r2,r2,-1
  80a254:	80800215 	stw	r2,8(r16)
  80a258:	10000c16 	blt	r2,zero,80a28c <putc+0x74>
  80a25c:	80800017 	ldw	r2,0(r16)
  80a260:	14800005 	stb	r18,0(r2)
  80a264:	80800017 	ldw	r2,0(r16)
  80a268:	10c00044 	addi	r3,r2,1
  80a26c:	80c00015 	stw	r3,0(r16)
  80a270:	10800003 	ldbu	r2,0(r2)
  80a274:	dfc00317 	ldw	ra,12(sp)
  80a278:	dc800217 	ldw	r18,8(sp)
  80a27c:	dc400117 	ldw	r17,4(sp)
  80a280:	dc000017 	ldw	r16,0(sp)
  80a284:	dec00404 	addi	sp,sp,16
  80a288:	f800283a 	ret
  80a28c:	80c00617 	ldw	r3,24(r16)
  80a290:	10c00b16 	blt	r2,r3,80a2c0 <putc+0xa8>
  80a294:	80800017 	ldw	r2,0(r16)
  80a298:	00c00284 	movi	r3,10
  80a29c:	14800005 	stb	r18,0(r2)
  80a2a0:	80800017 	ldw	r2,0(r16)
  80a2a4:	11400003 	ldbu	r5,0(r2)
  80a2a8:	28ffef1e 	bne	r5,r3,80a268 <__alt_data_end+0xff80a268>
  80a2ac:	8809883a 	mov	r4,r17
  80a2b0:	00000506 	br	80a2c8 <putc+0xb0>
  80a2b4:	8809883a 	mov	r4,r17
  80a2b8:	08012d00 	call	8012d0 <__sinit>
  80a2bc:	003fe306 	br	80a24c <__alt_data_end+0xff80a24c>
  80a2c0:	8809883a 	mov	r4,r17
  80a2c4:	900b883a 	mov	r5,r18
  80a2c8:	800d883a 	mov	r6,r16
  80a2cc:	dfc00317 	ldw	ra,12(sp)
  80a2d0:	dc800217 	ldw	r18,8(sp)
  80a2d4:	dc400117 	ldw	r17,4(sp)
  80a2d8:	dc000017 	ldw	r16,0(sp)
  80a2dc:	dec00404 	addi	sp,sp,16
  80a2e0:	08117681 	jmpi	811768 <__swbuf_r>

0080a2e4 <_read_r>:
  80a2e4:	defffd04 	addi	sp,sp,-12
  80a2e8:	dc000015 	stw	r16,0(sp)
  80a2ec:	040020b4 	movhi	r16,130
  80a2f0:	dc400115 	stw	r17,4(sp)
  80a2f4:	843e4d04 	addi	r16,r16,-1740
  80a2f8:	2023883a 	mov	r17,r4
  80a2fc:	2809883a 	mov	r4,r5
  80a300:	300b883a 	mov	r5,r6
  80a304:	380d883a 	mov	r6,r7
  80a308:	dfc00215 	stw	ra,8(sp)
  80a30c:	80000015 	stw	zero,0(r16)
  80a310:	0817b3c0 	call	817b3c <read>
  80a314:	00ffffc4 	movi	r3,-1
  80a318:	10c00526 	beq	r2,r3,80a330 <_read_r+0x4c>
  80a31c:	dfc00217 	ldw	ra,8(sp)
  80a320:	dc400117 	ldw	r17,4(sp)
  80a324:	dc000017 	ldw	r16,0(sp)
  80a328:	dec00304 	addi	sp,sp,12
  80a32c:	f800283a 	ret
  80a330:	80c00017 	ldw	r3,0(r16)
  80a334:	183ff926 	beq	r3,zero,80a31c <__alt_data_end+0xff80a31c>
  80a338:	88c00015 	stw	r3,0(r17)
  80a33c:	003ff706 	br	80a31c <__alt_data_end+0xff80a31c>

0080a340 <_realloc_r>:
  80a340:	defff604 	addi	sp,sp,-40
  80a344:	dd000415 	stw	r20,16(sp)
  80a348:	dc400115 	stw	r17,4(sp)
  80a34c:	dfc00915 	stw	ra,36(sp)
  80a350:	df000815 	stw	fp,32(sp)
  80a354:	ddc00715 	stw	r23,28(sp)
  80a358:	dd800615 	stw	r22,24(sp)
  80a35c:	dd400515 	stw	r21,20(sp)
  80a360:	dcc00315 	stw	r19,12(sp)
  80a364:	dc800215 	stw	r18,8(sp)
  80a368:	dc000015 	stw	r16,0(sp)
  80a36c:	2829883a 	mov	r20,r5
  80a370:	3023883a 	mov	r17,r6
  80a374:	2800ad26 	beq	r5,zero,80a62c <_realloc_r+0x2ec>
  80a378:	2025883a 	mov	r18,r4
  80a37c:	08178380 	call	817838 <__malloc_lock>
  80a380:	a0ffff17 	ldw	r3,-4(r20)
  80a384:	043fff04 	movi	r16,-4
  80a388:	890002c4 	addi	r4,r17,11
  80a38c:	01c00584 	movi	r7,22
  80a390:	a57ffe04 	addi	r21,r20,-8
  80a394:	1c20703a 	and	r16,r3,r16
  80a398:	39001d2e 	bgeu	r7,r4,80a410 <_realloc_r+0xd0>
  80a39c:	05bffe04 	movi	r22,-8
  80a3a0:	25ac703a 	and	r22,r4,r22
  80a3a4:	b00f883a 	mov	r7,r22
  80a3a8:	b0006516 	blt	r22,zero,80a540 <_realloc_r+0x200>
  80a3ac:	b4406436 	bltu	r22,r17,80a540 <_realloc_r+0x200>
  80a3b0:	81c01a0e 	bge	r16,r7,80a41c <_realloc_r+0xdc>
  80a3b4:	070020b4 	movhi	fp,130
  80a3b8:	e730ae04 	addi	fp,fp,-15688
  80a3bc:	e1400217 	ldw	r5,8(fp)
  80a3c0:	ac11883a 	add	r8,r21,r16
  80a3c4:	2a006226 	beq	r5,r8,80a550 <_realloc_r+0x210>
  80a3c8:	41800117 	ldw	r6,4(r8)
  80a3cc:	027fff84 	movi	r9,-2
  80a3d0:	3252703a 	and	r9,r6,r9
  80a3d4:	4253883a 	add	r9,r8,r9
  80a3d8:	49000117 	ldw	r4,4(r9)
  80a3dc:	2100004c 	andi	r4,r4,1
  80a3e0:	2000281e 	bne	r4,zero,80a484 <_realloc_r+0x144>
  80a3e4:	00bfff04 	movi	r2,-4
  80a3e8:	3084703a 	and	r2,r6,r2
  80a3ec:	1409883a 	add	r4,r2,r16
  80a3f0:	21c05e16 	blt	r4,r7,80a56c <_realloc_r+0x22c>
  80a3f4:	40800317 	ldw	r2,12(r8)
  80a3f8:	41400217 	ldw	r5,8(r8)
  80a3fc:	a023883a 	mov	r17,r20
  80a400:	2021883a 	mov	r16,r4
  80a404:	28800315 	stw	r2,12(r5)
  80a408:	11400215 	stw	r5,8(r2)
  80a40c:	00000406 	br	80a420 <_realloc_r+0xe0>
  80a410:	01c00404 	movi	r7,16
  80a414:	382d883a 	mov	r22,r7
  80a418:	003fe406 	br	80a3ac <__alt_data_end+0xff80a3ac>
  80a41c:	a023883a 	mov	r17,r20
  80a420:	858fc83a 	sub	r7,r16,r22
  80a424:	008003c4 	movi	r2,15
  80a428:	18c0004c 	andi	r3,r3,1
  80a42c:	11c07236 	bltu	r2,r7,80a5f8 <_realloc_r+0x2b8>
  80a430:	1c06b03a 	or	r3,r3,r16
  80a434:	a8c00115 	stw	r3,4(r21)
  80a438:	ac21883a 	add	r16,r21,r16
  80a43c:	80800117 	ldw	r2,4(r16)
  80a440:	10800054 	ori	r2,r2,1
  80a444:	80800115 	stw	r2,4(r16)
  80a448:	9009883a 	mov	r4,r18
  80a44c:	08178580 	call	817858 <__malloc_unlock>
  80a450:	8805883a 	mov	r2,r17
  80a454:	dfc00917 	ldw	ra,36(sp)
  80a458:	df000817 	ldw	fp,32(sp)
  80a45c:	ddc00717 	ldw	r23,28(sp)
  80a460:	dd800617 	ldw	r22,24(sp)
  80a464:	dd400517 	ldw	r21,20(sp)
  80a468:	dd000417 	ldw	r20,16(sp)
  80a46c:	dcc00317 	ldw	r19,12(sp)
  80a470:	dc800217 	ldw	r18,8(sp)
  80a474:	dc400117 	ldw	r17,4(sp)
  80a478:	dc000017 	ldw	r16,0(sp)
  80a47c:	dec00a04 	addi	sp,sp,40
  80a480:	f800283a 	ret
  80a484:	18c0004c 	andi	r3,r3,1
  80a488:	1800081e 	bne	r3,zero,80a4ac <_realloc_r+0x16c>
  80a48c:	a4fffe17 	ldw	r19,-8(r20)
  80a490:	00bfff04 	movi	r2,-4
  80a494:	ace7c83a 	sub	r19,r21,r19
  80a498:	98c00117 	ldw	r3,4(r19)
  80a49c:	1886703a 	and	r3,r3,r2
  80a4a0:	98000226 	beq	r19,zero,80a4ac <_realloc_r+0x16c>
  80a4a4:	1c2f883a 	add	r23,r3,r16
  80a4a8:	b9c06d0e 	bge	r23,r7,80a660 <_realloc_r+0x320>
  80a4ac:	880b883a 	mov	r5,r17
  80a4b0:	9009883a 	mov	r4,r18
  80a4b4:	08022b80 	call	8022b8 <_malloc_r>
  80a4b8:	1023883a 	mov	r17,r2
  80a4bc:	1000ef26 	beq	r2,zero,80a87c <_realloc_r+0x53c>
  80a4c0:	a0ffff17 	ldw	r3,-4(r20)
  80a4c4:	113ffe04 	addi	r4,r2,-8
  80a4c8:	00bfff84 	movi	r2,-2
  80a4cc:	1884703a 	and	r2,r3,r2
  80a4d0:	a885883a 	add	r2,r21,r2
  80a4d4:	2080bf26 	beq	r4,r2,80a7d4 <_realloc_r+0x494>
  80a4d8:	81bfff04 	addi	r6,r16,-4
  80a4dc:	00800904 	movi	r2,36
  80a4e0:	11808936 	bltu	r2,r6,80a708 <_realloc_r+0x3c8>
  80a4e4:	00c004c4 	movi	r3,19
  80a4e8:	19806c2e 	bgeu	r3,r6,80a69c <_realloc_r+0x35c>
  80a4ec:	a0c00017 	ldw	r3,0(r20)
  80a4f0:	88c00015 	stw	r3,0(r17)
  80a4f4:	a0c00117 	ldw	r3,4(r20)
  80a4f8:	88c00115 	stw	r3,4(r17)
  80a4fc:	00c006c4 	movi	r3,27
  80a500:	1980ac36 	bltu	r3,r6,80a7b4 <_realloc_r+0x474>
  80a504:	88800204 	addi	r2,r17,8
  80a508:	a0c00204 	addi	r3,r20,8
  80a50c:	19000017 	ldw	r4,0(r3)
  80a510:	11000015 	stw	r4,0(r2)
  80a514:	19000117 	ldw	r4,4(r3)
  80a518:	11000115 	stw	r4,4(r2)
  80a51c:	18c00217 	ldw	r3,8(r3)
  80a520:	10c00215 	stw	r3,8(r2)
  80a524:	a00b883a 	mov	r5,r20
  80a528:	9009883a 	mov	r4,r18
  80a52c:	080159c0 	call	80159c <_free_r>
  80a530:	9009883a 	mov	r4,r18
  80a534:	08178580 	call	817858 <__malloc_unlock>
  80a538:	8805883a 	mov	r2,r17
  80a53c:	003fc506 	br	80a454 <__alt_data_end+0xff80a454>
  80a540:	00800304 	movi	r2,12
  80a544:	90800015 	stw	r2,0(r18)
  80a548:	0005883a 	mov	r2,zero
  80a54c:	003fc106 	br	80a454 <__alt_data_end+0xff80a454>
  80a550:	29800117 	ldw	r6,4(r5)
  80a554:	00bfff04 	movi	r2,-4
  80a558:	b1000404 	addi	r4,r22,16
  80a55c:	3084703a 	and	r2,r6,r2
  80a560:	140d883a 	add	r6,r2,r16
  80a564:	31005b0e 	bge	r6,r4,80a6d4 <_realloc_r+0x394>
  80a568:	2811883a 	mov	r8,r5
  80a56c:	18c0004c 	andi	r3,r3,1
  80a570:	183fce1e 	bne	r3,zero,80a4ac <__alt_data_end+0xff80a4ac>
  80a574:	a4fffe17 	ldw	r19,-8(r20)
  80a578:	00ffff04 	movi	r3,-4
  80a57c:	ace7c83a 	sub	r19,r21,r19
  80a580:	99000117 	ldw	r4,4(r19)
  80a584:	20c6703a 	and	r3,r4,r3
  80a588:	403fc526 	beq	r8,zero,80a4a0 <__alt_data_end+0xff80a4a0>
  80a58c:	1c2f883a 	add	r23,r3,r16
  80a590:	b8af883a 	add	r23,r23,r2
  80a594:	41406026 	beq	r8,r5,80a718 <_realloc_r+0x3d8>
  80a598:	b9ffc116 	blt	r23,r7,80a4a0 <__alt_data_end+0xff80a4a0>
  80a59c:	40c00217 	ldw	r3,8(r8)
  80a5a0:	40800317 	ldw	r2,12(r8)
  80a5a4:	81bfff04 	addi	r6,r16,-4
  80a5a8:	01000904 	movi	r4,36
  80a5ac:	18800315 	stw	r2,12(r3)
  80a5b0:	10c00215 	stw	r3,8(r2)
  80a5b4:	99400217 	ldw	r5,8(r19)
  80a5b8:	98c00317 	ldw	r3,12(r19)
  80a5bc:	9c400204 	addi	r17,r19,8
  80a5c0:	28c00315 	stw	r3,12(r5)
  80a5c4:	19400215 	stw	r5,8(r3)
  80a5c8:	21802d36 	bltu	r4,r6,80a680 <_realloc_r+0x340>
  80a5cc:	008004c4 	movi	r2,19
  80a5d0:	1180352e 	bgeu	r2,r6,80a6a8 <_realloc_r+0x368>
  80a5d4:	a0800017 	ldw	r2,0(r20)
  80a5d8:	98800215 	stw	r2,8(r19)
  80a5dc:	a0800117 	ldw	r2,4(r20)
  80a5e0:	98800315 	stw	r2,12(r19)
  80a5e4:	008006c4 	movi	r2,27
  80a5e8:	11808036 	bltu	r2,r6,80a7ec <_realloc_r+0x4ac>
  80a5ec:	98c00404 	addi	r3,r19,16
  80a5f0:	a5000204 	addi	r20,r20,8
  80a5f4:	00002d06 	br	80a6ac <_realloc_r+0x36c>
  80a5f8:	1d86b03a 	or	r3,r3,r22
  80a5fc:	ad8b883a 	add	r5,r21,r22
  80a600:	a8c00115 	stw	r3,4(r21)
  80a604:	38800054 	ori	r2,r7,1
  80a608:	28800115 	stw	r2,4(r5)
  80a60c:	29cf883a 	add	r7,r5,r7
  80a610:	38800117 	ldw	r2,4(r7)
  80a614:	9009883a 	mov	r4,r18
  80a618:	29400204 	addi	r5,r5,8
  80a61c:	10800054 	ori	r2,r2,1
  80a620:	38800115 	stw	r2,4(r7)
  80a624:	080159c0 	call	80159c <_free_r>
  80a628:	003f8706 	br	80a448 <__alt_data_end+0xff80a448>
  80a62c:	300b883a 	mov	r5,r6
  80a630:	dfc00917 	ldw	ra,36(sp)
  80a634:	df000817 	ldw	fp,32(sp)
  80a638:	ddc00717 	ldw	r23,28(sp)
  80a63c:	dd800617 	ldw	r22,24(sp)
  80a640:	dd400517 	ldw	r21,20(sp)
  80a644:	dd000417 	ldw	r20,16(sp)
  80a648:	dcc00317 	ldw	r19,12(sp)
  80a64c:	dc800217 	ldw	r18,8(sp)
  80a650:	dc400117 	ldw	r17,4(sp)
  80a654:	dc000017 	ldw	r16,0(sp)
  80a658:	dec00a04 	addi	sp,sp,40
  80a65c:	08022b81 	jmpi	8022b8 <_malloc_r>
  80a660:	98800317 	ldw	r2,12(r19)
  80a664:	98c00217 	ldw	r3,8(r19)
  80a668:	81bfff04 	addi	r6,r16,-4
  80a66c:	01000904 	movi	r4,36
  80a670:	18800315 	stw	r2,12(r3)
  80a674:	10c00215 	stw	r3,8(r2)
  80a678:	9c400204 	addi	r17,r19,8
  80a67c:	21bfd32e 	bgeu	r4,r6,80a5cc <__alt_data_end+0xff80a5cc>
  80a680:	8809883a 	mov	r4,r17
  80a684:	a00b883a 	mov	r5,r20
  80a688:	080907c0 	call	80907c <memmove>
  80a68c:	98c00117 	ldw	r3,4(r19)
  80a690:	b821883a 	mov	r16,r23
  80a694:	982b883a 	mov	r21,r19
  80a698:	003f6106 	br	80a420 <__alt_data_end+0xff80a420>
  80a69c:	8805883a 	mov	r2,r17
  80a6a0:	a007883a 	mov	r3,r20
  80a6a4:	003f9906 	br	80a50c <__alt_data_end+0xff80a50c>
  80a6a8:	8807883a 	mov	r3,r17
  80a6ac:	a0800017 	ldw	r2,0(r20)
  80a6b0:	b821883a 	mov	r16,r23
  80a6b4:	982b883a 	mov	r21,r19
  80a6b8:	18800015 	stw	r2,0(r3)
  80a6bc:	a0800117 	ldw	r2,4(r20)
  80a6c0:	18800115 	stw	r2,4(r3)
  80a6c4:	a0800217 	ldw	r2,8(r20)
  80a6c8:	18800215 	stw	r2,8(r3)
  80a6cc:	98c00117 	ldw	r3,4(r19)
  80a6d0:	003f5306 	br	80a420 <__alt_data_end+0xff80a420>
  80a6d4:	adab883a 	add	r21,r21,r22
  80a6d8:	3585c83a 	sub	r2,r6,r22
  80a6dc:	e5400215 	stw	r21,8(fp)
  80a6e0:	10800054 	ori	r2,r2,1
  80a6e4:	a8800115 	stw	r2,4(r21)
  80a6e8:	a0bfff17 	ldw	r2,-4(r20)
  80a6ec:	9009883a 	mov	r4,r18
  80a6f0:	1080004c 	andi	r2,r2,1
  80a6f4:	b0acb03a 	or	r22,r22,r2
  80a6f8:	a5bfff15 	stw	r22,-4(r20)
  80a6fc:	08178580 	call	817858 <__malloc_unlock>
  80a700:	a005883a 	mov	r2,r20
  80a704:	003f5306 	br	80a454 <__alt_data_end+0xff80a454>
  80a708:	8809883a 	mov	r4,r17
  80a70c:	a00b883a 	mov	r5,r20
  80a710:	080907c0 	call	80907c <memmove>
  80a714:	003f8306 	br	80a524 <__alt_data_end+0xff80a524>
  80a718:	b0800404 	addi	r2,r22,16
  80a71c:	b8bf6016 	blt	r23,r2,80a4a0 <__alt_data_end+0xff80a4a0>
  80a720:	98800317 	ldw	r2,12(r19)
  80a724:	98c00217 	ldw	r3,8(r19)
  80a728:	81bfff04 	addi	r6,r16,-4
  80a72c:	01000904 	movi	r4,36
  80a730:	18800315 	stw	r2,12(r3)
  80a734:	10c00215 	stw	r3,8(r2)
  80a738:	9c400204 	addi	r17,r19,8
  80a73c:	21804336 	bltu	r4,r6,80a84c <_realloc_r+0x50c>
  80a740:	008004c4 	movi	r2,19
  80a744:	11803f2e 	bgeu	r2,r6,80a844 <_realloc_r+0x504>
  80a748:	a0800017 	ldw	r2,0(r20)
  80a74c:	98800215 	stw	r2,8(r19)
  80a750:	a0800117 	ldw	r2,4(r20)
  80a754:	98800315 	stw	r2,12(r19)
  80a758:	008006c4 	movi	r2,27
  80a75c:	11803f36 	bltu	r2,r6,80a85c <_realloc_r+0x51c>
  80a760:	98800404 	addi	r2,r19,16
  80a764:	a5000204 	addi	r20,r20,8
  80a768:	a0c00017 	ldw	r3,0(r20)
  80a76c:	10c00015 	stw	r3,0(r2)
  80a770:	a0c00117 	ldw	r3,4(r20)
  80a774:	10c00115 	stw	r3,4(r2)
  80a778:	a0c00217 	ldw	r3,8(r20)
  80a77c:	10c00215 	stw	r3,8(r2)
  80a780:	9d87883a 	add	r3,r19,r22
  80a784:	bd85c83a 	sub	r2,r23,r22
  80a788:	e0c00215 	stw	r3,8(fp)
  80a78c:	10800054 	ori	r2,r2,1
  80a790:	18800115 	stw	r2,4(r3)
  80a794:	98800117 	ldw	r2,4(r19)
  80a798:	9009883a 	mov	r4,r18
  80a79c:	1080004c 	andi	r2,r2,1
  80a7a0:	b0acb03a 	or	r22,r22,r2
  80a7a4:	9d800115 	stw	r22,4(r19)
  80a7a8:	08178580 	call	817858 <__malloc_unlock>
  80a7ac:	8805883a 	mov	r2,r17
  80a7b0:	003f2806 	br	80a454 <__alt_data_end+0xff80a454>
  80a7b4:	a0c00217 	ldw	r3,8(r20)
  80a7b8:	88c00215 	stw	r3,8(r17)
  80a7bc:	a0c00317 	ldw	r3,12(r20)
  80a7c0:	88c00315 	stw	r3,12(r17)
  80a7c4:	30801126 	beq	r6,r2,80a80c <_realloc_r+0x4cc>
  80a7c8:	88800404 	addi	r2,r17,16
  80a7cc:	a0c00404 	addi	r3,r20,16
  80a7d0:	003f4e06 	br	80a50c <__alt_data_end+0xff80a50c>
  80a7d4:	893fff17 	ldw	r4,-4(r17)
  80a7d8:	00bfff04 	movi	r2,-4
  80a7dc:	a023883a 	mov	r17,r20
  80a7e0:	2084703a 	and	r2,r4,r2
  80a7e4:	80a1883a 	add	r16,r16,r2
  80a7e8:	003f0d06 	br	80a420 <__alt_data_end+0xff80a420>
  80a7ec:	a0800217 	ldw	r2,8(r20)
  80a7f0:	98800415 	stw	r2,16(r19)
  80a7f4:	a0800317 	ldw	r2,12(r20)
  80a7f8:	98800515 	stw	r2,20(r19)
  80a7fc:	31000a26 	beq	r6,r4,80a828 <_realloc_r+0x4e8>
  80a800:	98c00604 	addi	r3,r19,24
  80a804:	a5000404 	addi	r20,r20,16
  80a808:	003fa806 	br	80a6ac <__alt_data_end+0xff80a6ac>
  80a80c:	a1000417 	ldw	r4,16(r20)
  80a810:	88800604 	addi	r2,r17,24
  80a814:	a0c00604 	addi	r3,r20,24
  80a818:	89000415 	stw	r4,16(r17)
  80a81c:	a1000517 	ldw	r4,20(r20)
  80a820:	89000515 	stw	r4,20(r17)
  80a824:	003f3906 	br	80a50c <__alt_data_end+0xff80a50c>
  80a828:	a0800417 	ldw	r2,16(r20)
  80a82c:	a5000604 	addi	r20,r20,24
  80a830:	98c00804 	addi	r3,r19,32
  80a834:	98800615 	stw	r2,24(r19)
  80a838:	a0bfff17 	ldw	r2,-4(r20)
  80a83c:	98800715 	stw	r2,28(r19)
  80a840:	003f9a06 	br	80a6ac <__alt_data_end+0xff80a6ac>
  80a844:	8805883a 	mov	r2,r17
  80a848:	003fc706 	br	80a768 <__alt_data_end+0xff80a768>
  80a84c:	8809883a 	mov	r4,r17
  80a850:	a00b883a 	mov	r5,r20
  80a854:	080907c0 	call	80907c <memmove>
  80a858:	003fc906 	br	80a780 <__alt_data_end+0xff80a780>
  80a85c:	a0800217 	ldw	r2,8(r20)
  80a860:	98800415 	stw	r2,16(r19)
  80a864:	a0800317 	ldw	r2,12(r20)
  80a868:	98800515 	stw	r2,20(r19)
  80a86c:	31000726 	beq	r6,r4,80a88c <_realloc_r+0x54c>
  80a870:	98800604 	addi	r2,r19,24
  80a874:	a5000404 	addi	r20,r20,16
  80a878:	003fbb06 	br	80a768 <__alt_data_end+0xff80a768>
  80a87c:	9009883a 	mov	r4,r18
  80a880:	08178580 	call	817858 <__malloc_unlock>
  80a884:	0005883a 	mov	r2,zero
  80a888:	003ef206 	br	80a454 <__alt_data_end+0xff80a454>
  80a88c:	a0c00417 	ldw	r3,16(r20)
  80a890:	a5000604 	addi	r20,r20,24
  80a894:	98800804 	addi	r2,r19,32
  80a898:	98c00615 	stw	r3,24(r19)
  80a89c:	a0ffff17 	ldw	r3,-4(r20)
  80a8a0:	98c00715 	stw	r3,28(r19)
  80a8a4:	003fb006 	br	80a768 <__alt_data_end+0xff80a768>

0080a8a8 <__fpclassifyd>:
  80a8a8:	00a00034 	movhi	r2,32768
  80a8ac:	10bfffc4 	addi	r2,r2,-1
  80a8b0:	2884703a 	and	r2,r5,r2
  80a8b4:	10000726 	beq	r2,zero,80a8d4 <__fpclassifyd+0x2c>
  80a8b8:	00fffc34 	movhi	r3,65520
  80a8bc:	019ff834 	movhi	r6,32736
  80a8c0:	28c7883a 	add	r3,r5,r3
  80a8c4:	31bfffc4 	addi	r6,r6,-1
  80a8c8:	30c00536 	bltu	r6,r3,80a8e0 <__fpclassifyd+0x38>
  80a8cc:	00800104 	movi	r2,4
  80a8d0:	f800283a 	ret
  80a8d4:	2000021e 	bne	r4,zero,80a8e0 <__fpclassifyd+0x38>
  80a8d8:	00800084 	movi	r2,2
  80a8dc:	f800283a 	ret
  80a8e0:	00dffc34 	movhi	r3,32752
  80a8e4:	019ff834 	movhi	r6,32736
  80a8e8:	28cb883a 	add	r5,r5,r3
  80a8ec:	31bfffc4 	addi	r6,r6,-1
  80a8f0:	317ff62e 	bgeu	r6,r5,80a8cc <__alt_data_end+0xff80a8cc>
  80a8f4:	01400434 	movhi	r5,16
  80a8f8:	297fffc4 	addi	r5,r5,-1
  80a8fc:	28800236 	bltu	r5,r2,80a908 <__fpclassifyd+0x60>
  80a900:	008000c4 	movi	r2,3
  80a904:	f800283a 	ret
  80a908:	10c00226 	beq	r2,r3,80a914 <__fpclassifyd+0x6c>
  80a90c:	0005883a 	mov	r2,zero
  80a910:	f800283a 	ret
  80a914:	2005003a 	cmpeq	r2,r4,zero
  80a918:	f800283a 	ret

0080a91c <__sccl>:
  80a91c:	2a000003 	ldbu	r8,0(r5)
  80a920:	00801784 	movi	r2,94
  80a924:	40802526 	beq	r8,r2,80a9bc <__sccl+0xa0>
  80a928:	29400044 	addi	r5,r5,1
  80a92c:	000f883a 	mov	r7,zero
  80a930:	0013883a 	mov	r9,zero
  80a934:	2007883a 	mov	r3,r4
  80a938:	21804004 	addi	r6,r4,256
  80a93c:	19c00005 	stb	r7,0(r3)
  80a940:	18c00044 	addi	r3,r3,1
  80a944:	19bffd1e 	bne	r3,r6,80a93c <__alt_data_end+0xff80a93c>
  80a948:	40001026 	beq	r8,zero,80a98c <__sccl+0x70>
  80a94c:	00800044 	movi	r2,1
  80a950:	124dc83a 	sub	r6,r2,r9
  80a954:	02801744 	movi	r10,93
  80a958:	02400b44 	movi	r9,45
  80a95c:	2205883a 	add	r2,r4,r8
  80a960:	11800005 	stb	r6,0(r2)
  80a964:	28800044 	addi	r2,r5,1
  80a968:	28c00003 	ldbu	r3,0(r5)
  80a96c:	1a400926 	beq	r3,r9,80a994 <__sccl+0x78>
  80a970:	1a800526 	beq	r3,r10,80a988 <__sccl+0x6c>
  80a974:	18000326 	beq	r3,zero,80a984 <__sccl+0x68>
  80a978:	1811883a 	mov	r8,r3
  80a97c:	100b883a 	mov	r5,r2
  80a980:	003ff606 	br	80a95c <__alt_data_end+0xff80a95c>
  80a984:	2805883a 	mov	r2,r5
  80a988:	f800283a 	ret
  80a98c:	28bfffc4 	addi	r2,r5,-1
  80a990:	f800283a 	ret
  80a994:	11c00003 	ldbu	r7,0(r2)
  80a998:	3a800d26 	beq	r7,r10,80a9d0 <__sccl+0xb4>
  80a99c:	3a000c16 	blt	r7,r8,80a9d0 <__sccl+0xb4>
  80a9a0:	29400084 	addi	r5,r5,2
  80a9a4:	42000044 	addi	r8,r8,1
  80a9a8:	2207883a 	add	r3,r4,r8
  80a9ac:	19800005 	stb	r6,0(r3)
  80a9b0:	41fffc16 	blt	r8,r7,80a9a4 <__alt_data_end+0xff80a9a4>
  80a9b4:	10800084 	addi	r2,r2,2
  80a9b8:	003feb06 	br	80a968 <__alt_data_end+0xff80a968>
  80a9bc:	2a000043 	ldbu	r8,1(r5)
  80a9c0:	01c00044 	movi	r7,1
  80a9c4:	29400084 	addi	r5,r5,2
  80a9c8:	02400044 	movi	r9,1
  80a9cc:	003fd906 	br	80a934 <__alt_data_end+0xff80a934>
  80a9d0:	100b883a 	mov	r5,r2
  80a9d4:	4811883a 	mov	r8,r9
  80a9d8:	003fe006 	br	80a95c <__alt_data_end+0xff80a95c>

0080a9dc <nanf>:
  80a9dc:	009ff034 	movhi	r2,32704
  80a9e0:	f800283a 	ret

0080a9e4 <_sprintf_r>:
  80a9e4:	deffe404 	addi	sp,sp,-112
  80a9e8:	2807883a 	mov	r3,r5
  80a9ec:	dfc01a15 	stw	ra,104(sp)
  80a9f0:	d9c01b15 	stw	r7,108(sp)
  80a9f4:	00a00034 	movhi	r2,32768
  80a9f8:	10bfffc4 	addi	r2,r2,-1
  80a9fc:	02008204 	movi	r8,520
  80aa00:	d8800215 	stw	r2,8(sp)
  80aa04:	d8800515 	stw	r2,20(sp)
  80aa08:	d80b883a 	mov	r5,sp
  80aa0c:	d9c01b04 	addi	r7,sp,108
  80aa10:	00bfffc4 	movi	r2,-1
  80aa14:	d8c00015 	stw	r3,0(sp)
  80aa18:	d8c00415 	stw	r3,16(sp)
  80aa1c:	da00030d 	sth	r8,12(sp)
  80aa20:	d880038d 	sth	r2,14(sp)
  80aa24:	080e09c0 	call	80e09c <___svfprintf_internal_r>
  80aa28:	d8c00017 	ldw	r3,0(sp)
  80aa2c:	18000005 	stb	zero,0(r3)
  80aa30:	dfc01a17 	ldw	ra,104(sp)
  80aa34:	dec01c04 	addi	sp,sp,112
  80aa38:	f800283a 	ret

0080aa3c <sprintf>:
  80aa3c:	deffe304 	addi	sp,sp,-116
  80aa40:	2007883a 	mov	r3,r4
  80aa44:	dfc01a15 	stw	ra,104(sp)
  80aa48:	d9801b15 	stw	r6,108(sp)
  80aa4c:	d9c01c15 	stw	r7,112(sp)
  80aa50:	010020b4 	movhi	r4,130
  80aa54:	2136e204 	addi	r4,r4,-9336
  80aa58:	21000017 	ldw	r4,0(r4)
  80aa5c:	00a00034 	movhi	r2,32768
  80aa60:	10bfffc4 	addi	r2,r2,-1
  80aa64:	280d883a 	mov	r6,r5
  80aa68:	02008204 	movi	r8,520
  80aa6c:	d8800215 	stw	r2,8(sp)
  80aa70:	d8800515 	stw	r2,20(sp)
  80aa74:	d80b883a 	mov	r5,sp
  80aa78:	d9c01b04 	addi	r7,sp,108
  80aa7c:	00bfffc4 	movi	r2,-1
  80aa80:	d8c00015 	stw	r3,0(sp)
  80aa84:	d8c00415 	stw	r3,16(sp)
  80aa88:	da00030d 	sth	r8,12(sp)
  80aa8c:	d880038d 	sth	r2,14(sp)
  80aa90:	080e09c0 	call	80e09c <___svfprintf_internal_r>
  80aa94:	d8c00017 	ldw	r3,0(sp)
  80aa98:	18000005 	stb	zero,0(r3)
  80aa9c:	dfc01a17 	ldw	ra,104(sp)
  80aaa0:	dec01d04 	addi	sp,sp,116
  80aaa4:	f800283a 	ret

0080aaa8 <strcmp>:
  80aaa8:	2144b03a 	or	r2,r4,r5
  80aaac:	108000cc 	andi	r2,r2,3
  80aab0:	1000171e 	bne	r2,zero,80ab10 <strcmp+0x68>
  80aab4:	20800017 	ldw	r2,0(r4)
  80aab8:	28c00017 	ldw	r3,0(r5)
  80aabc:	10c0141e 	bne	r2,r3,80ab10 <strcmp+0x68>
  80aac0:	027fbff4 	movhi	r9,65279
  80aac4:	4a7fbfc4 	addi	r9,r9,-257
  80aac8:	0086303a 	nor	r3,zero,r2
  80aacc:	02202074 	movhi	r8,32897
  80aad0:	1245883a 	add	r2,r2,r9
  80aad4:	42202004 	addi	r8,r8,-32640
  80aad8:	10c4703a 	and	r2,r2,r3
  80aadc:	1204703a 	and	r2,r2,r8
  80aae0:	10000226 	beq	r2,zero,80aaec <strcmp+0x44>
  80aae4:	00001706 	br	80ab44 <strcmp+0x9c>
  80aae8:	1000161e 	bne	r2,zero,80ab44 <strcmp+0x9c>
  80aaec:	21000104 	addi	r4,r4,4
  80aaf0:	20c00017 	ldw	r3,0(r4)
  80aaf4:	29400104 	addi	r5,r5,4
  80aaf8:	29800017 	ldw	r6,0(r5)
  80aafc:	1a4f883a 	add	r7,r3,r9
  80ab00:	00c4303a 	nor	r2,zero,r3
  80ab04:	3884703a 	and	r2,r7,r2
  80ab08:	1204703a 	and	r2,r2,r8
  80ab0c:	19bff626 	beq	r3,r6,80aae8 <__alt_data_end+0xff80aae8>
  80ab10:	20800007 	ldb	r2,0(r4)
  80ab14:	1000051e 	bne	r2,zero,80ab2c <strcmp+0x84>
  80ab18:	00000606 	br	80ab34 <strcmp+0x8c>
  80ab1c:	21000044 	addi	r4,r4,1
  80ab20:	20800007 	ldb	r2,0(r4)
  80ab24:	29400044 	addi	r5,r5,1
  80ab28:	10000226 	beq	r2,zero,80ab34 <strcmp+0x8c>
  80ab2c:	28c00007 	ldb	r3,0(r5)
  80ab30:	10fffa26 	beq	r2,r3,80ab1c <__alt_data_end+0xff80ab1c>
  80ab34:	20800003 	ldbu	r2,0(r4)
  80ab38:	28c00003 	ldbu	r3,0(r5)
  80ab3c:	10c5c83a 	sub	r2,r2,r3
  80ab40:	f800283a 	ret
  80ab44:	0005883a 	mov	r2,zero
  80ab48:	f800283a 	ret

0080ab4c <sulp>:
  80ab4c:	defffd04 	addi	sp,sp,-12
  80ab50:	dc400115 	stw	r17,4(sp)
  80ab54:	3023883a 	mov	r17,r6
  80ab58:	dc000015 	stw	r16,0(sp)
  80ab5c:	dfc00215 	stw	ra,8(sp)
  80ab60:	2821883a 	mov	r16,r5
  80ab64:	0809ca40 	call	809ca4 <__ulp>
  80ab68:	88000c26 	beq	r17,zero,80ab9c <sulp+0x50>
  80ab6c:	841ffc2c 	andhi	r16,r16,32752
  80ab70:	8020d53a 	srli	r16,r16,20
  80ab74:	01c01ac4 	movi	r7,107
  80ab78:	3c21c83a 	sub	r16,r7,r16
  80ab7c:	0400070e 	bge	zero,r16,80ab9c <sulp+0x50>
  80ab80:	8020953a 	slli	r16,r16,20
  80ab84:	01cffc34 	movhi	r7,16368
  80ab88:	1009883a 	mov	r4,r2
  80ab8c:	180b883a 	mov	r5,r3
  80ab90:	000d883a 	mov	r6,zero
  80ab94:	81cf883a 	add	r7,r16,r7
  80ab98:	0815e8c0 	call	815e8c <__muldf3>
  80ab9c:	dfc00217 	ldw	ra,8(sp)
  80aba0:	dc400117 	ldw	r17,4(sp)
  80aba4:	dc000017 	ldw	r16,0(sp)
  80aba8:	dec00304 	addi	sp,sp,12
  80abac:	f800283a 	ret

0080abb0 <_strtod_r>:
  80abb0:	deffe104 	addi	sp,sp,-124
  80abb4:	dd801b15 	stw	r22,108(sp)
  80abb8:	dd001915 	stw	r20,100(sp)
  80abbc:	dcc01815 	stw	r19,96(sp)
  80abc0:	dc801715 	stw	r18,92(sp)
  80abc4:	dc401615 	stw	r17,88(sp)
  80abc8:	dc001515 	stw	r16,84(sp)
  80abcc:	dfc01e15 	stw	ra,120(sp)
  80abd0:	df001d15 	stw	fp,116(sp)
  80abd4:	ddc01c15 	stw	r23,112(sp)
  80abd8:	dd401a15 	stw	r21,104(sp)
  80abdc:	d8000515 	stw	zero,20(sp)
  80abe0:	d9400615 	stw	r5,24(sp)
  80abe4:	2829883a 	mov	r20,r5
  80abe8:	a0800003 	ldbu	r2,0(r20)
  80abec:	01c02074 	movhi	r7,129
  80abf0:	2021883a 	mov	r16,r4
  80abf4:	10c03fcc 	andi	r3,r2,255
  80abf8:	01000b44 	movi	r4,45
  80abfc:	39eb0904 	addi	r7,r7,-21468
  80ac00:	282d883a 	mov	r22,r5
  80ac04:	3027883a 	mov	r19,r6
  80ac08:	0025883a 	mov	r18,zero
  80ac0c:	0023883a 	mov	r17,zero
  80ac10:	20c0bd36 	bltu	r4,r3,80af08 <_strtod_r+0x358>
  80ac14:	180690ba 	slli	r3,r3,2
  80ac18:	19c7883a 	add	r3,r3,r7
  80ac1c:	18c00017 	ldw	r3,0(r3)
  80ac20:	1800683a 	jmp	r3
  80ac24:	0080ace4 	muli	r2,zero,691
  80ac28:	0080af08 	cmpgei	r2,zero,700
  80ac2c:	0080af08 	cmpgei	r2,zero,700
  80ac30:	0080af08 	cmpgei	r2,zero,700
  80ac34:	0080af08 	cmpgei	r2,zero,700
  80ac38:	0080af08 	cmpgei	r2,zero,700
  80ac3c:	0080af08 	cmpgei	r2,zero,700
  80ac40:	0080af08 	cmpgei	r2,zero,700
  80ac44:	0080af08 	cmpgei	r2,zero,700
  80ac48:	0080aef4 	movhi	r2,699
  80ac4c:	0080aef4 	movhi	r2,699
  80ac50:	0080aef4 	movhi	r2,699
  80ac54:	0080aef4 	movhi	r2,699
  80ac58:	0080aef4 	movhi	r2,699
  80ac5c:	0080af08 	cmpgei	r2,zero,700
  80ac60:	0080af08 	cmpgei	r2,zero,700
  80ac64:	0080af08 	cmpgei	r2,zero,700
  80ac68:	0080af08 	cmpgei	r2,zero,700
  80ac6c:	0080af08 	cmpgei	r2,zero,700
  80ac70:	0080af08 	cmpgei	r2,zero,700
  80ac74:	0080af08 	cmpgei	r2,zero,700
  80ac78:	0080af08 	cmpgei	r2,zero,700
  80ac7c:	0080af08 	cmpgei	r2,zero,700
  80ac80:	0080af08 	cmpgei	r2,zero,700
  80ac84:	0080af08 	cmpgei	r2,zero,700
  80ac88:	0080af08 	cmpgei	r2,zero,700
  80ac8c:	0080af08 	cmpgei	r2,zero,700
  80ac90:	0080af08 	cmpgei	r2,zero,700
  80ac94:	0080af08 	cmpgei	r2,zero,700
  80ac98:	0080af08 	cmpgei	r2,zero,700
  80ac9c:	0080af08 	cmpgei	r2,zero,700
  80aca0:	0080af08 	cmpgei	r2,zero,700
  80aca4:	0080aef4 	movhi	r2,699
  80aca8:	0080af08 	cmpgei	r2,zero,700
  80acac:	0080af08 	cmpgei	r2,zero,700
  80acb0:	0080af08 	cmpgei	r2,zero,700
  80acb4:	0080af08 	cmpgei	r2,zero,700
  80acb8:	0080af08 	cmpgei	r2,zero,700
  80acbc:	0080af08 	cmpgei	r2,zero,700
  80acc0:	0080af08 	cmpgei	r2,zero,700
  80acc4:	0080af08 	cmpgei	r2,zero,700
  80acc8:	0080af08 	cmpgei	r2,zero,700
  80accc:	0080af08 	cmpgei	r2,zero,700
  80acd0:	0080ad3c 	xorhi	r2,zero,692
  80acd4:	0080af08 	cmpgei	r2,zero,700
  80acd8:	0080aee4 	muli	r2,zero,699
  80acdc:	00801244 	movi	r2,73
  80ace0:	90844026 	beq	r18,r2,80bde4 <_strtod_r+0x1234>
  80ace4:	002b883a 	mov	r21,zero
  80ace8:	002f883a 	mov	r23,zero
  80acec:	98000526 	beq	r19,zero,80ad04 <_strtod_r+0x154>
  80acf0:	d8000715 	stw	zero,28(sp)
  80acf4:	9d800015 	stw	r22,0(r19)
  80acf8:	d8c00717 	ldw	r3,28(sp)
  80acfc:	18000126 	beq	r3,zero,80ad04 <_strtod_r+0x154>
  80ad00:	bde0003c 	xorhi	r23,r23,32768
  80ad04:	a805883a 	mov	r2,r21
  80ad08:	b807883a 	mov	r3,r23
  80ad0c:	dfc01e17 	ldw	ra,120(sp)
  80ad10:	df001d17 	ldw	fp,116(sp)
  80ad14:	ddc01c17 	ldw	r23,112(sp)
  80ad18:	dd801b17 	ldw	r22,108(sp)
  80ad1c:	dd401a17 	ldw	r21,104(sp)
  80ad20:	dd001917 	ldw	r20,100(sp)
  80ad24:	dcc01817 	ldw	r19,96(sp)
  80ad28:	dc801717 	ldw	r18,92(sp)
  80ad2c:	dc401617 	ldw	r17,88(sp)
  80ad30:	dc001517 	ldw	r16,84(sp)
  80ad34:	dec01f04 	addi	sp,sp,124
  80ad38:	f800283a 	ret
  80ad3c:	a005883a 	mov	r2,r20
  80ad40:	d8000715 	stw	zero,28(sp)
  80ad44:	a5000044 	addi	r20,r20,1
  80ad48:	dd000615 	stw	r20,24(sp)
  80ad4c:	10800043 	ldbu	r2,1(r2)
  80ad50:	10c03fcc 	andi	r3,r2,255
  80ad54:	18c0201c 	xori	r3,r3,128
  80ad58:	18ffe004 	addi	r3,r3,-128
  80ad5c:	183fe126 	beq	r3,zero,80ace4 <__alt_data_end+0xff80ace4>
  80ad60:	11403fcc 	andi	r5,r2,255
  80ad64:	2940201c 	xori	r5,r5,128
  80ad68:	297fe004 	addi	r5,r5,-128
  80ad6c:	00c00c04 	movi	r3,48
  80ad70:	28c0f226 	beq	r5,r3,80b13c <_strtod_r+0x58c>
  80ad74:	d8000815 	stw	zero,32(sp)
  80ad78:	10fff404 	addi	r3,r2,-48
  80ad7c:	18c03fcc 	andi	r3,r3,255
  80ad80:	01800244 	movi	r6,9
  80ad84:	30c38d36 	bltu	r6,r3,80bbbc <_strtod_r+0x100c>
  80ad88:	a1400044 	addi	r5,r20,1
  80ad8c:	0039883a 	mov	fp,zero
  80ad90:	002f883a 	mov	r23,zero
  80ad94:	002b883a 	mov	r21,zero
  80ad98:	02400204 	movi	r9,8
  80ad9c:	4d405c16 	blt	r9,r21,80af10 <_strtod_r+0x360>
  80ada0:	bdc002a4 	muli	r23,r23,10
  80ada4:	10c03fcc 	andi	r3,r2,255
  80ada8:	18c0201c 	xori	r3,r3,128
  80adac:	18ffe004 	addi	r3,r3,-128
  80adb0:	b8ef883a 	add	r23,r23,r3
  80adb4:	bdfff404 	addi	r23,r23,-48
  80adb8:	d9400615 	stw	r5,24(sp)
  80adbc:	28800003 	ldbu	r2,0(r5)
  80adc0:	2823883a 	mov	r17,r5
  80adc4:	ad400044 	addi	r21,r21,1
  80adc8:	10fff404 	addi	r3,r2,-48
  80adcc:	18c03fcc 	andi	r3,r3,255
  80add0:	29400044 	addi	r5,r5,1
  80add4:	30fff12e 	bgeu	r6,r3,80ad9c <__alt_data_end+0xff80ad9c>
  80add8:	14803fcc 	andi	r18,r2,255
  80addc:	9480201c 	xori	r18,r18,128
  80ade0:	94bfe004 	addi	r18,r18,-128
  80ade4:	8009883a 	mov	r4,r16
  80ade8:	0808ba80 	call	808ba8 <_localeconv_r>
  80adec:	11400017 	ldw	r5,0(r2)
  80adf0:	8009883a 	mov	r4,r16
  80adf4:	d9401315 	stw	r5,76(sp)
  80adf8:	0808ba80 	call	808ba8 <_localeconv_r>
  80adfc:	11000017 	ldw	r4,0(r2)
  80ae00:	08032200 	call	803220 <strlen>
  80ae04:	d9401317 	ldw	r5,76(sp)
  80ae08:	8809883a 	mov	r4,r17
  80ae0c:	100d883a 	mov	r6,r2
  80ae10:	08127000 	call	812700 <strncmp>
  80ae14:	1000db26 	beq	r2,zero,80b184 <_strtod_r+0x5d4>
  80ae18:	a811883a 	mov	r8,r21
  80ae1c:	000b883a 	mov	r5,zero
  80ae20:	0013883a 	mov	r9,zero
  80ae24:	0015883a 	mov	r10,zero
  80ae28:	00801944 	movi	r2,101
  80ae2c:	90804226 	beq	r18,r2,80af38 <_strtod_r+0x388>
  80ae30:	00801144 	movi	r2,69
  80ae34:	90804026 	beq	r18,r2,80af38 <_strtod_r+0x388>
  80ae38:	000f883a 	mov	r7,zero
  80ae3c:	40007d1e 	bne	r8,zero,80b034 <_strtod_r+0x484>
  80ae40:	28003a1e 	bne	r5,zero,80af2c <_strtod_r+0x37c>
  80ae44:	d8c00817 	ldw	r3,32(sp)
  80ae48:	1800381e 	bne	r3,zero,80af2c <_strtod_r+0x37c>
  80ae4c:	503fa51e 	bne	r10,zero,80ace4 <__alt_data_end+0xff80ace4>
  80ae50:	00801384 	movi	r2,78
  80ae54:	90800526 	beq	r18,r2,80ae6c <_strtod_r+0x2bc>
  80ae58:	14bfa00e 	bge	r2,r18,80acdc <__alt_data_end+0xff80acdc>
  80ae5c:	00801a44 	movi	r2,105
  80ae60:	9083e026 	beq	r18,r2,80bde4 <_strtod_r+0x1234>
  80ae64:	00801b84 	movi	r2,110
  80ae68:	90bf9e1e 	bne	r18,r2,80ace4 <__alt_data_end+0xff80ace4>
  80ae6c:	014020b4 	movhi	r5,130
  80ae70:	d9000617 	ldw	r4,24(sp)
  80ae74:	296ecd04 	addi	r5,r5,-17612
  80ae78:	01c00644 	movi	r7,25
  80ae7c:	00000b06 	br	80aeac <_strtod_r+0x2fc>
  80ae80:	21000044 	addi	r4,r4,1
  80ae84:	20800003 	ldbu	r2,0(r4)
  80ae88:	10ffefc4 	addi	r3,r2,-65
  80ae8c:	10803fcc 	andi	r2,r2,255
  80ae90:	1080201c 	xori	r2,r2,128
  80ae94:	18c03fcc 	andi	r3,r3,255
  80ae98:	10bfe004 	addi	r2,r2,-128
  80ae9c:	38c00136 	bltu	r7,r3,80aea4 <_strtod_r+0x2f4>
  80aea0:	10800804 	addi	r2,r2,32
  80aea4:	29400044 	addi	r5,r5,1
  80aea8:	11bf8e1e 	bne	r2,r6,80ace4 <__alt_data_end+0xff80ace4>
  80aeac:	29800007 	ldb	r6,0(r5)
  80aeb0:	303ff31e 	bne	r6,zero,80ae80 <__alt_data_end+0xff80ae80>
  80aeb4:	20800044 	addi	r2,r4,1
  80aeb8:	d8800615 	stw	r2,24(sp)
  80aebc:	20c00047 	ldb	r3,1(r4)
  80aec0:	00800a04 	movi	r2,40
  80aec4:	18849b26 	beq	r3,r2,80c134 <_strtod_r+0x1584>
  80aec8:	047ffe34 	movhi	r17,65528
  80aecc:	0025883a 	mov	r18,zero
  80aed0:	902b883a 	mov	r21,r18
  80aed4:	882f883a 	mov	r23,r17
  80aed8:	983f8726 	beq	r19,zero,80acf8 <__alt_data_end+0xff80acf8>
  80aedc:	dd800617 	ldw	r22,24(sp)
  80aee0:	003f8406 	br	80acf4 <__alt_data_end+0xff80acf4>
  80aee4:	00c00044 	movi	r3,1
  80aee8:	a005883a 	mov	r2,r20
  80aeec:	d8c00715 	stw	r3,28(sp)
  80aef0:	003f9406 	br	80ad44 <__alt_data_end+0xff80ad44>
  80aef4:	a5000044 	addi	r20,r20,1
  80aef8:	dd000615 	stw	r20,24(sp)
  80aefc:	a0800003 	ldbu	r2,0(r20)
  80af00:	10c03fcc 	andi	r3,r2,255
  80af04:	20ff432e 	bgeu	r4,r3,80ac14 <__alt_data_end+0xff80ac14>
  80af08:	d8000715 	stw	zero,28(sp)
  80af0c:	003f9406 	br	80ad60 <__alt_data_end+0xff80ad60>
  80af10:	e70002a4 	muli	fp,fp,10
  80af14:	10803fcc 	andi	r2,r2,255
  80af18:	1080201c 	xori	r2,r2,128
  80af1c:	10bfe004 	addi	r2,r2,-128
  80af20:	e085883a 	add	r2,fp,r2
  80af24:	173ff404 	addi	fp,r2,-48
  80af28:	003fa306 	br	80adb8 <__alt_data_end+0xff80adb8>
  80af2c:	002b883a 	mov	r21,zero
  80af30:	002f883a 	mov	r23,zero
  80af34:	003fe806 	br	80aed8 <__alt_data_end+0xff80aed8>
  80af38:	40007b26 	beq	r8,zero,80b128 <_strtod_r+0x578>
  80af3c:	dd800617 	ldw	r22,24(sp)
  80af40:	00c00ac4 	movi	r3,43
  80af44:	b0800044 	addi	r2,r22,1
  80af48:	d8800615 	stw	r2,24(sp)
  80af4c:	b0800047 	ldb	r2,1(r22)
  80af50:	10c1f926 	beq	r2,r3,80b738 <_strtod_r+0xb88>
  80af54:	00c00b44 	movi	r3,45
  80af58:	10c1f226 	beq	r2,r3,80b724 <_strtod_r+0xb74>
  80af5c:	1025883a 	mov	r18,r2
  80af60:	000f883a 	mov	r7,zero
  80af64:	90fff404 	addi	r3,r18,-48
  80af68:	01000244 	movi	r4,9
  80af6c:	9005883a 	mov	r2,r18
  80af70:	20c1c136 	bltu	r4,r3,80b678 <_strtod_r+0xac8>
  80af74:	00c00c04 	movi	r3,48
  80af78:	90c0071e 	bne	r18,r3,80af98 <_strtod_r+0x3e8>
  80af7c:	d8c00617 	ldw	r3,24(sp)
  80af80:	18c00044 	addi	r3,r3,1
  80af84:	d8c00615 	stw	r3,24(sp)
  80af88:	18800007 	ldb	r2,0(r3)
  80af8c:	18c00044 	addi	r3,r3,1
  80af90:	14bffc26 	beq	r2,r18,80af84 <__alt_data_end+0xff80af84>
  80af94:	1025883a 	mov	r18,r2
  80af98:	10bff3c4 	addi	r2,r2,-49
  80af9c:	00c00204 	movi	r3,8
  80afa0:	18bfa536 	bltu	r3,r2,80ae38 <__alt_data_end+0xff80ae38>
  80afa4:	db400617 	ldw	r13,24(sp)
  80afa8:	90bff404 	addi	r2,r18,-48
  80afac:	03000244 	movi	r12,9
  80afb0:	6ac00044 	addi	r11,r13,1
  80afb4:	dac00615 	stw	r11,24(sp)
  80afb8:	6c800043 	ldbu	r18,1(r13)
  80afbc:	90fff404 	addi	r3,r18,-48
  80afc0:	94803fcc 	andi	r18,r18,255
  80afc4:	9480201c 	xori	r18,r18,128
  80afc8:	18c03fcc 	andi	r3,r3,255
  80afcc:	94bfe004 	addi	r18,r18,-128
  80afd0:	60c00e36 	bltu	r12,r3,80b00c <_strtod_r+0x45c>
  80afd4:	69000084 	addi	r4,r13,2
  80afd8:	d9000615 	stw	r4,24(sp)
  80afdc:	108002a4 	muli	r2,r2,10
  80afe0:	21800003 	ldbu	r6,0(r4)
  80afe4:	2017883a 	mov	r11,r4
  80afe8:	14a5883a 	add	r18,r2,r18
  80afec:	30fff404 	addi	r3,r6,-48
  80aff0:	90bff404 	addi	r2,r18,-48
  80aff4:	34803fcc 	andi	r18,r6,255
  80aff8:	9480201c 	xori	r18,r18,128
  80affc:	18c03fcc 	andi	r3,r3,255
  80b000:	94bfe004 	addi	r18,r18,-128
  80b004:	21000044 	addi	r4,r4,1
  80b008:	60fff32e 	bgeu	r12,r3,80afd8 <__alt_data_end+0xff80afd8>
  80b00c:	5b57c83a 	sub	r11,r11,r13
  80b010:	00c00204 	movi	r3,8
  80b014:	1ac2e316 	blt	r3,r11,80bba4 <_strtod_r+0xff4>
  80b018:	00d387c4 	movi	r3,19999
  80b01c:	1880010e 	bge	r3,r2,80b024 <_strtod_r+0x474>
  80b020:	1805883a 	mov	r2,r3
  80b024:	01c7c83a 	sub	r3,zero,r7
  80b028:	10c4f03a 	xor	r2,r2,r3
  80b02c:	11cf883a 	add	r7,r2,r7
  80b030:	403f8326 	beq	r8,zero,80ae40 <__alt_data_end+0xff80ae40>
  80b034:	3a53c83a 	sub	r9,r7,r9
  80b038:	da400915 	stw	r9,36(sp)
  80b03c:	a800011e 	bne	r21,zero,80b044 <_strtod_r+0x494>
  80b040:	402b883a 	mov	r21,r8
  80b044:	00800404 	movi	r2,16
  80b048:	402d883a 	mov	r22,r8
  80b04c:	1200010e 	bge	r2,r8,80b054 <_strtod_r+0x4a4>
  80b050:	102d883a 	mov	r22,r2
  80b054:	b809883a 	mov	r4,r23
  80b058:	da001415 	stw	r8,80(sp)
  80b05c:	0816fd80 	call	816fd8 <__floatunsidf>
  80b060:	1025883a 	mov	r18,r2
  80b064:	00800244 	movi	r2,9
  80b068:	1823883a 	mov	r17,r3
  80b06c:	da001417 	ldw	r8,80(sp)
  80b070:	1580160e 	bge	r2,r22,80b0cc <_strtod_r+0x51c>
  80b074:	b0bffdc4 	addi	r2,r22,-9
  80b078:	100490fa 	slli	r2,r2,3
  80b07c:	180b883a 	mov	r5,r3
  80b080:	00c020b4 	movhi	r3,130
  80b084:	18ee9804 	addi	r3,r3,-17824
  80b088:	1885883a 	add	r2,r3,r2
  80b08c:	11800017 	ldw	r6,0(r2)
  80b090:	11c00117 	ldw	r7,4(r2)
  80b094:	9009883a 	mov	r4,r18
  80b098:	0815e8c0 	call	815e8c <__muldf3>
  80b09c:	e009883a 	mov	r4,fp
  80b0a0:	1025883a 	mov	r18,r2
  80b0a4:	1823883a 	mov	r17,r3
  80b0a8:	0816fd80 	call	816fd8 <__floatunsidf>
  80b0ac:	9009883a 	mov	r4,r18
  80b0b0:	880b883a 	mov	r5,r17
  80b0b4:	100d883a 	mov	r6,r2
  80b0b8:	180f883a 	mov	r7,r3
  80b0bc:	0814ae00 	call	814ae0 <__adddf3>
  80b0c0:	da001417 	ldw	r8,80(sp)
  80b0c4:	1025883a 	mov	r18,r2
  80b0c8:	1823883a 	mov	r17,r3
  80b0cc:	008003c4 	movi	r2,15
  80b0d0:	12004b16 	blt	r2,r8,80b200 <_strtod_r+0x650>
  80b0d4:	d9000917 	ldw	r4,36(sp)
  80b0d8:	203f7d26 	beq	r4,zero,80aed0 <__alt_data_end+0xff80aed0>
  80b0dc:	d8c00917 	ldw	r3,36(sp)
  80b0e0:	00c32c0e 	bge	zero,r3,80bd94 <_strtod_r+0x11e4>
  80b0e4:	d9000917 	ldw	r4,36(sp)
  80b0e8:	00c00584 	movi	r3,22
  80b0ec:	1902bb16 	blt	r3,r4,80bbdc <_strtod_r+0x102c>
  80b0f0:	200490fa 	slli	r2,r4,3
  80b0f4:	00c020b4 	movhi	r3,130
  80b0f8:	18ee9804 	addi	r3,r3,-17824
  80b0fc:	1885883a 	add	r2,r3,r2
  80b100:	11000017 	ldw	r4,0(r2)
  80b104:	11400117 	ldw	r5,4(r2)
  80b108:	900d883a 	mov	r6,r18
  80b10c:	880f883a 	mov	r7,r17
  80b110:	0815e8c0 	call	815e8c <__muldf3>
  80b114:	102b883a 	mov	r21,r2
  80b118:	182f883a 	mov	r23,r3
  80b11c:	003f6e06 	br	80aed8 <__alt_data_end+0xff80aed8>
  80b120:	0013883a 	mov	r9,zero
  80b124:	02800044 	movi	r10,1
  80b128:	2800021e 	bne	r5,zero,80b134 <_strtod_r+0x584>
  80b12c:	d8c00817 	ldw	r3,32(sp)
  80b130:	183eec26 	beq	r3,zero,80ace4 <__alt_data_end+0xff80ace4>
  80b134:	0011883a 	mov	r8,zero
  80b138:	003f8006 	br	80af3c <__alt_data_end+0xff80af3c>
  80b13c:	a0800047 	ldb	r2,1(r20)
  80b140:	00c01604 	movi	r3,88
  80b144:	10c1e626 	beq	r2,r3,80b8e0 <_strtod_r+0xd30>
  80b148:	00c01e04 	movi	r3,120
  80b14c:	10c1e426 	beq	r2,r3,80b8e0 <_strtod_r+0xd30>
  80b150:	a0c00044 	addi	r3,r20,1
  80b154:	1829883a 	mov	r20,r3
  80b158:	d8c00615 	stw	r3,24(sp)
  80b15c:	18c00044 	addi	r3,r3,1
  80b160:	18bfffc3 	ldbu	r2,-1(r3)
  80b164:	11003fcc 	andi	r4,r2,255
  80b168:	2100201c 	xori	r4,r4,128
  80b16c:	213fe004 	addi	r4,r4,-128
  80b170:	217ff826 	beq	r4,r5,80b154 <__alt_data_end+0xff80b154>
  80b174:	203f6d26 	beq	r4,zero,80af2c <__alt_data_end+0xff80af2c>
  80b178:	00c00044 	movi	r3,1
  80b17c:	d8c00815 	stw	r3,32(sp)
  80b180:	003efd06 	br	80ad78 <__alt_data_end+0xff80ad78>
  80b184:	8009883a 	mov	r4,r16
  80b188:	0808ba80 	call	808ba8 <_localeconv_r>
  80b18c:	11000017 	ldw	r4,0(r2)
  80b190:	08032200 	call	803220 <strlen>
  80b194:	d8c00617 	ldw	r3,24(sp)
  80b198:	1885883a 	add	r2,r3,r2
  80b19c:	d8800615 	stw	r2,24(sp)
  80b1a0:	14800007 	ldb	r18,0(r2)
  80b1a4:	a801501e 	bne	r21,zero,80b6e8 <_strtod_r+0xb38>
  80b1a8:	00c00c04 	movi	r3,48
  80b1ac:	90c3891e 	bne	r18,r3,80bfd4 <_strtod_r+0x1424>
  80b1b0:	10c00044 	addi	r3,r2,1
  80b1b4:	9009883a 	mov	r4,r18
  80b1b8:	d8c00615 	stw	r3,24(sp)
  80b1bc:	1c800007 	ldb	r18,0(r3)
  80b1c0:	188bc83a 	sub	r5,r3,r2
  80b1c4:	18c00044 	addi	r3,r3,1
  80b1c8:	913ffb26 	beq	r18,r4,80b1b8 <__alt_data_end+0xff80b1b8>
  80b1cc:	90bff3c4 	addi	r2,r18,-49
  80b1d0:	00c00204 	movi	r3,8
  80b1d4:	18819d36 	bltu	r3,r2,80b84c <_strtod_r+0xc9c>
  80b1d8:	dd000617 	ldw	r20,24(sp)
  80b1dc:	90bff404 	addi	r2,r18,-48
  80b1e0:	2a400044 	addi	r9,r5,1
  80b1e4:	a007883a 	mov	r3,r20
  80b1e8:	02000044 	movi	r8,1
  80b1ec:	b9c002a4 	muli	r7,r23,10
  80b1f0:	1809883a 	mov	r4,r3
  80b1f4:	000b883a 	mov	r5,zero
  80b1f8:	11ef883a 	add	r23,r2,r7
  80b1fc:	00014506 	br	80b714 <_strtod_r+0xb64>
  80b200:	d9000917 	ldw	r4,36(sp)
  80b204:	45adc83a 	sub	r22,r8,r22
  80b208:	25ad883a 	add	r22,r4,r22
  80b20c:	05821f0e 	bge	zero,r22,80ba8c <_strtod_r+0xedc>
  80b210:	b08003cc 	andi	r2,r22,15
  80b214:	10000d26 	beq	r2,zero,80b24c <_strtod_r+0x69c>
  80b218:	100490fa 	slli	r2,r2,3
  80b21c:	00c020b4 	movhi	r3,130
  80b220:	18ee9804 	addi	r3,r3,-17824
  80b224:	1885883a 	add	r2,r3,r2
  80b228:	11000017 	ldw	r4,0(r2)
  80b22c:	11400117 	ldw	r5,4(r2)
  80b230:	900d883a 	mov	r6,r18
  80b234:	880f883a 	mov	r7,r17
  80b238:	da001415 	stw	r8,80(sp)
  80b23c:	0815e8c0 	call	815e8c <__muldf3>
  80b240:	da001417 	ldw	r8,80(sp)
  80b244:	1025883a 	mov	r18,r2
  80b248:	1823883a 	mov	r17,r3
  80b24c:	073ffc04 	movi	fp,-16
  80b250:	b72c703a 	and	r22,r22,fp
  80b254:	b0013c1e 	bne	r22,zero,80b748 <_strtod_r+0xb98>
  80b258:	d8000815 	stw	zero,32(sp)
  80b25c:	ddc00015 	stw	r23,0(sp)
  80b260:	8009883a 	mov	r4,r16
  80b264:	a00b883a 	mov	r5,r20
  80b268:	a80d883a 	mov	r6,r21
  80b26c:	400f883a 	mov	r7,r8
  80b270:	08093c80 	call	8093c8 <__s2b>
  80b274:	d8800a15 	stw	r2,40(sp)
  80b278:	1001ad26 	beq	r2,zero,80b930 <_strtod_r+0xd80>
  80b27c:	d9000917 	ldw	r4,36(sp)
  80b280:	0011883a 	mov	r8,zero
  80b284:	dcc01215 	stw	r19,72(sp)
  80b288:	2005d7fa 	srai	r2,r4,31
  80b28c:	0107c83a 	sub	r3,zero,r4
  80b290:	0029883a 	mov	r20,zero
  80b294:	10c4703a 	and	r2,r2,r3
  80b298:	d8800c15 	stw	r2,48(sp)
  80b29c:	d8800a17 	ldw	r2,40(sp)
  80b2a0:	4027883a 	mov	r19,r8
  80b2a4:	10800304 	addi	r2,r2,12
  80b2a8:	d8800f15 	stw	r2,60(sp)
  80b2ac:	d8c00a17 	ldw	r3,40(sp)
  80b2b0:	8009883a 	mov	r4,r16
  80b2b4:	19400117 	ldw	r5,4(r3)
  80b2b8:	08091d80 	call	8091d8 <_Balloc>
  80b2bc:	1039883a 	mov	fp,r2
  80b2c0:	10016b26 	beq	r2,zero,80b870 <_strtod_r+0xcc0>
  80b2c4:	d9000a17 	ldw	r4,40(sp)
  80b2c8:	d9400f17 	ldw	r5,60(sp)
  80b2cc:	21800417 	ldw	r6,16(r4)
  80b2d0:	11000304 	addi	r4,r2,12
  80b2d4:	31800084 	addi	r6,r6,2
  80b2d8:	318d883a 	add	r6,r6,r6
  80b2dc:	318d883a 	add	r6,r6,r6
  80b2e0:	0808f440 	call	808f44 <memcpy>
  80b2e4:	d8800204 	addi	r2,sp,8
  80b2e8:	8009883a 	mov	r4,r16
  80b2ec:	d8800015 	stw	r2,0(sp)
  80b2f0:	900b883a 	mov	r5,r18
  80b2f4:	880d883a 	mov	r6,r17
  80b2f8:	d9c00404 	addi	r7,sp,16
  80b2fc:	0809e200 	call	809e20 <__d2b>
  80b300:	d8800515 	stw	r2,20(sp)
  80b304:	dc801115 	stw	r18,68(sp)
  80b308:	dc401015 	stw	r17,64(sp)
  80b30c:	10017126 	beq	r2,zero,80b8d4 <_strtod_r+0xd24>
  80b310:	8009883a 	mov	r4,r16
  80b314:	01400044 	movi	r5,1
  80b318:	08095e40 	call	8095e4 <__i2b>
  80b31c:	1029883a 	mov	r20,r2
  80b320:	10015326 	beq	r2,zero,80b870 <_strtod_r+0xcc0>
  80b324:	d8c00917 	ldw	r3,36(sp)
  80b328:	002b883a 	mov	r21,zero
  80b32c:	00c0010e 	bge	zero,r3,80b334 <_strtod_r+0x784>
  80b330:	182b883a 	mov	r21,r3
  80b334:	d9000417 	ldw	r4,16(sp)
  80b338:	2000c516 	blt	r4,zero,80b650 <_strtod_r+0xaa0>
  80b33c:	d8800c17 	ldw	r2,48(sp)
  80b340:	a807883a 	mov	r3,r21
  80b344:	112d883a 	add	r22,r2,r4
  80b348:	d8800817 	ldw	r2,32(sp)
  80b34c:	d9800217 	ldw	r6,8(sp)
  80b350:	05ff00c4 	movi	r23,-1021
  80b354:	2089c83a 	sub	r4,r4,r2
  80b358:	218b883a 	add	r5,r4,r6
  80b35c:	01000d84 	movi	r4,54
  80b360:	2185c83a 	sub	r2,r4,r6
  80b364:	2dc0a90e 	bge	r5,r23,80b60c <_strtod_r+0xa5c>
  80b368:	b96fc83a 	sub	r23,r23,r5
  80b36c:	010007c4 	movi	r4,31
  80b370:	15c5c83a 	sub	r2,r2,r23
  80b374:	25c0b916 	blt	r4,r23,80b65c <_strtod_r+0xaac>
  80b378:	01000044 	movi	r4,1
  80b37c:	25c8983a 	sll	r4,r4,r23
  80b380:	d8000b15 	stw	zero,44(sp)
  80b384:	d9000d15 	stw	r4,52(sp)
  80b388:	b091883a 	add	r8,r22,r2
  80b38c:	1887883a 	add	r3,r3,r2
  80b390:	d8800817 	ldw	r2,32(sp)
  80b394:	18af883a 	add	r23,r3,r2
  80b398:	4005883a 	mov	r2,r8
  80b39c:	b200010e 	bge	r22,r8,80b3a4 <_strtod_r+0x7f4>
  80b3a0:	b005883a 	mov	r2,r22
  80b3a4:	b880010e 	bge	r23,r2,80b3ac <_strtod_r+0x7fc>
  80b3a8:	b805883a 	mov	r2,r23
  80b3ac:	0080030e 	bge	zero,r2,80b3bc <_strtod_r+0x80c>
  80b3b0:	4091c83a 	sub	r8,r8,r2
  80b3b4:	b8afc83a 	sub	r23,r23,r2
  80b3b8:	b0adc83a 	sub	r22,r22,r2
  80b3bc:	d8c00c17 	ldw	r3,48(sp)
  80b3c0:	18001726 	beq	r3,zero,80b420 <_strtod_r+0x870>
  80b3c4:	a00b883a 	mov	r5,r20
  80b3c8:	8009883a 	mov	r4,r16
  80b3cc:	180d883a 	mov	r6,r3
  80b3d0:	da001415 	stw	r8,80(sp)
  80b3d4:	080981c0 	call	80981c <__pow5mult>
  80b3d8:	1029883a 	mov	r20,r2
  80b3dc:	da001417 	ldw	r8,80(sp)
  80b3e0:	10012326 	beq	r2,zero,80b870 <_strtod_r+0xcc0>
  80b3e4:	d9800517 	ldw	r6,20(sp)
  80b3e8:	8009883a 	mov	r4,r16
  80b3ec:	100b883a 	mov	r5,r2
  80b3f0:	da001415 	stw	r8,80(sp)
  80b3f4:	08096200 	call	809620 <__multiply>
  80b3f8:	da001417 	ldw	r8,80(sp)
  80b3fc:	10011c26 	beq	r2,zero,80b870 <_strtod_r+0xcc0>
  80b400:	d9400517 	ldw	r5,20(sp)
  80b404:	8009883a 	mov	r4,r16
  80b408:	d8801315 	stw	r2,76(sp)
  80b40c:	da001415 	stw	r8,80(sp)
  80b410:	08092800 	call	809280 <_Bfree>
  80b414:	d8801317 	ldw	r2,76(sp)
  80b418:	da001417 	ldw	r8,80(sp)
  80b41c:	d8800515 	stw	r2,20(sp)
  80b420:	0200060e 	bge	zero,r8,80b43c <_strtod_r+0x88c>
  80b424:	d9400517 	ldw	r5,20(sp)
  80b428:	8009883a 	mov	r4,r16
  80b42c:	400d883a 	mov	r6,r8
  80b430:	080995c0 	call	80995c <__lshift>
  80b434:	d8800515 	stw	r2,20(sp)
  80b438:	10012626 	beq	r2,zero,80b8d4 <_strtod_r+0xd24>
  80b43c:	a8000626 	beq	r21,zero,80b458 <_strtod_r+0x8a8>
  80b440:	e00b883a 	mov	r5,fp
  80b444:	8009883a 	mov	r4,r16
  80b448:	a80d883a 	mov	r6,r21
  80b44c:	080981c0 	call	80981c <__pow5mult>
  80b450:	1039883a 	mov	fp,r2
  80b454:	10010626 	beq	r2,zero,80b870 <_strtod_r+0xcc0>
  80b458:	05c0060e 	bge	zero,r23,80b474 <_strtod_r+0x8c4>
  80b45c:	e00b883a 	mov	r5,fp
  80b460:	8009883a 	mov	r4,r16
  80b464:	b80d883a 	mov	r6,r23
  80b468:	080995c0 	call	80995c <__lshift>
  80b46c:	1039883a 	mov	fp,r2
  80b470:	1000ff26 	beq	r2,zero,80b870 <_strtod_r+0xcc0>
  80b474:	0580060e 	bge	zero,r22,80b490 <_strtod_r+0x8e0>
  80b478:	a00b883a 	mov	r5,r20
  80b47c:	8009883a 	mov	r4,r16
  80b480:	b00d883a 	mov	r6,r22
  80b484:	080995c0 	call	80995c <__lshift>
  80b488:	1029883a 	mov	r20,r2
  80b48c:	1000f826 	beq	r2,zero,80b870 <_strtod_r+0xcc0>
  80b490:	d9400517 	ldw	r5,20(sp)
  80b494:	8009883a 	mov	r4,r16
  80b498:	e00d883a 	mov	r6,fp
  80b49c:	0809b0c0 	call	809b0c <__mdiff>
  80b4a0:	1027883a 	mov	r19,r2
  80b4a4:	1000f226 	beq	r2,zero,80b870 <_strtod_r+0xcc0>
  80b4a8:	11000317 	ldw	r4,12(r2)
  80b4ac:	a00b883a 	mov	r5,r20
  80b4b0:	10000315 	stw	zero,12(r2)
  80b4b4:	d9000e15 	stw	r4,56(sp)
  80b4b8:	1009883a 	mov	r4,r2
  80b4bc:	0809aac0 	call	809aac <__mcmp>
  80b4c0:	10027116 	blt	r2,zero,80be88 <_strtod_r+0x12d8>
  80b4c4:	1002a426 	beq	r2,zero,80bf58 <_strtod_r+0x13a8>
  80b4c8:	9809883a 	mov	r4,r19
  80b4cc:	a00b883a 	mov	r5,r20
  80b4d0:	0809f5c0 	call	809f5c <__ratio>
  80b4d4:	1009883a 	mov	r4,r2
  80b4d8:	180b883a 	mov	r5,r3
  80b4dc:	000d883a 	mov	r6,zero
  80b4e0:	01d00034 	movhi	r7,16384
  80b4e4:	102d883a 	mov	r22,r2
  80b4e8:	182b883a 	mov	r21,r3
  80b4ec:	0815dac0 	call	815dac <__ledf2>
  80b4f0:	00804a16 	blt	zero,r2,80b61c <_strtod_r+0xa6c>
  80b4f4:	d8800e17 	ldw	r2,56(sp)
  80b4f8:	10006426 	beq	r2,zero,80b68c <_strtod_r+0xadc>
  80b4fc:	054ffc34 	movhi	r21,16368
  80b500:	d8000b15 	stw	zero,44(sp)
  80b504:	d8000d15 	stw	zero,52(sp)
  80b508:	a82d883a 	mov	r22,r21
  80b50c:	8ddffc2c 	andhi	r23,r17,32752
  80b510:	009ff834 	movhi	r2,32736
  80b514:	b8810b26 	beq	r23,r2,80b944 <_strtod_r+0xd94>
  80b518:	d8800817 	ldw	r2,32(sp)
  80b51c:	10001a26 	beq	r2,zero,80b588 <_strtod_r+0x9d8>
  80b520:	0081a834 	movhi	r2,1696
  80b524:	15c01836 	bltu	r2,r23,80b588 <_strtod_r+0x9d8>
  80b528:	d9000d17 	ldw	r4,52(sp)
  80b52c:	01d07834 	movhi	r7,16864
  80b530:	39ffffc4 	addi	r7,r7,-1
  80b534:	b00b883a 	mov	r5,r22
  80b538:	01bff034 	movhi	r6,65472
  80b53c:	0815dac0 	call	815dac <__ledf2>
  80b540:	00800e16 	blt	zero,r2,80b57c <_strtod_r+0x9cc>
  80b544:	d9000d17 	ldw	r4,52(sp)
  80b548:	b00b883a 	mov	r5,r22
  80b54c:	0813c0c0 	call	813c0c <__fixunsdfsi>
  80b550:	1001d026 	beq	r2,zero,80bc94 <_strtod_r+0x10e4>
  80b554:	1009883a 	mov	r4,r2
  80b558:	0816fd80 	call	816fd8 <__floatunsidf>
  80b55c:	d8800d15 	stw	r2,52(sp)
  80b560:	182d883a 	mov	r22,r3
  80b564:	d8c00e17 	ldw	r3,56(sp)
  80b568:	1801c81e 	bne	r3,zero,80bc8c <_strtod_r+0x10dc>
  80b56c:	b220003c 	xorhi	r8,r22,32768
  80b570:	d9000d17 	ldw	r4,52(sp)
  80b574:	402b883a 	mov	r21,r8
  80b578:	d9000b15 	stw	r4,44(sp)
  80b57c:	0081ac34 	movhi	r2,1712
  80b580:	a891883a 	add	r8,r21,r2
  80b584:	45ebc83a 	sub	r21,r8,r23
  80b588:	9009883a 	mov	r4,r18
  80b58c:	880b883a 	mov	r5,r17
  80b590:	0809ca40 	call	809ca4 <__ulp>
  80b594:	d9000b17 	ldw	r4,44(sp)
  80b598:	a80b883a 	mov	r5,r21
  80b59c:	100d883a 	mov	r6,r2
  80b5a0:	180f883a 	mov	r7,r3
  80b5a4:	0815e8c0 	call	815e8c <__muldf3>
  80b5a8:	9009883a 	mov	r4,r18
  80b5ac:	880b883a 	mov	r5,r17
  80b5b0:	100d883a 	mov	r6,r2
  80b5b4:	180f883a 	mov	r7,r3
  80b5b8:	0814ae00 	call	814ae0 <__adddf3>
  80b5bc:	1025883a 	mov	r18,r2
  80b5c0:	1823883a 	mov	r17,r3
  80b5c4:	182b883a 	mov	r21,r3
  80b5c8:	d8800817 	ldw	r2,32(sp)
  80b5cc:	1000021e 	bne	r2,zero,80b5d8 <_strtod_r+0xa28>
  80b5d0:	a89ffc2c 	andhi	r2,r21,32752
  80b5d4:	b880f726 	beq	r23,r2,80b9b4 <_strtod_r+0xe04>
  80b5d8:	d9400517 	ldw	r5,20(sp)
  80b5dc:	8009883a 	mov	r4,r16
  80b5e0:	08092800 	call	809280 <_Bfree>
  80b5e4:	8009883a 	mov	r4,r16
  80b5e8:	e00b883a 	mov	r5,fp
  80b5ec:	08092800 	call	809280 <_Bfree>
  80b5f0:	8009883a 	mov	r4,r16
  80b5f4:	a00b883a 	mov	r5,r20
  80b5f8:	08092800 	call	809280 <_Bfree>
  80b5fc:	8009883a 	mov	r4,r16
  80b600:	980b883a 	mov	r5,r19
  80b604:	08092800 	call	809280 <_Bfree>
  80b608:	003f2806 	br	80b2ac <__alt_data_end+0xff80b2ac>
  80b60c:	01000044 	movi	r4,1
  80b610:	d8000b15 	stw	zero,44(sp)
  80b614:	d9000d15 	stw	r4,52(sp)
  80b618:	003f5b06 	br	80b388 <__alt_data_end+0xff80b388>
  80b61c:	b009883a 	mov	r4,r22
  80b620:	a80b883a 	mov	r5,r21
  80b624:	000d883a 	mov	r6,zero
  80b628:	01cff834 	movhi	r7,16352
  80b62c:	0815e8c0 	call	815e8c <__muldf3>
  80b630:	d9000e17 	ldw	r4,56(sp)
  80b634:	d8800d15 	stw	r2,52(sp)
  80b638:	182d883a 	mov	r22,r3
  80b63c:	2000111e 	bne	r4,zero,80b684 <_strtod_r+0xad4>
  80b640:	1a20003c 	xorhi	r8,r3,32768
  80b644:	d8800b15 	stw	r2,44(sp)
  80b648:	402b883a 	mov	r21,r8
  80b64c:	003faf06 	br	80b50c <__alt_data_end+0xff80b50c>
  80b650:	a907c83a 	sub	r3,r21,r4
  80b654:	dd800c17 	ldw	r22,48(sp)
  80b658:	003f3b06 	br	80b348 <__alt_data_end+0xff80b348>
  80b65c:	013ef8c4 	movi	r4,-1053
  80b660:	05c00044 	movi	r23,1
  80b664:	2149c83a 	sub	r4,r4,r5
  80b668:	b908983a 	sll	r4,r23,r4
  80b66c:	ddc00d15 	stw	r23,52(sp)
  80b670:	d9000b15 	stw	r4,44(sp)
  80b674:	003f4406 	br	80b388 <__alt_data_end+0xff80b388>
  80b678:	dd800615 	stw	r22,24(sp)
  80b67c:	000f883a 	mov	r7,zero
  80b680:	003dee06 	br	80ae3c <__alt_data_end+0xff80ae3c>
  80b684:	1811883a 	mov	r8,r3
  80b688:	003fee06 	br	80b644 <__alt_data_end+0xff80b644>
  80b68c:	9000681e 	bne	r18,zero,80b830 <_strtod_r+0xc80>
  80b690:	00c00434 	movhi	r3,16
  80b694:	18ffffc4 	addi	r3,r3,-1
  80b698:	88c4703a 	and	r2,r17,r3
  80b69c:	1000661e 	bne	r2,zero,80b838 <_strtod_r+0xc88>
  80b6a0:	b009883a 	mov	r4,r22
  80b6a4:	a80b883a 	mov	r5,r21
  80b6a8:	000d883a 	mov	r6,zero
  80b6ac:	01cffc34 	movhi	r7,16368
  80b6b0:	0815dac0 	call	815dac <__ledf2>
  80b6b4:	10024d16 	blt	r2,zero,80bfec <_strtod_r+0x143c>
  80b6b8:	b009883a 	mov	r4,r22
  80b6bc:	a80b883a 	mov	r5,r21
  80b6c0:	000d883a 	mov	r6,zero
  80b6c4:	01cff834 	movhi	r7,16352
  80b6c8:	0815e8c0 	call	815e8c <__muldf3>
  80b6cc:	d8800d15 	stw	r2,52(sp)
  80b6d0:	182d883a 	mov	r22,r3
  80b6d4:	102b883a 	mov	r21,r2
  80b6d8:	1a20003c 	xorhi	r8,r3,32768
  80b6dc:	dd400b15 	stw	r21,44(sp)
  80b6e0:	402b883a 	mov	r21,r8
  80b6e4:	003f8906 	br	80b50c <__alt_data_end+0xff80b50c>
  80b6e8:	a811883a 	mov	r8,r21
  80b6ec:	000b883a 	mov	r5,zero
  80b6f0:	0013883a 	mov	r9,zero
  80b6f4:	91bff404 	addi	r6,r18,-48
  80b6f8:	00800244 	movi	r2,9
  80b6fc:	11801036 	bltu	r2,r6,80b740 <_strtod_r+0xb90>
  80b700:	28c00044 	addi	r3,r5,1
  80b704:	3005883a 	mov	r2,r6
  80b708:	30014e1e 	bne	r6,zero,80bc44 <_strtod_r+0x1094>
  80b70c:	d9000617 	ldw	r4,24(sp)
  80b710:	180b883a 	mov	r5,r3
  80b714:	20800044 	addi	r2,r4,1
  80b718:	d8800615 	stw	r2,24(sp)
  80b71c:	24800047 	ldb	r18,1(r4)
  80b720:	003ff406 	br	80b6f4 <__alt_data_end+0xff80b6f4>
  80b724:	01c00044 	movi	r7,1
  80b728:	b0800084 	addi	r2,r22,2
  80b72c:	d8800615 	stw	r2,24(sp)
  80b730:	b4800087 	ldb	r18,2(r22)
  80b734:	003e0b06 	br	80af64 <__alt_data_end+0xff80af64>
  80b738:	000f883a 	mov	r7,zero
  80b73c:	003ffa06 	br	80b728 <__alt_data_end+0xff80b728>
  80b740:	02800044 	movi	r10,1
  80b744:	003db806 	br	80ae28 <__alt_data_end+0xff80ae28>
  80b748:	00804d04 	movi	r2,308
  80b74c:	15807816 	blt	r2,r22,80b930 <_strtod_r+0xd80>
  80b750:	b039d13a 	srai	fp,r22,4
  80b754:	01800044 	movi	r6,1
  80b758:	3702390e 	bge	r6,fp,80c040 <_strtod_r+0x1490>
  80b75c:	008020b4 	movhi	r2,130
  80b760:	10ae8e04 	addi	r2,r2,-17864
  80b764:	d8800815 	stw	r2,32(sp)
  80b768:	9005883a 	mov	r2,r18
  80b76c:	dc800817 	ldw	r18,32(sp)
  80b770:	002d883a 	mov	r22,zero
  80b774:	9809883a 	mov	r4,r19
  80b778:	8807883a 	mov	r3,r17
  80b77c:	8027883a 	mov	r19,r16
  80b780:	3023883a 	mov	r17,r6
  80b784:	b021883a 	mov	r16,r22
  80b788:	da000a15 	stw	r8,40(sp)
  80b78c:	202d883a 	mov	r22,r4
  80b790:	e180004c 	andi	r6,fp,1
  80b794:	30000726 	beq	r6,zero,80b7b4 <_strtod_r+0xc04>
  80b798:	800c90fa 	slli	r6,r16,3
  80b79c:	1009883a 	mov	r4,r2
  80b7a0:	180b883a 	mov	r5,r3
  80b7a4:	9185883a 	add	r2,r18,r6
  80b7a8:	11800017 	ldw	r6,0(r2)
  80b7ac:	11c00117 	ldw	r7,4(r2)
  80b7b0:	0815e8c0 	call	815e8c <__muldf3>
  80b7b4:	e039d07a 	srai	fp,fp,1
  80b7b8:	84000044 	addi	r16,r16,1
  80b7bc:	e47ff41e 	bne	fp,r17,80b790 <__alt_data_end+0xff80b790>
  80b7c0:	da000a17 	ldw	r8,40(sp)
  80b7c4:	b009883a 	mov	r4,r22
  80b7c8:	1025883a 	mov	r18,r2
  80b7cc:	802d883a 	mov	r22,r16
  80b7d0:	1823883a 	mov	r17,r3
  80b7d4:	9821883a 	mov	r16,r19
  80b7d8:	2027883a 	mov	r19,r4
  80b7dc:	b01290fa 	slli	r9,r22,3
  80b7e0:	d9000817 	ldw	r4,32(sp)
  80b7e4:	01ff2c34 	movhi	r7,64688
  80b7e8:	900d883a 	mov	r6,r18
  80b7ec:	226d883a 	add	r22,r4,r9
  80b7f0:	b1000017 	ldw	r4,0(r22)
  80b7f4:	b1400117 	ldw	r5,4(r22)
  80b7f8:	89cf883a 	add	r7,r17,r7
  80b7fc:	da001415 	stw	r8,80(sp)
  80b800:	0815e8c0 	call	815e8c <__muldf3>
  80b804:	1025883a 	mov	r18,r2
  80b808:	011f2834 	movhi	r4,31904
  80b80c:	189ffc2c 	andhi	r2,r3,32752
  80b810:	da001417 	ldw	r8,80(sp)
  80b814:	20804636 	bltu	r4,r2,80b930 <_strtod_r+0xd80>
  80b818:	011f2434 	movhi	r4,31888
  80b81c:	2081ef2e 	bgeu	r4,r2,80bfdc <_strtod_r+0x142c>
  80b820:	045ffc34 	movhi	r17,32752
  80b824:	8c7fffc4 	addi	r17,r17,-1
  80b828:	04bfffc4 	movi	r18,-1
  80b82c:	003e8a06 	br	80b258 <__alt_data_end+0xff80b258>
  80b830:	00800044 	movi	r2,1
  80b834:	90811a26 	beq	r18,r2,80bca0 <_strtod_r+0x10f0>
  80b838:	d8000b15 	stw	zero,44(sp)
  80b83c:	056ffc34 	movhi	r21,49136
  80b840:	d8000d15 	stw	zero,52(sp)
  80b844:	058ffc34 	movhi	r22,16368
  80b848:	003f3006 	br	80b50c <__alt_data_end+0xff80b50c>
  80b84c:	00801944 	movi	r2,101
  80b850:	90be3326 	beq	r18,r2,80b120 <__alt_data_end+0xff80b120>
  80b854:	0011883a 	mov	r8,zero
  80b858:	0013883a 	mov	r9,zero
  80b85c:	02800044 	movi	r10,1
  80b860:	003d7306 	br	80ae30 <__alt_data_end+0xff80ae30>
  80b864:	d9001117 	ldw	r4,68(sp)
  80b868:	00bfffc4 	movi	r2,-1
  80b86c:	20804d1e 	bne	r4,r2,80b9a4 <_strtod_r+0xdf4>
  80b870:	9811883a 	mov	r8,r19
  80b874:	dcc01217 	ldw	r19,72(sp)
  80b878:	d8800517 	ldw	r2,20(sp)
  80b87c:	00c00884 	movi	r3,34
  80b880:	80c00015 	stw	r3,0(r16)
  80b884:	002b883a 	mov	r21,zero
  80b888:	05dffc34 	movhi	r23,32752
  80b88c:	100b883a 	mov	r5,r2
  80b890:	8009883a 	mov	r4,r16
  80b894:	da001415 	stw	r8,80(sp)
  80b898:	08092800 	call	809280 <_Bfree>
  80b89c:	8009883a 	mov	r4,r16
  80b8a0:	e00b883a 	mov	r5,fp
  80b8a4:	08092800 	call	809280 <_Bfree>
  80b8a8:	8009883a 	mov	r4,r16
  80b8ac:	a00b883a 	mov	r5,r20
  80b8b0:	08092800 	call	809280 <_Bfree>
  80b8b4:	d9400a17 	ldw	r5,40(sp)
  80b8b8:	8009883a 	mov	r4,r16
  80b8bc:	08092800 	call	809280 <_Bfree>
  80b8c0:	da001417 	ldw	r8,80(sp)
  80b8c4:	8009883a 	mov	r4,r16
  80b8c8:	400b883a 	mov	r5,r8
  80b8cc:	08092800 	call	809280 <_Bfree>
  80b8d0:	003d8106 	br	80aed8 <__alt_data_end+0xff80aed8>
  80b8d4:	9811883a 	mov	r8,r19
  80b8d8:	dcc01217 	ldw	r19,72(sp)
  80b8dc:	003fe706 	br	80b87c <__alt_data_end+0xff80b87c>
  80b8e0:	d9000717 	ldw	r4,28(sp)
  80b8e4:	d8800504 	addi	r2,sp,20
  80b8e8:	018020b4 	movhi	r6,130
  80b8ec:	d9000115 	stw	r4,4(sp)
  80b8f0:	31aed304 	addi	r6,r6,-17588
  80b8f4:	d8800015 	stw	r2,0(sp)
  80b8f8:	8009883a 	mov	r4,r16
  80b8fc:	d9400604 	addi	r5,sp,24
  80b900:	d9c00404 	addi	r7,sp,16
  80b904:	0811c600 	call	811c60 <__gethex>
  80b908:	154001cc 	andi	r21,r2,7
  80b90c:	a83d8726 	beq	r21,zero,80af2c <__alt_data_end+0xff80af2c>
  80b910:	00c00184 	movi	r3,6
  80b914:	a8c0eb1e 	bne	r21,r3,80bcc4 <_strtod_r+0x1114>
  80b918:	a5000044 	addi	r20,r20,1
  80b91c:	dd000615 	stw	r20,24(sp)
  80b920:	002b883a 	mov	r21,zero
  80b924:	002f883a 	mov	r23,zero
  80b928:	d8000715 	stw	zero,28(sp)
  80b92c:	003d6a06 	br	80aed8 <__alt_data_end+0xff80aed8>
  80b930:	00800884 	movi	r2,34
  80b934:	80800015 	stw	r2,0(r16)
  80b938:	002b883a 	mov	r21,zero
  80b93c:	05dffc34 	movhi	r23,32752
  80b940:	003d6506 	br	80aed8 <__alt_data_end+0xff80aed8>
  80b944:	00bf2c34 	movhi	r2,64688
  80b948:	88a3883a 	add	r17,r17,r2
  80b94c:	9009883a 	mov	r4,r18
  80b950:	880b883a 	mov	r5,r17
  80b954:	0809ca40 	call	809ca4 <__ulp>
  80b958:	d9000b17 	ldw	r4,44(sp)
  80b95c:	a80b883a 	mov	r5,r21
  80b960:	100d883a 	mov	r6,r2
  80b964:	180f883a 	mov	r7,r3
  80b968:	0815e8c0 	call	815e8c <__muldf3>
  80b96c:	9009883a 	mov	r4,r18
  80b970:	880b883a 	mov	r5,r17
  80b974:	100d883a 	mov	r6,r2
  80b978:	180f883a 	mov	r7,r3
  80b97c:	0814ae00 	call	814ae0 <__adddf3>
  80b980:	011f2834 	movhi	r4,31904
  80b984:	1025883a 	mov	r18,r2
  80b988:	213fffc4 	addi	r4,r4,-1
  80b98c:	189ffc2c 	andhi	r2,r3,32752
  80b990:	2080862e 	bgeu	r4,r2,80bbac <_strtod_r+0xffc>
  80b994:	d8801017 	ldw	r2,64(sp)
  80b998:	00dffc34 	movhi	r3,32752
  80b99c:	18ffffc4 	addi	r3,r3,-1
  80b9a0:	10ffb026 	beq	r2,r3,80b864 <__alt_data_end+0xff80b864>
  80b9a4:	045ffc34 	movhi	r17,32752
  80b9a8:	8c7fffc4 	addi	r17,r17,-1
  80b9ac:	04bfffc4 	movi	r18,-1
  80b9b0:	003f0906 	br	80b5d8 <__alt_data_end+0xff80b5d8>
  80b9b4:	d9000d17 	ldw	r4,52(sp)
  80b9b8:	b00b883a 	mov	r5,r22
  80b9bc:	0816e800 	call	816e80 <__fixdfsi>
  80b9c0:	1009883a 	mov	r4,r2
  80b9c4:	0816f080 	call	816f08 <__floatsidf>
  80b9c8:	d9000d17 	ldw	r4,52(sp)
  80b9cc:	b00b883a 	mov	r5,r22
  80b9d0:	100d883a 	mov	r6,r2
  80b9d4:	180f883a 	mov	r7,r3
  80b9d8:	08165b00 	call	8165b0 <__subdf3>
  80b9dc:	182d883a 	mov	r22,r3
  80b9e0:	d8c00e17 	ldw	r3,56(sp)
  80b9e4:	102f883a 	mov	r23,r2
  80b9e8:	1800131e 	bne	r3,zero,80ba38 <_strtod_r+0xe88>
  80b9ec:	9000121e 	bne	r18,zero,80ba38 <_strtod_r+0xe88>
  80b9f0:	01000434 	movhi	r4,16
  80b9f4:	213fffc4 	addi	r4,r4,-1
  80b9f8:	a92a703a 	and	r21,r21,r4
  80b9fc:	a8000e1e 	bne	r21,zero,80ba38 <_strtod_r+0xe88>
  80ba00:	01a52834 	movhi	r6,38048
  80ba04:	01cff434 	movhi	r7,16336
  80ba08:	318d6544 	addi	r6,r6,13717
  80ba0c:	39ffffc4 	addi	r7,r7,-1
  80ba10:	b809883a 	mov	r4,r23
  80ba14:	b00b883a 	mov	r5,r22
  80ba18:	0815dac0 	call	815dac <__ledf2>
  80ba1c:	103eee0e 	bge	r2,zero,80b5d8 <__alt_data_end+0xff80b5d8>
  80ba20:	9811883a 	mov	r8,r19
  80ba24:	d8800517 	ldw	r2,20(sp)
  80ba28:	dcc01217 	ldw	r19,72(sp)
  80ba2c:	002b883a 	mov	r21,zero
  80ba30:	882f883a 	mov	r23,r17
  80ba34:	003f9506 	br	80b88c <__alt_data_end+0xff80b88c>
  80ba38:	01a52834 	movhi	r6,38048
  80ba3c:	01cff834 	movhi	r7,16352
  80ba40:	318d6544 	addi	r6,r6,13717
  80ba44:	39ffffc4 	addi	r7,r7,-1
  80ba48:	b809883a 	mov	r4,r23
  80ba4c:	b00b883a 	mov	r5,r22
  80ba50:	0815dac0 	call	815dac <__ledf2>
  80ba54:	10000716 	blt	r2,zero,80ba74 <_strtod_r+0xec4>
  80ba58:	018d6c34 	movhi	r6,13744
  80ba5c:	31b94d44 	addi	r6,r6,-6859
  80ba60:	b809883a 	mov	r4,r23
  80ba64:	b00b883a 	mov	r5,r22
  80ba68:	01cff834 	movhi	r7,16352
  80ba6c:	0815ccc0 	call	815ccc <__gedf2>
  80ba70:	00bed90e 	bge	zero,r2,80b5d8 <__alt_data_end+0xff80b5d8>
  80ba74:	9811883a 	mov	r8,r19
  80ba78:	d8800517 	ldw	r2,20(sp)
  80ba7c:	dcc01217 	ldw	r19,72(sp)
  80ba80:	902b883a 	mov	r21,r18
  80ba84:	882f883a 	mov	r23,r17
  80ba88:	003f8006 	br	80b88c <__alt_data_end+0xff80b88c>
  80ba8c:	b03df226 	beq	r22,zero,80b258 <__alt_data_end+0xff80b258>
  80ba90:	05adc83a 	sub	r22,zero,r22
  80ba94:	b08003cc 	andi	r2,r22,15
  80ba98:	10000d26 	beq	r2,zero,80bad0 <_strtod_r+0xf20>
  80ba9c:	100490fa 	slli	r2,r2,3
  80baa0:	00c020b4 	movhi	r3,130
  80baa4:	18ee9804 	addi	r3,r3,-17824
  80baa8:	1885883a 	add	r2,r3,r2
  80baac:	11800017 	ldw	r6,0(r2)
  80bab0:	11c00117 	ldw	r7,4(r2)
  80bab4:	9009883a 	mov	r4,r18
  80bab8:	880b883a 	mov	r5,r17
  80babc:	da001415 	stw	r8,80(sp)
  80bac0:	081537c0 	call	81537c <__divdf3>
  80bac4:	da001417 	ldw	r8,80(sp)
  80bac8:	1025883a 	mov	r18,r2
  80bacc:	1823883a 	mov	r17,r3
  80bad0:	b02dd13a 	srai	r22,r22,4
  80bad4:	b03de026 	beq	r22,zero,80b258 <__alt_data_end+0xff80b258>
  80bad8:	008007c4 	movi	r2,31
  80badc:	15802c16 	blt	r2,r22,80bb90 <_strtod_r+0xfe0>
  80bae0:	b080040c 	andi	r2,r22,16
  80bae4:	10018726 	beq	r2,zero,80c104 <_strtod_r+0x1554>
  80bae8:	0581a60e 	bge	zero,r22,80c184 <_strtod_r+0x15d4>
  80baec:	00801a84 	movi	r2,106
  80baf0:	d8800815 	stw	r2,32(sp)
  80baf4:	070020b4 	movhi	fp,130
  80baf8:	8807883a 	mov	r3,r17
  80bafc:	e72ed804 	addi	fp,fp,-17568
  80bb00:	9005883a 	mov	r2,r18
  80bb04:	4023883a 	mov	r17,r8
  80bb08:	b180004c 	andi	r6,r22,1
  80bb0c:	30000526 	beq	r6,zero,80bb24 <_strtod_r+0xf74>
  80bb10:	e1800017 	ldw	r6,0(fp)
  80bb14:	e1c00117 	ldw	r7,4(fp)
  80bb18:	1009883a 	mov	r4,r2
  80bb1c:	180b883a 	mov	r5,r3
  80bb20:	0815e8c0 	call	815e8c <__muldf3>
  80bb24:	b02dd07a 	srai	r22,r22,1
  80bb28:	e7000204 	addi	fp,fp,8
  80bb2c:	05bff616 	blt	zero,r22,80bb08 <__alt_data_end+0xff80bb08>
  80bb30:	8811883a 	mov	r8,r17
  80bb34:	1823883a 	mov	r17,r3
  80bb38:	d8c00817 	ldw	r3,32(sp)
  80bb3c:	1025883a 	mov	r18,r2
  80bb40:	18000b26 	beq	r3,zero,80bb70 <_strtod_r+0xfc0>
  80bb44:	8d9ffc2c 	andhi	r22,r17,32752
  80bb48:	b02cd53a 	srli	r22,r22,20
  80bb4c:	00801ac4 	movi	r2,107
  80bb50:	1585c83a 	sub	r2,r2,r22
  80bb54:	0080060e 	bge	zero,r2,80bb70 <_strtod_r+0xfc0>
  80bb58:	00c007c4 	movi	r3,31
  80bb5c:	1881800e 	bge	r3,r2,80c160 <_strtod_r+0x15b0>
  80bb60:	00c00d04 	movi	r3,52
  80bb64:	0025883a 	mov	r18,zero
  80bb68:	1881810e 	bge	r3,r2,80c170 <_strtod_r+0x15c0>
  80bb6c:	0440dc34 	movhi	r17,880
  80bb70:	9009883a 	mov	r4,r18
  80bb74:	880b883a 	mov	r5,r17
  80bb78:	000d883a 	mov	r6,zero
  80bb7c:	000f883a 	mov	r7,zero
  80bb80:	da001415 	stw	r8,80(sp)
  80bb84:	0815c480 	call	815c48 <__eqdf2>
  80bb88:	da001417 	ldw	r8,80(sp)
  80bb8c:	103db31e 	bne	r2,zero,80b25c <__alt_data_end+0xff80b25c>
  80bb90:	00800884 	movi	r2,34
  80bb94:	80800015 	stw	r2,0(r16)
  80bb98:	002b883a 	mov	r21,zero
  80bb9c:	002f883a 	mov	r23,zero
  80bba0:	003ccd06 	br	80aed8 <__alt_data_end+0xff80aed8>
  80bba4:	009387c4 	movi	r2,19999
  80bba8:	003d1e06 	br	80b024 <__alt_data_end+0xff80b024>
  80bbac:	0440d434 	movhi	r17,848
  80bbb0:	1c63883a 	add	r17,r3,r17
  80bbb4:	882b883a 	mov	r21,r17
  80bbb8:	003e8306 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80bbbc:	14803fcc 	andi	r18,r2,255
  80bbc0:	9480201c 	xori	r18,r18,128
  80bbc4:	94bfe004 	addi	r18,r18,-128
  80bbc8:	a023883a 	mov	r17,r20
  80bbcc:	0039883a 	mov	fp,zero
  80bbd0:	002f883a 	mov	r23,zero
  80bbd4:	002b883a 	mov	r21,zero
  80bbd8:	003c8206 	br	80ade4 <__alt_data_end+0xff80ade4>
  80bbdc:	d9000917 	ldw	r4,36(sp)
  80bbe0:	00c00944 	movi	r3,37
  80bbe4:	1a07c83a 	sub	r3,r3,r8
  80bbe8:	193d8516 	blt	r3,r4,80b200 <__alt_data_end+0xff80b200>
  80bbec:	1221c83a 	sub	r16,r2,r8
  80bbf0:	800690fa 	slli	r3,r16,3
  80bbf4:	050020b4 	movhi	r20,130
  80bbf8:	a52e9804 	addi	r20,r20,-17824
  80bbfc:	a0c7883a 	add	r3,r20,r3
  80bc00:	19000017 	ldw	r4,0(r3)
  80bc04:	19400117 	ldw	r5,4(r3)
  80bc08:	900d883a 	mov	r6,r18
  80bc0c:	880f883a 	mov	r7,r17
  80bc10:	0815e8c0 	call	815e8c <__muldf3>
  80bc14:	d9000917 	ldw	r4,36(sp)
  80bc18:	180b883a 	mov	r5,r3
  80bc1c:	240dc83a 	sub	r6,r4,r16
  80bc20:	300c90fa 	slli	r6,r6,3
  80bc24:	1009883a 	mov	r4,r2
  80bc28:	a185883a 	add	r2,r20,r6
  80bc2c:	11800017 	ldw	r6,0(r2)
  80bc30:	11c00117 	ldw	r7,4(r2)
  80bc34:	0815e8c0 	call	815e8c <__muldf3>
  80bc38:	102b883a 	mov	r21,r2
  80bc3c:	182f883a 	mov	r23,r3
  80bc40:	003ca506 	br	80aed8 <__alt_data_end+0xff80aed8>
  80bc44:	48d3883a 	add	r9,r9,r3
  80bc48:	28010526 	beq	r5,zero,80c060 <_strtod_r+0x14b0>
  80bc4c:	2a0b883a 	add	r5,r5,r8
  80bc50:	01000204 	movi	r4,8
  80bc54:	01c00404 	movi	r7,16
  80bc58:	42000044 	addi	r8,r8,1
  80bc5c:	40ffffc4 	addi	r3,r8,-1
  80bc60:	20c00716 	blt	r4,r3,80bc80 <_strtod_r+0x10d0>
  80bc64:	bdc002a4 	muli	r23,r23,10
  80bc68:	417ffb1e 	bne	r8,r5,80bc58 <__alt_data_end+0xff80bc58>
  80bc6c:	00c00204 	movi	r3,8
  80bc70:	2a000044 	addi	r8,r5,1
  80bc74:	19405616 	blt	r3,r5,80bdd0 <_strtod_r+0x1220>
  80bc78:	d8c00617 	ldw	r3,24(sp)
  80bc7c:	003d5b06 	br	80b1ec <__alt_data_end+0xff80b1ec>
  80bc80:	3a3ff916 	blt	r7,r8,80bc68 <__alt_data_end+0xff80bc68>
  80bc84:	e70002a4 	muli	fp,fp,10
  80bc88:	003ff706 	br	80bc68 <__alt_data_end+0xff80bc68>
  80bc8c:	b011883a 	mov	r8,r22
  80bc90:	003e3706 	br	80b570 <__alt_data_end+0xff80b570>
  80bc94:	d8000d15 	stw	zero,52(sp)
  80bc98:	058ffc34 	movhi	r22,16368
  80bc9c:	003e3106 	br	80b564 <__alt_data_end+0xff80b564>
  80bca0:	883ee51e 	bne	r17,zero,80b838 <__alt_data_end+0xff80b838>
  80bca4:	9811883a 	mov	r8,r19
  80bca8:	dcc01217 	ldw	r19,72(sp)
  80bcac:	00800884 	movi	r2,34
  80bcb0:	80800015 	stw	r2,0(r16)
  80bcb4:	002b883a 	mov	r21,zero
  80bcb8:	d8800517 	ldw	r2,20(sp)
  80bcbc:	002f883a 	mov	r23,zero
  80bcc0:	003ef206 	br	80b88c <__alt_data_end+0xff80b88c>
  80bcc4:	d9800517 	ldw	r6,20(sp)
  80bcc8:	30000826 	beq	r6,zero,80bcec <_strtod_r+0x113c>
  80bccc:	01400d44 	movi	r5,53
  80bcd0:	d9000204 	addi	r4,sp,8
  80bcd4:	d8801315 	stw	r2,76(sp)
  80bcd8:	080a0740 	call	80a074 <__copybits>
  80bcdc:	d9400517 	ldw	r5,20(sp)
  80bce0:	8009883a 	mov	r4,r16
  80bce4:	08092800 	call	809280 <_Bfree>
  80bce8:	d8801317 	ldw	r2,76(sp)
  80bcec:	00c00184 	movi	r3,6
  80bcf0:	d9000417 	ldw	r4,16(sp)
  80bcf4:	1d400f36 	bltu	r3,r21,80bd34 <_strtod_r+0x1184>
  80bcf8:	a82a90ba 	slli	r21,r21,2
  80bcfc:	00c02074 	movhi	r3,129
  80bd00:	18ef4404 	addi	r3,r3,-17136
  80bd04:	a8eb883a 	add	r21,r21,r3
  80bd08:	a8c00017 	ldw	r3,0(r21)
  80bd0c:	1800683a 	jmp	r3
  80bd10:	0080bd88 	cmpgei	r2,zero,758
  80bd14:	0080bd64 	muli	r2,zero,757
  80bd18:	0080bd48 	cmpgei	r2,zero,757
  80bd1c:	0080bd2c 	andhi	r2,zero,756
  80bd20:	0080bd54 	movui	r2,757
  80bd24:	0080bd64 	muli	r2,zero,757
  80bd28:	0080bd88 	cmpgei	r2,zero,758
  80bd2c:	045ffc34 	movhi	r17,32752
  80bd30:	0025883a 	mov	r18,zero
  80bd34:	1080020c 	andi	r2,r2,8
  80bd38:	902b883a 	mov	r21,r18
  80bd3c:	103c6526 	beq	r2,zero,80aed4 <__alt_data_end+0xff80aed4>
  80bd40:	8de00034 	orhi	r23,r17,32768
  80bd44:	003c6406 	br	80aed8 <__alt_data_end+0xff80aed8>
  80bd48:	dc800217 	ldw	r18,8(sp)
  80bd4c:	dc400317 	ldw	r17,12(sp)
  80bd50:	003ff806 	br	80bd34 <__alt_data_end+0xff80bd34>
  80bd54:	04600034 	movhi	r17,32768
  80bd58:	8c7fffc4 	addi	r17,r17,-1
  80bd5c:	04bfffc4 	movi	r18,-1
  80bd60:	003ff406 	br	80bd34 <__alt_data_end+0xff80bd34>
  80bd64:	20c10cc4 	addi	r3,r4,1075
  80bd68:	dc400317 	ldw	r17,12(sp)
  80bd6c:	1806953a 	slli	r3,r3,20
  80bd70:	013ffc34 	movhi	r4,65520
  80bd74:	213fffc4 	addi	r4,r4,-1
  80bd78:	8922703a 	and	r17,r17,r4
  80bd7c:	dc800217 	ldw	r18,8(sp)
  80bd80:	1c62b03a 	or	r17,r3,r17
  80bd84:	003feb06 	br	80bd34 <__alt_data_end+0xff80bd34>
  80bd88:	0023883a 	mov	r17,zero
  80bd8c:	0025883a 	mov	r18,zero
  80bd90:	003fe806 	br	80bd34 <__alt_data_end+0xff80bd34>
  80bd94:	d8c00917 	ldw	r3,36(sp)
  80bd98:	00bffa84 	movi	r2,-22
  80bd9c:	18bd1816 	blt	r3,r2,80b200 <__alt_data_end+0xff80b200>
  80bda0:	180690fa 	slli	r3,r3,3
  80bda4:	008020b4 	movhi	r2,130
  80bda8:	10ae9804 	addi	r2,r2,-17824
  80bdac:	10c5c83a 	sub	r2,r2,r3
  80bdb0:	11800017 	ldw	r6,0(r2)
  80bdb4:	11c00117 	ldw	r7,4(r2)
  80bdb8:	9009883a 	mov	r4,r18
  80bdbc:	880b883a 	mov	r5,r17
  80bdc0:	081537c0 	call	81537c <__divdf3>
  80bdc4:	102b883a 	mov	r21,r2
  80bdc8:	182f883a 	mov	r23,r3
  80bdcc:	003c4206 	br	80aed8 <__alt_data_end+0xff80aed8>
  80bdd0:	00800404 	movi	r2,16
  80bdd4:	12008a0e 	bge	r2,r8,80c000 <_strtod_r+0x1450>
  80bdd8:	d9000617 	ldw	r4,24(sp)
  80bddc:	000b883a 	mov	r5,zero
  80bde0:	003e4c06 	br	80b714 <__alt_data_end+0xff80b714>
  80bde4:	014020b4 	movhi	r5,130
  80bde8:	d8c00617 	ldw	r3,24(sp)
  80bdec:	296eca04 	addi	r5,r5,-17624
  80bdf0:	01c00644 	movi	r7,25
  80bdf4:	00000b06 	br	80be24 <_strtod_r+0x1274>
  80bdf8:	18c00044 	addi	r3,r3,1
  80bdfc:	18800003 	ldbu	r2,0(r3)
  80be00:	113fefc4 	addi	r4,r2,-65
  80be04:	10803fcc 	andi	r2,r2,255
  80be08:	1080201c 	xori	r2,r2,128
  80be0c:	21003fcc 	andi	r4,r4,255
  80be10:	10bfe004 	addi	r2,r2,-128
  80be14:	39000136 	bltu	r7,r4,80be1c <_strtod_r+0x126c>
  80be18:	10800804 	addi	r2,r2,32
  80be1c:	29400044 	addi	r5,r5,1
  80be20:	11bbb01e 	bne	r2,r6,80ace4 <__alt_data_end+0xff80ace4>
  80be24:	29800007 	ldb	r6,0(r5)
  80be28:	303ff31e 	bne	r6,zero,80bdf8 <__alt_data_end+0xff80bdf8>
  80be2c:	014020b4 	movhi	r5,130
  80be30:	1811883a 	mov	r8,r3
  80be34:	d8c00615 	stw	r3,24(sp)
  80be38:	296ecb04 	addi	r5,r5,-17620
  80be3c:	01c00644 	movi	r7,25
  80be40:	00000a06 	br	80be6c <_strtod_r+0x12bc>
  80be44:	18800003 	ldbu	r2,0(r3)
  80be48:	113fefc4 	addi	r4,r2,-65
  80be4c:	10803fcc 	andi	r2,r2,255
  80be50:	1080201c 	xori	r2,r2,128
  80be54:	21003fcc 	andi	r4,r4,255
  80be58:	10bfe004 	addi	r2,r2,-128
  80be5c:	39000136 	bltu	r7,r4,80be64 <_strtod_r+0x12b4>
  80be60:	10800804 	addi	r2,r2,32
  80be64:	29400044 	addi	r5,r5,1
  80be68:	11807a1e 	bne	r2,r6,80c054 <_strtod_r+0x14a4>
  80be6c:	29800007 	ldb	r6,0(r5)
  80be70:	18c00044 	addi	r3,r3,1
  80be74:	303ff31e 	bne	r6,zero,80be44 <__alt_data_end+0xff80be44>
  80be78:	d8c00615 	stw	r3,24(sp)
  80be7c:	045ffc34 	movhi	r17,32752
  80be80:	0025883a 	mov	r18,zero
  80be84:	003c1206 	br	80aed0 <__alt_data_end+0xff80aed0>
  80be88:	d8800e17 	ldw	r2,56(sp)
  80be8c:	9811883a 	mov	r8,r19
  80be90:	dd401117 	ldw	r21,68(sp)
  80be94:	dcc01217 	ldw	r19,72(sp)
  80be98:	ddc01017 	ldw	r23,64(sp)
  80be9c:	1000491e 	bne	r2,zero,80bfc4 <_strtod_r+0x1414>
  80bea0:	9000481e 	bne	r18,zero,80bfc4 <_strtod_r+0x1414>
  80bea4:	00800434 	movhi	r2,16
  80bea8:	10bfffc4 	addi	r2,r2,-1
  80beac:	8884703a 	and	r2,r17,r2
  80beb0:	1000441e 	bne	r2,zero,80bfc4 <_strtod_r+0x1414>
  80beb4:	8d9ffc2c 	andhi	r22,r17,32752
  80beb8:	0081ac34 	movhi	r2,1712
  80bebc:	1580412e 	bgeu	r2,r22,80bfc4 <_strtod_r+0x1414>
  80bec0:	40800517 	ldw	r2,20(r8)
  80bec4:	1000031e 	bne	r2,zero,80bed4 <_strtod_r+0x1324>
  80bec8:	40800417 	ldw	r2,16(r8)
  80becc:	00c00044 	movi	r3,1
  80bed0:	18803c0e 	bge	r3,r2,80bfc4 <_strtod_r+0x1414>
  80bed4:	400b883a 	mov	r5,r8
  80bed8:	8009883a 	mov	r4,r16
  80bedc:	01800044 	movi	r6,1
  80bee0:	080995c0 	call	80995c <__lshift>
  80bee4:	1009883a 	mov	r4,r2
  80bee8:	a00b883a 	mov	r5,r20
  80beec:	d8801415 	stw	r2,80(sp)
  80bef0:	0809aac0 	call	809aac <__mcmp>
  80bef4:	da001417 	ldw	r8,80(sp)
  80bef8:	0080320e 	bge	zero,r2,80bfc4 <_strtod_r+0x1414>
  80befc:	d8800817 	ldw	r2,32(sp)
  80bf00:	10008526 	beq	r2,zero,80c118 <_strtod_r+0x1568>
  80bf04:	0081ac34 	movhi	r2,1712
  80bf08:	15808316 	blt	r2,r22,80c118 <_strtod_r+0x1568>
  80bf0c:	0080dc34 	movhi	r2,880
  80bf10:	15bf660e 	bge	r2,r22,80bcac <__alt_data_end+0xff80bcac>
  80bf14:	002b883a 	mov	r21,zero
  80bf18:	882f883a 	mov	r23,r17
  80bf1c:	a809883a 	mov	r4,r21
  80bf20:	b80b883a 	mov	r5,r23
  80bf24:	000d883a 	mov	r6,zero
  80bf28:	01ce5434 	movhi	r7,14672
  80bf2c:	da001415 	stw	r8,80(sp)
  80bf30:	0815e8c0 	call	815e8c <__muldf3>
  80bf34:	102b883a 	mov	r21,r2
  80bf38:	182f883a 	mov	r23,r3
  80bf3c:	da001417 	ldw	r8,80(sp)
  80bf40:	1800221e 	bne	r3,zero,80bfcc <_strtod_r+0x141c>
  80bf44:	d8800517 	ldw	r2,20(sp)
  80bf48:	a83e501e 	bne	r21,zero,80b88c <__alt_data_end+0xff80b88c>
  80bf4c:	00c00884 	movi	r3,34
  80bf50:	80c00015 	stw	r3,0(r16)
  80bf54:	003e4d06 	br	80b88c <__alt_data_end+0xff80b88c>
  80bf58:	d8c00e17 	ldw	r3,56(sp)
  80bf5c:	00800434 	movhi	r2,16
  80bf60:	9811883a 	mov	r8,r19
  80bf64:	10bfffc4 	addi	r2,r2,-1
  80bf68:	dcc01217 	ldw	r19,72(sp)
  80bf6c:	18002f26 	beq	r3,zero,80c02c <_strtod_r+0x147c>
  80bf70:	8886703a 	and	r3,r17,r2
  80bf74:	18805026 	beq	r3,r2,80c0b8 <_strtod_r+0x1508>
  80bf78:	d8c00b17 	ldw	r3,44(sp)
  80bf7c:	18002526 	beq	r3,zero,80c014 <_strtod_r+0x1464>
  80bf80:	1c6e703a 	and	r23,r3,r17
  80bf84:	b8002626 	beq	r23,zero,80c020 <_strtod_r+0x1470>
  80bf88:	d9000e17 	ldw	r4,56(sp)
  80bf8c:	20003626 	beq	r4,zero,80c068 <_strtod_r+0x14b8>
  80bf90:	d9800817 	ldw	r6,32(sp)
  80bf94:	9009883a 	mov	r4,r18
  80bf98:	880b883a 	mov	r5,r17
  80bf9c:	da001415 	stw	r8,80(sp)
  80bfa0:	080ab4c0 	call	80ab4c <sulp>
  80bfa4:	9009883a 	mov	r4,r18
  80bfa8:	880b883a 	mov	r5,r17
  80bfac:	100d883a 	mov	r6,r2
  80bfb0:	180f883a 	mov	r7,r3
  80bfb4:	0814ae00 	call	814ae0 <__adddf3>
  80bfb8:	da001417 	ldw	r8,80(sp)
  80bfbc:	102b883a 	mov	r21,r2
  80bfc0:	182f883a 	mov	r23,r3
  80bfc4:	d8800817 	ldw	r2,32(sp)
  80bfc8:	103fd41e 	bne	r2,zero,80bf1c <__alt_data_end+0xff80bf1c>
  80bfcc:	d8800517 	ldw	r2,20(sp)
  80bfd0:	003e2e06 	br	80b88c <__alt_data_end+0xff80b88c>
  80bfd4:	000b883a 	mov	r5,zero
  80bfd8:	003c7c06 	br	80b1cc <__alt_data_end+0xff80b1cc>
  80bfdc:	0440d434 	movhi	r17,848
  80bfe0:	1c63883a 	add	r17,r3,r17
  80bfe4:	d8000815 	stw	zero,32(sp)
  80bfe8:	003c9c06 	br	80b25c <__alt_data_end+0xff80b25c>
  80bfec:	002b883a 	mov	r21,zero
  80bff0:	022ff834 	movhi	r8,49120
  80bff4:	d8000d15 	stw	zero,52(sp)
  80bff8:	058ff834 	movhi	r22,16352
  80bffc:	003db706 	br	80b6dc <__alt_data_end+0xff80b6dc>
  80c000:	e08002a4 	muli	r2,fp,10
  80c004:	d9000617 	ldw	r4,24(sp)
  80c008:	000b883a 	mov	r5,zero
  80c00c:	30b9883a 	add	fp,r6,r2
  80c010:	003dc006 	br	80b714 <__alt_data_end+0xff80b714>
  80c014:	d8c00d17 	ldw	r3,52(sp)
  80c018:	1c84703a 	and	r2,r3,r18
  80c01c:	103fda1e 	bne	r2,zero,80bf88 <__alt_data_end+0xff80bf88>
  80c020:	902b883a 	mov	r21,r18
  80c024:	882f883a 	mov	r23,r17
  80c028:	003fe606 	br	80bfc4 <__alt_data_end+0xff80bfc4>
  80c02c:	8884703a 	and	r2,r17,r2
  80c030:	103fd11e 	bne	r2,zero,80bf78 <__alt_data_end+0xff80bf78>
  80c034:	903fd01e 	bne	r18,zero,80bf78 <__alt_data_end+0xff80bf78>
  80c038:	8d9ffc2c 	andhi	r22,r17,32752
  80c03c:	003faf06 	br	80befc <__alt_data_end+0xff80befc>
  80c040:	00c020b4 	movhi	r3,130
  80c044:	18ee8e04 	addi	r3,r3,-17864
  80c048:	d8c00815 	stw	r3,32(sp)
  80c04c:	002d883a 	mov	r22,zero
  80c050:	003de206 	br	80b7dc <__alt_data_end+0xff80b7dc>
  80c054:	40800044 	addi	r2,r8,1
  80c058:	d8800615 	stw	r2,24(sp)
  80c05c:	003f8706 	br	80be7c <__alt_data_end+0xff80be7c>
  80c060:	400b883a 	mov	r5,r8
  80c064:	003f0106 	br	80bc6c <__alt_data_end+0xff80bc6c>
  80c068:	d9800817 	ldw	r6,32(sp)
  80c06c:	9009883a 	mov	r4,r18
  80c070:	880b883a 	mov	r5,r17
  80c074:	da001415 	stw	r8,80(sp)
  80c078:	080ab4c0 	call	80ab4c <sulp>
  80c07c:	9009883a 	mov	r4,r18
  80c080:	880b883a 	mov	r5,r17
  80c084:	100d883a 	mov	r6,r2
  80c088:	180f883a 	mov	r7,r3
  80c08c:	08165b00 	call	8165b0 <__subdf3>
  80c090:	1009883a 	mov	r4,r2
  80c094:	180b883a 	mov	r5,r3
  80c098:	000d883a 	mov	r6,zero
  80c09c:	000f883a 	mov	r7,zero
  80c0a0:	102b883a 	mov	r21,r2
  80c0a4:	182f883a 	mov	r23,r3
  80c0a8:	0815c480 	call	815c48 <__eqdf2>
  80c0ac:	da001417 	ldw	r8,80(sp)
  80c0b0:	103efe26 	beq	r2,zero,80bcac <__alt_data_end+0xff80bcac>
  80c0b4:	003fc306 	br	80bfc4 <__alt_data_end+0xff80bfc4>
  80c0b8:	d9000817 	ldw	r4,32(sp)
  80c0bc:	20001426 	beq	r4,zero,80c110 <_strtod_r+0x1560>
  80c0c0:	889ffc2c 	andhi	r2,r17,32752
  80c0c4:	00c1a834 	movhi	r3,1696
  80c0c8:	18801136 	bltu	r3,r2,80c110 <_strtod_r+0x1560>
  80c0cc:	1004d53a 	srli	r2,r2,20
  80c0d0:	00c01ac4 	movi	r3,107
  80c0d4:	1887c83a 	sub	r3,r3,r2
  80c0d8:	00bfffc4 	movi	r2,-1
  80c0dc:	10c4983a 	sll	r2,r2,r3
  80c0e0:	90bfa51e 	bne	r18,r2,80bf78 <__alt_data_end+0xff80bf78>
  80c0e4:	009ffc34 	movhi	r2,32752
  80c0e8:	10bfffc4 	addi	r2,r2,-1
  80c0ec:	88802826 	beq	r17,r2,80c190 <_strtod_r+0x15e0>
  80c0f0:	8c5ffc2c 	andhi	r17,r17,32752
  80c0f4:	00800434 	movhi	r2,16
  80c0f8:	002b883a 	mov	r21,zero
  80c0fc:	88af883a 	add	r23,r17,r2
  80c100:	003fb006 	br	80bfc4 <__alt_data_end+0xff80bfc4>
  80c104:	d8000815 	stw	zero,32(sp)
  80c108:	05be7a16 	blt	zero,r22,80baf4 <__alt_data_end+0xff80baf4>
  80c10c:	003e9806 	br	80bb70 <__alt_data_end+0xff80bb70>
  80c110:	00bfffc4 	movi	r2,-1
  80c114:	003ff206 	br	80c0e0 <__alt_data_end+0xff80c0e0>
  80c118:	00bffc34 	movhi	r2,65520
  80c11c:	b0ad883a 	add	r22,r22,r2
  80c120:	057fffc4 	movi	r21,-1
  80c124:	00800434 	movhi	r2,16
  80c128:	1545883a 	add	r2,r2,r21
  80c12c:	b0aeb03a 	or	r23,r22,r2
  80c130:	003fa406 	br	80bfc4 <__alt_data_end+0xff80bfc4>
  80c134:	014020b4 	movhi	r5,130
  80c138:	296ece04 	addi	r5,r5,-17608
  80c13c:	d9000604 	addi	r4,sp,24
  80c140:	d9800204 	addi	r6,sp,8
  80c144:	08124940 	call	812494 <__hexnan>
  80c148:	00c00144 	movi	r3,5
  80c14c:	10fb5e1e 	bne	r2,r3,80aec8 <__alt_data_end+0xff80aec8>
  80c150:	dc400317 	ldw	r17,12(sp)
  80c154:	dc800217 	ldw	r18,8(sp)
  80c158:	8c5ffc34 	orhi	r17,r17,32752
  80c15c:	003b5c06 	br	80aed0 <__alt_data_end+0xff80aed0>
  80c160:	00ffffc4 	movi	r3,-1
  80c164:	1884983a 	sll	r2,r3,r2
  80c168:	14a4703a 	and	r18,r2,r18
  80c16c:	003e8006 	br	80bb70 <__alt_data_end+0xff80bb70>
  80c170:	10bff804 	addi	r2,r2,-32
  80c174:	00ffffc4 	movi	r3,-1
  80c178:	1884983a 	sll	r2,r3,r2
  80c17c:	1462703a 	and	r17,r2,r17
  80c180:	003e7b06 	br	80bb70 <__alt_data_end+0xff80bb70>
  80c184:	01001a84 	movi	r4,106
  80c188:	d9000815 	stw	r4,32(sp)
  80c18c:	003e6d06 	br	80bb44 <__alt_data_end+0xff80bb44>
  80c190:	00bfffc4 	movi	r2,-1
  80c194:	90bfd61e 	bne	r18,r2,80c0f0 <__alt_data_end+0xff80c0f0>
  80c198:	003db706 	br	80b878 <__alt_data_end+0xff80b878>

0080c19c <strtod>:
  80c19c:	00c020b4 	movhi	r3,130
  80c1a0:	18f6e204 	addi	r3,r3,-9336
  80c1a4:	2005883a 	mov	r2,r4
  80c1a8:	19000017 	ldw	r4,0(r3)
  80c1ac:	280d883a 	mov	r6,r5
  80c1b0:	100b883a 	mov	r5,r2
  80c1b4:	080abb01 	jmpi	80abb0 <_strtod_r>

0080c1b8 <strtof>:
  80c1b8:	defffb04 	addi	sp,sp,-20
  80c1bc:	dcc00315 	stw	r19,12(sp)
  80c1c0:	04c020b4 	movhi	r19,130
  80c1c4:	9cf6e204 	addi	r19,r19,-9336
  80c1c8:	2005883a 	mov	r2,r4
  80c1cc:	99000017 	ldw	r4,0(r19)
  80c1d0:	280d883a 	mov	r6,r5
  80c1d4:	100b883a 	mov	r5,r2
  80c1d8:	dfc00415 	stw	ra,16(sp)
  80c1dc:	dc800215 	stw	r18,8(sp)
  80c1e0:	dc400115 	stw	r17,4(sp)
  80c1e4:	dc000015 	stw	r16,0(sp)
  80c1e8:	080abb00 	call	80abb0 <_strtod_r>
  80c1ec:	1009883a 	mov	r4,r2
  80c1f0:	180b883a 	mov	r5,r3
  80c1f4:	1025883a 	mov	r18,r2
  80c1f8:	1823883a 	mov	r17,r3
  80c1fc:	081707c0 	call	81707c <__truncdfsf2>
  80c200:	1009883a 	mov	r4,r2
  80c204:	000b883a 	mov	r5,zero
  80c208:	1021883a 	mov	r16,r2
  80c20c:	08148fc0 	call	8148fc <__eqsf2>
  80c210:	1000111e 	bne	r2,zero,80c258 <strtof+0xa0>
  80c214:	9009883a 	mov	r4,r18
  80c218:	880b883a 	mov	r5,r17
  80c21c:	000d883a 	mov	r6,zero
  80c220:	000f883a 	mov	r7,zero
  80c224:	0815c480 	call	815c48 <__eqdf2>
  80c228:	10000b26 	beq	r2,zero,80c258 <strtof+0xa0>
  80c22c:	98800017 	ldw	r2,0(r19)
  80c230:	00c00884 	movi	r3,34
  80c234:	10c00015 	stw	r3,0(r2)
  80c238:	8005883a 	mov	r2,r16
  80c23c:	dfc00417 	ldw	ra,16(sp)
  80c240:	dcc00317 	ldw	r19,12(sp)
  80c244:	dc800217 	ldw	r18,8(sp)
  80c248:	dc400117 	ldw	r17,4(sp)
  80c24c:	dc000017 	ldw	r16,0(sp)
  80c250:	dec00504 	addi	sp,sp,20
  80c254:	f800283a 	ret
  80c258:	015fe034 	movhi	r5,32640
  80c25c:	297fffc4 	addi	r5,r5,-1
  80c260:	8009883a 	mov	r4,r16
  80c264:	08149700 	call	814970 <__gesf2>
  80c268:	0080070e 	bge	zero,r2,80c288 <strtof+0xd0>
  80c26c:	01dffc34 	movhi	r7,32752
  80c270:	39ffffc4 	addi	r7,r7,-1
  80c274:	9009883a 	mov	r4,r18
  80c278:	880b883a 	mov	r5,r17
  80c27c:	01bfffc4 	movi	r6,-1
  80c280:	0815ccc0 	call	815ccc <__gedf2>
  80c284:	00bfe90e 	bge	zero,r2,80c22c <__alt_data_end+0xff80c22c>
  80c288:	017fe034 	movhi	r5,65408
  80c28c:	297fffc4 	addi	r5,r5,-1
  80c290:	8009883a 	mov	r4,r16
  80c294:	0814a280 	call	814a28 <__lesf2>
  80c298:	103fe70e 	bge	r2,zero,80c238 <__alt_data_end+0xff80c238>
  80c29c:	01fffc34 	movhi	r7,65520
  80c2a0:	39ffffc4 	addi	r7,r7,-1
  80c2a4:	9009883a 	mov	r4,r18
  80c2a8:	880b883a 	mov	r5,r17
  80c2ac:	01bfffc4 	movi	r6,-1
  80c2b0:	0815dac0 	call	815dac <__ledf2>
  80c2b4:	103fdd0e 	bge	r2,zero,80c22c <__alt_data_end+0xff80c22c>
  80c2b8:	003fdf06 	br	80c238 <__alt_data_end+0xff80c238>

0080c2bc <_strtol_r>:
  80c2bc:	008020b4 	movhi	r2,130
  80c2c0:	defff404 	addi	sp,sp,-48
  80c2c4:	10b6e504 	addi	r2,r2,-9324
  80c2c8:	dcc00515 	stw	r19,20(sp)
  80c2cc:	14c00017 	ldw	r19,0(r2)
  80c2d0:	dd800815 	stw	r22,32(sp)
  80c2d4:	dd400715 	stw	r21,28(sp)
  80c2d8:	dd000615 	stw	r20,24(sp)
  80c2dc:	dfc00b15 	stw	ra,44(sp)
  80c2e0:	df000a15 	stw	fp,40(sp)
  80c2e4:	ddc00915 	stw	r23,36(sp)
  80c2e8:	dc800415 	stw	r18,16(sp)
  80c2ec:	dc400315 	stw	r17,12(sp)
  80c2f0:	dc000215 	stw	r16,8(sp)
  80c2f4:	282b883a 	mov	r21,r5
  80c2f8:	d9000015 	stw	r4,0(sp)
  80c2fc:	3029883a 	mov	r20,r6
  80c300:	382d883a 	mov	r22,r7
  80c304:	2813883a 	mov	r9,r5
  80c308:	4a000003 	ldbu	r8,0(r9)
  80c30c:	4807883a 	mov	r3,r9
  80c310:	4a400044 	addi	r9,r9,1
  80c314:	9a05883a 	add	r2,r19,r8
  80c318:	10800043 	ldbu	r2,1(r2)
  80c31c:	1080020c 	andi	r2,r2,8
  80c320:	103ff91e 	bne	r2,zero,80c308 <__alt_data_end+0xff80c308>
  80c324:	00800b44 	movi	r2,45
  80c328:	4025883a 	mov	r18,r8
  80c32c:	4823883a 	mov	r17,r9
  80c330:	40805826 	beq	r8,r2,80c494 <_strtol_r+0x1d8>
  80c334:	00800ac4 	movi	r2,43
  80c338:	40805a26 	beq	r8,r2,80c4a4 <_strtol_r+0x1e8>
  80c33c:	0039883a 	mov	fp,zero
  80c340:	b0000426 	beq	r22,zero,80c354 <_strtol_r+0x98>
  80c344:	00800404 	movi	r2,16
  80c348:	b0805a26 	beq	r22,r2,80c4b4 <_strtol_r+0x1f8>
  80c34c:	b02f883a 	mov	r23,r22
  80c350:	00000406 	br	80c364 <_strtol_r+0xa8>
  80c354:	00800c04 	movi	r2,48
  80c358:	90806126 	beq	r18,r2,80c4e0 <_strtol_r+0x224>
  80c35c:	05800284 	movi	r22,10
  80c360:	b02f883a 	mov	r23,r22
  80c364:	00e00034 	movhi	r3,32768
  80c368:	18ffffc4 	addi	r3,r3,-1
  80c36c:	e0e1883a 	add	r16,fp,r3
  80c370:	b80b883a 	mov	r5,r23
  80c374:	8009883a 	mov	r4,r16
  80c378:	08148f40 	call	8148f4 <__umodsi3>
  80c37c:	8009883a 	mov	r4,r16
  80c380:	b80b883a 	mov	r5,r23
  80c384:	d8800115 	stw	r2,4(sp)
  80c388:	08148ec0 	call	8148ec <__udivsi3>
  80c38c:	9c91883a 	add	r8,r19,r18
  80c390:	42000043 	ldbu	r8,1(r8)
  80c394:	8807883a 	mov	r3,r17
  80c398:	000d883a 	mov	r6,zero
  80c39c:	4240010c 	andi	r9,r8,4
  80c3a0:	0009883a 	mov	r4,zero
  80c3a4:	02800044 	movi	r10,1
  80c3a8:	017fffc4 	movi	r5,-1
  80c3ac:	d9c00117 	ldw	r7,4(sp)
  80c3b0:	48000e26 	beq	r9,zero,80c3ec <_strtol_r+0x130>
  80c3b4:	923ff404 	addi	r8,r18,-48
  80c3b8:	4580120e 	bge	r8,r22,80c404 <_strtol_r+0x148>
  80c3bc:	31400526 	beq	r6,r5,80c3d4 <_strtol_r+0x118>
  80c3c0:	11002736 	bltu	r2,r4,80c460 <_strtol_r+0x1a4>
  80c3c4:	20802526 	beq	r4,r2,80c45c <_strtol_r+0x1a0>
  80c3c8:	25c9383a 	mul	r4,r4,r23
  80c3cc:	01800044 	movi	r6,1
  80c3d0:	4109883a 	add	r4,r8,r4
  80c3d4:	1c800003 	ldbu	r18,0(r3)
  80c3d8:	18c00044 	addi	r3,r3,1
  80c3dc:	9c91883a 	add	r8,r19,r18
  80c3e0:	42000043 	ldbu	r8,1(r8)
  80c3e4:	4240010c 	andi	r9,r8,4
  80c3e8:	483ff21e 	bne	r9,zero,80c3b4 <__alt_data_end+0xff80c3b4>
  80c3ec:	420000cc 	andi	r8,r8,3
  80c3f0:	40000426 	beq	r8,zero,80c404 <_strtol_r+0x148>
  80c3f4:	42801c26 	beq	r8,r10,80c468 <_strtol_r+0x1ac>
  80c3f8:	024015c4 	movi	r9,87
  80c3fc:	9251c83a 	sub	r8,r18,r9
  80c400:	45bfee16 	blt	r8,r22,80c3bc <__alt_data_end+0xff80c3bc>
  80c404:	00bfffc4 	movi	r2,-1
  80c408:	30801926 	beq	r6,r2,80c470 <_strtol_r+0x1b4>
  80c40c:	0705c83a 	sub	r2,zero,fp
  80c410:	2084f03a 	xor	r2,r4,r2
  80c414:	1739883a 	add	fp,r2,fp
  80c418:	e005883a 	mov	r2,fp
  80c41c:	a0000326 	beq	r20,zero,80c42c <_strtol_r+0x170>
  80c420:	30001a1e 	bne	r6,zero,80c48c <_strtol_r+0x1d0>
  80c424:	a80b883a 	mov	r5,r21
  80c428:	a1400015 	stw	r5,0(r20)
  80c42c:	dfc00b17 	ldw	ra,44(sp)
  80c430:	df000a17 	ldw	fp,40(sp)
  80c434:	ddc00917 	ldw	r23,36(sp)
  80c438:	dd800817 	ldw	r22,32(sp)
  80c43c:	dd400717 	ldw	r21,28(sp)
  80c440:	dd000617 	ldw	r20,24(sp)
  80c444:	dcc00517 	ldw	r19,20(sp)
  80c448:	dc800417 	ldw	r18,16(sp)
  80c44c:	dc400317 	ldw	r17,12(sp)
  80c450:	dc000217 	ldw	r16,8(sp)
  80c454:	dec00c04 	addi	sp,sp,48
  80c458:	f800283a 	ret
  80c45c:	3a3fda0e 	bge	r7,r8,80c3c8 <__alt_data_end+0xff80c3c8>
  80c460:	01bfffc4 	movi	r6,-1
  80c464:	003fdb06 	br	80c3d4 <__alt_data_end+0xff80c3d4>
  80c468:	02400dc4 	movi	r9,55
  80c46c:	003fe306 	br	80c3fc <__alt_data_end+0xff80c3fc>
  80c470:	d9000017 	ldw	r4,0(sp)
  80c474:	00800884 	movi	r2,34
  80c478:	20800015 	stw	r2,0(r4)
  80c47c:	00a00034 	movhi	r2,32768
  80c480:	10bfffc4 	addi	r2,r2,-1
  80c484:	e085883a 	add	r2,fp,r2
  80c488:	a03fe826 	beq	r20,zero,80c42c <__alt_data_end+0xff80c42c>
  80c48c:	197fffc4 	addi	r5,r3,-1
  80c490:	003fe506 	br	80c428 <__alt_data_end+0xff80c428>
  80c494:	1c400084 	addi	r17,r3,2
  80c498:	1c800043 	ldbu	r18,1(r3)
  80c49c:	07000044 	movi	fp,1
  80c4a0:	003fa706 	br	80c340 <__alt_data_end+0xff80c340>
  80c4a4:	1c400084 	addi	r17,r3,2
  80c4a8:	1c800043 	ldbu	r18,1(r3)
  80c4ac:	0039883a 	mov	fp,zero
  80c4b0:	003fa306 	br	80c340 <__alt_data_end+0xff80c340>
  80c4b4:	00800c04 	movi	r2,48
  80c4b8:	90bfa41e 	bne	r18,r2,80c34c <__alt_data_end+0xff80c34c>
  80c4bc:	88800003 	ldbu	r2,0(r17)
  80c4c0:	00c01604 	movi	r3,88
  80c4c4:	108037cc 	andi	r2,r2,223
  80c4c8:	10ffa01e 	bne	r2,r3,80c34c <__alt_data_end+0xff80c34c>
  80c4cc:	05c00404 	movi	r23,16
  80c4d0:	8c800043 	ldbu	r18,1(r17)
  80c4d4:	b82d883a 	mov	r22,r23
  80c4d8:	8c400084 	addi	r17,r17,2
  80c4dc:	003fa106 	br	80c364 <__alt_data_end+0xff80c364>
  80c4e0:	88800003 	ldbu	r2,0(r17)
  80c4e4:	00c01604 	movi	r3,88
  80c4e8:	108037cc 	andi	r2,r2,223
  80c4ec:	10fff726 	beq	r2,r3,80c4cc <__alt_data_end+0xff80c4cc>
  80c4f0:	05800204 	movi	r22,8
  80c4f4:	b02f883a 	mov	r23,r22
  80c4f8:	003f9a06 	br	80c364 <__alt_data_end+0xff80c364>

0080c4fc <strtol>:
  80c4fc:	2007883a 	mov	r3,r4
  80c500:	010020b4 	movhi	r4,130
  80c504:	2136e204 	addi	r4,r4,-9336
  80c508:	21000017 	ldw	r4,0(r4)
  80c50c:	2805883a 	mov	r2,r5
  80c510:	300f883a 	mov	r7,r6
  80c514:	180b883a 	mov	r5,r3
  80c518:	100d883a 	mov	r6,r2
  80c51c:	080c2bc1 	jmpi	80c2bc <_strtol_r>

0080c520 <_strtoll_r>:
  80c520:	008020b4 	movhi	r2,130
  80c524:	deffef04 	addi	sp,sp,-68
  80c528:	10b6e504 	addi	r2,r2,-9324
  80c52c:	dd800d15 	stw	r22,52(sp)
  80c530:	15800017 	ldw	r22,0(r2)
  80c534:	df000f15 	stw	fp,60(sp)
  80c538:	dfc01015 	stw	ra,64(sp)
  80c53c:	ddc00e15 	stw	r23,56(sp)
  80c540:	dd400c15 	stw	r21,48(sp)
  80c544:	dd000b15 	stw	r20,44(sp)
  80c548:	dcc00a15 	stw	r19,40(sp)
  80c54c:	dc800915 	stw	r18,36(sp)
  80c550:	dc400815 	stw	r17,32(sp)
  80c554:	dc000715 	stw	r16,28(sp)
  80c558:	d9400415 	stw	r5,16(sp)
  80c55c:	d9000515 	stw	r4,20(sp)
  80c560:	d9800215 	stw	r6,8(sp)
  80c564:	3839883a 	mov	fp,r7
  80c568:	2811883a 	mov	r8,r5
  80c56c:	42400003 	ldbu	r9,0(r8)
  80c570:	4007883a 	mov	r3,r8
  80c574:	42000044 	addi	r8,r8,1
  80c578:	b245883a 	add	r2,r22,r9
  80c57c:	10800043 	ldbu	r2,1(r2)
  80c580:	1080020c 	andi	r2,r2,8
  80c584:	103ff91e 	bne	r2,zero,80c56c <__alt_data_end+0xff80c56c>
  80c588:	00800b44 	movi	r2,45
  80c58c:	4025883a 	mov	r18,r8
  80c590:	48807d26 	beq	r9,r2,80c788 <_strtoll_r+0x268>
  80c594:	00800ac4 	movi	r2,43
  80c598:	48808026 	beq	r9,r2,80c79c <_strtoll_r+0x27c>
  80c59c:	d8000115 	stw	zero,4(sp)
  80c5a0:	e0000a26 	beq	fp,zero,80c5cc <_strtoll_r+0xac>
  80c5a4:	00800404 	movi	r2,16
  80c5a8:	e0808826 	beq	fp,r2,80c7cc <_strtoll_r+0x2ac>
  80c5ac:	e005d7fa 	srai	r2,fp,31
  80c5b0:	d8c00117 	ldw	r3,4(sp)
  80c5b4:	e027883a 	mov	r19,fp
  80c5b8:	d8800015 	stw	r2,0(sp)
  80c5bc:	18000a26 	beq	r3,zero,80c5e8 <_strtoll_r+0xc8>
  80c5c0:	0023883a 	mov	r17,zero
  80c5c4:	04200034 	movhi	r16,32768
  80c5c8:	00000a06 	br	80c5f4 <_strtoll_r+0xd4>
  80c5cc:	00800c04 	movi	r2,48
  80c5d0:	48807626 	beq	r9,r2,80c7ac <_strtoll_r+0x28c>
  80c5d4:	04c00284 	movi	r19,10
  80c5d8:	d8000015 	stw	zero,0(sp)
  80c5dc:	9839883a 	mov	fp,r19
  80c5e0:	d8c00117 	ldw	r3,4(sp)
  80c5e4:	183ff61e 	bne	r3,zero,80c5c0 <__alt_data_end+0xff80c5c0>
  80c5e8:	047fffc4 	movi	r17,-1
  80c5ec:	04200034 	movhi	r16,32768
  80c5f0:	8461883a 	add	r16,r16,r17
  80c5f4:	d9c00017 	ldw	r7,0(sp)
  80c5f8:	8809883a 	mov	r4,r17
  80c5fc:	800b883a 	mov	r5,r16
  80c600:	980d883a 	mov	r6,r19
  80c604:	da400615 	stw	r9,24(sp)
  80c608:	08142400 	call	814240 <__umoddi3>
  80c60c:	d9c00017 	ldw	r7,0(sp)
  80c610:	8809883a 	mov	r4,r17
  80c614:	800b883a 	mov	r5,r16
  80c618:	980d883a 	mov	r6,r19
  80c61c:	d8800315 	stw	r2,12(sp)
  80c620:	0813c800 	call	813c80 <__udivdi3>
  80c624:	da400617 	ldw	r9,24(sp)
  80c628:	1823883a 	mov	r17,r3
  80c62c:	902f883a 	mov	r23,r18
  80c630:	b247883a 	add	r3,r22,r9
  80c634:	19800043 	ldbu	r6,1(r3)
  80c638:	1021883a 	mov	r16,r2
  80c63c:	000f883a 	mov	r7,zero
  80c640:	30c0010c 	andi	r3,r6,4
  80c644:	0009883a 	mov	r4,zero
  80c648:	000b883a 	mov	r5,zero
  80c64c:	04800044 	movi	r18,1
  80c650:	057fffc4 	movi	r21,-1
  80c654:	18000d26 	beq	r3,zero,80c68c <_strtoll_r+0x16c>
  80c658:	4d3ff404 	addi	r20,r9,-48
  80c65c:	a700110e 	bge	r20,fp,80c6a4 <_strtoll_r+0x184>
  80c660:	3d400426 	beq	r7,r21,80c674 <_strtoll_r+0x154>
  80c664:	89400236 	bltu	r17,r5,80c670 <_strtoll_r+0x150>
  80c668:	2c40291e 	bne	r5,r17,80c710 <_strtoll_r+0x1f0>
  80c66c:	8100282e 	bgeu	r16,r4,80c710 <_strtoll_r+0x1f0>
  80c670:	01ffffc4 	movi	r7,-1
  80c674:	ba400003 	ldbu	r9,0(r23)
  80c678:	bdc00044 	addi	r23,r23,1
  80c67c:	b247883a 	add	r3,r22,r9
  80c680:	19800043 	ldbu	r6,1(r3)
  80c684:	30c0010c 	andi	r3,r6,4
  80c688:	183ff31e 	bne	r3,zero,80c658 <__alt_data_end+0xff80c658>
  80c68c:	318000cc 	andi	r6,r6,3
  80c690:	30000426 	beq	r6,zero,80c6a4 <_strtoll_r+0x184>
  80c694:	34802a26 	beq	r6,r18,80c740 <_strtoll_r+0x220>
  80c698:	00c015c4 	movi	r3,87
  80c69c:	48e9c83a 	sub	r20,r9,r3
  80c6a0:	a73fef16 	blt	r20,fp,80c660 <__alt_data_end+0xff80c660>
  80c6a4:	00bfffc4 	movi	r2,-1
  80c6a8:	38802b26 	beq	r7,r2,80c758 <_strtoll_r+0x238>
  80c6ac:	d8800117 	ldw	r2,4(sp)
  80c6b0:	0093c83a 	sub	r9,zero,r2
  80c6b4:	2248f03a 	xor	r4,r4,r9
  80c6b8:	2085883a 	add	r2,r4,r2
  80c6bc:	1109803a 	cmpltu	r4,r2,r4
  80c6c0:	2a46f03a 	xor	r3,r5,r9
  80c6c4:	20c7883a 	add	r3,r4,r3
  80c6c8:	d9000217 	ldw	r4,8(sp)
  80c6cc:	20000426 	beq	r4,zero,80c6e0 <_strtoll_r+0x1c0>
  80c6d0:	38002b1e 	bne	r7,zero,80c780 <_strtoll_r+0x260>
  80c6d4:	dd800417 	ldw	r22,16(sp)
  80c6d8:	d9400217 	ldw	r5,8(sp)
  80c6dc:	2d800015 	stw	r22,0(r5)
  80c6e0:	dfc01017 	ldw	ra,64(sp)
  80c6e4:	df000f17 	ldw	fp,60(sp)
  80c6e8:	ddc00e17 	ldw	r23,56(sp)
  80c6ec:	dd800d17 	ldw	r22,52(sp)
  80c6f0:	dd400c17 	ldw	r21,48(sp)
  80c6f4:	dd000b17 	ldw	r20,44(sp)
  80c6f8:	dcc00a17 	ldw	r19,40(sp)
  80c6fc:	dc800917 	ldw	r18,36(sp)
  80c700:	dc400817 	ldw	r17,32(sp)
  80c704:	dc000717 	ldw	r16,28(sp)
  80c708:	dec01104 	addi	sp,sp,68
  80c70c:	f800283a 	ret
  80c710:	24000d26 	beq	r4,r16,80c748 <_strtoll_r+0x228>
  80c714:	d9c00017 	ldw	r7,0(sp)
  80c718:	980d883a 	mov	r6,r19
  80c71c:	0813bac0 	call	813bac <__muldi3>
  80c720:	a00bd7fa 	srai	r5,r20,31
  80c724:	a085883a 	add	r2,r20,r2
  80c728:	1513803a 	cmpltu	r9,r2,r20
  80c72c:	28c7883a 	add	r3,r5,r3
  80c730:	1009883a 	mov	r4,r2
  80c734:	48cb883a 	add	r5,r9,r3
  80c738:	01c00044 	movi	r7,1
  80c73c:	003fcd06 	br	80c674 <__alt_data_end+0xff80c674>
  80c740:	00c00dc4 	movi	r3,55
  80c744:	003fd506 	br	80c69c <__alt_data_end+0xff80c69c>
  80c748:	2c7ff21e 	bne	r5,r17,80c714 <__alt_data_end+0xff80c714>
  80c74c:	d8800317 	ldw	r2,12(sp)
  80c750:	153fc716 	blt	r2,r20,80c670 <__alt_data_end+0xff80c670>
  80c754:	003fef06 	br	80c714 <__alt_data_end+0xff80c714>
  80c758:	d8c00117 	ldw	r3,4(sp)
  80c75c:	1800201e 	bne	r3,zero,80c7e0 <_strtoll_r+0x2c0>
  80c760:	00e00034 	movhi	r3,32768
  80c764:	3805883a 	mov	r2,r7
  80c768:	18ffffc4 	addi	r3,r3,-1
  80c76c:	d9400517 	ldw	r5,20(sp)
  80c770:	01000884 	movi	r4,34
  80c774:	29000015 	stw	r4,0(r5)
  80c778:	d9000217 	ldw	r4,8(sp)
  80c77c:	203fd826 	beq	r4,zero,80c6e0 <__alt_data_end+0xff80c6e0>
  80c780:	bdbfffc4 	addi	r22,r23,-1
  80c784:	003fd406 	br	80c6d8 <__alt_data_end+0xff80c6d8>
  80c788:	00800044 	movi	r2,1
  80c78c:	1c800084 	addi	r18,r3,2
  80c790:	1a400043 	ldbu	r9,1(r3)
  80c794:	d8800115 	stw	r2,4(sp)
  80c798:	003f8106 	br	80c5a0 <__alt_data_end+0xff80c5a0>
  80c79c:	1c800084 	addi	r18,r3,2
  80c7a0:	1a400043 	ldbu	r9,1(r3)
  80c7a4:	d8000115 	stw	zero,4(sp)
  80c7a8:	003f7d06 	br	80c5a0 <__alt_data_end+0xff80c5a0>
  80c7ac:	90800003 	ldbu	r2,0(r18)
  80c7b0:	00c01604 	movi	r3,88
  80c7b4:	108037cc 	andi	r2,r2,223
  80c7b8:	10c01026 	beq	r2,r3,80c7fc <_strtoll_r+0x2dc>
  80c7bc:	04c00204 	movi	r19,8
  80c7c0:	d8000015 	stw	zero,0(sp)
  80c7c4:	9839883a 	mov	fp,r19
  80c7c8:	003f8506 	br	80c5e0 <__alt_data_end+0xff80c5e0>
  80c7cc:	00800c04 	movi	r2,48
  80c7d0:	48800626 	beq	r9,r2,80c7ec <_strtoll_r+0x2cc>
  80c7d4:	e027883a 	mov	r19,fp
  80c7d8:	d8000015 	stw	zero,0(sp)
  80c7dc:	003f8006 	br	80c5e0 <__alt_data_end+0xff80c5e0>
  80c7e0:	0005883a 	mov	r2,zero
  80c7e4:	00e00034 	movhi	r3,32768
  80c7e8:	003fe006 	br	80c76c <__alt_data_end+0xff80c76c>
  80c7ec:	90800003 	ldbu	r2,0(r18)
  80c7f0:	00c01604 	movi	r3,88
  80c7f4:	108037cc 	andi	r2,r2,223
  80c7f8:	10fff61e 	bne	r2,r3,80c7d4 <__alt_data_end+0xff80c7d4>
  80c7fc:	04c00404 	movi	r19,16
  80c800:	92400043 	ldbu	r9,1(r18)
  80c804:	d8000015 	stw	zero,0(sp)
  80c808:	94800084 	addi	r18,r18,2
  80c80c:	9839883a 	mov	fp,r19
  80c810:	003f7306 	br	80c5e0 <__alt_data_end+0xff80c5e0>

0080c814 <_strtoul_r>:
  80c814:	008020b4 	movhi	r2,130
  80c818:	defff604 	addi	sp,sp,-40
  80c81c:	10b6e504 	addi	r2,r2,-9324
  80c820:	dc800315 	stw	r18,12(sp)
  80c824:	14800017 	ldw	r18,0(r2)
  80c828:	dd400615 	stw	r21,24(sp)
  80c82c:	dd000515 	stw	r20,20(sp)
  80c830:	dcc00415 	stw	r19,16(sp)
  80c834:	dfc00915 	stw	ra,36(sp)
  80c838:	ddc00815 	stw	r23,32(sp)
  80c83c:	dd800715 	stw	r22,28(sp)
  80c840:	dc400215 	stw	r17,8(sp)
  80c844:	dc000115 	stw	r16,4(sp)
  80c848:	2827883a 	mov	r19,r5
  80c84c:	2029883a 	mov	r20,r4
  80c850:	382b883a 	mov	r21,r7
  80c854:	2813883a 	mov	r9,r5
  80c858:	4a000003 	ldbu	r8,0(r9)
  80c85c:	4807883a 	mov	r3,r9
  80c860:	4a400044 	addi	r9,r9,1
  80c864:	9205883a 	add	r2,r18,r8
  80c868:	10800043 	ldbu	r2,1(r2)
  80c86c:	1080020c 	andi	r2,r2,8
  80c870:	103ff91e 	bne	r2,zero,80c858 <__alt_data_end+0xff80c858>
  80c874:	00800b44 	movi	r2,45
  80c878:	4023883a 	mov	r17,r8
  80c87c:	4821883a 	mov	r16,r9
  80c880:	40805426 	beq	r8,r2,80c9d4 <_strtoul_r+0x1c0>
  80c884:	00800ac4 	movi	r2,43
  80c888:	40805626 	beq	r8,r2,80c9e4 <_strtoul_r+0x1d0>
  80c88c:	002f883a 	mov	r23,zero
  80c890:	a8000e26 	beq	r21,zero,80c8cc <_strtoul_r+0xb8>
  80c894:	00800404 	movi	r2,16
  80c898:	a8805626 	beq	r21,r2,80c9f4 <_strtoul_r+0x1e0>
  80c89c:	013fffc4 	movi	r4,-1
  80c8a0:	a80b883a 	mov	r5,r21
  80c8a4:	d9800015 	stw	r6,0(sp)
  80c8a8:	08148ec0 	call	8148ec <__udivsi3>
  80c8ac:	013fffc4 	movi	r4,-1
  80c8b0:	a80b883a 	mov	r5,r21
  80c8b4:	102d883a 	mov	r22,r2
  80c8b8:	08148f40 	call	8148f4 <__umodsi3>
  80c8bc:	d9800017 	ldw	r6,0(sp)
  80c8c0:	a819883a 	mov	r12,r21
  80c8c4:	b00b883a 	mov	r5,r22
  80c8c8:	00000706 	br	80c8e8 <_strtoul_r+0xd4>
  80c8cc:	00800c04 	movi	r2,48
  80c8d0:	88804f26 	beq	r17,r2,80ca10 <_strtoul_r+0x1fc>
  80c8d4:	05400284 	movi	r21,10
  80c8d8:	014666b4 	movhi	r5,6554
  80c8dc:	00800144 	movi	r2,5
  80c8e0:	29666644 	addi	r5,r5,-26215
  80c8e4:	a819883a 	mov	r12,r21
  80c8e8:	9451883a 	add	r8,r18,r17
  80c8ec:	42000043 	ldbu	r8,1(r8)
  80c8f0:	8007883a 	mov	r3,r16
  80c8f4:	0009883a 	mov	r4,zero
  80c8f8:	4240010c 	andi	r9,r8,4
  80c8fc:	0015883a 	mov	r10,zero
  80c900:	02c00044 	movi	r11,1
  80c904:	01ffffc4 	movi	r7,-1
  80c908:	48000e26 	beq	r9,zero,80c944 <_strtoul_r+0x130>
  80c90c:	8a3ff404 	addi	r8,r17,-48
  80c910:	4540120e 	bge	r8,r21,80c95c <_strtoul_r+0x148>
  80c914:	21c00526 	beq	r4,r7,80c92c <_strtoul_r+0x118>
  80c918:	2a802436 	bltu	r5,r10,80c9ac <_strtoul_r+0x198>
  80c91c:	51402226 	beq	r10,r5,80c9a8 <_strtoul_r+0x194>
  80c920:	5315383a 	mul	r10,r10,r12
  80c924:	01000044 	movi	r4,1
  80c928:	4295883a 	add	r10,r8,r10
  80c92c:	1c400003 	ldbu	r17,0(r3)
  80c930:	18c00044 	addi	r3,r3,1
  80c934:	9451883a 	add	r8,r18,r17
  80c938:	42000043 	ldbu	r8,1(r8)
  80c93c:	4240010c 	andi	r9,r8,4
  80c940:	483ff21e 	bne	r9,zero,80c90c <__alt_data_end+0xff80c90c>
  80c944:	420000cc 	andi	r8,r8,3
  80c948:	40000426 	beq	r8,zero,80c95c <_strtoul_r+0x148>
  80c94c:	42c01926 	beq	r8,r11,80c9b4 <_strtoul_r+0x1a0>
  80c950:	024015c4 	movi	r9,87
  80c954:	8a51c83a 	sub	r8,r17,r9
  80c958:	457fee16 	blt	r8,r21,80c914 <__alt_data_end+0xff80c914>
  80c95c:	20001916 	blt	r4,zero,80c9c4 <_strtoul_r+0x1b0>
  80c960:	05c5c83a 	sub	r2,zero,r23
  80c964:	5084f03a 	xor	r2,r10,r2
  80c968:	15c5883a 	add	r2,r2,r23
  80c96c:	30000326 	beq	r6,zero,80c97c <_strtoul_r+0x168>
  80c970:	20001226 	beq	r4,zero,80c9bc <_strtoul_r+0x1a8>
  80c974:	197fffc4 	addi	r5,r3,-1
  80c978:	31400015 	stw	r5,0(r6)
  80c97c:	dfc00917 	ldw	ra,36(sp)
  80c980:	ddc00817 	ldw	r23,32(sp)
  80c984:	dd800717 	ldw	r22,28(sp)
  80c988:	dd400617 	ldw	r21,24(sp)
  80c98c:	dd000517 	ldw	r20,20(sp)
  80c990:	dcc00417 	ldw	r19,16(sp)
  80c994:	dc800317 	ldw	r18,12(sp)
  80c998:	dc400217 	ldw	r17,8(sp)
  80c99c:	dc000117 	ldw	r16,4(sp)
  80c9a0:	dec00a04 	addi	sp,sp,40
  80c9a4:	f800283a 	ret
  80c9a8:	123fdd0e 	bge	r2,r8,80c920 <__alt_data_end+0xff80c920>
  80c9ac:	013fffc4 	movi	r4,-1
  80c9b0:	003fde06 	br	80c92c <__alt_data_end+0xff80c92c>
  80c9b4:	02400dc4 	movi	r9,55
  80c9b8:	003fe606 	br	80c954 <__alt_data_end+0xff80c954>
  80c9bc:	980b883a 	mov	r5,r19
  80c9c0:	003fed06 	br	80c978 <__alt_data_end+0xff80c978>
  80c9c4:	00800884 	movi	r2,34
  80c9c8:	a0800015 	stw	r2,0(r20)
  80c9cc:	00bfffc4 	movi	r2,-1
  80c9d0:	003fe606 	br	80c96c <__alt_data_end+0xff80c96c>
  80c9d4:	1c000084 	addi	r16,r3,2
  80c9d8:	1c400043 	ldbu	r17,1(r3)
  80c9dc:	05c00044 	movi	r23,1
  80c9e0:	003fab06 	br	80c890 <__alt_data_end+0xff80c890>
  80c9e4:	1c000084 	addi	r16,r3,2
  80c9e8:	1c400043 	ldbu	r17,1(r3)
  80c9ec:	002f883a 	mov	r23,zero
  80c9f0:	003fa706 	br	80c890 <__alt_data_end+0xff80c890>
  80c9f4:	00800c04 	movi	r2,48
  80c9f8:	88801726 	beq	r17,r2,80ca58 <_strtoul_r+0x244>
  80c9fc:	01440034 	movhi	r5,4096
  80ca00:	297fffc4 	addi	r5,r5,-1
  80ca04:	008003c4 	movi	r2,15
  80ca08:	a819883a 	mov	r12,r21
  80ca0c:	003fb606 	br	80c8e8 <__alt_data_end+0xff80c8e8>
  80ca10:	80800003 	ldbu	r2,0(r16)
  80ca14:	00c01604 	movi	r3,88
  80ca18:	108037cc 	andi	r2,r2,223
  80ca1c:	10c00626 	beq	r2,r3,80ca38 <_strtoul_r+0x224>
  80ca20:	05400204 	movi	r21,8
  80ca24:	01480034 	movhi	r5,8192
  80ca28:	008001c4 	movi	r2,7
  80ca2c:	297fffc4 	addi	r5,r5,-1
  80ca30:	a819883a 	mov	r12,r21
  80ca34:	003fac06 	br	80c8e8 <__alt_data_end+0xff80c8e8>
  80ca38:	03000404 	movi	r12,16
  80ca3c:	05840034 	movhi	r22,4096
  80ca40:	84400043 	ldbu	r17,1(r16)
  80ca44:	008003c4 	movi	r2,15
  80ca48:	84000084 	addi	r16,r16,2
  80ca4c:	b5bfffc4 	addi	r22,r22,-1
  80ca50:	602b883a 	mov	r21,r12
  80ca54:	003f9b06 	br	80c8c4 <__alt_data_end+0xff80c8c4>
  80ca58:	80800003 	ldbu	r2,0(r16)
  80ca5c:	00c01604 	movi	r3,88
  80ca60:	108037cc 	andi	r2,r2,223
  80ca64:	10fff426 	beq	r2,r3,80ca38 <__alt_data_end+0xff80ca38>
  80ca68:	01440034 	movhi	r5,4096
  80ca6c:	008003c4 	movi	r2,15
  80ca70:	297fffc4 	addi	r5,r5,-1
  80ca74:	a819883a 	mov	r12,r21
  80ca78:	003f9b06 	br	80c8e8 <__alt_data_end+0xff80c8e8>

0080ca7c <strtoul>:
  80ca7c:	2007883a 	mov	r3,r4
  80ca80:	010020b4 	movhi	r4,130
  80ca84:	2136e204 	addi	r4,r4,-9336
  80ca88:	21000017 	ldw	r4,0(r4)
  80ca8c:	2805883a 	mov	r2,r5
  80ca90:	300f883a 	mov	r7,r6
  80ca94:	180b883a 	mov	r5,r3
  80ca98:	100d883a 	mov	r6,r2
  80ca9c:	080c8141 	jmpi	80c814 <_strtoul_r>

0080caa0 <_strtoull_r>:
  80caa0:	008020b4 	movhi	r2,130
  80caa4:	deffee04 	addi	sp,sp,-72
  80caa8:	10b6e504 	addi	r2,r2,-9324
  80caac:	ddc00f15 	stw	r23,60(sp)
  80cab0:	15c00017 	ldw	r23,0(r2)
  80cab4:	df001015 	stw	fp,64(sp)
  80cab8:	dfc01115 	stw	ra,68(sp)
  80cabc:	dd800e15 	stw	r22,56(sp)
  80cac0:	dd400d15 	stw	r21,52(sp)
  80cac4:	dd000c15 	stw	r20,48(sp)
  80cac8:	dcc00b15 	stw	r19,44(sp)
  80cacc:	dc800a15 	stw	r18,40(sp)
  80cad0:	dc400915 	stw	r17,36(sp)
  80cad4:	dc000815 	stw	r16,32(sp)
  80cad8:	d9400215 	stw	r5,8(sp)
  80cadc:	d9000515 	stw	r4,20(sp)
  80cae0:	d9800115 	stw	r6,4(sp)
  80cae4:	3839883a 	mov	fp,r7
  80cae8:	2811883a 	mov	r8,r5
  80caec:	42400003 	ldbu	r9,0(r8)
  80caf0:	4007883a 	mov	r3,r8
  80caf4:	42000044 	addi	r8,r8,1
  80caf8:	ba45883a 	add	r2,r23,r9
  80cafc:	10800043 	ldbu	r2,1(r2)
  80cb00:	1080020c 	andi	r2,r2,8
  80cb04:	103ff91e 	bne	r2,zero,80caec <__alt_data_end+0xff80caec>
  80cb08:	00800b44 	movi	r2,45
  80cb0c:	48807826 	beq	r9,r2,80ccf0 <_strtoull_r+0x250>
  80cb10:	00800ac4 	movi	r2,43
  80cb14:	48807b26 	beq	r9,r2,80cd04 <_strtoull_r+0x264>
  80cb18:	d8000415 	stw	zero,16(sp)
  80cb1c:	e0001726 	beq	fp,zero,80cb7c <_strtoull_r+0xdc>
  80cb20:	00800404 	movi	r2,16
  80cb24:	e0808926 	beq	fp,r2,80cd4c <_strtoull_r+0x2ac>
  80cb28:	e027d7fa 	srai	r19,fp,31
  80cb2c:	013fffc4 	movi	r4,-1
  80cb30:	200b883a 	mov	r5,r4
  80cb34:	e00d883a 	mov	r6,fp
  80cb38:	980f883a 	mov	r7,r19
  80cb3c:	da000615 	stw	r8,24(sp)
  80cb40:	da400715 	stw	r9,28(sp)
  80cb44:	0813c800 	call	813c80 <__udivdi3>
  80cb48:	013fffc4 	movi	r4,-1
  80cb4c:	200b883a 	mov	r5,r4
  80cb50:	e00d883a 	mov	r6,fp
  80cb54:	980f883a 	mov	r7,r19
  80cb58:	1021883a 	mov	r16,r2
  80cb5c:	1823883a 	mov	r17,r3
  80cb60:	08142400 	call	814240 <__umoddi3>
  80cb64:	da400717 	ldw	r9,28(sp)
  80cb68:	da000617 	ldw	r8,24(sp)
  80cb6c:	d8800315 	stw	r2,12(sp)
  80cb70:	df000015 	stw	fp,0(sp)
  80cb74:	8825883a 	mov	r18,r17
  80cb78:	00000c06 	br	80cbac <_strtoull_r+0x10c>
  80cb7c:	00800c04 	movi	r2,48
  80cb80:	48806426 	beq	r9,r2,80cd14 <_strtoull_r+0x274>
  80cb84:	00800284 	movi	r2,10
  80cb88:	01000144 	movi	r4,5
  80cb8c:	042666b4 	movhi	r16,39322
  80cb90:	048666b4 	movhi	r18,6554
  80cb94:	d8800015 	stw	r2,0(sp)
  80cb98:	d9000315 	stw	r4,12(sp)
  80cb9c:	84266644 	addi	r16,r16,-26215
  80cba0:	94a66644 	addi	r18,r18,-26215
  80cba4:	0027883a 	mov	r19,zero
  80cba8:	1039883a 	mov	fp,r2
  80cbac:	ba45883a 	add	r2,r23,r9
  80cbb0:	12800043 	ldbu	r10,1(r2)
  80cbb4:	402d883a 	mov	r22,r8
  80cbb8:	000d883a 	mov	r6,zero
  80cbbc:	5080010c 	andi	r2,r10,4
  80cbc0:	0009883a 	mov	r4,zero
  80cbc4:	000b883a 	mov	r5,zero
  80cbc8:	04400044 	movi	r17,1
  80cbcc:	057fffc4 	movi	r21,-1
  80cbd0:	10000d26 	beq	r2,zero,80cc08 <_strtoull_r+0x168>
  80cbd4:	4d3ff404 	addi	r20,r9,-48
  80cbd8:	a700110e 	bge	r20,fp,80cc20 <_strtoull_r+0x180>
  80cbdc:	35400426 	beq	r6,r21,80cbf0 <_strtoull_r+0x150>
  80cbe0:	91400236 	bltu	r18,r5,80cbec <_strtoull_r+0x14c>
  80cbe4:	2c80281e 	bne	r5,r18,80cc88 <_strtoull_r+0x1e8>
  80cbe8:	8100272e 	bgeu	r16,r4,80cc88 <_strtoull_r+0x1e8>
  80cbec:	01bfffc4 	movi	r6,-1
  80cbf0:	b2400003 	ldbu	r9,0(r22)
  80cbf4:	b5800044 	addi	r22,r22,1
  80cbf8:	ba45883a 	add	r2,r23,r9
  80cbfc:	12800043 	ldbu	r10,1(r2)
  80cc00:	5080010c 	andi	r2,r10,4
  80cc04:	103ff31e 	bne	r2,zero,80cbd4 <__alt_data_end+0xff80cbd4>
  80cc08:	528000cc 	andi	r10,r10,3
  80cc0c:	50000426 	beq	r10,zero,80cc20 <_strtoull_r+0x180>
  80cc10:	54402926 	beq	r10,r17,80ccb8 <_strtoull_r+0x218>
  80cc14:	00c015c4 	movi	r3,87
  80cc18:	48e9c83a 	sub	r20,r9,r3
  80cc1c:	a73fef16 	blt	r20,fp,80cbdc <__alt_data_end+0xff80cbdc>
  80cc20:	30002d16 	blt	r6,zero,80ccd8 <_strtoull_r+0x238>
  80cc24:	d9c00417 	ldw	r7,16(sp)
  80cc28:	01c7c83a 	sub	r3,zero,r7
  80cc2c:	20c8f03a 	xor	r4,r4,r3
  80cc30:	21c5883a 	add	r2,r4,r7
  80cc34:	1109803a 	cmpltu	r4,r2,r4
  80cc38:	28c6f03a 	xor	r3,r5,r3
  80cc3c:	20c7883a 	add	r3,r4,r3
  80cc40:	d9000117 	ldw	r4,4(sp)
  80cc44:	20000426 	beq	r4,zero,80cc58 <_strtoull_r+0x1b8>
  80cc48:	30002126 	beq	r6,zero,80ccd0 <_strtoull_r+0x230>
  80cc4c:	b5bfffc4 	addi	r22,r22,-1
  80cc50:	d9c00117 	ldw	r7,4(sp)
  80cc54:	3d800015 	stw	r22,0(r7)
  80cc58:	dfc01117 	ldw	ra,68(sp)
  80cc5c:	df001017 	ldw	fp,64(sp)
  80cc60:	ddc00f17 	ldw	r23,60(sp)
  80cc64:	dd800e17 	ldw	r22,56(sp)
  80cc68:	dd400d17 	ldw	r21,52(sp)
  80cc6c:	dd000c17 	ldw	r20,48(sp)
  80cc70:	dcc00b17 	ldw	r19,44(sp)
  80cc74:	dc800a17 	ldw	r18,40(sp)
  80cc78:	dc400917 	ldw	r17,36(sp)
  80cc7c:	dc000817 	ldw	r16,32(sp)
  80cc80:	dec01204 	addi	sp,sp,72
  80cc84:	f800283a 	ret
  80cc88:	24000d26 	beq	r4,r16,80ccc0 <_strtoull_r+0x220>
  80cc8c:	d9800017 	ldw	r6,0(sp)
  80cc90:	980f883a 	mov	r7,r19
  80cc94:	0813bac0 	call	813bac <__muldi3>
  80cc98:	a00bd7fa 	srai	r5,r20,31
  80cc9c:	a085883a 	add	r2,r20,r2
  80cca0:	1513803a 	cmpltu	r9,r2,r20
  80cca4:	28c7883a 	add	r3,r5,r3
  80cca8:	1009883a 	mov	r4,r2
  80ccac:	48cb883a 	add	r5,r9,r3
  80ccb0:	01800044 	movi	r6,1
  80ccb4:	003fce06 	br	80cbf0 <__alt_data_end+0xff80cbf0>
  80ccb8:	00c00dc4 	movi	r3,55
  80ccbc:	003fd606 	br	80cc18 <__alt_data_end+0xff80cc18>
  80ccc0:	2cbff21e 	bne	r5,r18,80cc8c <__alt_data_end+0xff80cc8c>
  80ccc4:	d9c00317 	ldw	r7,12(sp)
  80ccc8:	3d3fc816 	blt	r7,r20,80cbec <__alt_data_end+0xff80cbec>
  80cccc:	003fef06 	br	80cc8c <__alt_data_end+0xff80cc8c>
  80ccd0:	dd800217 	ldw	r22,8(sp)
  80ccd4:	003fde06 	br	80cc50 <__alt_data_end+0xff80cc50>
  80ccd8:	d9000517 	ldw	r4,20(sp)
  80ccdc:	00c00884 	movi	r3,34
  80cce0:	00bfffc4 	movi	r2,-1
  80cce4:	20c00015 	stw	r3,0(r4)
  80cce8:	1007883a 	mov	r3,r2
  80ccec:	003fd406 	br	80cc40 <__alt_data_end+0xff80cc40>
  80ccf0:	00800044 	movi	r2,1
  80ccf4:	1a000084 	addi	r8,r3,2
  80ccf8:	1a400043 	ldbu	r9,1(r3)
  80ccfc:	d8800415 	stw	r2,16(sp)
  80cd00:	003f8606 	br	80cb1c <__alt_data_end+0xff80cb1c>
  80cd04:	1a000084 	addi	r8,r3,2
  80cd08:	1a400043 	ldbu	r9,1(r3)
  80cd0c:	d8000415 	stw	zero,16(sp)
  80cd10:	003f8206 	br	80cb1c <__alt_data_end+0xff80cb1c>
  80cd14:	40800003 	ldbu	r2,0(r8)
  80cd18:	00c01604 	movi	r3,88
  80cd1c:	108037cc 	andi	r2,r2,223
  80cd20:	10c01426 	beq	r2,r3,80cd74 <_strtoull_r+0x2d4>
  80cd24:	00800204 	movi	r2,8
  80cd28:	010001c4 	movi	r4,7
  80cd2c:	043fffc4 	movi	r16,-1
  80cd30:	04880034 	movhi	r18,8192
  80cd34:	d8800015 	stw	r2,0(sp)
  80cd38:	d9000315 	stw	r4,12(sp)
  80cd3c:	9425883a 	add	r18,r18,r16
  80cd40:	0027883a 	mov	r19,zero
  80cd44:	1039883a 	mov	fp,r2
  80cd48:	003f9806 	br	80cbac <__alt_data_end+0xff80cbac>
  80cd4c:	00800c04 	movi	r2,48
  80cd50:	48801426 	beq	r9,r2,80cda4 <_strtoull_r+0x304>
  80cd54:	04840034 	movhi	r18,4096
  80cd58:	008003c4 	movi	r2,15
  80cd5c:	94bfffc4 	addi	r18,r18,-1
  80cd60:	d8800315 	stw	r2,12(sp)
  80cd64:	043fffc4 	movi	r16,-1
  80cd68:	df000015 	stw	fp,0(sp)
  80cd6c:	0027883a 	mov	r19,zero
  80cd70:	003f8e06 	br	80cbac <__alt_data_end+0xff80cbac>
  80cd74:	01000404 	movi	r4,16
  80cd78:	01c003c4 	movi	r7,15
  80cd7c:	043fffc4 	movi	r16,-1
  80cd80:	04440034 	movhi	r17,4096
  80cd84:	42400043 	ldbu	r9,1(r8)
  80cd88:	d9000015 	stw	r4,0(sp)
  80cd8c:	d9c00315 	stw	r7,12(sp)
  80cd90:	42000084 	addi	r8,r8,2
  80cd94:	8c23883a 	add	r17,r17,r16
  80cd98:	0027883a 	mov	r19,zero
  80cd9c:	2039883a 	mov	fp,r4
  80cda0:	003f7406 	br	80cb74 <__alt_data_end+0xff80cb74>
  80cda4:	40800003 	ldbu	r2,0(r8)
  80cda8:	00c01604 	movi	r3,88
  80cdac:	108037cc 	andi	r2,r2,223
  80cdb0:	10fff026 	beq	r2,r3,80cd74 <__alt_data_end+0xff80cd74>
  80cdb4:	01c003c4 	movi	r7,15
  80cdb8:	043fffc4 	movi	r16,-1
  80cdbc:	04840034 	movhi	r18,4096
  80cdc0:	d9c00315 	stw	r7,12(sp)
  80cdc4:	9425883a 	add	r18,r18,r16
  80cdc8:	df000015 	stw	fp,0(sp)
  80cdcc:	0027883a 	mov	r19,zero
  80cdd0:	003f7606 	br	80cbac <__alt_data_end+0xff80cbac>

0080cdd4 <_sungetc_r>:
  80cdd4:	00bfffc4 	movi	r2,-1
  80cdd8:	28803426 	beq	r5,r2,80ceac <_sungetc_r+0xd8>
  80cddc:	3080030b 	ldhu	r2,12(r6)
  80cde0:	30c00c17 	ldw	r3,48(r6)
  80cde4:	defffd04 	addi	sp,sp,-12
  80cde8:	10bff7cc 	andi	r2,r2,65503
  80cdec:	dc400115 	stw	r17,4(sp)
  80cdf0:	dfc00215 	stw	ra,8(sp)
  80cdf4:	dc000015 	stw	r16,0(sp)
  80cdf8:	3080030d 	sth	r2,12(r6)
  80cdfc:	2c403fcc 	andi	r17,r5,255
  80ce00:	18001626 	beq	r3,zero,80ce5c <_sungetc_r+0x88>
  80ce04:	30c00117 	ldw	r3,4(r6)
  80ce08:	30800d17 	ldw	r2,52(r6)
  80ce0c:	3021883a 	mov	r16,r6
  80ce10:	18800d0e 	bge	r3,r2,80ce48 <_sungetc_r+0x74>
  80ce14:	80c00017 	ldw	r3,0(r16)
  80ce18:	8805883a 	mov	r2,r17
  80ce1c:	193fffc4 	addi	r4,r3,-1
  80ce20:	81000015 	stw	r4,0(r16)
  80ce24:	1c7fffc5 	stb	r17,-1(r3)
  80ce28:	80c00117 	ldw	r3,4(r16)
  80ce2c:	18c00044 	addi	r3,r3,1
  80ce30:	80c00115 	stw	r3,4(r16)
  80ce34:	dfc00217 	ldw	ra,8(sp)
  80ce38:	dc400117 	ldw	r17,4(sp)
  80ce3c:	dc000017 	ldw	r16,0(sp)
  80ce40:	dec00304 	addi	sp,sp,12
  80ce44:	f800283a 	ret
  80ce48:	300b883a 	mov	r5,r6
  80ce4c:	081002c0 	call	81002c <__submore>
  80ce50:	103ff026 	beq	r2,zero,80ce14 <__alt_data_end+0xff80ce14>
  80ce54:	00bfffc4 	movi	r2,-1
  80ce58:	003ff606 	br	80ce34 <__alt_data_end+0xff80ce34>
  80ce5c:	30800417 	ldw	r2,16(r6)
  80ce60:	30c00017 	ldw	r3,0(r6)
  80ce64:	10000326 	beq	r2,zero,80ce74 <_sungetc_r+0xa0>
  80ce68:	10c0022e 	bgeu	r2,r3,80ce74 <_sungetc_r+0xa0>
  80ce6c:	18bfffc3 	ldbu	r2,-1(r3)
  80ce70:	14401026 	beq	r2,r17,80ceb4 <_sungetc_r+0xe0>
  80ce74:	31400117 	ldw	r5,4(r6)
  80ce78:	30801084 	addi	r2,r6,66
  80ce7c:	31001004 	addi	r4,r6,64
  80ce80:	30c00e15 	stw	r3,56(r6)
  80ce84:	30800015 	stw	r2,0(r6)
  80ce88:	00c000c4 	movi	r3,3
  80ce8c:	00800044 	movi	r2,1
  80ce90:	30800115 	stw	r2,4(r6)
  80ce94:	31400f15 	stw	r5,60(r6)
  80ce98:	31000c15 	stw	r4,48(r6)
  80ce9c:	30c00d15 	stw	r3,52(r6)
  80cea0:	34401085 	stb	r17,66(r6)
  80cea4:	8805883a 	mov	r2,r17
  80cea8:	003fe206 	br	80ce34 <__alt_data_end+0xff80ce34>
  80ceac:	00bfffc4 	movi	r2,-1
  80ceb0:	f800283a 	ret
  80ceb4:	31000117 	ldw	r4,4(r6)
  80ceb8:	18ffffc4 	addi	r3,r3,-1
  80cebc:	30c00015 	stw	r3,0(r6)
  80cec0:	20c00044 	addi	r3,r4,1
  80cec4:	30c00115 	stw	r3,4(r6)
  80cec8:	003fda06 	br	80ce34 <__alt_data_end+0xff80ce34>

0080cecc <__ssrefill_r>:
  80cecc:	defffe04 	addi	sp,sp,-8
  80ced0:	dc000015 	stw	r16,0(sp)
  80ced4:	2821883a 	mov	r16,r5
  80ced8:	29400c17 	ldw	r5,48(r5)
  80cedc:	dfc00115 	stw	ra,4(sp)
  80cee0:	28000e26 	beq	r5,zero,80cf1c <__ssrefill_r+0x50>
  80cee4:	80801004 	addi	r2,r16,64
  80cee8:	28800126 	beq	r5,r2,80cef0 <__ssrefill_r+0x24>
  80ceec:	080159c0 	call	80159c <_free_r>
  80cef0:	80800f17 	ldw	r2,60(r16)
  80cef4:	80000c15 	stw	zero,48(r16)
  80cef8:	80800115 	stw	r2,4(r16)
  80cefc:	10000726 	beq	r2,zero,80cf1c <__ssrefill_r+0x50>
  80cf00:	80c00e17 	ldw	r3,56(r16)
  80cf04:	0005883a 	mov	r2,zero
  80cf08:	80c00015 	stw	r3,0(r16)
  80cf0c:	dfc00117 	ldw	ra,4(sp)
  80cf10:	dc000017 	ldw	r16,0(sp)
  80cf14:	dec00204 	addi	sp,sp,8
  80cf18:	f800283a 	ret
  80cf1c:	8080030b 	ldhu	r2,12(r16)
  80cf20:	80c00417 	ldw	r3,16(r16)
  80cf24:	80000115 	stw	zero,4(r16)
  80cf28:	10800814 	ori	r2,r2,32
  80cf2c:	8080030d 	sth	r2,12(r16)
  80cf30:	80c00015 	stw	r3,0(r16)
  80cf34:	00bfffc4 	movi	r2,-1
  80cf38:	003ff406 	br	80cf0c <__alt_data_end+0xff80cf0c>

0080cf3c <_sfread_r>:
  80cf3c:	defff704 	addi	sp,sp,-36
  80cf40:	dd800615 	stw	r22,24(sp)
  80cf44:	39ad383a 	mul	r22,r7,r6
  80cf48:	ddc00715 	stw	r23,28(sp)
  80cf4c:	dd400515 	stw	r21,20(sp)
  80cf50:	dc400115 	stw	r17,4(sp)
  80cf54:	dfc00815 	stw	ra,32(sp)
  80cf58:	dd000415 	stw	r20,16(sp)
  80cf5c:	dcc00315 	stw	r19,12(sp)
  80cf60:	dc800215 	stw	r18,8(sp)
  80cf64:	dc000015 	stw	r16,0(sp)
  80cf68:	302f883a 	mov	r23,r6
  80cf6c:	382b883a 	mov	r21,r7
  80cf70:	dc400917 	ldw	r17,36(sp)
  80cf74:	b0002826 	beq	r22,zero,80d018 <_sfread_r+0xdc>
  80cf78:	2029883a 	mov	r20,r4
  80cf7c:	2827883a 	mov	r19,r5
  80cf80:	b025883a 	mov	r18,r22
  80cf84:	00000b06 	br	80cfb4 <_sfread_r+0x78>
  80cf88:	0808f440 	call	808f44 <memcpy>
  80cf8c:	88800017 	ldw	r2,0(r17)
  80cf90:	9c27883a 	add	r19,r19,r16
  80cf94:	9425c83a 	sub	r18,r18,r16
  80cf98:	1421883a 	add	r16,r2,r16
  80cf9c:	88000115 	stw	zero,4(r17)
  80cfa0:	a009883a 	mov	r4,r20
  80cfa4:	8c000015 	stw	r16,0(r17)
  80cfa8:	880b883a 	mov	r5,r17
  80cfac:	080cecc0 	call	80cecc <__ssrefill_r>
  80cfb0:	10001b1e 	bne	r2,zero,80d020 <_sfread_r+0xe4>
  80cfb4:	8c000117 	ldw	r16,4(r17)
  80cfb8:	9809883a 	mov	r4,r19
  80cfbc:	89400017 	ldw	r5,0(r17)
  80cfc0:	800d883a 	mov	r6,r16
  80cfc4:	84bff036 	bltu	r16,r18,80cf88 <__alt_data_end+0xff80cf88>
  80cfc8:	900d883a 	mov	r6,r18
  80cfcc:	0808f440 	call	808f44 <memcpy>
  80cfd0:	88c00117 	ldw	r3,4(r17)
  80cfd4:	89000017 	ldw	r4,0(r17)
  80cfd8:	a805883a 	mov	r2,r21
  80cfdc:	1c87c83a 	sub	r3,r3,r18
  80cfe0:	24a5883a 	add	r18,r4,r18
  80cfe4:	88c00115 	stw	r3,4(r17)
  80cfe8:	8c800015 	stw	r18,0(r17)
  80cfec:	dfc00817 	ldw	ra,32(sp)
  80cff0:	ddc00717 	ldw	r23,28(sp)
  80cff4:	dd800617 	ldw	r22,24(sp)
  80cff8:	dd400517 	ldw	r21,20(sp)
  80cffc:	dd000417 	ldw	r20,16(sp)
  80d000:	dcc00317 	ldw	r19,12(sp)
  80d004:	dc800217 	ldw	r18,8(sp)
  80d008:	dc400117 	ldw	r17,4(sp)
  80d00c:	dc000017 	ldw	r16,0(sp)
  80d010:	dec00904 	addi	sp,sp,36
  80d014:	f800283a 	ret
  80d018:	0005883a 	mov	r2,zero
  80d01c:	003ff306 	br	80cfec <__alt_data_end+0xff80cfec>
  80d020:	b489c83a 	sub	r4,r22,r18
  80d024:	b80b883a 	mov	r5,r23
  80d028:	08148ec0 	call	8148ec <__udivsi3>
  80d02c:	003fef06 	br	80cfec <__alt_data_end+0xff80cfec>

0080d030 <__ssvfiscanf_r>:
  80d030:	2880030b 	ldhu	r2,12(r5)
  80d034:	deff9a04 	addi	sp,sp,-408
  80d038:	df006415 	stw	fp,400(sp)
  80d03c:	dc805e15 	stw	r18,376(sp)
  80d040:	dfc06515 	stw	ra,404(sp)
  80d044:	ddc06315 	stw	r23,396(sp)
  80d048:	dd806215 	stw	r22,392(sp)
  80d04c:	dd406115 	stw	r21,388(sp)
  80d050:	dd006015 	stw	r20,384(sp)
  80d054:	dcc05f15 	stw	r19,380(sp)
  80d058:	dc405d15 	stw	r17,372(sp)
  80d05c:	dc005c15 	stw	r16,368(sp)
  80d060:	10c8000c 	andi	r3,r2,8192
  80d064:	d9c04f15 	stw	r7,316(sp)
  80d068:	2839883a 	mov	fp,r5
  80d06c:	2025883a 	mov	r18,r4
  80d070:	1800061e 	bne	r3,zero,80d08c <__ssvfiscanf_r+0x5c>
  80d074:	29001917 	ldw	r4,100(r5)
  80d078:	00f7ffc4 	movi	r3,-8193
  80d07c:	10880014 	ori	r2,r2,8192
  80d080:	20c6703a 	and	r3,r4,r3
  80d084:	2880030d 	sth	r2,12(r5)
  80d088:	28c01915 	stw	r3,100(r5)
  80d08c:	30800003 	ldbu	r2,0(r6)
  80d090:	da004104 	addi	r8,sp,260
  80d094:	0027883a 	mov	r19,zero
  80d098:	050020b4 	movhi	r20,130
  80d09c:	d8005115 	stw	zero,324(sp)
  80d0a0:	d8005015 	stw	zero,320(sp)
  80d0a4:	d8005315 	stw	zero,332(sp)
  80d0a8:	da004e15 	stw	r8,312(sp)
  80d0ac:	d8804d15 	stw	r2,308(sp)
  80d0b0:	e02b883a 	mov	r21,fp
  80d0b4:	a536e504 	addi	r20,r20,-9324
  80d0b8:	9839883a 	mov	fp,r19
  80d0bc:	34400044 	addi	r17,r6,1
  80d0c0:	10001e26 	beq	r2,zero,80d13c <__ssvfiscanf_r+0x10c>
  80d0c4:	a1000017 	ldw	r4,0(r20)
  80d0c8:	2087883a 	add	r3,r4,r2
  80d0cc:	18c00043 	ldbu	r3,1(r3)
  80d0d0:	18c0020c 	andi	r3,r3,8
  80d0d4:	18001b26 	beq	r3,zero,80d144 <__ssvfiscanf_r+0x114>
  80d0d8:	a8800117 	ldw	r2,4(r21)
  80d0dc:	00800e0e 	bge	zero,r2,80d118 <__ssvfiscanf_r+0xe8>
  80d0e0:	a8c00017 	ldw	r3,0(r21)
  80d0e4:	a1000017 	ldw	r4,0(r20)
  80d0e8:	18800003 	ldbu	r2,0(r3)
  80d0ec:	2085883a 	add	r2,r4,r2
  80d0f0:	10800043 	ldbu	r2,1(r2)
  80d0f4:	1080020c 	andi	r2,r2,8
  80d0f8:	10000b26 	beq	r2,zero,80d128 <__ssvfiscanf_r+0xf8>
  80d0fc:	a8800117 	ldw	r2,4(r21)
  80d100:	18c00044 	addi	r3,r3,1
  80d104:	a8c00015 	stw	r3,0(r21)
  80d108:	10bfffc4 	addi	r2,r2,-1
  80d10c:	a8800115 	stw	r2,4(r21)
  80d110:	e7000044 	addi	fp,fp,1
  80d114:	00bff216 	blt	zero,r2,80d0e0 <__alt_data_end+0xff80d0e0>
  80d118:	9009883a 	mov	r4,r18
  80d11c:	a80b883a 	mov	r5,r21
  80d120:	080cecc0 	call	80cecc <__ssrefill_r>
  80d124:	103fee26 	beq	r2,zero,80d0e0 <__alt_data_end+0xff80d0e0>
  80d128:	880d883a 	mov	r6,r17
  80d12c:	30800003 	ldbu	r2,0(r6)
  80d130:	34400044 	addi	r17,r6,1
  80d134:	d8804d15 	stw	r2,308(sp)
  80d138:	103fe21e 	bne	r2,zero,80d0c4 <__alt_data_end+0xff80d0c4>
  80d13c:	d8805317 	ldw	r2,332(sp)
  80d140:	0000c406 	br	80d454 <__ssvfiscanf_r+0x424>
  80d144:	00c00944 	movi	r3,37
  80d148:	10c0cf1e 	bne	r2,r3,80d488 <__ssvfiscanf_r+0x458>
  80d14c:	30c00043 	ldbu	r3,1(r6)
  80d150:	0021883a 	mov	r16,zero
  80d154:	0027883a 	mov	r19,zero
  80d158:	01801e04 	movi	r6,120
  80d15c:	01c01b04 	movi	r7,108
  80d160:	89400044 	addi	r5,r17,1
  80d164:	30c14636 	bltu	r6,r3,80d680 <__ssvfiscanf_r+0x650>
  80d168:	180490ba 	slli	r2,r3,2
  80d16c:	02c02074 	movhi	r11,129
  80d170:	5af46004 	addi	r11,r11,-11904
  80d174:	12c5883a 	add	r2,r2,r11
  80d178:	10800017 	ldw	r2,0(r2)
  80d17c:	1000683a 	jmp	r2
  80d180:	0080d450 	cmplti	r2,zero,849
  80d184:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d188:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d18c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d190:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d194:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d198:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d19c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1a0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1a4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1a8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1ac:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1b0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1b4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1b8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1bc:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1c0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1c4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1c8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1cc:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1d0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1d4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1d8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1dc:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1e0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1e4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1e8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1ec:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1f0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1f4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1f8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d1fc:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d200:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d204:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d208:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d20c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d210:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d214:	0080d484 	movi	r2,850
  80d218:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d21c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d220:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d224:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d228:	0080d7b0 	cmpltui	r2,zero,862
  80d22c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d230:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d234:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d238:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d23c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d240:	0080d794 	movui	r2,862
  80d244:	0080d794 	movui	r2,862
  80d248:	0080d794 	movui	r2,862
  80d24c:	0080d794 	movui	r2,862
  80d250:	0080d794 	movui	r2,862
  80d254:	0080d794 	movui	r2,862
  80d258:	0080d794 	movui	r2,862
  80d25c:	0080d794 	movui	r2,862
  80d260:	0080d794 	movui	r2,862
  80d264:	0080d794 	movui	r2,862
  80d268:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d26c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d270:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d274:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d278:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d27c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d280:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d284:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d288:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d28c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d290:	0080d76c 	andhi	r2,zero,861
  80d294:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d298:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d29c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2a0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2a4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2a8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2ac:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2b0:	0080d758 	cmpnei	r2,zero,861
  80d2b4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2b8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2bc:	0080d74c 	andi	r2,zero,861
  80d2c0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2c4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2c8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2cc:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2d0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2d4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2d8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2dc:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2e0:	0080d740 	call	80d74 <__alt_mem_sdram_0-0x77f28c>
  80d2e4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2e8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2ec:	0080d724 	muli	r2,zero,860
  80d2f0:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2f4:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2f8:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d2fc:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d300:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d304:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d308:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d30c:	0080d710 	cmplti	r2,zero,860
  80d310:	0080d6ec 	andhi	r2,zero,859
  80d314:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d318:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d31c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d320:	0080d6d8 	cmpnei	r2,zero,859
  80d324:	0080d6b8 	rdprs	r2,zero,858
  80d328:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d32c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d330:	0080d668 	cmpgeui	r2,zero,857
  80d334:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d338:	0080d614 	movui	r2,856
  80d33c:	0080d5f0 	cmpltui	r2,zero,855
  80d340:	0080d640 	call	80d64 <__alt_mem_sdram_0-0x77f29c>
  80d344:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d348:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d34c:	0080d5c8 	cmpgei	r2,zero,855
  80d350:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d354:	0080d4c0 	call	80d4c <__alt_mem_sdram_0-0x77f2b4>
  80d358:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d35c:	0080d680 	call	80d68 <__alt_mem_sdram_0-0x77f298>
  80d360:	0080d740 	call	80d74 <__alt_mem_sdram_0-0x77f28c>
  80d364:	dac04b04 	addi	r11,sp,300
  80d368:	8400040c 	andi	r16,r16,16
  80d36c:	5809883a 	mov	r4,r11
  80d370:	000b883a 	mov	r5,zero
  80d374:	01800204 	movi	r6,8
  80d378:	dac05215 	stw	r11,328(sp)
  80d37c:	0802a600 	call	802a60 <memset>
  80d380:	8002bb26 	beq	r16,zero,80de70 <__ssvfiscanf_r+0xe40>
  80d384:	dd804d04 	addi	r22,sp,308
  80d388:	0007883a 	mov	r3,zero
  80d38c:	1827883a 	mov	r19,r3
  80d390:	a8800017 	ldw	r2,0(r21)
  80d394:	a0c00017 	ldw	r3,0(r20)
  80d398:	10800003 	ldbu	r2,0(r2)
  80d39c:	1885883a 	add	r2,r3,r2
  80d3a0:	10800043 	ldbu	r2,1(r2)
  80d3a4:	1080020c 	andi	r2,r2,8
  80d3a8:	1002cb1e 	bne	r2,zero,80ded8 <__ssvfiscanf_r+0xea8>
  80d3ac:	b802ca26 	beq	r23,zero,80ded8 <__ssvfiscanf_r+0xea8>
  80d3b0:	0808b840 	call	808b84 <__locale_mb_cur_max>
  80d3b4:	14c02126 	beq	r2,r19,80d43c <__ssvfiscanf_r+0x40c>
  80d3b8:	a8800017 	ldw	r2,0(r21)
  80d3bc:	a9000117 	ldw	r4,4(r21)
  80d3c0:	dac04104 	addi	r11,sp,260
  80d3c4:	98c00044 	addi	r3,r19,1
  80d3c8:	5ce7883a 	add	r19,r11,r19
  80d3cc:	dac05217 	ldw	r11,328(sp)
  80d3d0:	12000003 	ldbu	r8,0(r2)
  80d3d4:	213fffc4 	addi	r4,r4,-1
  80d3d8:	10800044 	addi	r2,r2,1
  80d3dc:	a9000115 	stw	r4,4(r21)
  80d3e0:	a8800015 	stw	r2,0(r21)
  80d3e4:	dac00015 	stw	r11,0(sp)
  80d3e8:	9009883a 	mov	r4,r18
  80d3ec:	180f883a 	mov	r7,r3
  80d3f0:	9a000005 	stb	r8,0(r19)
  80d3f4:	b00b883a 	mov	r5,r22
  80d3f8:	d9804104 	addi	r6,sp,260
  80d3fc:	d8c05a15 	stw	r3,360(sp)
  80d400:	0808c380 	call	808c38 <_mbrtowc_r>
  80d404:	013fffc4 	movi	r4,-1
  80d408:	d8c05a17 	ldw	r3,360(sp)
  80d40c:	11000b26 	beq	r2,r4,80d43c <__ssvfiscanf_r+0x40c>
  80d410:	1002a126 	beq	r2,zero,80de98 <__ssvfiscanf_r+0xe68>
  80d414:	017fff84 	movi	r5,-2
  80d418:	1827883a 	mov	r19,r3
  80d41c:	11431b1e 	bne	r2,r5,80e08c <__ssvfiscanf_r+0x105c>
  80d420:	a8800117 	ldw	r2,4(r21)
  80d424:	00bfda16 	blt	zero,r2,80d390 <__alt_data_end+0xff80d390>
  80d428:	9009883a 	mov	r4,r18
  80d42c:	a80b883a 	mov	r5,r21
  80d430:	080cecc0 	call	80cecc <__ssrefill_r>
  80d434:	103fd626 	beq	r2,zero,80d390 <__alt_data_end+0xff80d390>
  80d438:	9802a726 	beq	r19,zero,80ded8 <__ssvfiscanf_r+0xea8>
  80d43c:	da005317 	ldw	r8,332(sp)
  80d440:	40000326 	beq	r8,zero,80d450 <__ssvfiscanf_r+0x420>
  80d444:	a880030b 	ldhu	r2,12(r21)
  80d448:	1080100c 	andi	r2,r2,64
  80d44c:	10027726 	beq	r2,zero,80de2c <__ssvfiscanf_r+0xdfc>
  80d450:	00bfffc4 	movi	r2,-1
  80d454:	dfc06517 	ldw	ra,404(sp)
  80d458:	df006417 	ldw	fp,400(sp)
  80d45c:	ddc06317 	ldw	r23,396(sp)
  80d460:	dd806217 	ldw	r22,392(sp)
  80d464:	dd406117 	ldw	r21,388(sp)
  80d468:	dd006017 	ldw	r20,384(sp)
  80d46c:	dcc05f17 	ldw	r19,380(sp)
  80d470:	dc805e17 	ldw	r18,376(sp)
  80d474:	dc405d17 	ldw	r17,372(sp)
  80d478:	dc005c17 	ldw	r16,368(sp)
  80d47c:	dec06604 	addi	sp,sp,408
  80d480:	f800283a 	ret
  80d484:	2823883a 	mov	r17,r5
  80d488:	a8800117 	ldw	r2,4(r21)
  80d48c:	0082bf0e 	bge	zero,r2,80df8c <__ssvfiscanf_r+0xf5c>
  80d490:	a8800017 	ldw	r2,0(r21)
  80d494:	88ffffc3 	ldbu	r3,-1(r17)
  80d498:	11000003 	ldbu	r4,0(r2)
  80d49c:	20ff271e 	bne	r4,r3,80d13c <__alt_data_end+0xff80d13c>
  80d4a0:	a8c00117 	ldw	r3,4(r21)
  80d4a4:	10800044 	addi	r2,r2,1
  80d4a8:	a8800015 	stw	r2,0(r21)
  80d4ac:	18bfffc4 	addi	r2,r3,-1
  80d4b0:	a8800115 	stw	r2,4(r21)
  80d4b4:	e7000044 	addi	fp,fp,1
  80d4b8:	880d883a 	mov	r6,r17
  80d4bc:	003f1b06 	br	80d12c <__alt_data_end+0xff80d12c>
  80d4c0:	02c02074 	movhi	r11,129
  80d4c4:	5af20504 	addi	r11,r11,-14316
  80d4c8:	02000284 	movi	r8,10
  80d4cc:	2823883a 	mov	r17,r5
  80d4d0:	982f883a 	mov	r23,r19
  80d4d4:	dac05115 	stw	r11,324(sp)
  80d4d8:	da005015 	stw	r8,320(sp)
  80d4dc:	058000c4 	movi	r22,3
  80d4e0:	a8800117 	ldw	r2,4(r21)
  80d4e4:	00803d0e 	bge	zero,r2,80d5dc <__ssvfiscanf_r+0x5ac>
  80d4e8:	8080100c 	andi	r2,r16,64
  80d4ec:	10002626 	beq	r2,zero,80d588 <__ssvfiscanf_r+0x558>
  80d4f0:	00800084 	movi	r2,2
  80d4f4:	b0818f26 	beq	r22,r2,80db34 <__ssvfiscanf_r+0xb04>
  80d4f8:	008000c4 	movi	r2,3
  80d4fc:	b080b126 	beq	r22,r2,80d7c4 <__ssvfiscanf_r+0x794>
  80d500:	00800044 	movi	r2,1
  80d504:	b0817226 	beq	r22,r2,80dad0 <__ssvfiscanf_r+0xaa0>
  80d508:	9800011e 	bne	r19,zero,80d510 <__ssvfiscanf_r+0x4e0>
  80d50c:	102f883a 	mov	r23,r2
  80d510:	8080004c 	andi	r2,r16,1
  80d514:	10020f1e 	bne	r2,zero,80dd54 <__ssvfiscanf_r+0xd24>
  80d518:	8400040c 	andi	r16,r16,16
  80d51c:	80028226 	beq	r16,zero,80df28 <__ssvfiscanf_r+0xef8>
  80d520:	0021883a 	mov	r16,zero
  80d524:	00000906 	br	80d54c <__ssvfiscanf_r+0x51c>
  80d528:	a8c00017 	ldw	r3,0(r21)
  80d52c:	9009883a 	mov	r4,r18
  80d530:	a80b883a 	mov	r5,r21
  80d534:	1887883a 	add	r3,r3,r2
  80d538:	a8c00015 	stw	r3,0(r21)
  80d53c:	80a1883a 	add	r16,r16,r2
  80d540:	b8afc83a 	sub	r23,r23,r2
  80d544:	080cecc0 	call	80cecc <__ssrefill_r>
  80d548:	1002731e 	bne	r2,zero,80df18 <__ssvfiscanf_r+0xee8>
  80d54c:	a8800117 	ldw	r2,4(r21)
  80d550:	15fff516 	blt	r2,r23,80d528 <__alt_data_end+0xff80d528>
  80d554:	a9000017 	ldw	r4,0(r21)
  80d558:	15c5c83a 	sub	r2,r2,r23
  80d55c:	85e1883a 	add	r16,r16,r23
  80d560:	25c7883a 	add	r3,r4,r23
  80d564:	a8800115 	stw	r2,4(r21)
  80d568:	a8c00015 	stw	r3,0(r21)
  80d56c:	e439883a 	add	fp,fp,r16
  80d570:	880d883a 	mov	r6,r17
  80d574:	003eed06 	br	80d12c <__alt_data_end+0xff80d12c>
  80d578:	9009883a 	mov	r4,r18
  80d57c:	a80b883a 	mov	r5,r21
  80d580:	080cecc0 	call	80cecc <__ssrefill_r>
  80d584:	103fad1e 	bne	r2,zero,80d43c <__alt_data_end+0xff80d43c>
  80d588:	a1400017 	ldw	r5,0(r20)
  80d58c:	a9000017 	ldw	r4,0(r21)
  80d590:	00000206 	br	80d59c <__ssvfiscanf_r+0x56c>
  80d594:	21000044 	addi	r4,r4,1
  80d598:	a9000015 	stw	r4,0(r21)
  80d59c:	20800003 	ldbu	r2,0(r4)
  80d5a0:	2885883a 	add	r2,r5,r2
  80d5a4:	10800043 	ldbu	r2,1(r2)
  80d5a8:	1080020c 	andi	r2,r2,8
  80d5ac:	103fd026 	beq	r2,zero,80d4f0 <__alt_data_end+0xff80d4f0>
  80d5b0:	a8800117 	ldw	r2,4(r21)
  80d5b4:	e7000044 	addi	fp,fp,1
  80d5b8:	10bfffc4 	addi	r2,r2,-1
  80d5bc:	a8800115 	stw	r2,4(r21)
  80d5c0:	00bff416 	blt	zero,r2,80d594 <__alt_data_end+0xff80d594>
  80d5c4:	003fec06 	br	80d578 <__alt_data_end+0xff80d578>
  80d5c8:	a8800117 	ldw	r2,4(r21)
  80d5cc:	2823883a 	mov	r17,r5
  80d5d0:	982f883a 	mov	r23,r19
  80d5d4:	05800084 	movi	r22,2
  80d5d8:	00bfc316 	blt	zero,r2,80d4e8 <__alt_data_end+0xff80d4e8>
  80d5dc:	9009883a 	mov	r4,r18
  80d5e0:	a80b883a 	mov	r5,r21
  80d5e4:	080cecc0 	call	80cecc <__ssrefill_r>
  80d5e8:	103fbf26 	beq	r2,zero,80d4e8 <__alt_data_end+0xff80d4e8>
  80d5ec:	003f9306 	br	80d43c <__alt_data_end+0xff80d43c>
  80d5f0:	2823883a 	mov	r17,r5
  80d5f4:	02c02074 	movhi	r11,129
  80d5f8:	5af20504 	addi	r11,r11,-14316
  80d5fc:	02000204 	movi	r8,8
  80d600:	982f883a 	mov	r23,r19
  80d604:	dac05115 	stw	r11,324(sp)
  80d608:	da005015 	stw	r8,320(sp)
  80d60c:	058000c4 	movi	r22,3
  80d610:	003fb306 	br	80d4e0 <__alt_data_end+0xff80d4e0>
  80d614:	8080040c 	andi	r2,r16,16
  80d618:	2823883a 	mov	r17,r5
  80d61c:	103ec21e 	bne	r2,zero,80d128 <__alt_data_end+0xff80d128>
  80d620:	8080010c 	andi	r2,r16,4
  80d624:	10026526 	beq	r2,zero,80dfbc <__ssvfiscanf_r+0xf8c>
  80d628:	dac04f17 	ldw	r11,316(sp)
  80d62c:	58800017 	ldw	r2,0(r11)
  80d630:	5ac00104 	addi	r11,r11,4
  80d634:	dac04f15 	stw	r11,316(sp)
  80d638:	1700000d 	sth	fp,0(r2)
  80d63c:	003eba06 	br	80d128 <__alt_data_end+0xff80d128>
  80d640:	2823883a 	mov	r17,r5
  80d644:	84008814 	ori	r16,r16,544
  80d648:	02c02074 	movhi	r11,129
  80d64c:	5af20504 	addi	r11,r11,-14316
  80d650:	02000404 	movi	r8,16
  80d654:	982f883a 	mov	r23,r19
  80d658:	dac05115 	stw	r11,324(sp)
  80d65c:	da005015 	stw	r8,320(sp)
  80d660:	058000c4 	movi	r22,3
  80d664:	003f9e06 	br	80d4e0 <__alt_data_end+0xff80d4e0>
  80d668:	88c00043 	ldbu	r3,1(r17)
  80d66c:	19c24c26 	beq	r3,r7,80dfa0 <__ssvfiscanf_r+0xf70>
  80d670:	2823883a 	mov	r17,r5
  80d674:	84000054 	ori	r16,r16,1
  80d678:	89400044 	addi	r5,r17,1
  80d67c:	30feba2e 	bgeu	r6,r3,80d168 <__alt_data_end+0xff80d168>
  80d680:	20c7883a 	add	r3,r4,r3
  80d684:	18800043 	ldbu	r2,1(r3)
  80d688:	00c00044 	movi	r3,1
  80d68c:	2823883a 	mov	r17,r5
  80d690:	108000cc 	andi	r2,r2,3
  80d694:	10c24726 	beq	r2,r3,80dfb4 <__ssvfiscanf_r+0xf84>
  80d698:	00802074 	movhi	r2,129
  80d69c:	10b0af04 	addi	r2,r2,-15684
  80d6a0:	02000284 	movi	r8,10
  80d6a4:	d8805115 	stw	r2,324(sp)
  80d6a8:	982f883a 	mov	r23,r19
  80d6ac:	da005015 	stw	r8,320(sp)
  80d6b0:	058000c4 	movi	r22,3
  80d6b4:	003f8a06 	br	80d4e0 <__alt_data_end+0xff80d4e0>
  80d6b8:	02c02074 	movhi	r11,129
  80d6bc:	5af0af04 	addi	r11,r11,-15684
  80d6c0:	982f883a 	mov	r23,r19
  80d6c4:	2823883a 	mov	r17,r5
  80d6c8:	dac05115 	stw	r11,324(sp)
  80d6cc:	d8005015 	stw	zero,320(sp)
  80d6d0:	058000c4 	movi	r22,3
  80d6d4:	003f8206 	br	80d4e0 <__alt_data_end+0xff80d4e0>
  80d6d8:	88800043 	ldbu	r2,1(r17)
  80d6dc:	84000114 	ori	r16,r16,4
  80d6e0:	2823883a 	mov	r17,r5
  80d6e4:	10c03fcc 	andi	r3,r2,255
  80d6e8:	003e9d06 	br	80d160 <__alt_data_end+0xff80d160>
  80d6ec:	00802074 	movhi	r2,129
  80d6f0:	10b0af04 	addi	r2,r2,-15684
  80d6f4:	02000284 	movi	r8,10
  80d6f8:	2823883a 	mov	r17,r5
  80d6fc:	982f883a 	mov	r23,r19
  80d700:	d8805115 	stw	r2,324(sp)
  80d704:	da005015 	stw	r8,320(sp)
  80d708:	058000c4 	movi	r22,3
  80d70c:	003f7406 	br	80d4e0 <__alt_data_end+0xff80d4e0>
  80d710:	2823883a 	mov	r17,r5
  80d714:	84001014 	ori	r16,r16,64
  80d718:	982f883a 	mov	r23,r19
  80d71c:	002d883a 	mov	r22,zero
  80d720:	003f6f06 	br	80d4e0 <__alt_data_end+0xff80d4e0>
  80d724:	d9000104 	addi	r4,sp,4
  80d728:	080a91c0 	call	80a91c <__sccl>
  80d72c:	1023883a 	mov	r17,r2
  80d730:	84001014 	ori	r16,r16,64
  80d734:	982f883a 	mov	r23,r19
  80d738:	05800044 	movi	r22,1
  80d73c:	003f6806 	br	80d4e0 <__alt_data_end+0xff80d4e0>
  80d740:	2823883a 	mov	r17,r5
  80d744:	84008014 	ori	r16,r16,512
  80d748:	003fbf06 	br	80d648 <__alt_data_end+0xff80d648>
  80d74c:	2823883a 	mov	r17,r5
  80d750:	84000054 	ori	r16,r16,1
  80d754:	003fa706 	br	80d5f4 <__alt_data_end+0xff80d5f4>
  80d758:	88800043 	ldbu	r2,1(r17)
  80d75c:	84000094 	ori	r16,r16,2
  80d760:	2823883a 	mov	r17,r5
  80d764:	10c03fcc 	andi	r3,r2,255
  80d768:	003e7d06 	br	80d160 <__alt_data_end+0xff80d160>
  80d76c:	2823883a 	mov	r17,r5
  80d770:	84000054 	ori	r16,r16,1
  80d774:	02c02074 	movhi	r11,129
  80d778:	5af0af04 	addi	r11,r11,-15684
  80d77c:	02000284 	movi	r8,10
  80d780:	982f883a 	mov	r23,r19
  80d784:	dac05115 	stw	r11,324(sp)
  80d788:	da005015 	stw	r8,320(sp)
  80d78c:	058000c4 	movi	r22,3
  80d790:	003f5306 	br	80d4e0 <__alt_data_end+0xff80d4e0>
  80d794:	9cc002a4 	muli	r19,r19,10
  80d798:	88800043 	ldbu	r2,1(r17)
  80d79c:	2823883a 	mov	r17,r5
  80d7a0:	98e7883a 	add	r19,r19,r3
  80d7a4:	9cfff404 	addi	r19,r19,-48
  80d7a8:	10c03fcc 	andi	r3,r2,255
  80d7ac:	003e6c06 	br	80d160 <__alt_data_end+0xff80d160>
  80d7b0:	88800043 	ldbu	r2,1(r17)
  80d7b4:	84000414 	ori	r16,r16,16
  80d7b8:	2823883a 	mov	r17,r5
  80d7bc:	10c03fcc 	andi	r3,r2,255
  80d7c0:	003e6706 	br	80d160 <__alt_data_end+0xff80d160>
  80d7c4:	98bfffc4 	addi	r2,r19,-1
  80d7c8:	01000984 	movi	r4,38
  80d7cc:	2081012e 	bgeu	r4,r2,80dbd4 <__ssvfiscanf_r+0xba4>
  80d7d0:	99fff644 	addi	r7,r19,-39
  80d7d4:	05c009c4 	movi	r23,39
  80d7d8:	82036014 	ori	r8,r16,3456
  80d7dc:	0021883a 	mov	r16,zero
  80d7e0:	8813883a 	mov	r9,r17
  80d7e4:	8023883a 	mov	r17,r16
  80d7e8:	dc005017 	ldw	r16,320(sp)
  80d7ec:	dd804104 	addi	r22,sp,260
  80d7f0:	00c01344 	movi	r3,77
  80d7f4:	02808004 	movi	r10,512
  80d7f8:	01bf7fc4 	movi	r6,-513
  80d7fc:	04ffdfc4 	movi	r19,-129
  80d800:	a9000017 	ldw	r4,0(r21)
  80d804:	21400003 	ldbu	r5,0(r4)
  80d808:	28bff544 	addi	r2,r5,-43
  80d80c:	10803fcc 	andi	r2,r2,255
  80d810:	18806336 	bltu	r3,r2,80d9a0 <__ssvfiscanf_r+0x970>
  80d814:	100490ba 	slli	r2,r2,2
  80d818:	02c02074 	movhi	r11,129
  80d81c:	5af60b04 	addi	r11,r11,-10196
  80d820:	12c5883a 	add	r2,r2,r11
  80d824:	10800017 	ldw	r2,0(r2)
  80d828:	1000683a 	jmp	r2
  80d82c:	0080dac0 	call	80dac <__alt_mem_sdram_0-0x77f254>
  80d830:	0080d9a0 	cmpeqi	r2,zero,870
  80d834:	0080dac0 	call	80dac <__alt_mem_sdram_0-0x77f254>
  80d838:	0080d9a0 	cmpeqi	r2,zero,870
  80d83c:	0080d9a0 	cmpeqi	r2,zero,870
  80d840:	0080da38 	rdprs	r2,zero,872
  80d844:	0080da18 	cmpnei	r2,zero,872
  80d848:	0080da18 	cmpnei	r2,zero,872
  80d84c:	0080da18 	cmpnei	r2,zero,872
  80d850:	0080da18 	cmpnei	r2,zero,872
  80d854:	0080da18 	cmpnei	r2,zero,872
  80d858:	0080da18 	cmpnei	r2,zero,872
  80d85c:	0080da18 	cmpnei	r2,zero,872
  80d860:	0080d9f8 	rdprs	r2,zero,871
  80d864:	0080d9f8 	rdprs	r2,zero,871
  80d868:	0080d9a0 	cmpeqi	r2,zero,870
  80d86c:	0080d9a0 	cmpeqi	r2,zero,870
  80d870:	0080d9a0 	cmpeqi	r2,zero,870
  80d874:	0080d9a0 	cmpeqi	r2,zero,870
  80d878:	0080d9a0 	cmpeqi	r2,zero,870
  80d87c:	0080d9a0 	cmpeqi	r2,zero,870
  80d880:	0080d9a0 	cmpeqi	r2,zero,870
  80d884:	0080d9e4 	muli	r2,zero,871
  80d888:	0080d9e4 	muli	r2,zero,871
  80d88c:	0080d9e4 	muli	r2,zero,871
  80d890:	0080d9e4 	muli	r2,zero,871
  80d894:	0080d9e4 	muli	r2,zero,871
  80d898:	0080d9e4 	muli	r2,zero,871
  80d89c:	0080d9a0 	cmpeqi	r2,zero,870
  80d8a0:	0080d9a0 	cmpeqi	r2,zero,870
  80d8a4:	0080d9a0 	cmpeqi	r2,zero,870
  80d8a8:	0080d9a0 	cmpeqi	r2,zero,870
  80d8ac:	0080d9a0 	cmpeqi	r2,zero,870
  80d8b0:	0080d9a0 	cmpeqi	r2,zero,870
  80d8b4:	0080d9a0 	cmpeqi	r2,zero,870
  80d8b8:	0080d9a0 	cmpeqi	r2,zero,870
  80d8bc:	0080d9a0 	cmpeqi	r2,zero,870
  80d8c0:	0080d9a0 	cmpeqi	r2,zero,870
  80d8c4:	0080d9a0 	cmpeqi	r2,zero,870
  80d8c8:	0080d9a0 	cmpeqi	r2,zero,870
  80d8cc:	0080d9a0 	cmpeqi	r2,zero,870
  80d8d0:	0080d9a0 	cmpeqi	r2,zero,870
  80d8d4:	0080d9a0 	cmpeqi	r2,zero,870
  80d8d8:	0080d9a0 	cmpeqi	r2,zero,870
  80d8dc:	0080d9a0 	cmpeqi	r2,zero,870
  80d8e0:	0080d964 	muli	r2,zero,869
  80d8e4:	0080d9a0 	cmpeqi	r2,zero,870
  80d8e8:	0080d9a0 	cmpeqi	r2,zero,870
  80d8ec:	0080d9a0 	cmpeqi	r2,zero,870
  80d8f0:	0080d9a0 	cmpeqi	r2,zero,870
  80d8f4:	0080d9a0 	cmpeqi	r2,zero,870
  80d8f8:	0080d9a0 	cmpeqi	r2,zero,870
  80d8fc:	0080d9a0 	cmpeqi	r2,zero,870
  80d900:	0080d9a0 	cmpeqi	r2,zero,870
  80d904:	0080d9e4 	muli	r2,zero,871
  80d908:	0080d9e4 	muli	r2,zero,871
  80d90c:	0080d9e4 	muli	r2,zero,871
  80d910:	0080d9e4 	muli	r2,zero,871
  80d914:	0080d9e4 	muli	r2,zero,871
  80d918:	0080d9e4 	muli	r2,zero,871
  80d91c:	0080d9a0 	cmpeqi	r2,zero,870
  80d920:	0080d9a0 	cmpeqi	r2,zero,870
  80d924:	0080d9a0 	cmpeqi	r2,zero,870
  80d928:	0080d9a0 	cmpeqi	r2,zero,870
  80d92c:	0080d9a0 	cmpeqi	r2,zero,870
  80d930:	0080d9a0 	cmpeqi	r2,zero,870
  80d934:	0080d9a0 	cmpeqi	r2,zero,870
  80d938:	0080d9a0 	cmpeqi	r2,zero,870
  80d93c:	0080d9a0 	cmpeqi	r2,zero,870
  80d940:	0080d9a0 	cmpeqi	r2,zero,870
  80d944:	0080d9a0 	cmpeqi	r2,zero,870
  80d948:	0080d9a0 	cmpeqi	r2,zero,870
  80d94c:	0080d9a0 	cmpeqi	r2,zero,870
  80d950:	0080d9a0 	cmpeqi	r2,zero,870
  80d954:	0080d9a0 	cmpeqi	r2,zero,870
  80d958:	0080d9a0 	cmpeqi	r2,zero,870
  80d95c:	0080d9a0 	cmpeqi	r2,zero,870
  80d960:	0080d964 	muli	r2,zero,869
  80d964:	4081800c 	andi	r2,r8,1536
  80d968:	12800d1e 	bne	r2,r10,80d9a0 <__ssvfiscanf_r+0x970>
  80d96c:	4190703a 	and	r8,r8,r6
  80d970:	42014014 	ori	r8,r8,1280
  80d974:	04000404 	movi	r16,16
  80d978:	a8800117 	ldw	r2,4(r21)
  80d97c:	b1400005 	stb	r5,0(r22)
  80d980:	b5800044 	addi	r22,r22,1
  80d984:	10bfffc4 	addi	r2,r2,-1
  80d988:	a8800115 	stw	r2,4(r21)
  80d98c:	00803b0e 	bge	zero,r2,80da7c <__ssvfiscanf_r+0xa4c>
  80d990:	21000044 	addi	r4,r4,1
  80d994:	a9000015 	stw	r4,0(r21)
  80d998:	bdffffc4 	addi	r23,r23,-1
  80d99c:	b83f981e 	bne	r23,zero,80d800 <__alt_data_end+0xff80d800>
  80d9a0:	dc005015 	stw	r16,320(sp)
  80d9a4:	4080400c 	andi	r2,r8,256
  80d9a8:	8821883a 	mov	r16,r17
  80d9ac:	4823883a 	mov	r17,r9
  80d9b0:	10000426 	beq	r2,zero,80d9c4 <__ssvfiscanf_r+0x994>
  80d9b4:	dac04e17 	ldw	r11,312(sp)
  80d9b8:	5d816c36 	bltu	r11,r22,80df6c <__ssvfiscanf_r+0xf3c>
  80d9bc:	dac04e17 	ldw	r11,312(sp)
  80d9c0:	b2fdde26 	beq	r22,r11,80d13c <__alt_data_end+0xff80d13c>
  80d9c4:	4080040c 	andi	r2,r8,16
  80d9c8:	1000ce26 	beq	r2,zero,80dd04 <__ssvfiscanf_r+0xcd4>
  80d9cc:	dac04e17 	ldw	r11,312(sp)
  80d9d0:	880d883a 	mov	r6,r17
  80d9d4:	b2edc83a 	sub	r22,r22,r11
  80d9d8:	b42d883a 	add	r22,r22,r16
  80d9dc:	e5b9883a 	add	fp,fp,r22
  80d9e0:	003dd206 	br	80d12c <__alt_data_end+0xff80d12c>
  80d9e4:	00800284 	movi	r2,10
  80d9e8:	143fed0e 	bge	r2,r16,80d9a0 <__alt_data_end+0xff80d9a0>
  80d9ec:	00bd1fc4 	movi	r2,-2945
  80d9f0:	4090703a 	and	r8,r8,r2
  80d9f4:	003fe006 	br	80d978 <__alt_data_end+0xff80d978>
  80d9f8:	02c020b4 	movhi	r11,130
  80d9fc:	8421883a 	add	r16,r16,r16
  80da00:	5aeee204 	addi	r11,r11,-17528
  80da04:	5c05883a 	add	r2,r11,r16
  80da08:	1400000f 	ldh	r16,0(r2)
  80da0c:	00800204 	movi	r2,8
  80da10:	143ff616 	blt	r2,r16,80d9ec <__alt_data_end+0xff80d9ec>
  80da14:	003fe206 	br	80d9a0 <__alt_data_end+0xff80d9a0>
  80da18:	02c020b4 	movhi	r11,130
  80da1c:	8421883a 	add	r16,r16,r16
  80da20:	5aeee204 	addi	r11,r11,-17528
  80da24:	5c05883a 	add	r2,r11,r16
  80da28:	1400000f 	ldh	r16,0(r2)
  80da2c:	00bd1fc4 	movi	r2,-2945
  80da30:	4090703a 	and	r8,r8,r2
  80da34:	003fd006 	br	80d978 <__alt_data_end+0xff80d978>
  80da38:	4082000c 	andi	r2,r8,2048
  80da3c:	103fce26 	beq	r2,zero,80d978 <__alt_data_end+0xff80d978>
  80da40:	8000021e 	bne	r16,zero,80da4c <__ssvfiscanf_r+0xa1c>
  80da44:	42008014 	ori	r8,r8,512
  80da48:	04000204 	movi	r16,8
  80da4c:	4081000c 	andi	r2,r8,1024
  80da50:	1000f31e 	bne	r2,zero,80de20 <__ssvfiscanf_r+0xdf0>
  80da54:	00bf1fc4 	movi	r2,-897
  80da58:	4090703a 	and	r8,r8,r2
  80da5c:	38000226 	beq	r7,zero,80da68 <__ssvfiscanf_r+0xa38>
  80da60:	39ffffc4 	addi	r7,r7,-1
  80da64:	bdc00044 	addi	r23,r23,1
  80da68:	a8800117 	ldw	r2,4(r21)
  80da6c:	8c400044 	addi	r17,r17,1
  80da70:	10bfffc4 	addi	r2,r2,-1
  80da74:	a8800115 	stw	r2,4(r21)
  80da78:	00bfc516 	blt	zero,r2,80d990 <__alt_data_end+0xff80d990>
  80da7c:	9009883a 	mov	r4,r18
  80da80:	a80b883a 	mov	r5,r21
  80da84:	d8c05a15 	stw	r3,360(sp)
  80da88:	d9805715 	stw	r6,348(sp)
  80da8c:	d9c05815 	stw	r7,352(sp)
  80da90:	da005b15 	stw	r8,364(sp)
  80da94:	da405915 	stw	r9,356(sp)
  80da98:	da805615 	stw	r10,344(sp)
  80da9c:	080cecc0 	call	80cecc <__ssrefill_r>
  80daa0:	d8c05a17 	ldw	r3,360(sp)
  80daa4:	d9805717 	ldw	r6,348(sp)
  80daa8:	d9c05817 	ldw	r7,352(sp)
  80daac:	da005b17 	ldw	r8,364(sp)
  80dab0:	da405917 	ldw	r9,356(sp)
  80dab4:	da805617 	ldw	r10,344(sp)
  80dab8:	103fb726 	beq	r2,zero,80d998 <__alt_data_end+0xff80d998>
  80dabc:	003fb806 	br	80d9a0 <__alt_data_end+0xff80d9a0>
  80dac0:	4080200c 	andi	r2,r8,128
  80dac4:	103fb626 	beq	r2,zero,80d9a0 <__alt_data_end+0xff80d9a0>
  80dac8:	44d0703a 	and	r8,r8,r19
  80dacc:	003faa06 	br	80d978 <__alt_data_end+0xff80d978>
  80dad0:	9800011e 	bne	r19,zero,80dad8 <__ssvfiscanf_r+0xaa8>
  80dad4:	05ffffc4 	movi	r23,-1
  80dad8:	8400040c 	andi	r16,r16,16
  80dadc:	80003f26 	beq	r16,zero,80dbdc <__ssvfiscanf_r+0xbac>
  80dae0:	a9000017 	ldw	r4,0(r21)
  80dae4:	0027883a 	mov	r19,zero
  80dae8:	20800003 	ldbu	r2,0(r4)
  80daec:	dac00104 	addi	r11,sp,4
  80daf0:	5885883a 	add	r2,r11,r2
  80daf4:	10800007 	ldb	r2,0(r2)
  80daf8:	10010426 	beq	r2,zero,80df0c <__ssvfiscanf_r+0xedc>
  80dafc:	a8800117 	ldw	r2,4(r21)
  80db00:	21000044 	addi	r4,r4,1
  80db04:	9cc00044 	addi	r19,r19,1
  80db08:	10bfffc4 	addi	r2,r2,-1
  80db0c:	a8800115 	stw	r2,4(r21)
  80db10:	a9000015 	stw	r4,0(r21)
  80db14:	bcc02c26 	beq	r23,r19,80dbc8 <__ssvfiscanf_r+0xb98>
  80db18:	00bff316 	blt	zero,r2,80dae8 <__alt_data_end+0xff80dae8>
  80db1c:	9009883a 	mov	r4,r18
  80db20:	a80b883a 	mov	r5,r21
  80db24:	080cecc0 	call	80cecc <__ssrefill_r>
  80db28:	1000271e 	bne	r2,zero,80dbc8 <__ssvfiscanf_r+0xb98>
  80db2c:	a9000017 	ldw	r4,0(r21)
  80db30:	003fed06 	br	80dae8 <__alt_data_end+0xff80dae8>
  80db34:	9800011e 	bne	r19,zero,80db3c <__ssvfiscanf_r+0xb0c>
  80db38:	05ffffc4 	movi	r23,-1
  80db3c:	8080004c 	andi	r2,r16,1
  80db40:	103e081e 	bne	r2,zero,80d364 <__alt_data_end+0xff80d364>
  80db44:	8400040c 	andi	r16,r16,16
  80db48:	80004526 	beq	r16,zero,80dc60 <__ssvfiscanf_r+0xc30>
  80db4c:	a1400017 	ldw	r5,0(r20)
  80db50:	a9000017 	ldw	r4,0(r21)
  80db54:	0021883a 	mov	r16,zero
  80db58:	20800003 	ldbu	r2,0(r4)
  80db5c:	2885883a 	add	r2,r5,r2
  80db60:	10800043 	ldbu	r2,1(r2)
  80db64:	1080020c 	andi	r2,r2,8
  80db68:	103e801e 	bne	r2,zero,80d56c <__alt_data_end+0xff80d56c>
  80db6c:	a8800117 	ldw	r2,4(r21)
  80db70:	21000044 	addi	r4,r4,1
  80db74:	84000044 	addi	r16,r16,1
  80db78:	10bfffc4 	addi	r2,r2,-1
  80db7c:	a8800115 	stw	r2,4(r21)
  80db80:	a9000015 	stw	r4,0(r21)
  80db84:	bc3e7926 	beq	r23,r16,80d56c <__alt_data_end+0xff80d56c>
  80db88:	00bff316 	blt	zero,r2,80db58 <__alt_data_end+0xff80db58>
  80db8c:	9009883a 	mov	r4,r18
  80db90:	a80b883a 	mov	r5,r21
  80db94:	080cecc0 	call	80cecc <__ssrefill_r>
  80db98:	103e741e 	bne	r2,zero,80d56c <__alt_data_end+0xff80d56c>
  80db9c:	a1400017 	ldw	r5,0(r20)
  80dba0:	a9000017 	ldw	r4,0(r21)
  80dba4:	003fec06 	br	80db58 <__alt_data_end+0xff80db58>
  80dba8:	2809883a 	mov	r4,r5
  80dbac:	24e7c83a 	sub	r19,r4,r19
  80dbb0:	983d6226 	beq	r19,zero,80d13c <__alt_data_end+0xff80d13c>
  80dbb4:	da005317 	ldw	r8,332(sp)
  80dbb8:	20000005 	stb	zero,0(r4)
  80dbbc:	dc004f15 	stw	r16,316(sp)
  80dbc0:	42000044 	addi	r8,r8,1
  80dbc4:	da005315 	stw	r8,332(sp)
  80dbc8:	e4f9883a 	add	fp,fp,r19
  80dbcc:	880d883a 	mov	r6,r17
  80dbd0:	003d5606 	br	80d12c <__alt_data_end+0xff80d12c>
  80dbd4:	000f883a 	mov	r7,zero
  80dbd8:	003eff06 	br	80d7d8 <__alt_data_end+0xff80d7d8>
  80dbdc:	da004f17 	ldw	r8,316(sp)
  80dbe0:	b8ffffc4 	addi	r3,r23,-1
  80dbe4:	44c00017 	ldw	r19,0(r8)
  80dbe8:	44000104 	addi	r16,r8,4
  80dbec:	980b883a 	mov	r5,r19
  80dbf0:	98ef883a 	add	r23,r19,r3
  80dbf4:	00000106 	br	80dbfc <__ssvfiscanf_r+0xbcc>
  80dbf8:	b00b883a 	mov	r5,r22
  80dbfc:	a8c00017 	ldw	r3,0(r21)
  80dc00:	dac00104 	addi	r11,sp,4
  80dc04:	280d883a 	mov	r6,r5
  80dc08:	18800003 	ldbu	r2,0(r3)
  80dc0c:	5885883a 	add	r2,r11,r2
  80dc10:	10800007 	ldb	r2,0(r2)
  80dc14:	103fe426 	beq	r2,zero,80dba8 <__alt_data_end+0xff80dba8>
  80dc18:	a8800117 	ldw	r2,4(r21)
  80dc1c:	19c00044 	addi	r7,r3,1
  80dc20:	a9c00015 	stw	r7,0(r21)
  80dc24:	10bfffc4 	addi	r2,r2,-1
  80dc28:	a8800115 	stw	r2,4(r21)
  80dc2c:	18800003 	ldbu	r2,0(r3)
  80dc30:	35800044 	addi	r22,r6,1
  80dc34:	28800005 	stb	r2,0(r5)
  80dc38:	35c0b926 	beq	r6,r23,80df20 <__ssvfiscanf_r+0xef0>
  80dc3c:	a8800117 	ldw	r2,4(r21)
  80dc40:	00bfed16 	blt	zero,r2,80dbf8 <__alt_data_end+0xff80dbf8>
  80dc44:	9009883a 	mov	r4,r18
  80dc48:	a80b883a 	mov	r5,r21
  80dc4c:	080cecc0 	call	80cecc <__ssrefill_r>
  80dc50:	103fe926 	beq	r2,zero,80dbf8 <__alt_data_end+0xff80dbf8>
  80dc54:	b009883a 	mov	r4,r22
  80dc58:	9dbfd41e 	bne	r19,r22,80dbac <__alt_data_end+0xff80dbac>
  80dc5c:	003df706 	br	80d43c <__alt_data_end+0xff80d43c>
  80dc60:	da004f17 	ldw	r8,316(sp)
  80dc64:	b8ffffc4 	addi	r3,r23,-1
  80dc68:	44c00017 	ldw	r19,0(r8)
  80dc6c:	44000104 	addi	r16,r8,4
  80dc70:	980d883a 	mov	r6,r19
  80dc74:	98ed883a 	add	r22,r19,r3
  80dc78:	00000106 	br	80dc80 <__ssvfiscanf_r+0xc50>
  80dc7c:	b80d883a 	mov	r6,r23
  80dc80:	a8c00017 	ldw	r3,0(r21)
  80dc84:	a1c00017 	ldw	r7,0(r20)
  80dc88:	300b883a 	mov	r5,r6
  80dc8c:	18800003 	ldbu	r2,0(r3)
  80dc90:	3885883a 	add	r2,r7,r2
  80dc94:	10800043 	ldbu	r2,1(r2)
  80dc98:	1080020c 	andi	r2,r2,8
  80dc9c:	1000101e 	bne	r2,zero,80dce0 <__ssvfiscanf_r+0xcb0>
  80dca0:	a8800117 	ldw	r2,4(r21)
  80dca4:	19c00044 	addi	r7,r3,1
  80dca8:	a9c00015 	stw	r7,0(r21)
  80dcac:	10bfffc4 	addi	r2,r2,-1
  80dcb0:	a8800115 	stw	r2,4(r21)
  80dcb4:	18800003 	ldbu	r2,0(r3)
  80dcb8:	2dc00044 	addi	r23,r5,1
  80dcbc:	30800005 	stb	r2,0(r6)
  80dcc0:	2d800626 	beq	r5,r22,80dcdc <__ssvfiscanf_r+0xcac>
  80dcc4:	a8800117 	ldw	r2,4(r21)
  80dcc8:	00bfec16 	blt	zero,r2,80dc7c <__alt_data_end+0xff80dc7c>
  80dccc:	9009883a 	mov	r4,r18
  80dcd0:	a80b883a 	mov	r5,r21
  80dcd4:	080cecc0 	call	80cecc <__ssrefill_r>
  80dcd8:	103fe826 	beq	r2,zero,80dc7c <__alt_data_end+0xff80dc7c>
  80dcdc:	b80b883a 	mov	r5,r23
  80dce0:	dac05317 	ldw	r11,332(sp)
  80dce4:	2ce7c83a 	sub	r19,r5,r19
  80dce8:	28000005 	stb	zero,0(r5)
  80dcec:	5ac00044 	addi	r11,r11,1
  80dcf0:	e4f9883a 	add	fp,fp,r19
  80dcf4:	dac05315 	stw	r11,332(sp)
  80dcf8:	dc004f15 	stw	r16,316(sp)
  80dcfc:	880d883a 	mov	r6,r17
  80dd00:	003d0a06 	br	80d12c <__alt_data_end+0xff80d12c>
  80dd04:	d9c05017 	ldw	r7,320(sp)
  80dd08:	dac05117 	ldw	r11,324(sp)
  80dd0c:	b0000005 	stb	zero,0(r22)
  80dd10:	da005b15 	stw	r8,364(sp)
  80dd14:	9009883a 	mov	r4,r18
  80dd18:	d9404104 	addi	r5,sp,260
  80dd1c:	000d883a 	mov	r6,zero
  80dd20:	583ee83a 	callr	r11
  80dd24:	da005b17 	ldw	r8,364(sp)
  80dd28:	40c0080c 	andi	r3,r8,32
  80dd2c:	18004126 	beq	r3,zero,80de34 <__ssvfiscanf_r+0xe04>
  80dd30:	da004f17 	ldw	r8,316(sp)
  80dd34:	40c00017 	ldw	r3,0(r8)
  80dd38:	42000104 	addi	r8,r8,4
  80dd3c:	da004f15 	stw	r8,316(sp)
  80dd40:	18800015 	stw	r2,0(r3)
  80dd44:	da005317 	ldw	r8,332(sp)
  80dd48:	42000044 	addi	r8,r8,1
  80dd4c:	da005315 	stw	r8,332(sp)
  80dd50:	003f1e06 	br	80d9cc <__alt_data_end+0xff80d9cc>
  80dd54:	dac04b04 	addi	r11,sp,300
  80dd58:	8400040c 	andi	r16,r16,16
  80dd5c:	5809883a 	mov	r4,r11
  80dd60:	000b883a 	mov	r5,zero
  80dd64:	01800204 	movi	r6,8
  80dd68:	dc005415 	stw	r16,336(sp)
  80dd6c:	dac05215 	stw	r11,328(sp)
  80dd70:	0802a600 	call	802a60 <memset>
  80dd74:	dc005417 	ldw	r16,336(sp)
  80dd78:	80004226 	beq	r16,zero,80de84 <__ssvfiscanf_r+0xe54>
  80dd7c:	002d883a 	mov	r22,zero
  80dd80:	dc005417 	ldw	r16,336(sp)
  80dd84:	0027883a 	mov	r19,zero
  80dd88:	dc405515 	stw	r17,340(sp)
  80dd8c:	0808b840 	call	808b84 <__locale_mb_cur_max>
  80dd90:	14fdaa26 	beq	r2,r19,80d43c <__alt_data_end+0xff80d43c>
  80dd94:	a8800017 	ldw	r2,0(r21)
  80dd98:	a9000117 	ldw	r4,4(r21)
  80dd9c:	d8c05217 	ldw	r3,328(sp)
  80dda0:	12400003 	ldbu	r9,0(r2)
  80dda4:	213fffc4 	addi	r4,r4,-1
  80dda8:	10800044 	addi	r2,r2,1
  80ddac:	dac04104 	addi	r11,sp,260
  80ddb0:	a9000115 	stw	r4,4(r21)
  80ddb4:	a8800015 	stw	r2,0(r21)
  80ddb8:	9c400044 	addi	r17,r19,1
  80ddbc:	d8c00015 	stw	r3,0(sp)
  80ddc0:	5ce7883a 	add	r19,r11,r19
  80ddc4:	9009883a 	mov	r4,r18
  80ddc8:	b00b883a 	mov	r5,r22
  80ddcc:	580d883a 	mov	r6,r11
  80ddd0:	880f883a 	mov	r7,r17
  80ddd4:	9a400005 	stb	r9,0(r19)
  80ddd8:	0808c380 	call	808c38 <_mbrtowc_r>
  80dddc:	013fffc4 	movi	r4,-1
  80dde0:	113d9626 	beq	r2,r4,80d43c <__alt_data_end+0xff80d43c>
  80dde4:	1000431e 	bne	r2,zero,80def4 <__ssvfiscanf_r+0xec4>
  80dde8:	8000011e 	bne	r16,zero,80ddf0 <__ssvfiscanf_r+0xdc0>
  80ddec:	b0000015 	stw	zero,0(r22)
  80ddf0:	e479883a 	add	fp,fp,r17
  80ddf4:	bdffffc4 	addi	r23,r23,-1
  80ddf8:	8000421e 	bne	r16,zero,80df04 <__ssvfiscanf_r+0xed4>
  80ddfc:	b5800104 	addi	r22,r22,4
  80de00:	0027883a 	mov	r19,zero
  80de04:	a8800117 	ldw	r2,4(r21)
  80de08:	0080120e 	bge	zero,r2,80de54 <__ssvfiscanf_r+0xe24>
  80de0c:	b83fdf1e 	bne	r23,zero,80dd8c <__alt_data_end+0xff80dd8c>
  80de10:	dc405517 	ldw	r17,340(sp)
  80de14:	da005417 	ldw	r8,336(sp)
  80de18:	40003126 	beq	r8,zero,80dee0 <__ssvfiscanf_r+0xeb0>
  80de1c:	003cc206 	br	80d128 <__alt_data_end+0xff80d128>
  80de20:	00be9fc4 	movi	r2,-1409
  80de24:	4090703a 	and	r8,r8,r2
  80de28:	003ed306 	br	80d978 <__alt_data_end+0xff80d978>
  80de2c:	4005883a 	mov	r2,r8
  80de30:	003d8806 	br	80d454 <__alt_data_end+0xff80d454>
  80de34:	40c0010c 	andi	r3,r8,4
  80de38:	18007226 	beq	r3,zero,80e004 <__ssvfiscanf_r+0xfd4>
  80de3c:	dac04f17 	ldw	r11,316(sp)
  80de40:	58c00017 	ldw	r3,0(r11)
  80de44:	5ac00104 	addi	r11,r11,4
  80de48:	dac04f15 	stw	r11,316(sp)
  80de4c:	1880000d 	sth	r2,0(r3)
  80de50:	003fbc06 	br	80dd44 <__alt_data_end+0xff80dd44>
  80de54:	9009883a 	mov	r4,r18
  80de58:	a80b883a 	mov	r5,r21
  80de5c:	080cecc0 	call	80cecc <__ssrefill_r>
  80de60:	103fea26 	beq	r2,zero,80de0c <__alt_data_end+0xff80de0c>
  80de64:	dc405517 	ldw	r17,340(sp)
  80de68:	983fea26 	beq	r19,zero,80de14 <__alt_data_end+0xff80de14>
  80de6c:	003d7306 	br	80d43c <__alt_data_end+0xff80d43c>
  80de70:	da004f17 	ldw	r8,316(sp)
  80de74:	45800017 	ldw	r22,0(r8)
  80de78:	42000104 	addi	r8,r8,4
  80de7c:	da004f15 	stw	r8,316(sp)
  80de80:	003d4106 	br	80d388 <__alt_data_end+0xff80d388>
  80de84:	da004f17 	ldw	r8,316(sp)
  80de88:	45800017 	ldw	r22,0(r8)
  80de8c:	42000104 	addi	r8,r8,4
  80de90:	da004f15 	stw	r8,316(sp)
  80de94:	003fba06 	br	80dd80 <__alt_data_end+0xff80dd80>
  80de98:	b0000015 	stw	zero,0(r22)
  80de9c:	0009883a 	mov	r4,zero
  80dea0:	d8c05a15 	stw	r3,360(sp)
  80dea4:	0808acc0 	call	808acc <iswspace>
  80dea8:	d8c05a17 	ldw	r3,360(sp)
  80deac:	10006f26 	beq	r2,zero,80e06c <__ssvfiscanf_r+0x103c>
  80deb0:	1827883a 	mov	r19,r3
  80deb4:	18000826 	beq	r3,zero,80ded8 <__ssvfiscanf_r+0xea8>
  80deb8:	9cffffc4 	addi	r19,r19,-1
  80debc:	da004104 	addi	r8,sp,260
  80dec0:	44c5883a 	add	r2,r8,r19
  80dec4:	11400003 	ldbu	r5,0(r2)
  80dec8:	9009883a 	mov	r4,r18
  80decc:	a80d883a 	mov	r6,r21
  80ded0:	080cdd40 	call	80cdd4 <_sungetc_r>
  80ded4:	983ff81e 	bne	r19,zero,80deb8 <__alt_data_end+0xff80deb8>
  80ded8:	803c931e 	bne	r16,zero,80d128 <__alt_data_end+0xff80d128>
  80dedc:	b0000015 	stw	zero,0(r22)
  80dee0:	dac05317 	ldw	r11,332(sp)
  80dee4:	880d883a 	mov	r6,r17
  80dee8:	5ac00044 	addi	r11,r11,1
  80deec:	dac05315 	stw	r11,332(sp)
  80def0:	003c8e06 	br	80d12c <__alt_data_end+0xff80d12c>
  80def4:	017fff84 	movi	r5,-2
  80def8:	117fbd1e 	bne	r2,r5,80ddf0 <__alt_data_end+0xff80ddf0>
  80defc:	8827883a 	mov	r19,r17
  80df00:	003fc006 	br	80de04 <__alt_data_end+0xff80de04>
  80df04:	0027883a 	mov	r19,zero
  80df08:	003fbe06 	br	80de04 <__alt_data_end+0xff80de04>
  80df0c:	983c8b26 	beq	r19,zero,80d13c <__alt_data_end+0xff80d13c>
  80df10:	e4f9883a 	add	fp,fp,r19
  80df14:	003f2d06 	br	80dbcc <__alt_data_end+0xff80dbcc>
  80df18:	803d941e 	bne	r16,zero,80d56c <__alt_data_end+0xff80d56c>
  80df1c:	003d4706 	br	80d43c <__alt_data_end+0xff80d43c>
  80df20:	b009883a 	mov	r4,r22
  80df24:	003f2106 	br	80dbac <__alt_data_end+0xff80dbac>
  80df28:	da004f17 	ldw	r8,316(sp)
  80df2c:	dd400015 	stw	r21,0(sp)
  80df30:	9009883a 	mov	r4,r18
  80df34:	41400017 	ldw	r5,0(r8)
  80df38:	01800044 	movi	r6,1
  80df3c:	b80f883a 	mov	r7,r23
  80df40:	080cf3c0 	call	80cf3c <_sfread_r>
  80df44:	dac04f17 	ldw	r11,316(sp)
  80df48:	58c00104 	addi	r3,r11,4
  80df4c:	103d3b26 	beq	r2,zero,80d43c <__alt_data_end+0xff80d43c>
  80df50:	da005317 	ldw	r8,332(sp)
  80df54:	1739883a 	add	fp,r2,fp
  80df58:	d8c04f15 	stw	r3,316(sp)
  80df5c:	42000044 	addi	r8,r8,1
  80df60:	da005315 	stw	r8,332(sp)
  80df64:	880d883a 	mov	r6,r17
  80df68:	003c7006 	br	80d12c <__alt_data_end+0xff80d12c>
  80df6c:	b17fffc7 	ldb	r5,-1(r22)
  80df70:	9009883a 	mov	r4,r18
  80df74:	a80d883a 	mov	r6,r21
  80df78:	da005b15 	stw	r8,364(sp)
  80df7c:	080cdd40 	call	80cdd4 <_sungetc_r>
  80df80:	b5bfffc4 	addi	r22,r22,-1
  80df84:	da005b17 	ldw	r8,364(sp)
  80df88:	003e8c06 	br	80d9bc <__alt_data_end+0xff80d9bc>
  80df8c:	9009883a 	mov	r4,r18
  80df90:	a80b883a 	mov	r5,r21
  80df94:	080cecc0 	call	80cecc <__ssrefill_r>
  80df98:	103d3d26 	beq	r2,zero,80d490 <__alt_data_end+0xff80d490>
  80df9c:	003d2706 	br	80d43c <__alt_data_end+0xff80d43c>
  80dfa0:	88800083 	ldbu	r2,2(r17)
  80dfa4:	84000094 	ori	r16,r16,2
  80dfa8:	8c400084 	addi	r17,r17,2
  80dfac:	10c03fcc 	andi	r3,r2,255
  80dfb0:	003c6b06 	br	80d160 <__alt_data_end+0xff80d160>
  80dfb4:	80e0b03a 	or	r16,r16,r3
  80dfb8:	003dee06 	br	80d774 <__alt_data_end+0xff80d774>
  80dfbc:	8080004c 	andi	r2,r16,1
  80dfc0:	10000a1e 	bne	r2,zero,80dfec <__ssvfiscanf_r+0xfbc>
  80dfc4:	8400008c 	andi	r16,r16,2
  80dfc8:	80000826 	beq	r16,zero,80dfec <__ssvfiscanf_r+0xfbc>
  80dfcc:	dac04f17 	ldw	r11,316(sp)
  80dfd0:	e007d7fa 	srai	r3,fp,31
  80dfd4:	58800017 	ldw	r2,0(r11)
  80dfd8:	5ac00104 	addi	r11,r11,4
  80dfdc:	dac04f15 	stw	r11,316(sp)
  80dfe0:	17000015 	stw	fp,0(r2)
  80dfe4:	10c00115 	stw	r3,4(r2)
  80dfe8:	003c4f06 	br	80d128 <__alt_data_end+0xff80d128>
  80dfec:	da004f17 	ldw	r8,316(sp)
  80dff0:	40800017 	ldw	r2,0(r8)
  80dff4:	42000104 	addi	r8,r8,4
  80dff8:	da004f15 	stw	r8,316(sp)
  80dffc:	17000015 	stw	fp,0(r2)
  80e000:	003c4906 	br	80d128 <__alt_data_end+0xff80d128>
  80e004:	40c0004c 	andi	r3,r8,1
  80e008:	183f491e 	bne	r3,zero,80dd30 <__alt_data_end+0xff80dd30>
  80e00c:	45c0008c 	andi	r23,r8,2
  80e010:	b8001026 	beq	r23,zero,80e054 <__ssvfiscanf_r+0x1024>
  80e014:	dac05117 	ldw	r11,324(sp)
  80e018:	00802074 	movhi	r2,129
  80e01c:	10b20504 	addi	r2,r2,-14316
  80e020:	9009883a 	mov	r4,r18
  80e024:	d9404104 	addi	r5,sp,260
  80e028:	000d883a 	mov	r6,zero
  80e02c:	d9c05017 	ldw	r7,320(sp)
  80e030:	58801826 	beq	r11,r2,80e094 <__ssvfiscanf_r+0x1064>
  80e034:	080c5200 	call	80c520 <_strtoll_r>
  80e038:	da004f17 	ldw	r8,316(sp)
  80e03c:	41000017 	ldw	r4,0(r8)
  80e040:	42000104 	addi	r8,r8,4
  80e044:	da004f15 	stw	r8,316(sp)
  80e048:	20800015 	stw	r2,0(r4)
  80e04c:	20c00115 	stw	r3,4(r4)
  80e050:	003f3c06 	br	80dd44 <__alt_data_end+0xff80dd44>
  80e054:	dac04f17 	ldw	r11,316(sp)
  80e058:	58c00017 	ldw	r3,0(r11)
  80e05c:	5ac00104 	addi	r11,r11,4
  80e060:	dac04f15 	stw	r11,316(sp)
  80e064:	18800015 	stw	r2,0(r3)
  80e068:	003f3606 	br	80dd44 <__alt_data_end+0xff80dd44>
  80e06c:	e0f9883a 	add	fp,fp,r3
  80e070:	bdffffc4 	addi	r23,r23,-1
  80e074:	8000031e 	bne	r16,zero,80e084 <__ssvfiscanf_r+0x1054>
  80e078:	b5800104 	addi	r22,r22,4
  80e07c:	0027883a 	mov	r19,zero
  80e080:	003ce706 	br	80d420 <__alt_data_end+0xff80d420>
  80e084:	0027883a 	mov	r19,zero
  80e088:	003ce506 	br	80d420 <__alt_data_end+0xff80d420>
  80e08c:	b1000017 	ldw	r4,0(r22)
  80e090:	003f8306 	br	80dea0 <__alt_data_end+0xff80dea0>
  80e094:	080caa00 	call	80caa0 <_strtoull_r>
  80e098:	003fe706 	br	80e038 <__alt_data_end+0xff80e038>

0080e09c <___svfprintf_internal_r>:
  80e09c:	deffb504 	addi	sp,sp,-300
  80e0a0:	dfc04a15 	stw	ra,296(sp)
  80e0a4:	ddc04815 	stw	r23,288(sp)
  80e0a8:	d9002f15 	stw	r4,188(sp)
  80e0ac:	282f883a 	mov	r23,r5
  80e0b0:	d9802915 	stw	r6,164(sp)
  80e0b4:	d9c02d15 	stw	r7,180(sp)
  80e0b8:	df004915 	stw	fp,292(sp)
  80e0bc:	dd804715 	stw	r22,284(sp)
  80e0c0:	dd404615 	stw	r21,280(sp)
  80e0c4:	dd004515 	stw	r20,276(sp)
  80e0c8:	dcc04415 	stw	r19,272(sp)
  80e0cc:	dc804315 	stw	r18,268(sp)
  80e0d0:	dc404215 	stw	r17,264(sp)
  80e0d4:	dc004115 	stw	r16,260(sp)
  80e0d8:	0808ba80 	call	808ba8 <_localeconv_r>
  80e0dc:	10800017 	ldw	r2,0(r2)
  80e0e0:	1009883a 	mov	r4,r2
  80e0e4:	d8803515 	stw	r2,212(sp)
  80e0e8:	08032200 	call	803220 <strlen>
  80e0ec:	d8803915 	stw	r2,228(sp)
  80e0f0:	b880030b 	ldhu	r2,12(r23)
  80e0f4:	1080200c 	andi	r2,r2,128
  80e0f8:	10000226 	beq	r2,zero,80e104 <___svfprintf_internal_r+0x68>
  80e0fc:	b8800417 	ldw	r2,16(r23)
  80e100:	10065f26 	beq	r2,zero,80fa80 <___svfprintf_internal_r+0x19e4>
  80e104:	db001dc4 	addi	r12,sp,119
  80e108:	dd801e04 	addi	r22,sp,120
  80e10c:	d8800404 	addi	r2,sp,16
  80e110:	050020b4 	movhi	r20,130
  80e114:	b317c83a 	sub	r11,r22,r12
  80e118:	a52eea84 	addi	r20,r20,-17494
  80e11c:	db002815 	stw	r12,160(sp)
  80e120:	d8801e15 	stw	r2,120(sp)
  80e124:	d8002015 	stw	zero,128(sp)
  80e128:	d8001f15 	stw	zero,124(sp)
  80e12c:	d8003315 	stw	zero,204(sp)
  80e130:	d8003715 	stw	zero,220(sp)
  80e134:	d8003815 	stw	zero,224(sp)
  80e138:	1011883a 	mov	r8,r2
  80e13c:	d8003b15 	stw	zero,236(sp)
  80e140:	d8003a15 	stw	zero,232(sp)
  80e144:	d8003015 	stw	zero,192(sp)
  80e148:	dac03d15 	stw	r11,244(sp)
  80e14c:	db002917 	ldw	r12,164(sp)
  80e150:	60800007 	ldb	r2,0(r12)
  80e154:	1000ab26 	beq	r2,zero,80e404 <___svfprintf_internal_r+0x368>
  80e158:	00c00944 	movi	r3,37
  80e15c:	10c0a926 	beq	r2,r3,80e404 <___svfprintf_internal_r+0x368>
  80e160:	6021883a 	mov	r16,r12
  80e164:	00000106 	br	80e16c <___svfprintf_internal_r+0xd0>
  80e168:	10c08426 	beq	r2,r3,80e37c <___svfprintf_internal_r+0x2e0>
  80e16c:	84000044 	addi	r16,r16,1
  80e170:	80800007 	ldb	r2,0(r16)
  80e174:	103ffc1e 	bne	r2,zero,80e168 <__alt_data_end+0xff80e168>
  80e178:	dac02917 	ldw	r11,164(sp)
  80e17c:	82e3c83a 	sub	r17,r16,r11
  80e180:	88000f26 	beq	r17,zero,80e1c0 <___svfprintf_internal_r+0x124>
  80e184:	d8c02017 	ldw	r3,128(sp)
  80e188:	d8801f17 	ldw	r2,124(sp)
  80e18c:	dac02917 	ldw	r11,164(sp)
  80e190:	1c47883a 	add	r3,r3,r17
  80e194:	10800044 	addi	r2,r2,1
  80e198:	d8c02015 	stw	r3,128(sp)
  80e19c:	42c00015 	stw	r11,0(r8)
  80e1a0:	44400115 	stw	r17,4(r8)
  80e1a4:	d8801f15 	stw	r2,124(sp)
  80e1a8:	00c001c4 	movi	r3,7
  80e1ac:	18807616 	blt	r3,r2,80e388 <___svfprintf_internal_r+0x2ec>
  80e1b0:	42000204 	addi	r8,r8,8
  80e1b4:	db003017 	ldw	r12,192(sp)
  80e1b8:	6459883a 	add	r12,r12,r17
  80e1bc:	db003015 	stw	r12,192(sp)
  80e1c0:	80800007 	ldb	r2,0(r16)
  80e1c4:	10007726 	beq	r2,zero,80e3a4 <___svfprintf_internal_r+0x308>
  80e1c8:	80800044 	addi	r2,r16,1
  80e1cc:	84000047 	ldb	r16,1(r16)
  80e1d0:	d8002785 	stb	zero,158(sp)
  80e1d4:	000d883a 	mov	r6,zero
  80e1d8:	027fffc4 	movi	r9,-1
  80e1dc:	d8002e15 	stw	zero,184(sp)
  80e1e0:	0023883a 	mov	r17,zero
  80e1e4:	01001604 	movi	r4,88
  80e1e8:	01400244 	movi	r5,9
  80e1ec:	02800a84 	movi	r10,42
  80e1f0:	01c01b04 	movi	r7,108
  80e1f4:	10c00044 	addi	r3,r2,1
  80e1f8:	80bff804 	addi	r2,r16,-32
  80e1fc:	2082e636 	bltu	r4,r2,80ed98 <___svfprintf_internal_r+0xcfc>
  80e200:	100490ba 	slli	r2,r2,2
  80e204:	02c02074 	movhi	r11,129
  80e208:	5af88604 	addi	r11,r11,-7656
  80e20c:	12c5883a 	add	r2,r2,r11
  80e210:	10800017 	ldw	r2,0(r2)
  80e214:	1000683a 	jmp	r2
  80e218:	0080eb78 	rdprs	r2,zero,941
  80e21c:	0080ed98 	cmpnei	r2,zero,950
  80e220:	0080ed98 	cmpnei	r2,zero,950
  80e224:	0080eb98 	cmpnei	r2,zero,942
  80e228:	0080ed98 	cmpnei	r2,zero,950
  80e22c:	0080ed98 	cmpnei	r2,zero,950
  80e230:	0080ed98 	cmpnei	r2,zero,950
  80e234:	0080ed98 	cmpnei	r2,zero,950
  80e238:	0080ed98 	cmpnei	r2,zero,950
  80e23c:	0080ed98 	cmpnei	r2,zero,950
  80e240:	0080eba8 	cmpgeui	r2,zero,942
  80e244:	0080ebd4 	movui	r2,943
  80e248:	0080ed98 	cmpnei	r2,zero,950
  80e24c:	0080e40c 	andi	r2,zero,912
  80e250:	0080e41c 	xori	r2,zero,912
  80e254:	0080ed98 	cmpnei	r2,zero,950
  80e258:	0080e45c 	xori	r2,zero,913
  80e25c:	0080ea3c 	xorhi	r2,zero,936
  80e260:	0080ea3c 	xorhi	r2,zero,936
  80e264:	0080ea3c 	xorhi	r2,zero,936
  80e268:	0080ea3c 	xorhi	r2,zero,936
  80e26c:	0080ea3c 	xorhi	r2,zero,936
  80e270:	0080ea3c 	xorhi	r2,zero,936
  80e274:	0080ea3c 	xorhi	r2,zero,936
  80e278:	0080ea3c 	xorhi	r2,zero,936
  80e27c:	0080ea3c 	xorhi	r2,zero,936
  80e280:	0080ed98 	cmpnei	r2,zero,950
  80e284:	0080ed98 	cmpnei	r2,zero,950
  80e288:	0080ed98 	cmpnei	r2,zero,950
  80e28c:	0080ed98 	cmpnei	r2,zero,950
  80e290:	0080ed98 	cmpnei	r2,zero,950
  80e294:	0080ed98 	cmpnei	r2,zero,950
  80e298:	0080ed98 	cmpnei	r2,zero,950
  80e29c:	0080ed98 	cmpnei	r2,zero,950
  80e2a0:	0080ed98 	cmpnei	r2,zero,950
  80e2a4:	0080ed98 	cmpnei	r2,zero,950
  80e2a8:	0080e46c 	andhi	r2,zero,913
  80e2ac:	0080e8ec 	andhi	r2,zero,931
  80e2b0:	0080ed98 	cmpnei	r2,zero,950
  80e2b4:	0080e8ec 	andhi	r2,zero,931
  80e2b8:	0080ed98 	cmpnei	r2,zero,950
  80e2bc:	0080ed98 	cmpnei	r2,zero,950
  80e2c0:	0080ed98 	cmpnei	r2,zero,950
  80e2c4:	0080ed98 	cmpnei	r2,zero,950
  80e2c8:	0080e990 	cmplti	r2,zero,934
  80e2cc:	0080ed98 	cmpnei	r2,zero,950
  80e2d0:	0080ed98 	cmpnei	r2,zero,950
  80e2d4:	0080ed2c 	andhi	r2,zero,948
  80e2d8:	0080ed98 	cmpnei	r2,zero,950
  80e2dc:	0080ed98 	cmpnei	r2,zero,950
  80e2e0:	0080ed98 	cmpnei	r2,zero,950
  80e2e4:	0080ed98 	cmpnei	r2,zero,950
  80e2e8:	0080ed98 	cmpnei	r2,zero,950
  80e2ec:	0080e9a0 	cmpeqi	r2,zero,934
  80e2f0:	0080ed98 	cmpnei	r2,zero,950
  80e2f4:	0080ed98 	cmpnei	r2,zero,950
  80e2f8:	0080e9e0 	cmpeqi	r2,zero,935
  80e2fc:	0080ed98 	cmpnei	r2,zero,950
  80e300:	0080ed98 	cmpnei	r2,zero,950
  80e304:	0080ed98 	cmpnei	r2,zero,950
  80e308:	0080ed98 	cmpnei	r2,zero,950
  80e30c:	0080ed98 	cmpnei	r2,zero,950
  80e310:	0080ed98 	cmpnei	r2,zero,950
  80e314:	0080ed98 	cmpnei	r2,zero,950
  80e318:	0080ed98 	cmpnei	r2,zero,950
  80e31c:	0080ed98 	cmpnei	r2,zero,950
  80e320:	0080ed98 	cmpnei	r2,zero,950
  80e324:	0080ec84 	movi	r2,946
  80e328:	0080ecc4 	movi	r2,947
  80e32c:	0080e8ec 	andhi	r2,zero,931
  80e330:	0080e8ec 	andhi	r2,zero,931
  80e334:	0080e8ec 	andhi	r2,zero,931
  80e338:	0080ebe4 	muli	r2,zero,943
  80e33c:	0080ecc4 	movi	r2,947
  80e340:	0080ed98 	cmpnei	r2,zero,950
  80e344:	0080ed98 	cmpnei	r2,zero,950
  80e348:	0080ebf4 	movhi	r2,943
  80e34c:	0080ed98 	cmpnei	r2,zero,950
  80e350:	0080ec08 	cmpgei	r2,zero,944
  80e354:	0080ed5c 	xori	r2,zero,949
  80e358:	0080ec3c 	xorhi	r2,zero,944
  80e35c:	0080ea70 	cmpltui	r2,zero,937
  80e360:	0080ed98 	cmpnei	r2,zero,950
  80e364:	0080ea80 	call	80ea8 <__alt_mem_sdram_0-0x77f158>
  80e368:	0080ed98 	cmpnei	r2,zero,950
  80e36c:	0080eaf8 	rdprs	r2,zero,939
  80e370:	0080ed98 	cmpnei	r2,zero,950
  80e374:	0080ed98 	cmpnei	r2,zero,950
  80e378:	0080eb38 	rdprs	r2,zero,940
  80e37c:	db002917 	ldw	r12,164(sp)
  80e380:	8323c83a 	sub	r17,r16,r12
  80e384:	003f7e06 	br	80e180 <__alt_data_end+0xff80e180>
  80e388:	d9002f17 	ldw	r4,188(sp)
  80e38c:	b80b883a 	mov	r5,r23
  80e390:	b00d883a 	mov	r6,r22
  80e394:	08127c00 	call	8127c0 <__ssprint_r>
  80e398:	1000081e 	bne	r2,zero,80e3bc <___svfprintf_internal_r+0x320>
  80e39c:	da000404 	addi	r8,sp,16
  80e3a0:	003f8406 	br	80e1b4 <__alt_data_end+0xff80e1b4>
  80e3a4:	d8802017 	ldw	r2,128(sp)
  80e3a8:	10000426 	beq	r2,zero,80e3bc <___svfprintf_internal_r+0x320>
  80e3ac:	d9002f17 	ldw	r4,188(sp)
  80e3b0:	b80b883a 	mov	r5,r23
  80e3b4:	d9801e04 	addi	r6,sp,120
  80e3b8:	08127c00 	call	8127c0 <__ssprint_r>
  80e3bc:	b880030b 	ldhu	r2,12(r23)
  80e3c0:	1080100c 	andi	r2,r2,64
  80e3c4:	10000d1e 	bne	r2,zero,80e3fc <___svfprintf_internal_r+0x360>
  80e3c8:	d8803017 	ldw	r2,192(sp)
  80e3cc:	dfc04a17 	ldw	ra,296(sp)
  80e3d0:	df004917 	ldw	fp,292(sp)
  80e3d4:	ddc04817 	ldw	r23,288(sp)
  80e3d8:	dd804717 	ldw	r22,284(sp)
  80e3dc:	dd404617 	ldw	r21,280(sp)
  80e3e0:	dd004517 	ldw	r20,276(sp)
  80e3e4:	dcc04417 	ldw	r19,272(sp)
  80e3e8:	dc804317 	ldw	r18,268(sp)
  80e3ec:	dc404217 	ldw	r17,264(sp)
  80e3f0:	dc004117 	ldw	r16,260(sp)
  80e3f4:	dec04b04 	addi	sp,sp,300
  80e3f8:	f800283a 	ret
  80e3fc:	00bfffc4 	movi	r2,-1
  80e400:	003ff206 	br	80e3cc <__alt_data_end+0xff80e3cc>
  80e404:	dc002917 	ldw	r16,164(sp)
  80e408:	003f6d06 	br	80e1c0 <__alt_data_end+0xff80e1c0>
  80e40c:	1805883a 	mov	r2,r3
  80e410:	8c400114 	ori	r17,r17,4
  80e414:	1c000007 	ldb	r16,0(r3)
  80e418:	003f7606 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80e41c:	1c000007 	ldb	r16,0(r3)
  80e420:	18800044 	addi	r2,r3,1
  80e424:	8286e726 	beq	r16,r10,80ffc4 <___svfprintf_internal_r+0x1f28>
  80e428:	82fff404 	addi	r11,r16,-48
  80e42c:	1007883a 	mov	r3,r2
  80e430:	0013883a 	mov	r9,zero
  80e434:	2aff7036 	bltu	r5,r11,80e1f8 <__alt_data_end+0xff80e1f8>
  80e438:	1c000007 	ldb	r16,0(r3)
  80e43c:	4a4002a4 	muli	r9,r9,10
  80e440:	18c00044 	addi	r3,r3,1
  80e444:	5a53883a 	add	r9,r11,r9
  80e448:	82fff404 	addi	r11,r16,-48
  80e44c:	2afffa2e 	bgeu	r5,r11,80e438 <__alt_data_end+0xff80e438>
  80e450:	483f690e 	bge	r9,zero,80e1f8 <__alt_data_end+0xff80e1f8>
  80e454:	027fffc4 	movi	r9,-1
  80e458:	003f6706 	br	80e1f8 <__alt_data_end+0xff80e1f8>
  80e45c:	8c402014 	ori	r17,r17,128
  80e460:	1805883a 	mov	r2,r3
  80e464:	1c000007 	ldb	r16,0(r3)
  80e468:	003f6206 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80e46c:	8c400414 	ori	r17,r17,16
  80e470:	d8c02915 	stw	r3,164(sp)
  80e474:	d9802785 	stb	r6,158(sp)
  80e478:	8880080c 	andi	r2,r17,32
  80e47c:	d8c02d17 	ldw	r3,180(sp)
  80e480:	10021526 	beq	r2,zero,80ecd8 <___svfprintf_internal_r+0xc3c>
  80e484:	db002d17 	ldw	r12,180(sp)
  80e488:	18800117 	ldw	r2,4(r3)
  80e48c:	1cc00017 	ldw	r19,0(r3)
  80e490:	63000204 	addi	r12,r12,8
  80e494:	db002d15 	stw	r12,180(sp)
  80e498:	1039883a 	mov	fp,r2
  80e49c:	10021916 	blt	r2,zero,80ed04 <___svfprintf_internal_r+0xc68>
  80e4a0:	dd402783 	ldbu	r21,158(sp)
  80e4a4:	da403215 	stw	r9,200(sp)
  80e4a8:	00800044 	movi	r2,1
  80e4ac:	9f06b03a 	or	r3,r19,fp
  80e4b0:	48000216 	blt	r9,zero,80e4bc <___svfprintf_internal_r+0x420>
  80e4b4:	013fdfc4 	movi	r4,-129
  80e4b8:	8922703a 	and	r17,r17,r4
  80e4bc:	1802461e 	bne	r3,zero,80edd8 <___svfprintf_internal_r+0xd3c>
  80e4c0:	48035426 	beq	r9,zero,80f214 <___svfprintf_internal_r+0x1178>
  80e4c4:	10803fcc 	andi	r2,r2,255
  80e4c8:	00c00044 	movi	r3,1
  80e4cc:	10c26726 	beq	r2,r3,80ee6c <___svfprintf_internal_r+0xdd0>
  80e4d0:	00c00084 	movi	r3,2
  80e4d4:	10c2ea26 	beq	r2,r3,80f080 <___svfprintf_internal_r+0xfe4>
  80e4d8:	b007883a 	mov	r3,r22
  80e4dc:	9808d0fa 	srli	r4,r19,3
  80e4e0:	e00a977a 	slli	r5,fp,29
  80e4e4:	e038d0fa 	srli	fp,fp,3
  80e4e8:	9cc001cc 	andi	r19,r19,7
  80e4ec:	98800c04 	addi	r2,r19,48
  80e4f0:	18ffffc4 	addi	r3,r3,-1
  80e4f4:	2926b03a 	or	r19,r5,r4
  80e4f8:	18800005 	stb	r2,0(r3)
  80e4fc:	9f08b03a 	or	r4,r19,fp
  80e500:	203ff61e 	bne	r4,zero,80e4dc <__alt_data_end+0xff80e4dc>
  80e504:	8900004c 	andi	r4,r17,1
  80e508:	d8c03115 	stw	r3,196(sp)
  80e50c:	2002ea26 	beq	r4,zero,80f0b8 <___svfprintf_internal_r+0x101c>
  80e510:	10803fcc 	andi	r2,r2,255
  80e514:	1080201c 	xori	r2,r2,128
  80e518:	10bfe004 	addi	r2,r2,-128
  80e51c:	01000c04 	movi	r4,48
  80e520:	11057526 	beq	r2,r4,80faf8 <___svfprintf_internal_r+0x1a5c>
  80e524:	dac03117 	ldw	r11,196(sp)
  80e528:	193fffc5 	stb	r4,-1(r3)
  80e52c:	5affffc4 	addi	r11,r11,-1
  80e530:	dac03115 	stw	r11,196(sp)
  80e534:	b2e5c83a 	sub	r18,r22,r11
  80e538:	9005883a 	mov	r2,r18
  80e53c:	9240010e 	bge	r18,r9,80e544 <___svfprintf_internal_r+0x4a8>
  80e540:	4805883a 	mov	r2,r9
  80e544:	d8802a15 	stw	r2,168(sp)
  80e548:	d8003415 	stw	zero,208(sp)
  80e54c:	a8803fcc 	andi	r2,r21,255
  80e550:	1080201c 	xori	r2,r2,128
  80e554:	10bfe004 	addi	r2,r2,-128
  80e558:	10000326 	beq	r2,zero,80e568 <___svfprintf_internal_r+0x4cc>
  80e55c:	d8c02a17 	ldw	r3,168(sp)
  80e560:	18c00044 	addi	r3,r3,1
  80e564:	d8c02a15 	stw	r3,168(sp)
  80e568:	8ac0008c 	andi	r11,r17,2
  80e56c:	dac02b15 	stw	r11,172(sp)
  80e570:	58000326 	beq	r11,zero,80e580 <___svfprintf_internal_r+0x4e4>
  80e574:	db002a17 	ldw	r12,168(sp)
  80e578:	63000084 	addi	r12,r12,2
  80e57c:	db002a15 	stw	r12,168(sp)
  80e580:	88c0210c 	andi	r3,r17,132
  80e584:	d8c02c15 	stw	r3,176(sp)
  80e588:	1802111e 	bne	r3,zero,80edd0 <___svfprintf_internal_r+0xd34>
  80e58c:	dac02e17 	ldw	r11,184(sp)
  80e590:	db002a17 	ldw	r12,168(sp)
  80e594:	5b39c83a 	sub	fp,r11,r12
  80e598:	07020d0e 	bge	zero,fp,80edd0 <___svfprintf_internal_r+0xd34>
  80e59c:	02400404 	movi	r9,16
  80e5a0:	d8c02017 	ldw	r3,128(sp)
  80e5a4:	d8801f17 	ldw	r2,124(sp)
  80e5a8:	4f058c0e 	bge	r9,fp,80fbdc <___svfprintf_internal_r+0x1b40>
  80e5ac:	014020b4 	movhi	r5,130
  80e5b0:	e009883a 	mov	r4,fp
  80e5b4:	296eee84 	addi	r5,r5,-17478
  80e5b8:	dc003c15 	stw	r16,240(sp)
  80e5bc:	9039883a 	mov	fp,r18
  80e5c0:	d9403615 	stw	r5,216(sp)
  80e5c4:	8825883a 	mov	r18,r17
  80e5c8:	482b883a 	mov	r21,r9
  80e5cc:	04c001c4 	movi	r19,7
  80e5d0:	dc002f17 	ldw	r16,188(sp)
  80e5d4:	2023883a 	mov	r17,r4
  80e5d8:	00000306 	br	80e5e8 <___svfprintf_internal_r+0x54c>
  80e5dc:	8c7ffc04 	addi	r17,r17,-16
  80e5e0:	42000204 	addi	r8,r8,8
  80e5e4:	ac40130e 	bge	r21,r17,80e634 <___svfprintf_internal_r+0x598>
  80e5e8:	02c020b4 	movhi	r11,130
  80e5ec:	18c00404 	addi	r3,r3,16
  80e5f0:	10800044 	addi	r2,r2,1
  80e5f4:	5aeeee84 	addi	r11,r11,-17478
  80e5f8:	42c00015 	stw	r11,0(r8)
  80e5fc:	45400115 	stw	r21,4(r8)
  80e600:	d8c02015 	stw	r3,128(sp)
  80e604:	d8801f15 	stw	r2,124(sp)
  80e608:	98bff40e 	bge	r19,r2,80e5dc <__alt_data_end+0xff80e5dc>
  80e60c:	8009883a 	mov	r4,r16
  80e610:	b80b883a 	mov	r5,r23
  80e614:	b00d883a 	mov	r6,r22
  80e618:	08127c00 	call	8127c0 <__ssprint_r>
  80e61c:	103f671e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80e620:	8c7ffc04 	addi	r17,r17,-16
  80e624:	d8c02017 	ldw	r3,128(sp)
  80e628:	d8801f17 	ldw	r2,124(sp)
  80e62c:	da000404 	addi	r8,sp,16
  80e630:	ac7fed16 	blt	r21,r17,80e5e8 <__alt_data_end+0xff80e5e8>
  80e634:	dc003c17 	ldw	r16,240(sp)
  80e638:	8809883a 	mov	r4,r17
  80e63c:	9023883a 	mov	r17,r18
  80e640:	e025883a 	mov	r18,fp
  80e644:	2039883a 	mov	fp,r4
  80e648:	db003617 	ldw	r12,216(sp)
  80e64c:	e0c7883a 	add	r3,fp,r3
  80e650:	10800044 	addi	r2,r2,1
  80e654:	43000015 	stw	r12,0(r8)
  80e658:	47000115 	stw	fp,4(r8)
  80e65c:	d8c02015 	stw	r3,128(sp)
  80e660:	d8801f15 	stw	r2,124(sp)
  80e664:	010001c4 	movi	r4,7
  80e668:	20834416 	blt	r4,r2,80f37c <___svfprintf_internal_r+0x12e0>
  80e66c:	d8802787 	ldb	r2,158(sp)
  80e670:	42000204 	addi	r8,r8,8
  80e674:	10000c26 	beq	r2,zero,80e6a8 <___svfprintf_internal_r+0x60c>
  80e678:	d8801f17 	ldw	r2,124(sp)
  80e67c:	d9002784 	addi	r4,sp,158
  80e680:	18c00044 	addi	r3,r3,1
  80e684:	10800044 	addi	r2,r2,1
  80e688:	41000015 	stw	r4,0(r8)
  80e68c:	01000044 	movi	r4,1
  80e690:	41000115 	stw	r4,4(r8)
  80e694:	d8c02015 	stw	r3,128(sp)
  80e698:	d8801f15 	stw	r2,124(sp)
  80e69c:	010001c4 	movi	r4,7
  80e6a0:	2082f616 	blt	r4,r2,80f27c <___svfprintf_internal_r+0x11e0>
  80e6a4:	42000204 	addi	r8,r8,8
  80e6a8:	dac02b17 	ldw	r11,172(sp)
  80e6ac:	58000c26 	beq	r11,zero,80e6e0 <___svfprintf_internal_r+0x644>
  80e6b0:	d8801f17 	ldw	r2,124(sp)
  80e6b4:	d9002704 	addi	r4,sp,156
  80e6b8:	18c00084 	addi	r3,r3,2
  80e6bc:	10800044 	addi	r2,r2,1
  80e6c0:	41000015 	stw	r4,0(r8)
  80e6c4:	01000084 	movi	r4,2
  80e6c8:	41000115 	stw	r4,4(r8)
  80e6cc:	d8c02015 	stw	r3,128(sp)
  80e6d0:	d8801f15 	stw	r2,124(sp)
  80e6d4:	010001c4 	movi	r4,7
  80e6d8:	2082e016 	blt	r4,r2,80f25c <___svfprintf_internal_r+0x11c0>
  80e6dc:	42000204 	addi	r8,r8,8
  80e6e0:	db002c17 	ldw	r12,176(sp)
  80e6e4:	00802004 	movi	r2,128
  80e6e8:	60822f26 	beq	r12,r2,80efa8 <___svfprintf_internal_r+0xf0c>
  80e6ec:	db003217 	ldw	r12,200(sp)
  80e6f0:	64abc83a 	sub	r21,r12,r18
  80e6f4:	0540310e 	bge	zero,r21,80e7bc <___svfprintf_internal_r+0x720>
  80e6f8:	07000404 	movi	fp,16
  80e6fc:	d8801f17 	ldw	r2,124(sp)
  80e700:	e544270e 	bge	fp,r21,80f7a0 <___svfprintf_internal_r+0x1704>
  80e704:	014020b4 	movhi	r5,130
  80e708:	a809883a 	mov	r4,r21
  80e70c:	296eea84 	addi	r5,r5,-17494
  80e710:	dc002c15 	stw	r16,176(sp)
  80e714:	902b883a 	mov	r21,r18
  80e718:	d9402b15 	stw	r5,172(sp)
  80e71c:	8825883a 	mov	r18,r17
  80e720:	04c001c4 	movi	r19,7
  80e724:	dc002f17 	ldw	r16,188(sp)
  80e728:	2023883a 	mov	r17,r4
  80e72c:	00000306 	br	80e73c <___svfprintf_internal_r+0x6a0>
  80e730:	8c7ffc04 	addi	r17,r17,-16
  80e734:	42000204 	addi	r8,r8,8
  80e738:	e440110e 	bge	fp,r17,80e780 <___svfprintf_internal_r+0x6e4>
  80e73c:	18c00404 	addi	r3,r3,16
  80e740:	10800044 	addi	r2,r2,1
  80e744:	45000015 	stw	r20,0(r8)
  80e748:	47000115 	stw	fp,4(r8)
  80e74c:	d8c02015 	stw	r3,128(sp)
  80e750:	d8801f15 	stw	r2,124(sp)
  80e754:	98bff60e 	bge	r19,r2,80e730 <__alt_data_end+0xff80e730>
  80e758:	8009883a 	mov	r4,r16
  80e75c:	b80b883a 	mov	r5,r23
  80e760:	b00d883a 	mov	r6,r22
  80e764:	08127c00 	call	8127c0 <__ssprint_r>
  80e768:	103f141e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80e76c:	8c7ffc04 	addi	r17,r17,-16
  80e770:	d8c02017 	ldw	r3,128(sp)
  80e774:	d8801f17 	ldw	r2,124(sp)
  80e778:	da000404 	addi	r8,sp,16
  80e77c:	e47fef16 	blt	fp,r17,80e73c <__alt_data_end+0xff80e73c>
  80e780:	dc002c17 	ldw	r16,176(sp)
  80e784:	8809883a 	mov	r4,r17
  80e788:	9023883a 	mov	r17,r18
  80e78c:	a825883a 	mov	r18,r21
  80e790:	202b883a 	mov	r21,r4
  80e794:	dac02b17 	ldw	r11,172(sp)
  80e798:	1d47883a 	add	r3,r3,r21
  80e79c:	10800044 	addi	r2,r2,1
  80e7a0:	42c00015 	stw	r11,0(r8)
  80e7a4:	45400115 	stw	r21,4(r8)
  80e7a8:	d8c02015 	stw	r3,128(sp)
  80e7ac:	d8801f15 	stw	r2,124(sp)
  80e7b0:	010001c4 	movi	r4,7
  80e7b4:	2082a116 	blt	r4,r2,80f23c <___svfprintf_internal_r+0x11a0>
  80e7b8:	42000204 	addi	r8,r8,8
  80e7bc:	8880400c 	andi	r2,r17,256
  80e7c0:	1001b01e 	bne	r2,zero,80ee84 <___svfprintf_internal_r+0xde8>
  80e7c4:	d8801f17 	ldw	r2,124(sp)
  80e7c8:	db003117 	ldw	r12,196(sp)
  80e7cc:	1c87883a 	add	r3,r3,r18
  80e7d0:	10800044 	addi	r2,r2,1
  80e7d4:	43000015 	stw	r12,0(r8)
  80e7d8:	44800115 	stw	r18,4(r8)
  80e7dc:	d8c02015 	stw	r3,128(sp)
  80e7e0:	d8801f15 	stw	r2,124(sp)
  80e7e4:	010001c4 	movi	r4,7
  80e7e8:	20828216 	blt	r4,r2,80f1f4 <___svfprintf_internal_r+0x1158>
  80e7ec:	42000204 	addi	r8,r8,8
  80e7f0:	8c40010c 	andi	r17,r17,4
  80e7f4:	88003226 	beq	r17,zero,80e8c0 <___svfprintf_internal_r+0x824>
  80e7f8:	db002e17 	ldw	r12,184(sp)
  80e7fc:	dac02a17 	ldw	r11,168(sp)
  80e800:	62e1c83a 	sub	r16,r12,r11
  80e804:	04002e0e 	bge	zero,r16,80e8c0 <___svfprintf_internal_r+0x824>
  80e808:	04400404 	movi	r17,16
  80e80c:	d8801f17 	ldw	r2,124(sp)
  80e810:	8c05330e 	bge	r17,r16,80fce0 <___svfprintf_internal_r+0x1c44>
  80e814:	010020b4 	movhi	r4,130
  80e818:	212eee84 	addi	r4,r4,-17478
  80e81c:	d9003615 	stw	r4,216(sp)
  80e820:	048001c4 	movi	r18,7
  80e824:	dcc02f17 	ldw	r19,188(sp)
  80e828:	00000306 	br	80e838 <___svfprintf_internal_r+0x79c>
  80e82c:	843ffc04 	addi	r16,r16,-16
  80e830:	42000204 	addi	r8,r8,8
  80e834:	8c00130e 	bge	r17,r16,80e884 <___svfprintf_internal_r+0x7e8>
  80e838:	014020b4 	movhi	r5,130
  80e83c:	18c00404 	addi	r3,r3,16
  80e840:	10800044 	addi	r2,r2,1
  80e844:	296eee84 	addi	r5,r5,-17478
  80e848:	41400015 	stw	r5,0(r8)
  80e84c:	44400115 	stw	r17,4(r8)
  80e850:	d8c02015 	stw	r3,128(sp)
  80e854:	d8801f15 	stw	r2,124(sp)
  80e858:	90bff40e 	bge	r18,r2,80e82c <__alt_data_end+0xff80e82c>
  80e85c:	9809883a 	mov	r4,r19
  80e860:	b80b883a 	mov	r5,r23
  80e864:	b00d883a 	mov	r6,r22
  80e868:	08127c00 	call	8127c0 <__ssprint_r>
  80e86c:	103ed31e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80e870:	843ffc04 	addi	r16,r16,-16
  80e874:	d8c02017 	ldw	r3,128(sp)
  80e878:	d8801f17 	ldw	r2,124(sp)
  80e87c:	da000404 	addi	r8,sp,16
  80e880:	8c3fed16 	blt	r17,r16,80e838 <__alt_data_end+0xff80e838>
  80e884:	dac03617 	ldw	r11,216(sp)
  80e888:	1c07883a 	add	r3,r3,r16
  80e88c:	10800044 	addi	r2,r2,1
  80e890:	42c00015 	stw	r11,0(r8)
  80e894:	44000115 	stw	r16,4(r8)
  80e898:	d8c02015 	stw	r3,128(sp)
  80e89c:	d8801f15 	stw	r2,124(sp)
  80e8a0:	010001c4 	movi	r4,7
  80e8a4:	2080060e 	bge	r4,r2,80e8c0 <___svfprintf_internal_r+0x824>
  80e8a8:	d9002f17 	ldw	r4,188(sp)
  80e8ac:	b80b883a 	mov	r5,r23
  80e8b0:	b00d883a 	mov	r6,r22
  80e8b4:	08127c00 	call	8127c0 <__ssprint_r>
  80e8b8:	103ec01e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80e8bc:	d8c02017 	ldw	r3,128(sp)
  80e8c0:	d8802a17 	ldw	r2,168(sp)
  80e8c4:	db002e17 	ldw	r12,184(sp)
  80e8c8:	1300010e 	bge	r2,r12,80e8d0 <___svfprintf_internal_r+0x834>
  80e8cc:	6005883a 	mov	r2,r12
  80e8d0:	dac03017 	ldw	r11,192(sp)
  80e8d4:	5897883a 	add	r11,r11,r2
  80e8d8:	dac03015 	stw	r11,192(sp)
  80e8dc:	1802331e 	bne	r3,zero,80f1ac <___svfprintf_internal_r+0x1110>
  80e8e0:	d8001f15 	stw	zero,124(sp)
  80e8e4:	da000404 	addi	r8,sp,16
  80e8e8:	003e1806 	br	80e14c <__alt_data_end+0xff80e14c>
  80e8ec:	db002d17 	ldw	r12,180(sp)
  80e8f0:	dac02d17 	ldw	r11,180(sp)
  80e8f4:	d8c02915 	stw	r3,164(sp)
  80e8f8:	63000017 	ldw	r12,0(r12)
  80e8fc:	5ac00117 	ldw	r11,4(r11)
  80e900:	d9802785 	stb	r6,158(sp)
  80e904:	6009883a 	mov	r4,r12
  80e908:	580b883a 	mov	r5,r11
  80e90c:	db003715 	stw	r12,220(sp)
  80e910:	da004015 	stw	r8,256(sp)
  80e914:	da403f15 	stw	r9,252(sp)
  80e918:	dac03815 	stw	r11,224(sp)
  80e91c:	080a8a80 	call	80a8a8 <__fpclassifyd>
  80e920:	db002d17 	ldw	r12,180(sp)
  80e924:	04800044 	movi	r18,1
  80e928:	da004017 	ldw	r8,256(sp)
  80e92c:	64c00204 	addi	r19,r12,8
  80e930:	da403f17 	ldw	r9,252(sp)
  80e934:	d9003717 	ldw	r4,220(sp)
  80e938:	d9403817 	ldw	r5,224(sp)
  80e93c:	1483561e 	bne	r2,r18,80f698 <___svfprintf_internal_r+0x15fc>
  80e940:	000d883a 	mov	r6,zero
  80e944:	000f883a 	mov	r7,zero
  80e948:	0815dac0 	call	815dac <__ledf2>
  80e94c:	da004017 	ldw	r8,256(sp)
  80e950:	1004ee16 	blt	r2,zero,80fd0c <___svfprintf_internal_r+0x1c70>
  80e954:	dd402783 	ldbu	r21,158(sp)
  80e958:	008011c4 	movi	r2,71
  80e95c:	1404440e 	bge	r2,r16,80fa70 <___svfprintf_internal_r+0x19d4>
  80e960:	00c020b4 	movhi	r3,130
  80e964:	18edc204 	addi	r3,r3,-18680
  80e968:	d8c03115 	stw	r3,196(sp)
  80e96c:	02c000c4 	movi	r11,3
  80e970:	00bfdfc4 	movi	r2,-129
  80e974:	dac02a15 	stw	r11,168(sp)
  80e978:	88a2703a 	and	r17,r17,r2
  80e97c:	dcc02d15 	stw	r19,180(sp)
  80e980:	5825883a 	mov	r18,r11
  80e984:	d8003215 	stw	zero,200(sp)
  80e988:	d8003415 	stw	zero,208(sp)
  80e98c:	003eef06 	br	80e54c <__alt_data_end+0xff80e54c>
  80e990:	8c400214 	ori	r17,r17,8
  80e994:	1805883a 	mov	r2,r3
  80e998:	1c000007 	ldb	r16,0(r3)
  80e99c:	003e1506 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80e9a0:	8c400414 	ori	r17,r17,16
  80e9a4:	d8c02915 	stw	r3,164(sp)
  80e9a8:	88c0080c 	andi	r3,r17,32
  80e9ac:	d8802d17 	ldw	r2,180(sp)
  80e9b0:	18005526 	beq	r3,zero,80eb08 <___svfprintf_internal_r+0xa6c>
  80e9b4:	dac02d17 	ldw	r11,180(sp)
  80e9b8:	14c00017 	ldw	r19,0(r2)
  80e9bc:	17000117 	ldw	fp,4(r2)
  80e9c0:	5ac00204 	addi	r11,r11,8
  80e9c4:	dac02d15 	stw	r11,180(sp)
  80e9c8:	00800044 	movi	r2,1
  80e9cc:	9f06b03a 	or	r3,r19,fp
  80e9d0:	d8002785 	stb	zero,158(sp)
  80e9d4:	da403215 	stw	r9,200(sp)
  80e9d8:	002b883a 	mov	r21,zero
  80e9dc:	003eb406 	br	80e4b0 <__alt_data_end+0xff80e4b0>
  80e9e0:	030020b4 	movhi	r12,130
  80e9e4:	632dc504 	addi	r12,r12,-18668
  80e9e8:	d8c02915 	stw	r3,164(sp)
  80e9ec:	d9802785 	stb	r6,158(sp)
  80e9f0:	db003b15 	stw	r12,236(sp)
  80e9f4:	88c0080c 	andi	r3,r17,32
  80e9f8:	d8802d17 	ldw	r2,180(sp)
  80e9fc:	18005626 	beq	r3,zero,80eb58 <___svfprintf_internal_r+0xabc>
  80ea00:	dac02d17 	ldw	r11,180(sp)
  80ea04:	14c00017 	ldw	r19,0(r2)
  80ea08:	17000117 	ldw	fp,4(r2)
  80ea0c:	5ac00204 	addi	r11,r11,8
  80ea10:	dac02d15 	stw	r11,180(sp)
  80ea14:	8880004c 	andi	r2,r17,1
  80ea18:	10029326 	beq	r2,zero,80f468 <___svfprintf_internal_r+0x13cc>
  80ea1c:	9f06b03a 	or	r3,r19,fp
  80ea20:	18033526 	beq	r3,zero,80f6f8 <___svfprintf_internal_r+0x165c>
  80ea24:	00800c04 	movi	r2,48
  80ea28:	d8802705 	stb	r2,156(sp)
  80ea2c:	dc002745 	stb	r16,157(sp)
  80ea30:	8c400094 	ori	r17,r17,2
  80ea34:	00800084 	movi	r2,2
  80ea38:	003fe506 	br	80e9d0 <__alt_data_end+0xff80e9d0>
  80ea3c:	1805883a 	mov	r2,r3
  80ea40:	d8002e15 	stw	zero,184(sp)
  80ea44:	82fff404 	addi	r11,r16,-48
  80ea48:	0019883a 	mov	r12,zero
  80ea4c:	14000007 	ldb	r16,0(r2)
  80ea50:	630002a4 	muli	r12,r12,10
  80ea54:	18c00044 	addi	r3,r3,1
  80ea58:	1805883a 	mov	r2,r3
  80ea5c:	62d9883a 	add	r12,r12,r11
  80ea60:	82fff404 	addi	r11,r16,-48
  80ea64:	2afff92e 	bgeu	r5,r11,80ea4c <__alt_data_end+0xff80ea4c>
  80ea68:	db002e15 	stw	r12,184(sp)
  80ea6c:	003de206 	br	80e1f8 <__alt_data_end+0xff80e1f8>
  80ea70:	8c400814 	ori	r17,r17,32
  80ea74:	1805883a 	mov	r2,r3
  80ea78:	1c000007 	ldb	r16,0(r3)
  80ea7c:	003ddd06 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80ea80:	dac02d17 	ldw	r11,180(sp)
  80ea84:	db002d17 	ldw	r12,180(sp)
  80ea88:	d8c02915 	stw	r3,164(sp)
  80ea8c:	5ac00017 	ldw	r11,0(r11)
  80ea90:	d8002785 	stb	zero,158(sp)
  80ea94:	64c00104 	addi	r19,r12,4
  80ea98:	dac03115 	stw	r11,196(sp)
  80ea9c:	58048126 	beq	r11,zero,80fca4 <___svfprintf_internal_r+0x1c08>
  80eaa0:	d9003117 	ldw	r4,196(sp)
  80eaa4:	48041716 	blt	r9,zero,80fb04 <___svfprintf_internal_r+0x1a68>
  80eaa8:	480d883a 	mov	r6,r9
  80eaac:	000b883a 	mov	r5,zero
  80eab0:	da004015 	stw	r8,256(sp)
  80eab4:	da403f15 	stw	r9,252(sp)
  80eab8:	0808e5c0 	call	808e5c <memchr>
  80eabc:	da004017 	ldw	r8,256(sp)
  80eac0:	da403f17 	ldw	r9,252(sp)
  80eac4:	1004db26 	beq	r2,zero,80fe34 <___svfprintf_internal_r+0x1d98>
  80eac8:	d8c03117 	ldw	r3,196(sp)
  80eacc:	10e5c83a 	sub	r18,r2,r3
  80ead0:	4c80010e 	bge	r9,r18,80ead8 <___svfprintf_internal_r+0xa3c>
  80ead4:	4825883a 	mov	r18,r9
  80ead8:	9005883a 	mov	r2,r18
  80eadc:	90040e16 	blt	r18,zero,80fb18 <___svfprintf_internal_r+0x1a7c>
  80eae0:	dd402783 	ldbu	r21,158(sp)
  80eae4:	d8802a15 	stw	r2,168(sp)
  80eae8:	dcc02d15 	stw	r19,180(sp)
  80eaec:	d8003215 	stw	zero,200(sp)
  80eaf0:	d8003415 	stw	zero,208(sp)
  80eaf4:	003e9506 	br	80e54c <__alt_data_end+0xff80e54c>
  80eaf8:	d8c02915 	stw	r3,164(sp)
  80eafc:	88c0080c 	andi	r3,r17,32
  80eb00:	d8802d17 	ldw	r2,180(sp)
  80eb04:	183fab1e 	bne	r3,zero,80e9b4 <__alt_data_end+0xff80e9b4>
  80eb08:	88c0040c 	andi	r3,r17,16
  80eb0c:	1802681e 	bne	r3,zero,80f4b0 <___svfprintf_internal_r+0x1414>
  80eb10:	88c0100c 	andi	r3,r17,64
  80eb14:	18026626 	beq	r3,zero,80f4b0 <___svfprintf_internal_r+0x1414>
  80eb18:	dac02d17 	ldw	r11,180(sp)
  80eb1c:	14c0000b 	ldhu	r19,0(r2)
  80eb20:	0039883a 	mov	fp,zero
  80eb24:	5ac00104 	addi	r11,r11,4
  80eb28:	dac02d15 	stw	r11,180(sp)
  80eb2c:	00800044 	movi	r2,1
  80eb30:	9807883a 	mov	r3,r19
  80eb34:	003fa606 	br	80e9d0 <__alt_data_end+0xff80e9d0>
  80eb38:	008020b4 	movhi	r2,130
  80eb3c:	10adca04 	addi	r2,r2,-18648
  80eb40:	d8c02915 	stw	r3,164(sp)
  80eb44:	d8803b15 	stw	r2,236(sp)
  80eb48:	d9802785 	stb	r6,158(sp)
  80eb4c:	88c0080c 	andi	r3,r17,32
  80eb50:	d8802d17 	ldw	r2,180(sp)
  80eb54:	183faa1e 	bne	r3,zero,80ea00 <__alt_data_end+0xff80ea00>
  80eb58:	88c0040c 	andi	r3,r17,16
  80eb5c:	1802e826 	beq	r3,zero,80f700 <___svfprintf_internal_r+0x1664>
  80eb60:	db002d17 	ldw	r12,180(sp)
  80eb64:	14c00017 	ldw	r19,0(r2)
  80eb68:	0039883a 	mov	fp,zero
  80eb6c:	63000104 	addi	r12,r12,4
  80eb70:	db002d15 	stw	r12,180(sp)
  80eb74:	003fa706 	br	80ea14 <__alt_data_end+0xff80ea14>
  80eb78:	30803fcc 	andi	r2,r6,255
  80eb7c:	1080201c 	xori	r2,r2,128
  80eb80:	10bfe004 	addi	r2,r2,-128
  80eb84:	1002d91e 	bne	r2,zero,80f6ec <___svfprintf_internal_r+0x1650>
  80eb88:	1805883a 	mov	r2,r3
  80eb8c:	01800804 	movi	r6,32
  80eb90:	1c000007 	ldb	r16,0(r3)
  80eb94:	003d9706 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80eb98:	8c400054 	ori	r17,r17,1
  80eb9c:	1805883a 	mov	r2,r3
  80eba0:	1c000007 	ldb	r16,0(r3)
  80eba4:	003d9306 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80eba8:	dac02d17 	ldw	r11,180(sp)
  80ebac:	db002d17 	ldw	r12,180(sp)
  80ebb0:	5ac00017 	ldw	r11,0(r11)
  80ebb4:	dac02e15 	stw	r11,184(sp)
  80ebb8:	62c00104 	addi	r11,r12,4
  80ebbc:	db002e17 	ldw	r12,184(sp)
  80ebc0:	60033e16 	blt	r12,zero,80f8bc <___svfprintf_internal_r+0x1820>
  80ebc4:	dac02d15 	stw	r11,180(sp)
  80ebc8:	1805883a 	mov	r2,r3
  80ebcc:	1c000007 	ldb	r16,0(r3)
  80ebd0:	003d8806 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80ebd4:	1805883a 	mov	r2,r3
  80ebd8:	01800ac4 	movi	r6,43
  80ebdc:	1c000007 	ldb	r16,0(r3)
  80ebe0:	003d8406 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80ebe4:	8c401014 	ori	r17,r17,64
  80ebe8:	1805883a 	mov	r2,r3
  80ebec:	1c000007 	ldb	r16,0(r3)
  80ebf0:	003d8006 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80ebf4:	1c000007 	ldb	r16,0(r3)
  80ebf8:	81c33626 	beq	r16,r7,80f8d4 <___svfprintf_internal_r+0x1838>
  80ebfc:	8c400414 	ori	r17,r17,16
  80ec00:	1805883a 	mov	r2,r3
  80ec04:	003d7b06 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80ec08:	d8c02915 	stw	r3,164(sp)
  80ec0c:	d9802785 	stb	r6,158(sp)
  80ec10:	8880080c 	andi	r2,r17,32
  80ec14:	1002c226 	beq	r2,zero,80f720 <___svfprintf_internal_r+0x1684>
  80ec18:	db002d17 	ldw	r12,180(sp)
  80ec1c:	dac03017 	ldw	r11,192(sp)
  80ec20:	60800017 	ldw	r2,0(r12)
  80ec24:	5807d7fa 	srai	r3,r11,31
  80ec28:	63000104 	addi	r12,r12,4
  80ec2c:	db002d15 	stw	r12,180(sp)
  80ec30:	12c00015 	stw	r11,0(r2)
  80ec34:	10c00115 	stw	r3,4(r2)
  80ec38:	003d4406 	br	80e14c <__alt_data_end+0xff80e14c>
  80ec3c:	db002d17 	ldw	r12,180(sp)
  80ec40:	00800c04 	movi	r2,48
  80ec44:	d8802705 	stb	r2,156(sp)
  80ec48:	64c00017 	ldw	r19,0(r12)
  80ec4c:	00801e04 	movi	r2,120
  80ec50:	d8802745 	stb	r2,157(sp)
  80ec54:	008020b4 	movhi	r2,130
  80ec58:	10adca04 	addi	r2,r2,-18648
  80ec5c:	63000104 	addi	r12,r12,4
  80ec60:	d8c02915 	stw	r3,164(sp)
  80ec64:	d8803b15 	stw	r2,236(sp)
  80ec68:	0039883a 	mov	fp,zero
  80ec6c:	8c400094 	ori	r17,r17,2
  80ec70:	db002d15 	stw	r12,180(sp)
  80ec74:	00800084 	movi	r2,2
  80ec78:	04001e04 	movi	r16,120
  80ec7c:	9807883a 	mov	r3,r19
  80ec80:	003f5306 	br	80e9d0 <__alt_data_end+0xff80e9d0>
  80ec84:	db002d17 	ldw	r12,180(sp)
  80ec88:	d8c02915 	stw	r3,164(sp)
  80ec8c:	dac01404 	addi	r11,sp,80
  80ec90:	60800017 	ldw	r2,0(r12)
  80ec94:	00c00044 	movi	r3,1
  80ec98:	63000104 	addi	r12,r12,4
  80ec9c:	d8801405 	stb	r2,80(sp)
  80eca0:	d8c02a15 	stw	r3,168(sp)
  80eca4:	d8002785 	stb	zero,158(sp)
  80eca8:	db002d15 	stw	r12,180(sp)
  80ecac:	1825883a 	mov	r18,r3
  80ecb0:	d8003215 	stw	zero,200(sp)
  80ecb4:	d8003415 	stw	zero,208(sp)
  80ecb8:	dac03115 	stw	r11,196(sp)
  80ecbc:	0005883a 	mov	r2,zero
  80ecc0:	003e2906 	br	80e568 <__alt_data_end+0xff80e568>
  80ecc4:	d8c02915 	stw	r3,164(sp)
  80ecc8:	d9802785 	stb	r6,158(sp)
  80eccc:	8880080c 	andi	r2,r17,32
  80ecd0:	d8c02d17 	ldw	r3,180(sp)
  80ecd4:	103deb1e 	bne	r2,zero,80e484 <__alt_data_end+0xff80e484>
  80ecd8:	8880040c 	andi	r2,r17,16
  80ecdc:	1001e51e 	bne	r2,zero,80f474 <___svfprintf_internal_r+0x13d8>
  80ece0:	8880100c 	andi	r2,r17,64
  80ece4:	1001e326 	beq	r2,zero,80f474 <___svfprintf_internal_r+0x13d8>
  80ece8:	1cc0000f 	ldh	r19,0(r3)
  80ecec:	db002d17 	ldw	r12,180(sp)
  80ecf0:	9839d7fa 	srai	fp,r19,31
  80ecf4:	63000104 	addi	r12,r12,4
  80ecf8:	db002d15 	stw	r12,180(sp)
  80ecfc:	e005883a 	mov	r2,fp
  80ed00:	103de70e 	bge	r2,zero,80e4a0 <__alt_data_end+0xff80e4a0>
  80ed04:	04e7c83a 	sub	r19,zero,r19
  80ed08:	9804c03a 	cmpne	r2,r19,zero
  80ed0c:	0739c83a 	sub	fp,zero,fp
  80ed10:	e0b9c83a 	sub	fp,fp,r2
  80ed14:	05400b44 	movi	r21,45
  80ed18:	dd402785 	stb	r21,158(sp)
  80ed1c:	da403215 	stw	r9,200(sp)
  80ed20:	00800044 	movi	r2,1
  80ed24:	9f06b03a 	or	r3,r19,fp
  80ed28:	003de106 	br	80e4b0 <__alt_data_end+0xff80e4b0>
  80ed2c:	8c400414 	ori	r17,r17,16
  80ed30:	d8c02915 	stw	r3,164(sp)
  80ed34:	8880080c 	andi	r2,r17,32
  80ed38:	10000b26 	beq	r2,zero,80ed68 <___svfprintf_internal_r+0xccc>
  80ed3c:	db002d17 	ldw	r12,180(sp)
  80ed40:	0005883a 	mov	r2,zero
  80ed44:	64c00017 	ldw	r19,0(r12)
  80ed48:	67000117 	ldw	fp,4(r12)
  80ed4c:	63000204 	addi	r12,r12,8
  80ed50:	db002d15 	stw	r12,180(sp)
  80ed54:	9f06b03a 	or	r3,r19,fp
  80ed58:	003f1d06 	br	80e9d0 <__alt_data_end+0xff80e9d0>
  80ed5c:	d8c02915 	stw	r3,164(sp)
  80ed60:	8880080c 	andi	r2,r17,32
  80ed64:	103ff51e 	bne	r2,zero,80ed3c <__alt_data_end+0xff80ed3c>
  80ed68:	8880040c 	andi	r2,r17,16
  80ed6c:	1001c81e 	bne	r2,zero,80f490 <___svfprintf_internal_r+0x13f4>
  80ed70:	8880100c 	andi	r2,r17,64
  80ed74:	1001c626 	beq	r2,zero,80f490 <___svfprintf_internal_r+0x13f4>
  80ed78:	db002d17 	ldw	r12,180(sp)
  80ed7c:	0039883a 	mov	fp,zero
  80ed80:	0005883a 	mov	r2,zero
  80ed84:	64c0000b 	ldhu	r19,0(r12)
  80ed88:	63000104 	addi	r12,r12,4
  80ed8c:	db002d15 	stw	r12,180(sp)
  80ed90:	9807883a 	mov	r3,r19
  80ed94:	003f0e06 	br	80e9d0 <__alt_data_end+0xff80e9d0>
  80ed98:	d8c02915 	stw	r3,164(sp)
  80ed9c:	d9802785 	stb	r6,158(sp)
  80eda0:	803d8026 	beq	r16,zero,80e3a4 <__alt_data_end+0xff80e3a4>
  80eda4:	02c00044 	movi	r11,1
  80eda8:	db001404 	addi	r12,sp,80
  80edac:	dac02a15 	stw	r11,168(sp)
  80edb0:	dc001405 	stb	r16,80(sp)
  80edb4:	d8002785 	stb	zero,158(sp)
  80edb8:	5825883a 	mov	r18,r11
  80edbc:	d8003215 	stw	zero,200(sp)
  80edc0:	d8003415 	stw	zero,208(sp)
  80edc4:	db003115 	stw	r12,196(sp)
  80edc8:	0005883a 	mov	r2,zero
  80edcc:	003de606 	br	80e568 <__alt_data_end+0xff80e568>
  80edd0:	d8c02017 	ldw	r3,128(sp)
  80edd4:	003e2706 	br	80e674 <__alt_data_end+0xff80e674>
  80edd8:	10803fcc 	andi	r2,r2,255
  80eddc:	00c00044 	movi	r3,1
  80ede0:	10fdbb1e 	bne	r2,r3,80e4d0 <__alt_data_end+0xff80e4d0>
  80ede4:	e000021e 	bne	fp,zero,80edf0 <___svfprintf_internal_r+0xd54>
  80ede8:	00800244 	movi	r2,9
  80edec:	14c01f2e 	bgeu	r2,r19,80ee6c <___svfprintf_internal_r+0xdd0>
  80edf0:	dc002a15 	stw	r16,168(sp)
  80edf4:	dc402b15 	stw	r17,172(sp)
  80edf8:	9821883a 	mov	r16,r19
  80edfc:	e023883a 	mov	r17,fp
  80ee00:	b025883a 	mov	r18,r22
  80ee04:	4827883a 	mov	r19,r9
  80ee08:	4039883a 	mov	fp,r8
  80ee0c:	8009883a 	mov	r4,r16
  80ee10:	880b883a 	mov	r5,r17
  80ee14:	01800284 	movi	r6,10
  80ee18:	000f883a 	mov	r7,zero
  80ee1c:	08142400 	call	814240 <__umoddi3>
  80ee20:	10800c04 	addi	r2,r2,48
  80ee24:	94bfffc4 	addi	r18,r18,-1
  80ee28:	8009883a 	mov	r4,r16
  80ee2c:	880b883a 	mov	r5,r17
  80ee30:	01800284 	movi	r6,10
  80ee34:	000f883a 	mov	r7,zero
  80ee38:	90800005 	stb	r2,0(r18)
  80ee3c:	0813c800 	call	813c80 <__udivdi3>
  80ee40:	1021883a 	mov	r16,r2
  80ee44:	10c4b03a 	or	r2,r2,r3
  80ee48:	1823883a 	mov	r17,r3
  80ee4c:	103fef1e 	bne	r2,zero,80ee0c <__alt_data_end+0xff80ee0c>
  80ee50:	dc803115 	stw	r18,196(sp)
  80ee54:	dc002a17 	ldw	r16,168(sp)
  80ee58:	dc402b17 	ldw	r17,172(sp)
  80ee5c:	9813883a 	mov	r9,r19
  80ee60:	e011883a 	mov	r8,fp
  80ee64:	b4a5c83a 	sub	r18,r22,r18
  80ee68:	003db306 	br	80e538 <__alt_data_end+0xff80e538>
  80ee6c:	9cc00c04 	addi	r19,r19,48
  80ee70:	db001dc4 	addi	r12,sp,119
  80ee74:	dcc01dc5 	stb	r19,119(sp)
  80ee78:	dc803d17 	ldw	r18,244(sp)
  80ee7c:	db003115 	stw	r12,196(sp)
  80ee80:	003dad06 	br	80e538 <__alt_data_end+0xff80e538>
  80ee84:	00801944 	movi	r2,101
  80ee88:	14008d0e 	bge	r2,r16,80f0c0 <___svfprintf_internal_r+0x1024>
  80ee8c:	d9003717 	ldw	r4,220(sp)
  80ee90:	d9403817 	ldw	r5,224(sp)
  80ee94:	000d883a 	mov	r6,zero
  80ee98:	000f883a 	mov	r7,zero
  80ee9c:	d8c03e15 	stw	r3,248(sp)
  80eea0:	da004015 	stw	r8,256(sp)
  80eea4:	0815c480 	call	815c48 <__eqdf2>
  80eea8:	d8c03e17 	ldw	r3,248(sp)
  80eeac:	da004017 	ldw	r8,256(sp)
  80eeb0:	1000fd1e 	bne	r2,zero,80f2a8 <___svfprintf_internal_r+0x120c>
  80eeb4:	d8801f17 	ldw	r2,124(sp)
  80eeb8:	010020b4 	movhi	r4,130
  80eebc:	212dd104 	addi	r4,r4,-18620
  80eec0:	18c00044 	addi	r3,r3,1
  80eec4:	10800044 	addi	r2,r2,1
  80eec8:	41000015 	stw	r4,0(r8)
  80eecc:	01000044 	movi	r4,1
  80eed0:	41000115 	stw	r4,4(r8)
  80eed4:	d8c02015 	stw	r3,128(sp)
  80eed8:	d8801f15 	stw	r2,124(sp)
  80eedc:	010001c4 	movi	r4,7
  80eee0:	20823316 	blt	r4,r2,80f7b0 <___svfprintf_internal_r+0x1714>
  80eee4:	42000204 	addi	r8,r8,8
  80eee8:	d8802617 	ldw	r2,152(sp)
  80eeec:	dac03317 	ldw	r11,204(sp)
  80eef0:	12c00216 	blt	r2,r11,80eefc <___svfprintf_internal_r+0xe60>
  80eef4:	8880004c 	andi	r2,r17,1
  80eef8:	103e3d26 	beq	r2,zero,80e7f0 <__alt_data_end+0xff80e7f0>
  80eefc:	db003917 	ldw	r12,228(sp)
  80ef00:	d8801f17 	ldw	r2,124(sp)
  80ef04:	dac03517 	ldw	r11,212(sp)
  80ef08:	1b07883a 	add	r3,r3,r12
  80ef0c:	10800044 	addi	r2,r2,1
  80ef10:	42c00015 	stw	r11,0(r8)
  80ef14:	43000115 	stw	r12,4(r8)
  80ef18:	d8c02015 	stw	r3,128(sp)
  80ef1c:	d8801f15 	stw	r2,124(sp)
  80ef20:	010001c4 	movi	r4,7
  80ef24:	20826f16 	blt	r4,r2,80f8e4 <___svfprintf_internal_r+0x1848>
  80ef28:	42000204 	addi	r8,r8,8
  80ef2c:	db003317 	ldw	r12,204(sp)
  80ef30:	643fffc4 	addi	r16,r12,-1
  80ef34:	043e2e0e 	bge	zero,r16,80e7f0 <__alt_data_end+0xff80e7f0>
  80ef38:	04800404 	movi	r18,16
  80ef3c:	d8801f17 	ldw	r2,124(sp)
  80ef40:	9400a00e 	bge	r18,r16,80f1c4 <___svfprintf_internal_r+0x1128>
  80ef44:	014020b4 	movhi	r5,130
  80ef48:	296eea84 	addi	r5,r5,-17494
  80ef4c:	d9402b15 	stw	r5,172(sp)
  80ef50:	054001c4 	movi	r21,7
  80ef54:	dcc02f17 	ldw	r19,188(sp)
  80ef58:	00000306 	br	80ef68 <___svfprintf_internal_r+0xecc>
  80ef5c:	42000204 	addi	r8,r8,8
  80ef60:	843ffc04 	addi	r16,r16,-16
  80ef64:	94009a0e 	bge	r18,r16,80f1d0 <___svfprintf_internal_r+0x1134>
  80ef68:	18c00404 	addi	r3,r3,16
  80ef6c:	10800044 	addi	r2,r2,1
  80ef70:	45000015 	stw	r20,0(r8)
  80ef74:	44800115 	stw	r18,4(r8)
  80ef78:	d8c02015 	stw	r3,128(sp)
  80ef7c:	d8801f15 	stw	r2,124(sp)
  80ef80:	a8bff60e 	bge	r21,r2,80ef5c <__alt_data_end+0xff80ef5c>
  80ef84:	9809883a 	mov	r4,r19
  80ef88:	b80b883a 	mov	r5,r23
  80ef8c:	b00d883a 	mov	r6,r22
  80ef90:	08127c00 	call	8127c0 <__ssprint_r>
  80ef94:	103d091e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80ef98:	d8c02017 	ldw	r3,128(sp)
  80ef9c:	d8801f17 	ldw	r2,124(sp)
  80efa0:	da000404 	addi	r8,sp,16
  80efa4:	003fee06 	br	80ef60 <__alt_data_end+0xff80ef60>
  80efa8:	dac02e17 	ldw	r11,184(sp)
  80efac:	db002a17 	ldw	r12,168(sp)
  80efb0:	5b2bc83a 	sub	r21,r11,r12
  80efb4:	057dcd0e 	bge	zero,r21,80e6ec <__alt_data_end+0xff80e6ec>
  80efb8:	07000404 	movi	fp,16
  80efbc:	d8801f17 	ldw	r2,124(sp)
  80efc0:	e5435d0e 	bge	fp,r21,80fd38 <___svfprintf_internal_r+0x1c9c>
  80efc4:	014020b4 	movhi	r5,130
  80efc8:	a809883a 	mov	r4,r21
  80efcc:	296eea84 	addi	r5,r5,-17494
  80efd0:	dc002c15 	stw	r16,176(sp)
  80efd4:	902b883a 	mov	r21,r18
  80efd8:	d9402b15 	stw	r5,172(sp)
  80efdc:	8825883a 	mov	r18,r17
  80efe0:	04c001c4 	movi	r19,7
  80efe4:	dc002f17 	ldw	r16,188(sp)
  80efe8:	2023883a 	mov	r17,r4
  80efec:	00000306 	br	80effc <___svfprintf_internal_r+0xf60>
  80eff0:	8c7ffc04 	addi	r17,r17,-16
  80eff4:	42000204 	addi	r8,r8,8
  80eff8:	e440110e 	bge	fp,r17,80f040 <___svfprintf_internal_r+0xfa4>
  80effc:	18c00404 	addi	r3,r3,16
  80f000:	10800044 	addi	r2,r2,1
  80f004:	45000015 	stw	r20,0(r8)
  80f008:	47000115 	stw	fp,4(r8)
  80f00c:	d8c02015 	stw	r3,128(sp)
  80f010:	d8801f15 	stw	r2,124(sp)
  80f014:	98bff60e 	bge	r19,r2,80eff0 <__alt_data_end+0xff80eff0>
  80f018:	8009883a 	mov	r4,r16
  80f01c:	b80b883a 	mov	r5,r23
  80f020:	b00d883a 	mov	r6,r22
  80f024:	08127c00 	call	8127c0 <__ssprint_r>
  80f028:	103ce41e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f02c:	8c7ffc04 	addi	r17,r17,-16
  80f030:	d8c02017 	ldw	r3,128(sp)
  80f034:	d8801f17 	ldw	r2,124(sp)
  80f038:	da000404 	addi	r8,sp,16
  80f03c:	e47fef16 	blt	fp,r17,80effc <__alt_data_end+0xff80effc>
  80f040:	dc002c17 	ldw	r16,176(sp)
  80f044:	8809883a 	mov	r4,r17
  80f048:	9023883a 	mov	r17,r18
  80f04c:	a825883a 	mov	r18,r21
  80f050:	202b883a 	mov	r21,r4
  80f054:	dac02b17 	ldw	r11,172(sp)
  80f058:	1d47883a 	add	r3,r3,r21
  80f05c:	10800044 	addi	r2,r2,1
  80f060:	42c00015 	stw	r11,0(r8)
  80f064:	45400115 	stw	r21,4(r8)
  80f068:	d8c02015 	stw	r3,128(sp)
  80f06c:	d8801f15 	stw	r2,124(sp)
  80f070:	010001c4 	movi	r4,7
  80f074:	20818016 	blt	r4,r2,80f678 <___svfprintf_internal_r+0x15dc>
  80f078:	42000204 	addi	r8,r8,8
  80f07c:	003d9b06 	br	80e6ec <__alt_data_end+0xff80e6ec>
  80f080:	d9403b17 	ldw	r5,236(sp)
  80f084:	b007883a 	mov	r3,r22
  80f088:	988003cc 	andi	r2,r19,15
  80f08c:	e008973a 	slli	r4,fp,28
  80f090:	2885883a 	add	r2,r5,r2
  80f094:	9826d13a 	srli	r19,r19,4
  80f098:	10800003 	ldbu	r2,0(r2)
  80f09c:	e038d13a 	srli	fp,fp,4
  80f0a0:	18ffffc4 	addi	r3,r3,-1
  80f0a4:	24e6b03a 	or	r19,r4,r19
  80f0a8:	18800005 	stb	r2,0(r3)
  80f0ac:	9f04b03a 	or	r2,r19,fp
  80f0b0:	103ff51e 	bne	r2,zero,80f088 <__alt_data_end+0xff80f088>
  80f0b4:	d8c03115 	stw	r3,196(sp)
  80f0b8:	b0e5c83a 	sub	r18,r22,r3
  80f0bc:	003d1e06 	br	80e538 <__alt_data_end+0xff80e538>
  80f0c0:	db003317 	ldw	r12,204(sp)
  80f0c4:	00800044 	movi	r2,1
  80f0c8:	18c00044 	addi	r3,r3,1
  80f0cc:	13014b0e 	bge	r2,r12,80f5fc <___svfprintf_internal_r+0x1560>
  80f0d0:	dc001f17 	ldw	r16,124(sp)
  80f0d4:	dac03117 	ldw	r11,196(sp)
  80f0d8:	00800044 	movi	r2,1
  80f0dc:	84000044 	addi	r16,r16,1
  80f0e0:	40800115 	stw	r2,4(r8)
  80f0e4:	42c00015 	stw	r11,0(r8)
  80f0e8:	d8c02015 	stw	r3,128(sp)
  80f0ec:	dc001f15 	stw	r16,124(sp)
  80f0f0:	008001c4 	movi	r2,7
  80f0f4:	14014e16 	blt	r2,r16,80f630 <___svfprintf_internal_r+0x1594>
  80f0f8:	42000204 	addi	r8,r8,8
  80f0fc:	db003917 	ldw	r12,228(sp)
  80f100:	dac03517 	ldw	r11,212(sp)
  80f104:	84000044 	addi	r16,r16,1
  80f108:	1b07883a 	add	r3,r3,r12
  80f10c:	42c00015 	stw	r11,0(r8)
  80f110:	43000115 	stw	r12,4(r8)
  80f114:	d8c02015 	stw	r3,128(sp)
  80f118:	dc001f15 	stw	r16,124(sp)
  80f11c:	008001c4 	movi	r2,7
  80f120:	14014c16 	blt	r2,r16,80f654 <___svfprintf_internal_r+0x15b8>
  80f124:	44800204 	addi	r18,r8,8
  80f128:	d9003717 	ldw	r4,220(sp)
  80f12c:	d9403817 	ldw	r5,224(sp)
  80f130:	000d883a 	mov	r6,zero
  80f134:	000f883a 	mov	r7,zero
  80f138:	d8c03e15 	stw	r3,248(sp)
  80f13c:	0815c480 	call	815c48 <__eqdf2>
  80f140:	d8c03e17 	ldw	r3,248(sp)
  80f144:	db003317 	ldw	r12,204(sp)
  80f148:	10009526 	beq	r2,zero,80f3a0 <___svfprintf_internal_r+0x1304>
  80f14c:	dac03117 	ldw	r11,196(sp)
  80f150:	60bfffc4 	addi	r2,r12,-1
  80f154:	1887883a 	add	r3,r3,r2
  80f158:	59000044 	addi	r4,r11,1
  80f15c:	84000044 	addi	r16,r16,1
  80f160:	90800115 	stw	r2,4(r18)
  80f164:	91000015 	stw	r4,0(r18)
  80f168:	d8c02015 	stw	r3,128(sp)
  80f16c:	dc001f15 	stw	r16,124(sp)
  80f170:	008001c4 	movi	r2,7
  80f174:	1400b316 	blt	r2,r16,80f444 <___svfprintf_internal_r+0x13a8>
  80f178:	94800204 	addi	r18,r18,8
  80f17c:	dac03a17 	ldw	r11,232(sp)
  80f180:	dd4022c4 	addi	r21,sp,139
  80f184:	84000044 	addi	r16,r16,1
  80f188:	1ac7883a 	add	r3,r3,r11
  80f18c:	95400015 	stw	r21,0(r18)
  80f190:	92c00115 	stw	r11,4(r18)
  80f194:	d8c02015 	stw	r3,128(sp)
  80f198:	dc001f15 	stw	r16,124(sp)
  80f19c:	008001c4 	movi	r2,7
  80f1a0:	14001416 	blt	r2,r16,80f1f4 <___svfprintf_internal_r+0x1158>
  80f1a4:	92000204 	addi	r8,r18,8
  80f1a8:	003d9106 	br	80e7f0 <__alt_data_end+0xff80e7f0>
  80f1ac:	d9002f17 	ldw	r4,188(sp)
  80f1b0:	b80b883a 	mov	r5,r23
  80f1b4:	b00d883a 	mov	r6,r22
  80f1b8:	08127c00 	call	8127c0 <__ssprint_r>
  80f1bc:	103dc826 	beq	r2,zero,80e8e0 <__alt_data_end+0xff80e8e0>
  80f1c0:	003c7e06 	br	80e3bc <__alt_data_end+0xff80e3bc>
  80f1c4:	010020b4 	movhi	r4,130
  80f1c8:	212eea84 	addi	r4,r4,-17494
  80f1cc:	d9002b15 	stw	r4,172(sp)
  80f1d0:	dac02b17 	ldw	r11,172(sp)
  80f1d4:	1c07883a 	add	r3,r3,r16
  80f1d8:	44000115 	stw	r16,4(r8)
  80f1dc:	42c00015 	stw	r11,0(r8)
  80f1e0:	10800044 	addi	r2,r2,1
  80f1e4:	d8c02015 	stw	r3,128(sp)
  80f1e8:	d8801f15 	stw	r2,124(sp)
  80f1ec:	010001c4 	movi	r4,7
  80f1f0:	20bd7e0e 	bge	r4,r2,80e7ec <__alt_data_end+0xff80e7ec>
  80f1f4:	d9002f17 	ldw	r4,188(sp)
  80f1f8:	b80b883a 	mov	r5,r23
  80f1fc:	b00d883a 	mov	r6,r22
  80f200:	08127c00 	call	8127c0 <__ssprint_r>
  80f204:	103c6d1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f208:	d8c02017 	ldw	r3,128(sp)
  80f20c:	da000404 	addi	r8,sp,16
  80f210:	003d7706 	br	80e7f0 <__alt_data_end+0xff80e7f0>
  80f214:	10803fcc 	andi	r2,r2,255
  80f218:	1000201e 	bne	r2,zero,80f29c <___svfprintf_internal_r+0x1200>
  80f21c:	8880004c 	andi	r2,r17,1
  80f220:	10001e26 	beq	r2,zero,80f29c <___svfprintf_internal_r+0x1200>
  80f224:	00800c04 	movi	r2,48
  80f228:	d8c01dc4 	addi	r3,sp,119
  80f22c:	d8801dc5 	stb	r2,119(sp)
  80f230:	dc803d17 	ldw	r18,244(sp)
  80f234:	d8c03115 	stw	r3,196(sp)
  80f238:	003cbf06 	br	80e538 <__alt_data_end+0xff80e538>
  80f23c:	d9002f17 	ldw	r4,188(sp)
  80f240:	b80b883a 	mov	r5,r23
  80f244:	b00d883a 	mov	r6,r22
  80f248:	08127c00 	call	8127c0 <__ssprint_r>
  80f24c:	103c5b1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f250:	d8c02017 	ldw	r3,128(sp)
  80f254:	da000404 	addi	r8,sp,16
  80f258:	003d5806 	br	80e7bc <__alt_data_end+0xff80e7bc>
  80f25c:	d9002f17 	ldw	r4,188(sp)
  80f260:	b80b883a 	mov	r5,r23
  80f264:	b00d883a 	mov	r6,r22
  80f268:	08127c00 	call	8127c0 <__ssprint_r>
  80f26c:	103c531e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f270:	d8c02017 	ldw	r3,128(sp)
  80f274:	da000404 	addi	r8,sp,16
  80f278:	003d1906 	br	80e6e0 <__alt_data_end+0xff80e6e0>
  80f27c:	d9002f17 	ldw	r4,188(sp)
  80f280:	b80b883a 	mov	r5,r23
  80f284:	b00d883a 	mov	r6,r22
  80f288:	08127c00 	call	8127c0 <__ssprint_r>
  80f28c:	103c4b1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f290:	d8c02017 	ldw	r3,128(sp)
  80f294:	da000404 	addi	r8,sp,16
  80f298:	003d0306 	br	80e6a8 <__alt_data_end+0xff80e6a8>
  80f29c:	0025883a 	mov	r18,zero
  80f2a0:	dd803115 	stw	r22,196(sp)
  80f2a4:	003ca406 	br	80e538 <__alt_data_end+0xff80e538>
  80f2a8:	dc002617 	ldw	r16,152(sp)
  80f2ac:	0401480e 	bge	zero,r16,80f7d0 <___svfprintf_internal_r+0x1734>
  80f2b0:	db003117 	ldw	r12,196(sp)
  80f2b4:	dac03317 	ldw	r11,204(sp)
  80f2b8:	62e1883a 	add	r16,r12,r11
  80f2bc:	db003417 	ldw	r12,208(sp)
  80f2c0:	5825883a 	mov	r18,r11
  80f2c4:	62c0010e 	bge	r12,r11,80f2cc <___svfprintf_internal_r+0x1230>
  80f2c8:	6025883a 	mov	r18,r12
  80f2cc:	04800b0e 	bge	zero,r18,80f2fc <___svfprintf_internal_r+0x1260>
  80f2d0:	d8801f17 	ldw	r2,124(sp)
  80f2d4:	dac03117 	ldw	r11,196(sp)
  80f2d8:	1c87883a 	add	r3,r3,r18
  80f2dc:	10800044 	addi	r2,r2,1
  80f2e0:	42c00015 	stw	r11,0(r8)
  80f2e4:	44800115 	stw	r18,4(r8)
  80f2e8:	d8c02015 	stw	r3,128(sp)
  80f2ec:	d8801f15 	stw	r2,124(sp)
  80f2f0:	010001c4 	movi	r4,7
  80f2f4:	20823f16 	blt	r4,r2,80fbf4 <___svfprintf_internal_r+0x1b58>
  80f2f8:	42000204 	addi	r8,r8,8
  80f2fc:	90023b16 	blt	r18,zero,80fbec <___svfprintf_internal_r+0x1b50>
  80f300:	db003417 	ldw	r12,208(sp)
  80f304:	64a5c83a 	sub	r18,r12,r18
  80f308:	0480780e 	bge	zero,r18,80f4ec <___svfprintf_internal_r+0x1450>
  80f30c:	05400404 	movi	r21,16
  80f310:	d8801f17 	ldw	r2,124(sp)
  80f314:	ac81140e 	bge	r21,r18,80f768 <___svfprintf_internal_r+0x16cc>
  80f318:	014020b4 	movhi	r5,130
  80f31c:	296eea84 	addi	r5,r5,-17494
  80f320:	d9402b15 	stw	r5,172(sp)
  80f324:	070001c4 	movi	fp,7
  80f328:	dcc02f17 	ldw	r19,188(sp)
  80f32c:	00000306 	br	80f33c <___svfprintf_internal_r+0x12a0>
  80f330:	42000204 	addi	r8,r8,8
  80f334:	94bffc04 	addi	r18,r18,-16
  80f338:	ac810e0e 	bge	r21,r18,80f774 <___svfprintf_internal_r+0x16d8>
  80f33c:	18c00404 	addi	r3,r3,16
  80f340:	10800044 	addi	r2,r2,1
  80f344:	45000015 	stw	r20,0(r8)
  80f348:	45400115 	stw	r21,4(r8)
  80f34c:	d8c02015 	stw	r3,128(sp)
  80f350:	d8801f15 	stw	r2,124(sp)
  80f354:	e0bff60e 	bge	fp,r2,80f330 <__alt_data_end+0xff80f330>
  80f358:	9809883a 	mov	r4,r19
  80f35c:	b80b883a 	mov	r5,r23
  80f360:	b00d883a 	mov	r6,r22
  80f364:	08127c00 	call	8127c0 <__ssprint_r>
  80f368:	103c141e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f36c:	d8c02017 	ldw	r3,128(sp)
  80f370:	d8801f17 	ldw	r2,124(sp)
  80f374:	da000404 	addi	r8,sp,16
  80f378:	003fee06 	br	80f334 <__alt_data_end+0xff80f334>
  80f37c:	d9002f17 	ldw	r4,188(sp)
  80f380:	b80b883a 	mov	r5,r23
  80f384:	b00d883a 	mov	r6,r22
  80f388:	08127c00 	call	8127c0 <__ssprint_r>
  80f38c:	103c0b1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f390:	d8c02017 	ldw	r3,128(sp)
  80f394:	d8802787 	ldb	r2,158(sp)
  80f398:	da000404 	addi	r8,sp,16
  80f39c:	003cb506 	br	80e674 <__alt_data_end+0xff80e674>
  80f3a0:	657fffc4 	addi	r21,r12,-1
  80f3a4:	057f750e 	bge	zero,r21,80f17c <__alt_data_end+0xff80f17c>
  80f3a8:	07000404 	movi	fp,16
  80f3ac:	e542ed0e 	bge	fp,r21,80ff64 <___svfprintf_internal_r+0x1ec8>
  80f3b0:	010020b4 	movhi	r4,130
  80f3b4:	212eea84 	addi	r4,r4,-17494
  80f3b8:	d9002b15 	stw	r4,172(sp)
  80f3bc:	01c001c4 	movi	r7,7
  80f3c0:	dcc02f17 	ldw	r19,188(sp)
  80f3c4:	00000306 	br	80f3d4 <___svfprintf_internal_r+0x1338>
  80f3c8:	ad7ffc04 	addi	r21,r21,-16
  80f3cc:	94800204 	addi	r18,r18,8
  80f3d0:	e540130e 	bge	fp,r21,80f420 <___svfprintf_internal_r+0x1384>
  80f3d4:	18c00404 	addi	r3,r3,16
  80f3d8:	84000044 	addi	r16,r16,1
  80f3dc:	95000015 	stw	r20,0(r18)
  80f3e0:	97000115 	stw	fp,4(r18)
  80f3e4:	d8c02015 	stw	r3,128(sp)
  80f3e8:	dc001f15 	stw	r16,124(sp)
  80f3ec:	3c3ff60e 	bge	r7,r16,80f3c8 <__alt_data_end+0xff80f3c8>
  80f3f0:	9809883a 	mov	r4,r19
  80f3f4:	b80b883a 	mov	r5,r23
  80f3f8:	b00d883a 	mov	r6,r22
  80f3fc:	d9c03e15 	stw	r7,248(sp)
  80f400:	08127c00 	call	8127c0 <__ssprint_r>
  80f404:	d9c03e17 	ldw	r7,248(sp)
  80f408:	103bec1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f40c:	ad7ffc04 	addi	r21,r21,-16
  80f410:	d8c02017 	ldw	r3,128(sp)
  80f414:	dc001f17 	ldw	r16,124(sp)
  80f418:	dc800404 	addi	r18,sp,16
  80f41c:	e57fed16 	blt	fp,r21,80f3d4 <__alt_data_end+0xff80f3d4>
  80f420:	dac02b17 	ldw	r11,172(sp)
  80f424:	1d47883a 	add	r3,r3,r21
  80f428:	84000044 	addi	r16,r16,1
  80f42c:	92c00015 	stw	r11,0(r18)
  80f430:	95400115 	stw	r21,4(r18)
  80f434:	d8c02015 	stw	r3,128(sp)
  80f438:	dc001f15 	stw	r16,124(sp)
  80f43c:	008001c4 	movi	r2,7
  80f440:	143f4d0e 	bge	r2,r16,80f178 <__alt_data_end+0xff80f178>
  80f444:	d9002f17 	ldw	r4,188(sp)
  80f448:	b80b883a 	mov	r5,r23
  80f44c:	b00d883a 	mov	r6,r22
  80f450:	08127c00 	call	8127c0 <__ssprint_r>
  80f454:	103bd91e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f458:	d8c02017 	ldw	r3,128(sp)
  80f45c:	dc001f17 	ldw	r16,124(sp)
  80f460:	dc800404 	addi	r18,sp,16
  80f464:	003f4506 	br	80f17c <__alt_data_end+0xff80f17c>
  80f468:	00800084 	movi	r2,2
  80f46c:	9f06b03a 	or	r3,r19,fp
  80f470:	003d5706 	br	80e9d0 <__alt_data_end+0xff80e9d0>
  80f474:	1cc00017 	ldw	r19,0(r3)
  80f478:	dac02d17 	ldw	r11,180(sp)
  80f47c:	9839d7fa 	srai	fp,r19,31
  80f480:	5ac00104 	addi	r11,r11,4
  80f484:	dac02d15 	stw	r11,180(sp)
  80f488:	e005883a 	mov	r2,fp
  80f48c:	003c0306 	br	80e49c <__alt_data_end+0xff80e49c>
  80f490:	dac02d17 	ldw	r11,180(sp)
  80f494:	0039883a 	mov	fp,zero
  80f498:	0005883a 	mov	r2,zero
  80f49c:	5cc00017 	ldw	r19,0(r11)
  80f4a0:	5ac00104 	addi	r11,r11,4
  80f4a4:	dac02d15 	stw	r11,180(sp)
  80f4a8:	9807883a 	mov	r3,r19
  80f4ac:	003d4806 	br	80e9d0 <__alt_data_end+0xff80e9d0>
  80f4b0:	db002d17 	ldw	r12,180(sp)
  80f4b4:	14c00017 	ldw	r19,0(r2)
  80f4b8:	0039883a 	mov	fp,zero
  80f4bc:	63000104 	addi	r12,r12,4
  80f4c0:	db002d15 	stw	r12,180(sp)
  80f4c4:	00800044 	movi	r2,1
  80f4c8:	9807883a 	mov	r3,r19
  80f4cc:	003d4006 	br	80e9d0 <__alt_data_end+0xff80e9d0>
  80f4d0:	d9002f17 	ldw	r4,188(sp)
  80f4d4:	b80b883a 	mov	r5,r23
  80f4d8:	b00d883a 	mov	r6,r22
  80f4dc:	08127c00 	call	8127c0 <__ssprint_r>
  80f4e0:	103bb61e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f4e4:	d8c02017 	ldw	r3,128(sp)
  80f4e8:	da000404 	addi	r8,sp,16
  80f4ec:	db003117 	ldw	r12,196(sp)
  80f4f0:	dac03417 	ldw	r11,208(sp)
  80f4f4:	d8802617 	ldw	r2,152(sp)
  80f4f8:	62e5883a 	add	r18,r12,r11
  80f4fc:	db003317 	ldw	r12,204(sp)
  80f500:	13000216 	blt	r2,r12,80f50c <___svfprintf_internal_r+0x1470>
  80f504:	8900004c 	andi	r4,r17,1
  80f508:	20000c26 	beq	r4,zero,80f53c <___svfprintf_internal_r+0x14a0>
  80f50c:	dac03917 	ldw	r11,228(sp)
  80f510:	d9001f17 	ldw	r4,124(sp)
  80f514:	db003517 	ldw	r12,212(sp)
  80f518:	1ac7883a 	add	r3,r3,r11
  80f51c:	21000044 	addi	r4,r4,1
  80f520:	43000015 	stw	r12,0(r8)
  80f524:	42c00115 	stw	r11,4(r8)
  80f528:	d8c02015 	stw	r3,128(sp)
  80f52c:	d9001f15 	stw	r4,124(sp)
  80f530:	014001c4 	movi	r5,7
  80f534:	2901b716 	blt	r5,r4,80fc14 <___svfprintf_internal_r+0x1b78>
  80f538:	42000204 	addi	r8,r8,8
  80f53c:	dac03317 	ldw	r11,204(sp)
  80f540:	8489c83a 	sub	r4,r16,r18
  80f544:	5885c83a 	sub	r2,r11,r2
  80f548:	1021883a 	mov	r16,r2
  80f54c:	2080010e 	bge	r4,r2,80f554 <___svfprintf_internal_r+0x14b8>
  80f550:	2021883a 	mov	r16,r4
  80f554:	04000a0e 	bge	zero,r16,80f580 <___svfprintf_internal_r+0x14e4>
  80f558:	d9001f17 	ldw	r4,124(sp)
  80f55c:	1c07883a 	add	r3,r3,r16
  80f560:	44800015 	stw	r18,0(r8)
  80f564:	21000044 	addi	r4,r4,1
  80f568:	44000115 	stw	r16,4(r8)
  80f56c:	d8c02015 	stw	r3,128(sp)
  80f570:	d9001f15 	stw	r4,124(sp)
  80f574:	014001c4 	movi	r5,7
  80f578:	2901bf16 	blt	r5,r4,80fc78 <___svfprintf_internal_r+0x1bdc>
  80f57c:	42000204 	addi	r8,r8,8
  80f580:	8001bb16 	blt	r16,zero,80fc70 <___svfprintf_internal_r+0x1bd4>
  80f584:	1421c83a 	sub	r16,r2,r16
  80f588:	043c990e 	bge	zero,r16,80e7f0 <__alt_data_end+0xff80e7f0>
  80f58c:	04800404 	movi	r18,16
  80f590:	d8801f17 	ldw	r2,124(sp)
  80f594:	943f0b0e 	bge	r18,r16,80f1c4 <__alt_data_end+0xff80f1c4>
  80f598:	014020b4 	movhi	r5,130
  80f59c:	296eea84 	addi	r5,r5,-17494
  80f5a0:	d9402b15 	stw	r5,172(sp)
  80f5a4:	054001c4 	movi	r21,7
  80f5a8:	dcc02f17 	ldw	r19,188(sp)
  80f5ac:	00000306 	br	80f5bc <___svfprintf_internal_r+0x1520>
  80f5b0:	42000204 	addi	r8,r8,8
  80f5b4:	843ffc04 	addi	r16,r16,-16
  80f5b8:	943f050e 	bge	r18,r16,80f1d0 <__alt_data_end+0xff80f1d0>
  80f5bc:	18c00404 	addi	r3,r3,16
  80f5c0:	10800044 	addi	r2,r2,1
  80f5c4:	45000015 	stw	r20,0(r8)
  80f5c8:	44800115 	stw	r18,4(r8)
  80f5cc:	d8c02015 	stw	r3,128(sp)
  80f5d0:	d8801f15 	stw	r2,124(sp)
  80f5d4:	a8bff60e 	bge	r21,r2,80f5b0 <__alt_data_end+0xff80f5b0>
  80f5d8:	9809883a 	mov	r4,r19
  80f5dc:	b80b883a 	mov	r5,r23
  80f5e0:	b00d883a 	mov	r6,r22
  80f5e4:	08127c00 	call	8127c0 <__ssprint_r>
  80f5e8:	103b741e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f5ec:	d8c02017 	ldw	r3,128(sp)
  80f5f0:	d8801f17 	ldw	r2,124(sp)
  80f5f4:	da000404 	addi	r8,sp,16
  80f5f8:	003fee06 	br	80f5b4 <__alt_data_end+0xff80f5b4>
  80f5fc:	8888703a 	and	r4,r17,r2
  80f600:	203eb31e 	bne	r4,zero,80f0d0 <__alt_data_end+0xff80f0d0>
  80f604:	dc001f17 	ldw	r16,124(sp)
  80f608:	db003117 	ldw	r12,196(sp)
  80f60c:	40800115 	stw	r2,4(r8)
  80f610:	84000044 	addi	r16,r16,1
  80f614:	43000015 	stw	r12,0(r8)
  80f618:	d8c02015 	stw	r3,128(sp)
  80f61c:	dc001f15 	stw	r16,124(sp)
  80f620:	008001c4 	movi	r2,7
  80f624:	143f8716 	blt	r2,r16,80f444 <__alt_data_end+0xff80f444>
  80f628:	44800204 	addi	r18,r8,8
  80f62c:	003ed306 	br	80f17c <__alt_data_end+0xff80f17c>
  80f630:	d9002f17 	ldw	r4,188(sp)
  80f634:	b80b883a 	mov	r5,r23
  80f638:	b00d883a 	mov	r6,r22
  80f63c:	08127c00 	call	8127c0 <__ssprint_r>
  80f640:	103b5e1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f644:	d8c02017 	ldw	r3,128(sp)
  80f648:	dc001f17 	ldw	r16,124(sp)
  80f64c:	da000404 	addi	r8,sp,16
  80f650:	003eaa06 	br	80f0fc <__alt_data_end+0xff80f0fc>
  80f654:	d9002f17 	ldw	r4,188(sp)
  80f658:	b80b883a 	mov	r5,r23
  80f65c:	b00d883a 	mov	r6,r22
  80f660:	08127c00 	call	8127c0 <__ssprint_r>
  80f664:	103b551e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f668:	d8c02017 	ldw	r3,128(sp)
  80f66c:	dc001f17 	ldw	r16,124(sp)
  80f670:	dc800404 	addi	r18,sp,16
  80f674:	003eac06 	br	80f128 <__alt_data_end+0xff80f128>
  80f678:	d9002f17 	ldw	r4,188(sp)
  80f67c:	b80b883a 	mov	r5,r23
  80f680:	b00d883a 	mov	r6,r22
  80f684:	08127c00 	call	8127c0 <__ssprint_r>
  80f688:	103b4c1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f68c:	d8c02017 	ldw	r3,128(sp)
  80f690:	da000404 	addi	r8,sp,16
  80f694:	003c1506 	br	80e6ec <__alt_data_end+0xff80e6ec>
  80f698:	da004015 	stw	r8,256(sp)
  80f69c:	da403f15 	stw	r9,252(sp)
  80f6a0:	080a8a80 	call	80a8a8 <__fpclassifyd>
  80f6a4:	da004017 	ldw	r8,256(sp)
  80f6a8:	da403f17 	ldw	r9,252(sp)
  80f6ac:	1000951e 	bne	r2,zero,80f904 <___svfprintf_internal_r+0x1868>
  80f6b0:	008011c4 	movi	r2,71
  80f6b4:	1400fb16 	blt	r2,r16,80faa4 <___svfprintf_internal_r+0x1a08>
  80f6b8:	030020b4 	movhi	r12,130
  80f6bc:	632dc304 	addi	r12,r12,-18676
  80f6c0:	db003115 	stw	r12,196(sp)
  80f6c4:	00c000c4 	movi	r3,3
  80f6c8:	00bfdfc4 	movi	r2,-129
  80f6cc:	d8c02a15 	stw	r3,168(sp)
  80f6d0:	88a2703a 	and	r17,r17,r2
  80f6d4:	dd402783 	ldbu	r21,158(sp)
  80f6d8:	dcc02d15 	stw	r19,180(sp)
  80f6dc:	1825883a 	mov	r18,r3
  80f6e0:	d8003215 	stw	zero,200(sp)
  80f6e4:	d8003415 	stw	zero,208(sp)
  80f6e8:	003b9806 	br	80e54c <__alt_data_end+0xff80e54c>
  80f6ec:	1c000007 	ldb	r16,0(r3)
  80f6f0:	1805883a 	mov	r2,r3
  80f6f4:	003abf06 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80f6f8:	00800084 	movi	r2,2
  80f6fc:	003cb406 	br	80e9d0 <__alt_data_end+0xff80e9d0>
  80f700:	88c0100c 	andi	r3,r17,64
  80f704:	1800f626 	beq	r3,zero,80fae0 <___svfprintf_internal_r+0x1a44>
  80f708:	dac02d17 	ldw	r11,180(sp)
  80f70c:	14c0000b 	ldhu	r19,0(r2)
  80f710:	0039883a 	mov	fp,zero
  80f714:	5ac00104 	addi	r11,r11,4
  80f718:	dac02d15 	stw	r11,180(sp)
  80f71c:	003cbd06 	br	80ea14 <__alt_data_end+0xff80ea14>
  80f720:	8880040c 	andi	r2,r17,16
  80f724:	1000091e 	bne	r2,zero,80f74c <___svfprintf_internal_r+0x16b0>
  80f728:	8c40100c 	andi	r17,r17,64
  80f72c:	88000726 	beq	r17,zero,80f74c <___svfprintf_internal_r+0x16b0>
  80f730:	db002d17 	ldw	r12,180(sp)
  80f734:	dac03017 	ldw	r11,192(sp)
  80f738:	60800017 	ldw	r2,0(r12)
  80f73c:	63000104 	addi	r12,r12,4
  80f740:	db002d15 	stw	r12,180(sp)
  80f744:	12c0000d 	sth	r11,0(r2)
  80f748:	003a8006 	br	80e14c <__alt_data_end+0xff80e14c>
  80f74c:	db002d17 	ldw	r12,180(sp)
  80f750:	dac03017 	ldw	r11,192(sp)
  80f754:	60800017 	ldw	r2,0(r12)
  80f758:	63000104 	addi	r12,r12,4
  80f75c:	db002d15 	stw	r12,180(sp)
  80f760:	12c00015 	stw	r11,0(r2)
  80f764:	003a7906 	br	80e14c <__alt_data_end+0xff80e14c>
  80f768:	010020b4 	movhi	r4,130
  80f76c:	212eea84 	addi	r4,r4,-17494
  80f770:	d9002b15 	stw	r4,172(sp)
  80f774:	dac02b17 	ldw	r11,172(sp)
  80f778:	1c87883a 	add	r3,r3,r18
  80f77c:	10800044 	addi	r2,r2,1
  80f780:	42c00015 	stw	r11,0(r8)
  80f784:	44800115 	stw	r18,4(r8)
  80f788:	d8c02015 	stw	r3,128(sp)
  80f78c:	d8801f15 	stw	r2,124(sp)
  80f790:	010001c4 	movi	r4,7
  80f794:	20bf4e16 	blt	r4,r2,80f4d0 <__alt_data_end+0xff80f4d0>
  80f798:	42000204 	addi	r8,r8,8
  80f79c:	003f5306 	br	80f4ec <__alt_data_end+0xff80f4ec>
  80f7a0:	010020b4 	movhi	r4,130
  80f7a4:	212eea84 	addi	r4,r4,-17494
  80f7a8:	d9002b15 	stw	r4,172(sp)
  80f7ac:	003bf906 	br	80e794 <__alt_data_end+0xff80e794>
  80f7b0:	d9002f17 	ldw	r4,188(sp)
  80f7b4:	b80b883a 	mov	r5,r23
  80f7b8:	b00d883a 	mov	r6,r22
  80f7bc:	08127c00 	call	8127c0 <__ssprint_r>
  80f7c0:	103afe1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f7c4:	d8c02017 	ldw	r3,128(sp)
  80f7c8:	da000404 	addi	r8,sp,16
  80f7cc:	003dc606 	br	80eee8 <__alt_data_end+0xff80eee8>
  80f7d0:	d8801f17 	ldw	r2,124(sp)
  80f7d4:	030020b4 	movhi	r12,130
  80f7d8:	01000044 	movi	r4,1
  80f7dc:	18c00044 	addi	r3,r3,1
  80f7e0:	10800044 	addi	r2,r2,1
  80f7e4:	632dd104 	addi	r12,r12,-18620
  80f7e8:	41000115 	stw	r4,4(r8)
  80f7ec:	43000015 	stw	r12,0(r8)
  80f7f0:	d8c02015 	stw	r3,128(sp)
  80f7f4:	d8801f15 	stw	r2,124(sp)
  80f7f8:	010001c4 	movi	r4,7
  80f7fc:	2080ad16 	blt	r4,r2,80fab4 <___svfprintf_internal_r+0x1a18>
  80f800:	42000204 	addi	r8,r8,8
  80f804:	8000041e 	bne	r16,zero,80f818 <___svfprintf_internal_r+0x177c>
  80f808:	dac03317 	ldw	r11,204(sp)
  80f80c:	5800021e 	bne	r11,zero,80f818 <___svfprintf_internal_r+0x177c>
  80f810:	8880004c 	andi	r2,r17,1
  80f814:	103bf626 	beq	r2,zero,80e7f0 <__alt_data_end+0xff80e7f0>
  80f818:	db003917 	ldw	r12,228(sp)
  80f81c:	d8801f17 	ldw	r2,124(sp)
  80f820:	dac03517 	ldw	r11,212(sp)
  80f824:	1b07883a 	add	r3,r3,r12
  80f828:	10800044 	addi	r2,r2,1
  80f82c:	42c00015 	stw	r11,0(r8)
  80f830:	43000115 	stw	r12,4(r8)
  80f834:	d8c02015 	stw	r3,128(sp)
  80f838:	d8801f15 	stw	r2,124(sp)
  80f83c:	010001c4 	movi	r4,7
  80f840:	20818616 	blt	r4,r2,80fe5c <___svfprintf_internal_r+0x1dc0>
  80f844:	42000204 	addi	r8,r8,8
  80f848:	0421c83a 	sub	r16,zero,r16
  80f84c:	0400bc0e 	bge	zero,r16,80fb40 <___svfprintf_internal_r+0x1aa4>
  80f850:	04800404 	movi	r18,16
  80f854:	9400f80e 	bge	r18,r16,80fc38 <___svfprintf_internal_r+0x1b9c>
  80f858:	010020b4 	movhi	r4,130
  80f85c:	212eea84 	addi	r4,r4,-17494
  80f860:	d9002b15 	stw	r4,172(sp)
  80f864:	054001c4 	movi	r21,7
  80f868:	dcc02f17 	ldw	r19,188(sp)
  80f86c:	00000306 	br	80f87c <___svfprintf_internal_r+0x17e0>
  80f870:	42000204 	addi	r8,r8,8
  80f874:	843ffc04 	addi	r16,r16,-16
  80f878:	9400f20e 	bge	r18,r16,80fc44 <___svfprintf_internal_r+0x1ba8>
  80f87c:	18c00404 	addi	r3,r3,16
  80f880:	10800044 	addi	r2,r2,1
  80f884:	45000015 	stw	r20,0(r8)
  80f888:	44800115 	stw	r18,4(r8)
  80f88c:	d8c02015 	stw	r3,128(sp)
  80f890:	d8801f15 	stw	r2,124(sp)
  80f894:	a8bff60e 	bge	r21,r2,80f870 <__alt_data_end+0xff80f870>
  80f898:	9809883a 	mov	r4,r19
  80f89c:	b80b883a 	mov	r5,r23
  80f8a0:	b00d883a 	mov	r6,r22
  80f8a4:	08127c00 	call	8127c0 <__ssprint_r>
  80f8a8:	103ac41e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f8ac:	d8c02017 	ldw	r3,128(sp)
  80f8b0:	d8801f17 	ldw	r2,124(sp)
  80f8b4:	da000404 	addi	r8,sp,16
  80f8b8:	003fee06 	br	80f874 <__alt_data_end+0xff80f874>
  80f8bc:	db002e17 	ldw	r12,184(sp)
  80f8c0:	1805883a 	mov	r2,r3
  80f8c4:	dac02d15 	stw	r11,180(sp)
  80f8c8:	0319c83a 	sub	r12,zero,r12
  80f8cc:	db002e15 	stw	r12,184(sp)
  80f8d0:	003acf06 	br	80e410 <__alt_data_end+0xff80e410>
  80f8d4:	18800044 	addi	r2,r3,1
  80f8d8:	8c400814 	ori	r17,r17,32
  80f8dc:	1c000047 	ldb	r16,1(r3)
  80f8e0:	003a4406 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80f8e4:	d9002f17 	ldw	r4,188(sp)
  80f8e8:	b80b883a 	mov	r5,r23
  80f8ec:	b00d883a 	mov	r6,r22
  80f8f0:	08127c00 	call	8127c0 <__ssprint_r>
  80f8f4:	103ab11e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80f8f8:	d8c02017 	ldw	r3,128(sp)
  80f8fc:	da000404 	addi	r8,sp,16
  80f900:	003d8a06 	br	80ef2c <__alt_data_end+0xff80ef2c>
  80f904:	057ff7c4 	movi	r21,-33
  80f908:	00bfffc4 	movi	r2,-1
  80f90c:	856a703a 	and	r21,r16,r21
  80f910:	48807126 	beq	r9,r2,80fad8 <___svfprintf_internal_r+0x1a3c>
  80f914:	008011c4 	movi	r2,71
  80f918:	a8814d26 	beq	r21,r2,80fe50 <___svfprintf_internal_r+0x1db4>
  80f91c:	db003817 	ldw	r12,224(sp)
  80f920:	8ac04014 	ori	r11,r17,256
  80f924:	dac02d15 	stw	r11,180(sp)
  80f928:	60015616 	blt	r12,zero,80fe84 <___svfprintf_internal_r+0x1de8>
  80f92c:	dc803817 	ldw	r18,224(sp)
  80f930:	d8002a05 	stb	zero,168(sp)
  80f934:	00801984 	movi	r2,102
  80f938:	80808c26 	beq	r16,r2,80fb6c <___svfprintf_internal_r+0x1ad0>
  80f93c:	00801184 	movi	r2,70
  80f940:	80808a26 	beq	r16,r2,80fb6c <___svfprintf_internal_r+0x1ad0>
  80f944:	00801144 	movi	r2,69
  80f948:	a8815226 	beq	r21,r2,80fe94 <___svfprintf_internal_r+0x1df8>
  80f94c:	4839883a 	mov	fp,r9
  80f950:	d8802604 	addi	r2,sp,152
  80f954:	d8800115 	stw	r2,4(sp)
  80f958:	d9002f17 	ldw	r4,188(sp)
  80f95c:	d8802504 	addi	r2,sp,148
  80f960:	d9403717 	ldw	r5,220(sp)
  80f964:	d8800215 	stw	r2,8(sp)
  80f968:	d8802104 	addi	r2,sp,132
  80f96c:	df000015 	stw	fp,0(sp)
  80f970:	d8800315 	stw	r2,12(sp)
  80f974:	900d883a 	mov	r6,r18
  80f978:	01c00084 	movi	r7,2
  80f97c:	da004015 	stw	r8,256(sp)
  80f980:	da403f15 	stw	r9,252(sp)
  80f984:	0806de40 	call	806de4 <_dtoa_r>
  80f988:	d8803115 	stw	r2,196(sp)
  80f98c:	008019c4 	movi	r2,103
  80f990:	da004017 	ldw	r8,256(sp)
  80f994:	da403f17 	ldw	r9,252(sp)
  80f998:	80800226 	beq	r16,r2,80f9a4 <___svfprintf_internal_r+0x1908>
  80f99c:	008011c4 	movi	r2,71
  80f9a0:	8080841e 	bne	r16,r2,80fbb4 <___svfprintf_internal_r+0x1b18>
  80f9a4:	8880004c 	andi	r2,r17,1
  80f9a8:	10014f26 	beq	r2,zero,80fee8 <___svfprintf_internal_r+0x1e4c>
  80f9ac:	db003117 	ldw	r12,196(sp)
  80f9b0:	6715883a 	add	r10,r12,fp
  80f9b4:	d9003717 	ldw	r4,220(sp)
  80f9b8:	900b883a 	mov	r5,r18
  80f9bc:	000d883a 	mov	r6,zero
  80f9c0:	000f883a 	mov	r7,zero
  80f9c4:	da004015 	stw	r8,256(sp)
  80f9c8:	da403f15 	stw	r9,252(sp)
  80f9cc:	da803e15 	stw	r10,248(sp)
  80f9d0:	0815c480 	call	815c48 <__eqdf2>
  80f9d4:	da004017 	ldw	r8,256(sp)
  80f9d8:	da403f17 	ldw	r9,252(sp)
  80f9dc:	da803e17 	ldw	r10,248(sp)
  80f9e0:	1000d926 	beq	r2,zero,80fd48 <___svfprintf_internal_r+0x1cac>
  80f9e4:	d8802117 	ldw	r2,132(sp)
  80f9e8:	1280062e 	bgeu	r2,r10,80fa04 <___svfprintf_internal_r+0x1968>
  80f9ec:	01000c04 	movi	r4,48
  80f9f0:	10c00044 	addi	r3,r2,1
  80f9f4:	d8c02115 	stw	r3,132(sp)
  80f9f8:	11000005 	stb	r4,0(r2)
  80f9fc:	d8802117 	ldw	r2,132(sp)
  80fa00:	12bffb36 	bltu	r2,r10,80f9f0 <__alt_data_end+0xff80f9f0>
  80fa04:	db003117 	ldw	r12,196(sp)
  80fa08:	1305c83a 	sub	r2,r2,r12
  80fa0c:	d8803315 	stw	r2,204(sp)
  80fa10:	008011c4 	movi	r2,71
  80fa14:	a880b626 	beq	r21,r2,80fcf0 <___svfprintf_internal_r+0x1c54>
  80fa18:	00801944 	movi	r2,101
  80fa1c:	14017c0e 	bge	r2,r16,810010 <___svfprintf_internal_r+0x1f74>
  80fa20:	00801984 	movi	r2,102
  80fa24:	80812626 	beq	r16,r2,80fec0 <___svfprintf_internal_r+0x1e24>
  80fa28:	db002617 	ldw	r12,152(sp)
  80fa2c:	db003415 	stw	r12,208(sp)
  80fa30:	db003417 	ldw	r12,208(sp)
  80fa34:	dac03317 	ldw	r11,204(sp)
  80fa38:	62c11816 	blt	r12,r11,80fe9c <___svfprintf_internal_r+0x1e00>
  80fa3c:	8c40004c 	andi	r17,r17,1
  80fa40:	88013b1e 	bne	r17,zero,80ff30 <___svfprintf_internal_r+0x1e94>
  80fa44:	6005883a 	mov	r2,r12
  80fa48:	60012516 	blt	r12,zero,80fee0 <___svfprintf_internal_r+0x1e44>
  80fa4c:	dc803417 	ldw	r18,208(sp)
  80fa50:	df002a07 	ldb	fp,168(sp)
  80fa54:	e000b01e 	bne	fp,zero,80fd18 <___svfprintf_internal_r+0x1c7c>
  80fa58:	dc402d17 	ldw	r17,180(sp)
  80fa5c:	dd402783 	ldbu	r21,158(sp)
  80fa60:	d8802a15 	stw	r2,168(sp)
  80fa64:	dcc02d15 	stw	r19,180(sp)
  80fa68:	d8003215 	stw	zero,200(sp)
  80fa6c:	003ab706 	br	80e54c <__alt_data_end+0xff80e54c>
  80fa70:	008020b4 	movhi	r2,130
  80fa74:	10adc104 	addi	r2,r2,-18684
  80fa78:	d8803115 	stw	r2,196(sp)
  80fa7c:	003bbb06 	br	80e96c <__alt_data_end+0xff80e96c>
  80fa80:	d9002f17 	ldw	r4,188(sp)
  80fa84:	04001004 	movi	r16,64
  80fa88:	800b883a 	mov	r5,r16
  80fa8c:	08022b80 	call	8022b8 <_malloc_r>
  80fa90:	b8800015 	stw	r2,0(r23)
  80fa94:	b8800415 	stw	r2,16(r23)
  80fa98:	10015f26 	beq	r2,zero,810018 <___svfprintf_internal_r+0x1f7c>
  80fa9c:	bc000515 	stw	r16,20(r23)
  80faa0:	00399806 	br	80e104 <__alt_data_end+0xff80e104>
  80faa4:	008020b4 	movhi	r2,130
  80faa8:	10adc404 	addi	r2,r2,-18672
  80faac:	d8803115 	stw	r2,196(sp)
  80fab0:	003f0406 	br	80f6c4 <__alt_data_end+0xff80f6c4>
  80fab4:	d9002f17 	ldw	r4,188(sp)
  80fab8:	b80b883a 	mov	r5,r23
  80fabc:	b00d883a 	mov	r6,r22
  80fac0:	08127c00 	call	8127c0 <__ssprint_r>
  80fac4:	103a3d1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80fac8:	dc002617 	ldw	r16,152(sp)
  80facc:	d8c02017 	ldw	r3,128(sp)
  80fad0:	da000404 	addi	r8,sp,16
  80fad4:	003f4b06 	br	80f804 <__alt_data_end+0xff80f804>
  80fad8:	02400184 	movi	r9,6
  80fadc:	003f8f06 	br	80f91c <__alt_data_end+0xff80f91c>
  80fae0:	db002d17 	ldw	r12,180(sp)
  80fae4:	14c00017 	ldw	r19,0(r2)
  80fae8:	0039883a 	mov	fp,zero
  80faec:	63000104 	addi	r12,r12,4
  80faf0:	db002d15 	stw	r12,180(sp)
  80faf4:	003bc706 	br	80ea14 <__alt_data_end+0xff80ea14>
  80faf8:	d8c03117 	ldw	r3,196(sp)
  80fafc:	b0e5c83a 	sub	r18,r22,r3
  80fb00:	003a8d06 	br	80e538 <__alt_data_end+0xff80e538>
  80fb04:	da004015 	stw	r8,256(sp)
  80fb08:	08032200 	call	803220 <strlen>
  80fb0c:	1025883a 	mov	r18,r2
  80fb10:	da004017 	ldw	r8,256(sp)
  80fb14:	903bf20e 	bge	r18,zero,80eae0 <__alt_data_end+0xff80eae0>
  80fb18:	0005883a 	mov	r2,zero
  80fb1c:	003bf006 	br	80eae0 <__alt_data_end+0xff80eae0>
  80fb20:	d9002f17 	ldw	r4,188(sp)
  80fb24:	b80b883a 	mov	r5,r23
  80fb28:	b00d883a 	mov	r6,r22
  80fb2c:	08127c00 	call	8127c0 <__ssprint_r>
  80fb30:	103a221e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80fb34:	d8c02017 	ldw	r3,128(sp)
  80fb38:	d8801f17 	ldw	r2,124(sp)
  80fb3c:	da000404 	addi	r8,sp,16
  80fb40:	db003317 	ldw	r12,204(sp)
  80fb44:	dac03117 	ldw	r11,196(sp)
  80fb48:	10800044 	addi	r2,r2,1
  80fb4c:	1b07883a 	add	r3,r3,r12
  80fb50:	42c00015 	stw	r11,0(r8)
  80fb54:	43000115 	stw	r12,4(r8)
  80fb58:	d8c02015 	stw	r3,128(sp)
  80fb5c:	d8801f15 	stw	r2,124(sp)
  80fb60:	010001c4 	movi	r4,7
  80fb64:	20bb210e 	bge	r4,r2,80e7ec <__alt_data_end+0xff80e7ec>
  80fb68:	003da206 	br	80f1f4 <__alt_data_end+0xff80f1f4>
  80fb6c:	d8802604 	addi	r2,sp,152
  80fb70:	d8800115 	stw	r2,4(sp)
  80fb74:	d9002f17 	ldw	r4,188(sp)
  80fb78:	d8802504 	addi	r2,sp,148
  80fb7c:	d9403717 	ldw	r5,220(sp)
  80fb80:	d8800215 	stw	r2,8(sp)
  80fb84:	d8802104 	addi	r2,sp,132
  80fb88:	da400015 	stw	r9,0(sp)
  80fb8c:	d8800315 	stw	r2,12(sp)
  80fb90:	900d883a 	mov	r6,r18
  80fb94:	01c000c4 	movi	r7,3
  80fb98:	da004015 	stw	r8,256(sp)
  80fb9c:	da403f15 	stw	r9,252(sp)
  80fba0:	0806de40 	call	806de4 <_dtoa_r>
  80fba4:	da403f17 	ldw	r9,252(sp)
  80fba8:	da004017 	ldw	r8,256(sp)
  80fbac:	d8803115 	stw	r2,196(sp)
  80fbb0:	4839883a 	mov	fp,r9
  80fbb4:	dac03117 	ldw	r11,196(sp)
  80fbb8:	00801184 	movi	r2,70
  80fbbc:	5f15883a 	add	r10,r11,fp
  80fbc0:	a8bf7c1e 	bne	r21,r2,80f9b4 <__alt_data_end+0xff80f9b4>
  80fbc4:	59000007 	ldb	r4,0(r11)
  80fbc8:	00800c04 	movi	r2,48
  80fbcc:	2080c826 	beq	r4,r2,80fef0 <___svfprintf_internal_r+0x1e54>
  80fbd0:	d8c02617 	ldw	r3,152(sp)
  80fbd4:	50d5883a 	add	r10,r10,r3
  80fbd8:	003f7606 	br	80f9b4 <__alt_data_end+0xff80f9b4>
  80fbdc:	010020b4 	movhi	r4,130
  80fbe0:	212eee84 	addi	r4,r4,-17478
  80fbe4:	d9003615 	stw	r4,216(sp)
  80fbe8:	003a9706 	br	80e648 <__alt_data_end+0xff80e648>
  80fbec:	0025883a 	mov	r18,zero
  80fbf0:	003dc306 	br	80f300 <__alt_data_end+0xff80f300>
  80fbf4:	d9002f17 	ldw	r4,188(sp)
  80fbf8:	b80b883a 	mov	r5,r23
  80fbfc:	b00d883a 	mov	r6,r22
  80fc00:	08127c00 	call	8127c0 <__ssprint_r>
  80fc04:	1039ed1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80fc08:	d8c02017 	ldw	r3,128(sp)
  80fc0c:	da000404 	addi	r8,sp,16
  80fc10:	003dba06 	br	80f2fc <__alt_data_end+0xff80f2fc>
  80fc14:	d9002f17 	ldw	r4,188(sp)
  80fc18:	b80b883a 	mov	r5,r23
  80fc1c:	b00d883a 	mov	r6,r22
  80fc20:	08127c00 	call	8127c0 <__ssprint_r>
  80fc24:	1039e51e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80fc28:	d8802617 	ldw	r2,152(sp)
  80fc2c:	d8c02017 	ldw	r3,128(sp)
  80fc30:	da000404 	addi	r8,sp,16
  80fc34:	003e4106 	br	80f53c <__alt_data_end+0xff80f53c>
  80fc38:	030020b4 	movhi	r12,130
  80fc3c:	632eea84 	addi	r12,r12,-17494
  80fc40:	db002b15 	stw	r12,172(sp)
  80fc44:	dac02b17 	ldw	r11,172(sp)
  80fc48:	1c07883a 	add	r3,r3,r16
  80fc4c:	10800044 	addi	r2,r2,1
  80fc50:	42c00015 	stw	r11,0(r8)
  80fc54:	44000115 	stw	r16,4(r8)
  80fc58:	d8c02015 	stw	r3,128(sp)
  80fc5c:	d8801f15 	stw	r2,124(sp)
  80fc60:	010001c4 	movi	r4,7
  80fc64:	20bfae16 	blt	r4,r2,80fb20 <__alt_data_end+0xff80fb20>
  80fc68:	42000204 	addi	r8,r8,8
  80fc6c:	003fb406 	br	80fb40 <__alt_data_end+0xff80fb40>
  80fc70:	0021883a 	mov	r16,zero
  80fc74:	003e4306 	br	80f584 <__alt_data_end+0xff80f584>
  80fc78:	d9002f17 	ldw	r4,188(sp)
  80fc7c:	b80b883a 	mov	r5,r23
  80fc80:	b00d883a 	mov	r6,r22
  80fc84:	08127c00 	call	8127c0 <__ssprint_r>
  80fc88:	1039cc1e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80fc8c:	d8802617 	ldw	r2,152(sp)
  80fc90:	db003317 	ldw	r12,204(sp)
  80fc94:	d8c02017 	ldw	r3,128(sp)
  80fc98:	da000404 	addi	r8,sp,16
  80fc9c:	6085c83a 	sub	r2,r12,r2
  80fca0:	003e3706 	br	80f580 <__alt_data_end+0xff80f580>
  80fca4:	00800184 	movi	r2,6
  80fca8:	1240012e 	bgeu	r2,r9,80fcb0 <___svfprintf_internal_r+0x1c14>
  80fcac:	1013883a 	mov	r9,r2
  80fcb0:	4825883a 	mov	r18,r9
  80fcb4:	4805883a 	mov	r2,r9
  80fcb8:	4800a216 	blt	r9,zero,80ff44 <___svfprintf_internal_r+0x1ea8>
  80fcbc:	d8802a15 	stw	r2,168(sp)
  80fcc0:	008020b4 	movhi	r2,130
  80fcc4:	10adcf04 	addi	r2,r2,-18628
  80fcc8:	d8803115 	stw	r2,196(sp)
  80fccc:	dcc02d15 	stw	r19,180(sp)
  80fcd0:	d8003215 	stw	zero,200(sp)
  80fcd4:	d8003415 	stw	zero,208(sp)
  80fcd8:	0005883a 	mov	r2,zero
  80fcdc:	003a2206 	br	80e568 <__alt_data_end+0xff80e568>
  80fce0:	030020b4 	movhi	r12,130
  80fce4:	632eee84 	addi	r12,r12,-17478
  80fce8:	db003615 	stw	r12,216(sp)
  80fcec:	003ae506 	br	80e884 <__alt_data_end+0xff80e884>
  80fcf0:	d8c02617 	ldw	r3,152(sp)
  80fcf4:	00bfff44 	movi	r2,-3
  80fcf8:	18801516 	blt	r3,r2,80fd50 <___svfprintf_internal_r+0x1cb4>
  80fcfc:	48c01416 	blt	r9,r3,80fd50 <___svfprintf_internal_r+0x1cb4>
  80fd00:	d8c03415 	stw	r3,208(sp)
  80fd04:	040019c4 	movi	r16,103
  80fd08:	003f4906 	br	80fa30 <__alt_data_end+0xff80fa30>
  80fd0c:	05400b44 	movi	r21,45
  80fd10:	dd402785 	stb	r21,158(sp)
  80fd14:	003b1006 	br	80e958 <__alt_data_end+0xff80e958>
  80fd18:	00c00b44 	movi	r3,45
  80fd1c:	d8802a15 	stw	r2,168(sp)
  80fd20:	dc402d17 	ldw	r17,180(sp)
  80fd24:	d8c02785 	stb	r3,158(sp)
  80fd28:	dcc02d15 	stw	r19,180(sp)
  80fd2c:	d8003215 	stw	zero,200(sp)
  80fd30:	00800b44 	movi	r2,45
  80fd34:	003a0906 	br	80e55c <__alt_data_end+0xff80e55c>
  80fd38:	010020b4 	movhi	r4,130
  80fd3c:	212eea84 	addi	r4,r4,-17494
  80fd40:	d9002b15 	stw	r4,172(sp)
  80fd44:	003cc306 	br	80f054 <__alt_data_end+0xff80f054>
  80fd48:	5005883a 	mov	r2,r10
  80fd4c:	003f2d06 	br	80fa04 <__alt_data_end+0xff80fa04>
  80fd50:	843fff84 	addi	r16,r16,-2
  80fd54:	1f3fffc4 	addi	fp,r3,-1
  80fd58:	df002615 	stw	fp,152(sp)
  80fd5c:	dc0022c5 	stb	r16,139(sp)
  80fd60:	e000a016 	blt	fp,zero,80ffe4 <___svfprintf_internal_r+0x1f48>
  80fd64:	00800ac4 	movi	r2,43
  80fd68:	d8802305 	stb	r2,140(sp)
  80fd6c:	00800244 	movi	r2,9
  80fd70:	1700800e 	bge	r2,fp,80ff74 <___svfprintf_internal_r+0x1ed8>
  80fd74:	dd4022c4 	addi	r21,sp,139
  80fd78:	dc002b15 	stw	r16,172(sp)
  80fd7c:	4025883a 	mov	r18,r8
  80fd80:	a821883a 	mov	r16,r21
  80fd84:	e009883a 	mov	r4,fp
  80fd88:	01400284 	movi	r5,10
  80fd8c:	08148900 	call	814890 <__modsi3>
  80fd90:	10800c04 	addi	r2,r2,48
  80fd94:	843fffc4 	addi	r16,r16,-1
  80fd98:	e009883a 	mov	r4,fp
  80fd9c:	01400284 	movi	r5,10
  80fda0:	80800005 	stb	r2,0(r16)
  80fda4:	081483c0 	call	81483c <__divsi3>
  80fda8:	1039883a 	mov	fp,r2
  80fdac:	00800244 	movi	r2,9
  80fdb0:	173ff416 	blt	r2,fp,80fd84 <__alt_data_end+0xff80fd84>
  80fdb4:	9011883a 	mov	r8,r18
  80fdb8:	e0800c04 	addi	r2,fp,48
  80fdbc:	8025883a 	mov	r18,r16
  80fdc0:	913fffc4 	addi	r4,r18,-1
  80fdc4:	90bfffc5 	stb	r2,-1(r18)
  80fdc8:	dc002b17 	ldw	r16,172(sp)
  80fdcc:	25408e2e 	bgeu	r4,r21,810008 <___svfprintf_internal_r+0x1f6c>
  80fdd0:	d9402384 	addi	r5,sp,142
  80fdd4:	2c8bc83a 	sub	r5,r5,r18
  80fdd8:	d8c02344 	addi	r3,sp,141
  80fddc:	a94b883a 	add	r5,r21,r5
  80fde0:	00000106 	br	80fde8 <___svfprintf_internal_r+0x1d4c>
  80fde4:	20800003 	ldbu	r2,0(r4)
  80fde8:	18800005 	stb	r2,0(r3)
  80fdec:	18c00044 	addi	r3,r3,1
  80fdf0:	21000044 	addi	r4,r4,1
  80fdf4:	197ffb1e 	bne	r3,r5,80fde4 <__alt_data_end+0xff80fde4>
  80fdf8:	d8802304 	addi	r2,sp,140
  80fdfc:	1485c83a 	sub	r2,r2,r18
  80fe00:	d8c02344 	addi	r3,sp,141
  80fe04:	1885883a 	add	r2,r3,r2
  80fe08:	dac03317 	ldw	r11,204(sp)
  80fe0c:	156bc83a 	sub	r21,r2,r21
  80fe10:	dd403a15 	stw	r21,232(sp)
  80fe14:	00800044 	movi	r2,1
  80fe18:	5d65883a 	add	r18,r11,r21
  80fe1c:	12c0770e 	bge	r2,r11,80fffc <___svfprintf_internal_r+0x1f60>
  80fe20:	94800044 	addi	r18,r18,1
  80fe24:	9005883a 	mov	r2,r18
  80fe28:	90007216 	blt	r18,zero,80fff4 <___svfprintf_internal_r+0x1f58>
  80fe2c:	d8003415 	stw	zero,208(sp)
  80fe30:	003f0706 	br	80fa50 <__alt_data_end+0xff80fa50>
  80fe34:	da402a15 	stw	r9,168(sp)
  80fe38:	dd402783 	ldbu	r21,158(sp)
  80fe3c:	4825883a 	mov	r18,r9
  80fe40:	dcc02d15 	stw	r19,180(sp)
  80fe44:	d8003215 	stw	zero,200(sp)
  80fe48:	d8003415 	stw	zero,208(sp)
  80fe4c:	0039bf06 	br	80e54c <__alt_data_end+0xff80e54c>
  80fe50:	483eb21e 	bne	r9,zero,80f91c <__alt_data_end+0xff80f91c>
  80fe54:	9013883a 	mov	r9,r18
  80fe58:	003eb006 	br	80f91c <__alt_data_end+0xff80f91c>
  80fe5c:	d9002f17 	ldw	r4,188(sp)
  80fe60:	b80b883a 	mov	r5,r23
  80fe64:	b00d883a 	mov	r6,r22
  80fe68:	08127c00 	call	8127c0 <__ssprint_r>
  80fe6c:	1039531e 	bne	r2,zero,80e3bc <__alt_data_end+0xff80e3bc>
  80fe70:	dc002617 	ldw	r16,152(sp)
  80fe74:	d8c02017 	ldw	r3,128(sp)
  80fe78:	d8801f17 	ldw	r2,124(sp)
  80fe7c:	da000404 	addi	r8,sp,16
  80fe80:	003e7106 	br	80f848 <__alt_data_end+0xff80f848>
  80fe84:	00c00b44 	movi	r3,45
  80fe88:	64a0003c 	xorhi	r18,r12,32768
  80fe8c:	d8c02a05 	stb	r3,168(sp)
  80fe90:	003ea806 	br	80f934 <__alt_data_end+0xff80f934>
  80fe94:	4f000044 	addi	fp,r9,1
  80fe98:	003ead06 	br	80f950 <__alt_data_end+0xff80f950>
  80fe9c:	d8c03417 	ldw	r3,208(sp)
  80fea0:	00c0410e 	bge	zero,r3,80ffa8 <___svfprintf_internal_r+0x1f0c>
  80fea4:	04800044 	movi	r18,1
  80fea8:	dac03317 	ldw	r11,204(sp)
  80feac:	92e5883a 	add	r18,r18,r11
  80feb0:	9005883a 	mov	r2,r18
  80feb4:	903ee60e 	bge	r18,zero,80fa50 <__alt_data_end+0xff80fa50>
  80feb8:	0005883a 	mov	r2,zero
  80febc:	003ee406 	br	80fa50 <__alt_data_end+0xff80fa50>
  80fec0:	d8c02617 	ldw	r3,152(sp)
  80fec4:	d8c03415 	stw	r3,208(sp)
  80fec8:	00c0310e 	bge	zero,r3,80ff90 <___svfprintf_internal_r+0x1ef4>
  80fecc:	48001f1e 	bne	r9,zero,80ff4c <___svfprintf_internal_r+0x1eb0>
  80fed0:	8c40004c 	andi	r17,r17,1
  80fed4:	88001d1e 	bne	r17,zero,80ff4c <___svfprintf_internal_r+0x1eb0>
  80fed8:	1805883a 	mov	r2,r3
  80fedc:	183edb0e 	bge	r3,zero,80fa4c <__alt_data_end+0xff80fa4c>
  80fee0:	0005883a 	mov	r2,zero
  80fee4:	003ed906 	br	80fa4c <__alt_data_end+0xff80fa4c>
  80fee8:	d8802117 	ldw	r2,132(sp)
  80feec:	003ec506 	br	80fa04 <__alt_data_end+0xff80fa04>
  80fef0:	d9003717 	ldw	r4,220(sp)
  80fef4:	900b883a 	mov	r5,r18
  80fef8:	000d883a 	mov	r6,zero
  80fefc:	000f883a 	mov	r7,zero
  80ff00:	da004015 	stw	r8,256(sp)
  80ff04:	da403f15 	stw	r9,252(sp)
  80ff08:	da803e15 	stw	r10,248(sp)
  80ff0c:	0815c480 	call	815c48 <__eqdf2>
  80ff10:	da004017 	ldw	r8,256(sp)
  80ff14:	da403f17 	ldw	r9,252(sp)
  80ff18:	da803e17 	ldw	r10,248(sp)
  80ff1c:	103f2c26 	beq	r2,zero,80fbd0 <__alt_data_end+0xff80fbd0>
  80ff20:	00800044 	movi	r2,1
  80ff24:	1707c83a 	sub	r3,r2,fp
  80ff28:	d8c02615 	stw	r3,152(sp)
  80ff2c:	003f2906 	br	80fbd4 <__alt_data_end+0xff80fbd4>
  80ff30:	db003417 	ldw	r12,208(sp)
  80ff34:	64800044 	addi	r18,r12,1
  80ff38:	9005883a 	mov	r2,r18
  80ff3c:	903ec40e 	bge	r18,zero,80fa50 <__alt_data_end+0xff80fa50>
  80ff40:	003fdd06 	br	80feb8 <__alt_data_end+0xff80feb8>
  80ff44:	0005883a 	mov	r2,zero
  80ff48:	003f5c06 	br	80fcbc <__alt_data_end+0xff80fcbc>
  80ff4c:	dac03417 	ldw	r11,208(sp)
  80ff50:	4a400044 	addi	r9,r9,1
  80ff54:	5a65883a 	add	r18,r11,r9
  80ff58:	9005883a 	mov	r2,r18
  80ff5c:	903ebc0e 	bge	r18,zero,80fa50 <__alt_data_end+0xff80fa50>
  80ff60:	003fd506 	br	80feb8 <__alt_data_end+0xff80feb8>
  80ff64:	008020b4 	movhi	r2,130
  80ff68:	10aeea84 	addi	r2,r2,-17494
  80ff6c:	d8802b15 	stw	r2,172(sp)
  80ff70:	003d2b06 	br	80f420 <__alt_data_end+0xff80f420>
  80ff74:	00800c04 	movi	r2,48
  80ff78:	e0c00c04 	addi	r3,fp,48
  80ff7c:	d8802345 	stb	r2,141(sp)
  80ff80:	d8c02385 	stb	r3,142(sp)
  80ff84:	d88023c4 	addi	r2,sp,143
  80ff88:	dd4022c4 	addi	r21,sp,139
  80ff8c:	003f9e06 	br	80fe08 <__alt_data_end+0xff80fe08>
  80ff90:	4800081e 	bne	r9,zero,80ffb4 <___svfprintf_internal_r+0x1f18>
  80ff94:	8c40004c 	andi	r17,r17,1
  80ff98:	8800061e 	bne	r17,zero,80ffb4 <___svfprintf_internal_r+0x1f18>
  80ff9c:	00800044 	movi	r2,1
  80ffa0:	1025883a 	mov	r18,r2
  80ffa4:	003eaa06 	br	80fa50 <__alt_data_end+0xff80fa50>
  80ffa8:	04800084 	movi	r18,2
  80ffac:	90e5c83a 	sub	r18,r18,r3
  80ffb0:	003fbd06 	br	80fea8 <__alt_data_end+0xff80fea8>
  80ffb4:	4c800084 	addi	r18,r9,2
  80ffb8:	9005883a 	mov	r2,r18
  80ffbc:	903ea40e 	bge	r18,zero,80fa50 <__alt_data_end+0xff80fa50>
  80ffc0:	003fbd06 	br	80feb8 <__alt_data_end+0xff80feb8>
  80ffc4:	dac02d17 	ldw	r11,180(sp)
  80ffc8:	5a400017 	ldw	r9,0(r11)
  80ffcc:	5ac00104 	addi	r11,r11,4
  80ffd0:	dac02d15 	stw	r11,180(sp)
  80ffd4:	483e410e 	bge	r9,zero,80f8dc <__alt_data_end+0xff80f8dc>
  80ffd8:	027fffc4 	movi	r9,-1
  80ffdc:	1c000047 	ldb	r16,1(r3)
  80ffe0:	00388406 	br	80e1f4 <__alt_data_end+0xff80e1f4>
  80ffe4:	00800b44 	movi	r2,45
  80ffe8:	0739c83a 	sub	fp,zero,fp
  80ffec:	d8802305 	stb	r2,140(sp)
  80fff0:	003f5e06 	br	80fd6c <__alt_data_end+0xff80fd6c>
  80fff4:	0005883a 	mov	r2,zero
  80fff8:	003f8c06 	br	80fe2c <__alt_data_end+0xff80fe2c>
  80fffc:	88a2703a 	and	r17,r17,r2
  810000:	883f8826 	beq	r17,zero,80fe24 <__alt_data_end+0xff80fe24>
  810004:	003f8606 	br	80fe20 <__alt_data_end+0xff80fe20>
  810008:	d8802344 	addi	r2,sp,141
  81000c:	003f7e06 	br	80fe08 <__alt_data_end+0xff80fe08>
  810010:	d8c02617 	ldw	r3,152(sp)
  810014:	003f4f06 	br	80fd54 <__alt_data_end+0xff80fd54>
  810018:	dac02f17 	ldw	r11,188(sp)
  81001c:	00800304 	movi	r2,12
  810020:	58800015 	stw	r2,0(r11)
  810024:	00bfffc4 	movi	r2,-1
  810028:	0038e806 	br	80e3cc <__alt_data_end+0xff80e3cc>

0081002c <__submore>:
  81002c:	defffa04 	addi	sp,sp,-24
  810030:	dc000015 	stw	r16,0(sp)
  810034:	2821883a 	mov	r16,r5
  810038:	29400c17 	ldw	r5,48(r5)
  81003c:	dfc00515 	stw	ra,20(sp)
  810040:	dd000415 	stw	r20,16(sp)
  810044:	dcc00315 	stw	r19,12(sp)
  810048:	dc800215 	stw	r18,8(sp)
  81004c:	dc400115 	stw	r17,4(sp)
  810050:	80801004 	addi	r2,r16,64
  810054:	28801726 	beq	r5,r2,8100b4 <__submore+0x88>
  810058:	84400d17 	ldw	r17,52(r16)
  81005c:	8c67883a 	add	r19,r17,r17
  810060:	980d883a 	mov	r6,r19
  810064:	080a3400 	call	80a340 <_realloc_r>
  810068:	1025883a 	mov	r18,r2
  81006c:	10002226 	beq	r2,zero,8100f8 <__submore+0xcc>
  810070:	1469883a 	add	r20,r2,r17
  810074:	a009883a 	mov	r4,r20
  810078:	100b883a 	mov	r5,r2
  81007c:	880d883a 	mov	r6,r17
  810080:	0808f440 	call	808f44 <memcpy>
  810084:	0005883a 	mov	r2,zero
  810088:	85000015 	stw	r20,0(r16)
  81008c:	84800c15 	stw	r18,48(r16)
  810090:	84c00d15 	stw	r19,52(r16)
  810094:	dfc00517 	ldw	ra,20(sp)
  810098:	dd000417 	ldw	r20,16(sp)
  81009c:	dcc00317 	ldw	r19,12(sp)
  8100a0:	dc800217 	ldw	r18,8(sp)
  8100a4:	dc400117 	ldw	r17,4(sp)
  8100a8:	dc000017 	ldw	r16,0(sp)
  8100ac:	dec00604 	addi	sp,sp,24
  8100b0:	f800283a 	ret
  8100b4:	04410004 	movi	r17,1024
  8100b8:	880b883a 	mov	r5,r17
  8100bc:	08022b80 	call	8022b8 <_malloc_r>
  8100c0:	1007883a 	mov	r3,r2
  8100c4:	10000c26 	beq	r2,zero,8100f8 <__submore+0xcc>
  8100c8:	80801083 	ldbu	r2,66(r16)
  8100cc:	80c00c15 	stw	r3,48(r16)
  8100d0:	84400d15 	stw	r17,52(r16)
  8100d4:	1880ffc5 	stb	r2,1023(r3)
  8100d8:	81401043 	ldbu	r5,65(r16)
  8100dc:	1900ff44 	addi	r4,r3,1021
  8100e0:	0005883a 	mov	r2,zero
  8100e4:	1940ff85 	stb	r5,1022(r3)
  8100e8:	81401003 	ldbu	r5,64(r16)
  8100ec:	1940ff45 	stb	r5,1021(r3)
  8100f0:	81000015 	stw	r4,0(r16)
  8100f4:	003fe706 	br	810094 <__alt_data_end+0xff810094>
  8100f8:	00bfffc4 	movi	r2,-1
  8100fc:	003fe506 	br	810094 <__alt_data_end+0xff810094>

00810100 <_ungetc_r>:
  810100:	00bfffc4 	movi	r2,-1
  810104:	28805e26 	beq	r5,r2,810280 <_ungetc_r+0x180>
  810108:	defffc04 	addi	sp,sp,-16
  81010c:	dc800215 	stw	r18,8(sp)
  810110:	dc400115 	stw	r17,4(sp)
  810114:	dc000015 	stw	r16,0(sp)
  810118:	dfc00315 	stw	ra,12(sp)
  81011c:	2025883a 	mov	r18,r4
  810120:	3021883a 	mov	r16,r6
  810124:	2823883a 	mov	r17,r5
  810128:	20000226 	beq	r4,zero,810134 <_ungetc_r+0x34>
  81012c:	20800e17 	ldw	r2,56(r4)
  810130:	10002d26 	beq	r2,zero,8101e8 <_ungetc_r+0xe8>
  810134:	80c0030b 	ldhu	r3,12(r16)
  810138:	1888000c 	andi	r2,r3,8192
  81013c:	1000051e 	bne	r2,zero,810154 <_ungetc_r+0x54>
  810140:	81001917 	ldw	r4,100(r16)
  810144:	00b7ffc4 	movi	r2,-8193
  810148:	18c80014 	ori	r3,r3,8192
  81014c:	2084703a 	and	r2,r4,r2
  810150:	80801915 	stw	r2,100(r16)
  810154:	00bff7c4 	movi	r2,-33
  810158:	1884703a 	and	r2,r3,r2
  81015c:	8080030d 	sth	r2,12(r16)
  810160:	1900010c 	andi	r4,r3,4
  810164:	2000061e 	bne	r4,zero,810180 <_ungetc_r+0x80>
  810168:	1900040c 	andi	r4,r3,16
  81016c:	20001c26 	beq	r4,zero,8101e0 <_ungetc_r+0xe0>
  810170:	18c0020c 	andi	r3,r3,8
  810174:	1800321e 	bne	r3,zero,810240 <_ungetc_r+0x140>
  810178:	10800114 	ori	r2,r2,4
  81017c:	8080030d 	sth	r2,12(r16)
  810180:	80800c17 	ldw	r2,48(r16)
  810184:	8c403fcc 	andi	r17,r17,255
  810188:	10001926 	beq	r2,zero,8101f0 <_ungetc_r+0xf0>
  81018c:	80c00117 	ldw	r3,4(r16)
  810190:	80800d17 	ldw	r2,52(r16)
  810194:	18800e0e 	bge	r3,r2,8101d0 <_ungetc_r+0xd0>
  810198:	80c00017 	ldw	r3,0(r16)
  81019c:	8805883a 	mov	r2,r17
  8101a0:	193fffc4 	addi	r4,r3,-1
  8101a4:	81000015 	stw	r4,0(r16)
  8101a8:	1c7fffc5 	stb	r17,-1(r3)
  8101ac:	80c00117 	ldw	r3,4(r16)
  8101b0:	18c00044 	addi	r3,r3,1
  8101b4:	80c00115 	stw	r3,4(r16)
  8101b8:	dfc00317 	ldw	ra,12(sp)
  8101bc:	dc800217 	ldw	r18,8(sp)
  8101c0:	dc400117 	ldw	r17,4(sp)
  8101c4:	dc000017 	ldw	r16,0(sp)
  8101c8:	dec00404 	addi	sp,sp,16
  8101cc:	f800283a 	ret
  8101d0:	9009883a 	mov	r4,r18
  8101d4:	800b883a 	mov	r5,r16
  8101d8:	081002c0 	call	81002c <__submore>
  8101dc:	103fee26 	beq	r2,zero,810198 <__alt_data_end+0xff810198>
  8101e0:	00bfffc4 	movi	r2,-1
  8101e4:	003ff406 	br	8101b8 <__alt_data_end+0xff8101b8>
  8101e8:	08012d00 	call	8012d0 <__sinit>
  8101ec:	003fd106 	br	810134 <__alt_data_end+0xff810134>
  8101f0:	80800417 	ldw	r2,16(r16)
  8101f4:	80c00017 	ldw	r3,0(r16)
  8101f8:	10000326 	beq	r2,zero,810208 <_ungetc_r+0x108>
  8101fc:	10c0022e 	bgeu	r2,r3,810208 <_ungetc_r+0x108>
  810200:	18bfffc3 	ldbu	r2,-1(r3)
  810204:	14401826 	beq	r2,r17,810268 <_ungetc_r+0x168>
  810208:	81400117 	ldw	r5,4(r16)
  81020c:	80801084 	addi	r2,r16,66
  810210:	81001004 	addi	r4,r16,64
  810214:	80c00e15 	stw	r3,56(r16)
  810218:	80800015 	stw	r2,0(r16)
  81021c:	00c000c4 	movi	r3,3
  810220:	00800044 	movi	r2,1
  810224:	80800115 	stw	r2,4(r16)
  810228:	81400f15 	stw	r5,60(r16)
  81022c:	81000c15 	stw	r4,48(r16)
  810230:	80c00d15 	stw	r3,52(r16)
  810234:	84401085 	stb	r17,66(r16)
  810238:	8805883a 	mov	r2,r17
  81023c:	003fde06 	br	8101b8 <__alt_data_end+0xff8101b8>
  810240:	9009883a 	mov	r4,r18
  810244:	800b883a 	mov	r5,r16
  810248:	0800ef40 	call	800ef4 <_fflush_r>
  81024c:	103fe41e 	bne	r2,zero,8101e0 <__alt_data_end+0xff8101e0>
  810250:	8080030b 	ldhu	r2,12(r16)
  810254:	00fffdc4 	movi	r3,-9
  810258:	80000215 	stw	zero,8(r16)
  81025c:	1884703a 	and	r2,r3,r2
  810260:	80000615 	stw	zero,24(r16)
  810264:	003fc406 	br	810178 <__alt_data_end+0xff810178>
  810268:	81000117 	ldw	r4,4(r16)
  81026c:	18ffffc4 	addi	r3,r3,-1
  810270:	80c00015 	stw	r3,0(r16)
  810274:	20c00044 	addi	r3,r4,1
  810278:	80c00115 	stw	r3,4(r16)
  81027c:	003fce06 	br	8101b8 <__alt_data_end+0xff8101b8>
  810280:	00bfffc4 	movi	r2,-1
  810284:	f800283a 	ret

00810288 <ungetc>:
  810288:	00c020b4 	movhi	r3,130
  81028c:	18f6e204 	addi	r3,r3,-9336
  810290:	2005883a 	mov	r2,r4
  810294:	19000017 	ldw	r4,0(r3)
  810298:	280d883a 	mov	r6,r5
  81029c:	100b883a 	mov	r5,r2
  8102a0:	08101001 	jmpi	810100 <_ungetc_r>

008102a4 <__sprint_r.part.0>:
  8102a4:	28801917 	ldw	r2,100(r5)
  8102a8:	defff604 	addi	sp,sp,-40
  8102ac:	dd400515 	stw	r21,20(sp)
  8102b0:	dcc00315 	stw	r19,12(sp)
  8102b4:	dfc00915 	stw	ra,36(sp)
  8102b8:	df000815 	stw	fp,32(sp)
  8102bc:	ddc00715 	stw	r23,28(sp)
  8102c0:	dd800615 	stw	r22,24(sp)
  8102c4:	dd000415 	stw	r20,16(sp)
  8102c8:	dc800215 	stw	r18,8(sp)
  8102cc:	dc400115 	stw	r17,4(sp)
  8102d0:	dc000015 	stw	r16,0(sp)
  8102d4:	1088000c 	andi	r2,r2,8192
  8102d8:	2827883a 	mov	r19,r5
  8102dc:	302b883a 	mov	r21,r6
  8102e0:	10002d26 	beq	r2,zero,810398 <__sprint_r.part.0+0xf4>
  8102e4:	30800217 	ldw	r2,8(r6)
  8102e8:	35800017 	ldw	r22,0(r6)
  8102ec:	10002826 	beq	r2,zero,810390 <__sprint_r.part.0+0xec>
  8102f0:	2029883a 	mov	r20,r4
  8102f4:	b5c00104 	addi	r23,r22,4
  8102f8:	04bfffc4 	movi	r18,-1
  8102fc:	bc400017 	ldw	r17,0(r23)
  810300:	b4000017 	ldw	r16,0(r22)
  810304:	0039883a 	mov	fp,zero
  810308:	8822d0ba 	srli	r17,r17,2
  81030c:	04400316 	blt	zero,r17,81031c <__sprint_r.part.0+0x78>
  810310:	00001806 	br	810374 <__sprint_r.part.0+0xd0>
  810314:	84000104 	addi	r16,r16,4
  810318:	8f001526 	beq	r17,fp,810370 <__sprint_r.part.0+0xcc>
  81031c:	81400017 	ldw	r5,0(r16)
  810320:	a009883a 	mov	r4,r20
  810324:	980d883a 	mov	r6,r19
  810328:	08119800 	call	811980 <_fputwc_r>
  81032c:	e7000044 	addi	fp,fp,1
  810330:	14bff81e 	bne	r2,r18,810314 <__alt_data_end+0xff810314>
  810334:	9005883a 	mov	r2,r18
  810338:	a8000215 	stw	zero,8(r21)
  81033c:	a8000115 	stw	zero,4(r21)
  810340:	dfc00917 	ldw	ra,36(sp)
  810344:	df000817 	ldw	fp,32(sp)
  810348:	ddc00717 	ldw	r23,28(sp)
  81034c:	dd800617 	ldw	r22,24(sp)
  810350:	dd400517 	ldw	r21,20(sp)
  810354:	dd000417 	ldw	r20,16(sp)
  810358:	dcc00317 	ldw	r19,12(sp)
  81035c:	dc800217 	ldw	r18,8(sp)
  810360:	dc400117 	ldw	r17,4(sp)
  810364:	dc000017 	ldw	r16,0(sp)
  810368:	dec00a04 	addi	sp,sp,40
  81036c:	f800283a 	ret
  810370:	a8800217 	ldw	r2,8(r21)
  810374:	8c63883a 	add	r17,r17,r17
  810378:	8c63883a 	add	r17,r17,r17
  81037c:	1445c83a 	sub	r2,r2,r17
  810380:	a8800215 	stw	r2,8(r21)
  810384:	b5800204 	addi	r22,r22,8
  810388:	bdc00204 	addi	r23,r23,8
  81038c:	103fdb1e 	bne	r2,zero,8102fc <__alt_data_end+0xff8102fc>
  810390:	0005883a 	mov	r2,zero
  810394:	003fe806 	br	810338 <__alt_data_end+0xff810338>
  810398:	08085b80 	call	8085b8 <__sfvwrite_r>
  81039c:	003fe606 	br	810338 <__alt_data_end+0xff810338>

008103a0 <__sprint_r>:
  8103a0:	30c00217 	ldw	r3,8(r6)
  8103a4:	18000126 	beq	r3,zero,8103ac <__sprint_r+0xc>
  8103a8:	08102a41 	jmpi	8102a4 <__sprint_r.part.0>
  8103ac:	30000115 	stw	zero,4(r6)
  8103b0:	0005883a 	mov	r2,zero
  8103b4:	f800283a 	ret

008103b8 <___vfiprintf_internal_r>:
  8103b8:	deffca04 	addi	sp,sp,-216
  8103bc:	dd803215 	stw	r22,200(sp)
  8103c0:	dd403115 	stw	r21,196(sp)
  8103c4:	dfc03515 	stw	ra,212(sp)
  8103c8:	df003415 	stw	fp,208(sp)
  8103cc:	ddc03315 	stw	r23,204(sp)
  8103d0:	dd003015 	stw	r20,192(sp)
  8103d4:	dcc02f15 	stw	r19,188(sp)
  8103d8:	dc802e15 	stw	r18,184(sp)
  8103dc:	dc402d15 	stw	r17,180(sp)
  8103e0:	dc002c15 	stw	r16,176(sp)
  8103e4:	d9002015 	stw	r4,128(sp)
  8103e8:	d9c02215 	stw	r7,136(sp)
  8103ec:	282b883a 	mov	r21,r5
  8103f0:	302d883a 	mov	r22,r6
  8103f4:	20000226 	beq	r4,zero,810400 <___vfiprintf_internal_r+0x48>
  8103f8:	20800e17 	ldw	r2,56(r4)
  8103fc:	1001b126 	beq	r2,zero,810ac4 <___vfiprintf_internal_r+0x70c>
  810400:	a880030b 	ldhu	r2,12(r21)
  810404:	10c8000c 	andi	r3,r2,8192
  810408:	1800061e 	bne	r3,zero,810424 <___vfiprintf_internal_r+0x6c>
  81040c:	a9001917 	ldw	r4,100(r21)
  810410:	00f7ffc4 	movi	r3,-8193
  810414:	10880014 	ori	r2,r2,8192
  810418:	20c6703a 	and	r3,r4,r3
  81041c:	a880030d 	sth	r2,12(r21)
  810420:	a8c01915 	stw	r3,100(r21)
  810424:	10c0020c 	andi	r3,r2,8
  810428:	18018926 	beq	r3,zero,810a50 <___vfiprintf_internal_r+0x698>
  81042c:	a8c00417 	ldw	r3,16(r21)
  810430:	18018726 	beq	r3,zero,810a50 <___vfiprintf_internal_r+0x698>
  810434:	1080068c 	andi	r2,r2,26
  810438:	00c00284 	movi	r3,10
  81043c:	10c18c26 	beq	r2,r3,810a70 <___vfiprintf_internal_r+0x6b8>
  810440:	d8801a04 	addi	r2,sp,104
  810444:	d8c019c4 	addi	r3,sp,103
  810448:	070020b4 	movhi	fp,130
  81044c:	05c020b4 	movhi	r23,130
  810450:	10c9c83a 	sub	r4,r2,r3
  810454:	e72ef684 	addi	fp,fp,-17446
  810458:	bdeef284 	addi	r23,r23,-17462
  81045c:	d8801e15 	stw	r2,120(sp)
  810460:	d8c01f15 	stw	r3,124(sp)
  810464:	dec01a15 	stw	sp,104(sp)
  810468:	d8001c15 	stw	zero,112(sp)
  81046c:	d8001b15 	stw	zero,108(sp)
  810470:	d8002615 	stw	zero,152(sp)
  810474:	d8002315 	stw	zero,140(sp)
  810478:	d9002715 	stw	r4,156(sp)
  81047c:	d811883a 	mov	r8,sp
  810480:	dd402115 	stw	r21,132(sp)
  810484:	b021883a 	mov	r16,r22
  810488:	80800007 	ldb	r2,0(r16)
  81048c:	10037226 	beq	r2,zero,811258 <___vfiprintf_internal_r+0xea0>
  810490:	01000944 	movi	r4,37
  810494:	11037026 	beq	r2,r4,811258 <___vfiprintf_internal_r+0xea0>
  810498:	8005883a 	mov	r2,r16
  81049c:	00000106 	br	8104a4 <___vfiprintf_internal_r+0xec>
  8104a0:	19000326 	beq	r3,r4,8104b0 <___vfiprintf_internal_r+0xf8>
  8104a4:	10800044 	addi	r2,r2,1
  8104a8:	10c00007 	ldb	r3,0(r2)
  8104ac:	183ffc1e 	bne	r3,zero,8104a0 <__alt_data_end+0xff8104a0>
  8104b0:	1425c83a 	sub	r18,r2,r16
  8104b4:	1023883a 	mov	r17,r2
  8104b8:	90001026 	beq	r18,zero,8104fc <___vfiprintf_internal_r+0x144>
  8104bc:	d8c01c17 	ldw	r3,112(sp)
  8104c0:	d8801b17 	ldw	r2,108(sp)
  8104c4:	44000015 	stw	r16,0(r8)
  8104c8:	90c7883a 	add	r3,r18,r3
  8104cc:	10800044 	addi	r2,r2,1
  8104d0:	44800115 	stw	r18,4(r8)
  8104d4:	d8c01c15 	stw	r3,112(sp)
  8104d8:	d8801b15 	stw	r2,108(sp)
  8104dc:	010001c4 	movi	r4,7
  8104e0:	2080750e 	bge	r4,r2,8106b8 <___vfiprintf_internal_r+0x300>
  8104e4:	18036f1e 	bne	r3,zero,8112a4 <___vfiprintf_internal_r+0xeec>
  8104e8:	d8802317 	ldw	r2,140(sp)
  8104ec:	d8001b15 	stw	zero,108(sp)
  8104f0:	d811883a 	mov	r8,sp
  8104f4:	1485883a 	add	r2,r2,r18
  8104f8:	d8802315 	stw	r2,140(sp)
  8104fc:	88800007 	ldb	r2,0(r17)
  810500:	10041026 	beq	r2,zero,811544 <___vfiprintf_internal_r+0x118c>
  810504:	88c00047 	ldb	r3,1(r17)
  810508:	88800044 	addi	r2,r17,1
  81050c:	d8001d85 	stb	zero,118(sp)
  810510:	000f883a 	mov	r7,zero
  810514:	027fffc4 	movi	r9,-1
  810518:	0025883a 	mov	r18,zero
  81051c:	002b883a 	mov	r21,zero
  810520:	01401604 	movi	r5,88
  810524:	01800244 	movi	r6,9
  810528:	03400a84 	movi	r13,42
  81052c:	03001b04 	movi	r12,108
  810530:	14000044 	addi	r16,r2,1
  810534:	18bff804 	addi	r2,r3,-32
  810538:	28825536 	bltu	r5,r2,810e90 <___vfiprintf_internal_r+0xad8>
  81053c:	100490ba 	slli	r2,r2,2
  810540:	01002074 	movhi	r4,129
  810544:	21015504 	addi	r4,r4,1364
  810548:	1105883a 	add	r2,r2,r4
  81054c:	10800017 	ldw	r2,0(r2)
  810550:	1000683a 	jmp	r2
  810554:	00810c54 	movui	r2,1073
  810558:	00810e90 	cmplti	r2,zero,1082
  81055c:	00810e90 	cmplti	r2,zero,1082
  810560:	00810c74 	movhi	r2,1073
  810564:	00810e90 	cmplti	r2,zero,1082
  810568:	00810e90 	cmplti	r2,zero,1082
  81056c:	00810e90 	cmplti	r2,zero,1082
  810570:	00810e90 	cmplti	r2,zero,1082
  810574:	00810e90 	cmplti	r2,zero,1082
  810578:	00810e90 	cmplti	r2,zero,1082
  81057c:	00810c84 	movi	r2,1074
  810580:	00810ca4 	muli	r2,zero,1074
  810584:	00810e90 	cmplti	r2,zero,1082
  810588:	00810acc 	andi	r2,zero,1067
  81058c:	00810bb8 	rdprs	r2,zero,1070
  810590:	00810e90 	cmplti	r2,zero,1082
  810594:	00810b38 	rdprs	r2,zero,1068
  810598:	00810b48 	cmpgei	r2,zero,1069
  81059c:	00810b48 	cmpgei	r2,zero,1069
  8105a0:	00810b48 	cmpgei	r2,zero,1069
  8105a4:	00810b48 	cmpgei	r2,zero,1069
  8105a8:	00810b48 	cmpgei	r2,zero,1069
  8105ac:	00810b48 	cmpgei	r2,zero,1069
  8105b0:	00810b48 	cmpgei	r2,zero,1069
  8105b4:	00810b48 	cmpgei	r2,zero,1069
  8105b8:	00810b48 	cmpgei	r2,zero,1069
  8105bc:	00810e90 	cmplti	r2,zero,1082
  8105c0:	00810e90 	cmplti	r2,zero,1082
  8105c4:	00810e90 	cmplti	r2,zero,1082
  8105c8:	00810e90 	cmplti	r2,zero,1082
  8105cc:	00810e90 	cmplti	r2,zero,1082
  8105d0:	00810e90 	cmplti	r2,zero,1082
  8105d4:	00810e90 	cmplti	r2,zero,1082
  8105d8:	00810e90 	cmplti	r2,zero,1082
  8105dc:	00810e90 	cmplti	r2,zero,1082
  8105e0:	00810e90 	cmplti	r2,zero,1082
  8105e4:	00810b74 	movhi	r2,1069
  8105e8:	00810e90 	cmplti	r2,zero,1082
  8105ec:	00810e90 	cmplti	r2,zero,1082
  8105f0:	00810e90 	cmplti	r2,zero,1082
  8105f4:	00810e90 	cmplti	r2,zero,1082
  8105f8:	00810e90 	cmplti	r2,zero,1082
  8105fc:	00810e90 	cmplti	r2,zero,1082
  810600:	00810e90 	cmplti	r2,zero,1082
  810604:	00810e90 	cmplti	r2,zero,1082
  810608:	00810e90 	cmplti	r2,zero,1082
  81060c:	00810e90 	cmplti	r2,zero,1082
  810610:	00810700 	call	81070 <__alt_mem_sdram_0-0x77ef90>
  810614:	00810e90 	cmplti	r2,zero,1082
  810618:	00810e90 	cmplti	r2,zero,1082
  81061c:	00810e90 	cmplti	r2,zero,1082
  810620:	00810e90 	cmplti	r2,zero,1082
  810624:	00810e90 	cmplti	r2,zero,1082
  810628:	008106cc 	andi	r2,zero,1051
  81062c:	00810e90 	cmplti	r2,zero,1082
  810630:	00810e90 	cmplti	r2,zero,1082
  810634:	00810d14 	movui	r2,1076
  810638:	00810e90 	cmplti	r2,zero,1082
  81063c:	00810e90 	cmplti	r2,zero,1082
  810640:	00810e90 	cmplti	r2,zero,1082
  810644:	00810e90 	cmplti	r2,zero,1082
  810648:	00810e90 	cmplti	r2,zero,1082
  81064c:	00810e90 	cmplti	r2,zero,1082
  810650:	00810e90 	cmplti	r2,zero,1082
  810654:	00810e90 	cmplti	r2,zero,1082
  810658:	00810e90 	cmplti	r2,zero,1082
  81065c:	00810e90 	cmplti	r2,zero,1082
  810660:	00810cb4 	movhi	r2,1074
  810664:	00810ce0 	cmpeqi	r2,zero,1075
  810668:	00810e90 	cmplti	r2,zero,1082
  81066c:	00810e90 	cmplti	r2,zero,1082
  810670:	00810e90 	cmplti	r2,zero,1082
  810674:	00810dbc 	xorhi	r2,zero,1078
  810678:	00810ce0 	cmpeqi	r2,zero,1075
  81067c:	00810e90 	cmplti	r2,zero,1082
  810680:	00810e90 	cmplti	r2,zero,1082
  810684:	00810dcc 	andi	r2,zero,1079
  810688:	00810e90 	cmplti	r2,zero,1082
  81068c:	00810bf8 	rdprs	r2,zero,1071
  810690:	00810704 	movi	r2,1052
  810694:	00810de0 	cmpeqi	r2,zero,1079
  810698:	00810e20 	cmpeqi	r2,zero,1080
  81069c:	00810e90 	cmplti	r2,zero,1082
  8106a0:	00810d68 	cmpgeui	r2,zero,1077
  8106a4:	00810e90 	cmplti	r2,zero,1082
  8106a8:	008106d0 	cmplti	r2,zero,1051
  8106ac:	00810e90 	cmplti	r2,zero,1082
  8106b0:	00810e90 	cmplti	r2,zero,1082
  8106b4:	00810e30 	cmpltui	r2,zero,1080
  8106b8:	42000204 	addi	r8,r8,8
  8106bc:	d8802317 	ldw	r2,140(sp)
  8106c0:	1485883a 	add	r2,r2,r18
  8106c4:	d8802315 	stw	r2,140(sp)
  8106c8:	003f8c06 	br	8104fc <__alt_data_end+0xff8104fc>
  8106cc:	ad400414 	ori	r21,r21,16
  8106d0:	a880080c 	andi	r2,r21,32
  8106d4:	1001e61e 	bne	r2,zero,810e70 <___vfiprintf_internal_r+0xab8>
  8106d8:	a880040c 	andi	r2,r21,16
  8106dc:	10034726 	beq	r2,zero,8113fc <___vfiprintf_internal_r+0x1044>
  8106e0:	d8802217 	ldw	r2,136(sp)
  8106e4:	001b883a 	mov	r13,zero
  8106e8:	15800017 	ldw	r22,0(r2)
  8106ec:	10800104 	addi	r2,r2,4
  8106f0:	d8802215 	stw	r2,136(sp)
  8106f4:	b009883a 	mov	r4,r22
  8106f8:	00800044 	movi	r2,1
  8106fc:	00000c06 	br	810730 <___vfiprintf_internal_r+0x378>
  810700:	ad400414 	ori	r21,r21,16
  810704:	a880080c 	andi	r2,r21,32
  810708:	1001491e 	bne	r2,zero,810c30 <___vfiprintf_internal_r+0x878>
  81070c:	a880040c 	andi	r2,r21,16
  810710:	10032d26 	beq	r2,zero,8113c8 <___vfiprintf_internal_r+0x1010>
  810714:	d9002217 	ldw	r4,136(sp)
  810718:	001b883a 	mov	r13,zero
  81071c:	0005883a 	mov	r2,zero
  810720:	25800017 	ldw	r22,0(r4)
  810724:	21000104 	addi	r4,r4,4
  810728:	d9002215 	stw	r4,136(sp)
  81072c:	b009883a 	mov	r4,r22
  810730:	d8001d85 	stb	zero,118(sp)
  810734:	4827883a 	mov	r19,r9
  810738:	001d883a 	mov	r14,zero
  81073c:	48000216 	blt	r9,zero,810748 <___vfiprintf_internal_r+0x390>
  810740:	00ffdfc4 	movi	r3,-129
  810744:	a8ea703a 	and	r21,r21,r3
  810748:	2002071e 	bne	r4,zero,810f68 <___vfiprintf_internal_r+0xbb0>
  81074c:	4802ad26 	beq	r9,zero,811204 <___vfiprintf_internal_r+0xe4c>
  810750:	10803fcc 	andi	r2,r2,255
  810754:	00c00044 	movi	r3,1
  810758:	10c22b26 	beq	r2,r3,811008 <___vfiprintf_internal_r+0xc50>
  81075c:	00c00084 	movi	r3,2
  810760:	dd001a04 	addi	r20,sp,104
  810764:	10c0dd1e 	bne	r2,r3,810adc <___vfiprintf_internal_r+0x724>
  810768:	d9002617 	ldw	r4,152(sp)
  81076c:	b08003cc 	andi	r2,r22,15
  810770:	6806973a 	slli	r3,r13,28
  810774:	2085883a 	add	r2,r4,r2
  810778:	b02cd13a 	srli	r22,r22,4
  81077c:	10800003 	ldbu	r2,0(r2)
  810780:	681ad13a 	srli	r13,r13,4
  810784:	a53fffc4 	addi	r20,r20,-1
  810788:	1dacb03a 	or	r22,r3,r22
  81078c:	a0800005 	stb	r2,0(r20)
  810790:	b344b03a 	or	r2,r22,r13
  810794:	103ff51e 	bne	r2,zero,81076c <__alt_data_end+0xff81076c>
  810798:	d9001e17 	ldw	r4,120(sp)
  81079c:	2527c83a 	sub	r19,r4,r20
  8107a0:	9823883a 	mov	r17,r19
  8107a4:	9a40010e 	bge	r19,r9,8107ac <___vfiprintf_internal_r+0x3f4>
  8107a8:	4823883a 	mov	r17,r9
  8107ac:	73803fcc 	andi	r14,r14,255
  8107b0:	7380201c 	xori	r14,r14,128
  8107b4:	73bfe004 	addi	r14,r14,-128
  8107b8:	70000126 	beq	r14,zero,8107c0 <___vfiprintf_internal_r+0x408>
  8107bc:	8c400044 	addi	r17,r17,1
  8107c0:	ab40008c 	andi	r13,r21,2
  8107c4:	68000126 	beq	r13,zero,8107cc <___vfiprintf_internal_r+0x414>
  8107c8:	8c400084 	addi	r17,r17,2
  8107cc:	ad80210c 	andi	r22,r21,132
  8107d0:	b001c51e 	bne	r22,zero,810ee8 <___vfiprintf_internal_r+0xb30>
  8107d4:	9447c83a 	sub	r3,r18,r17
  8107d8:	00c1c30e 	bge	zero,r3,810ee8 <___vfiprintf_internal_r+0xb30>
  8107dc:	01c00404 	movi	r7,16
  8107e0:	d8801c17 	ldw	r2,112(sp)
  8107e4:	38c37b0e 	bge	r7,r3,8115d4 <___vfiprintf_internal_r+0x121c>
  8107e8:	010020b4 	movhi	r4,130
  8107ec:	212ef684 	addi	r4,r4,-17446
  8107f0:	dc002915 	stw	r16,164(sp)
  8107f4:	d9801b17 	ldw	r6,108(sp)
  8107f8:	d9002415 	stw	r4,144(sp)
  8107fc:	03c001c4 	movi	r15,7
  810800:	da402515 	stw	r9,148(sp)
  810804:	db402815 	stw	r13,160(sp)
  810808:	1821883a 	mov	r16,r3
  81080c:	00000506 	br	810824 <___vfiprintf_internal_r+0x46c>
  810810:	31400084 	addi	r5,r6,2
  810814:	42000204 	addi	r8,r8,8
  810818:	200d883a 	mov	r6,r4
  81081c:	843ffc04 	addi	r16,r16,-16
  810820:	3c000d0e 	bge	r7,r16,810858 <___vfiprintf_internal_r+0x4a0>
  810824:	10800404 	addi	r2,r2,16
  810828:	31000044 	addi	r4,r6,1
  81082c:	47000015 	stw	fp,0(r8)
  810830:	41c00115 	stw	r7,4(r8)
  810834:	d8801c15 	stw	r2,112(sp)
  810838:	d9001b15 	stw	r4,108(sp)
  81083c:	793ff40e 	bge	r15,r4,810810 <__alt_data_end+0xff810810>
  810840:	10019b1e 	bne	r2,zero,810eb0 <___vfiprintf_internal_r+0xaf8>
  810844:	843ffc04 	addi	r16,r16,-16
  810848:	000d883a 	mov	r6,zero
  81084c:	01400044 	movi	r5,1
  810850:	d811883a 	mov	r8,sp
  810854:	3c3ff316 	blt	r7,r16,810824 <__alt_data_end+0xff810824>
  810858:	8007883a 	mov	r3,r16
  81085c:	da402517 	ldw	r9,148(sp)
  810860:	db402817 	ldw	r13,160(sp)
  810864:	dc002917 	ldw	r16,164(sp)
  810868:	d9002417 	ldw	r4,144(sp)
  81086c:	1885883a 	add	r2,r3,r2
  810870:	40c00115 	stw	r3,4(r8)
  810874:	41000015 	stw	r4,0(r8)
  810878:	d8801c15 	stw	r2,112(sp)
  81087c:	d9401b15 	stw	r5,108(sp)
  810880:	00c001c4 	movi	r3,7
  810884:	19426a16 	blt	r3,r5,811230 <___vfiprintf_internal_r+0xe78>
  810888:	d8c01d87 	ldb	r3,118(sp)
  81088c:	42000204 	addi	r8,r8,8
  810890:	29000044 	addi	r4,r5,1
  810894:	1801991e 	bne	r3,zero,810efc <___vfiprintf_internal_r+0xb44>
  810898:	68000c26 	beq	r13,zero,8108cc <___vfiprintf_internal_r+0x514>
  81089c:	d8c01d04 	addi	r3,sp,116
  8108a0:	10800084 	addi	r2,r2,2
  8108a4:	40c00015 	stw	r3,0(r8)
  8108a8:	00c00084 	movi	r3,2
  8108ac:	40c00115 	stw	r3,4(r8)
  8108b0:	d8801c15 	stw	r2,112(sp)
  8108b4:	d9001b15 	stw	r4,108(sp)
  8108b8:	00c001c4 	movi	r3,7
  8108bc:	19024c16 	blt	r3,r4,8111f0 <___vfiprintf_internal_r+0xe38>
  8108c0:	200b883a 	mov	r5,r4
  8108c4:	42000204 	addi	r8,r8,8
  8108c8:	21000044 	addi	r4,r4,1
  8108cc:	00c02004 	movi	r3,128
  8108d0:	b0c20126 	beq	r22,r3,8110d8 <___vfiprintf_internal_r+0xd20>
  8108d4:	4cedc83a 	sub	r22,r9,r19
  8108d8:	0580230e 	bge	zero,r22,810968 <___vfiprintf_internal_r+0x5b0>
  8108dc:	01c00404 	movi	r7,16
  8108e0:	3d83140e 	bge	r7,r22,811534 <___vfiprintf_internal_r+0x117c>
  8108e4:	010020b4 	movhi	r4,130
  8108e8:	212ef284 	addi	r4,r4,-17462
  8108ec:	d9002415 	stw	r4,144(sp)
  8108f0:	034001c4 	movi	r13,7
  8108f4:	00000506 	br	81090c <___vfiprintf_internal_r+0x554>
  8108f8:	29000084 	addi	r4,r5,2
  8108fc:	42000204 	addi	r8,r8,8
  810900:	180b883a 	mov	r5,r3
  810904:	b5bffc04 	addi	r22,r22,-16
  810908:	3d800d0e 	bge	r7,r22,810940 <___vfiprintf_internal_r+0x588>
  81090c:	10800404 	addi	r2,r2,16
  810910:	28c00044 	addi	r3,r5,1
  810914:	45c00015 	stw	r23,0(r8)
  810918:	41c00115 	stw	r7,4(r8)
  81091c:	d8801c15 	stw	r2,112(sp)
  810920:	d8c01b15 	stw	r3,108(sp)
  810924:	68fff40e 	bge	r13,r3,8108f8 <__alt_data_end+0xff8108f8>
  810928:	1001811e 	bne	r2,zero,810f30 <___vfiprintf_internal_r+0xb78>
  81092c:	b5bffc04 	addi	r22,r22,-16
  810930:	01000044 	movi	r4,1
  810934:	000b883a 	mov	r5,zero
  810938:	d811883a 	mov	r8,sp
  81093c:	3dbff316 	blt	r7,r22,81090c <__alt_data_end+0xff81090c>
  810940:	d8c02417 	ldw	r3,144(sp)
  810944:	1585883a 	add	r2,r2,r22
  810948:	45800115 	stw	r22,4(r8)
  81094c:	40c00015 	stw	r3,0(r8)
  810950:	d8801c15 	stw	r2,112(sp)
  810954:	d9001b15 	stw	r4,108(sp)
  810958:	00c001c4 	movi	r3,7
  81095c:	1901d016 	blt	r3,r4,8110a0 <___vfiprintf_internal_r+0xce8>
  810960:	42000204 	addi	r8,r8,8
  810964:	21000044 	addi	r4,r4,1
  810968:	14c5883a 	add	r2,r2,r19
  81096c:	45000015 	stw	r20,0(r8)
  810970:	44c00115 	stw	r19,4(r8)
  810974:	d8801c15 	stw	r2,112(sp)
  810978:	d9001b15 	stw	r4,108(sp)
  81097c:	00c001c4 	movi	r3,7
  810980:	1901cf0e 	bge	r3,r4,8110c0 <___vfiprintf_internal_r+0xd08>
  810984:	1002361e 	bne	r2,zero,811260 <___vfiprintf_internal_r+0xea8>
  810988:	d8001b15 	stw	zero,108(sp)
  81098c:	aac0010c 	andi	r11,r21,4
  810990:	58002826 	beq	r11,zero,810a34 <___vfiprintf_internal_r+0x67c>
  810994:	9467c83a 	sub	r19,r18,r17
  810998:	d811883a 	mov	r8,sp
  81099c:	04c3340e 	bge	zero,r19,811670 <___vfiprintf_internal_r+0x12b8>
  8109a0:	01c00404 	movi	r7,16
  8109a4:	3cc31b0e 	bge	r7,r19,811614 <___vfiprintf_internal_r+0x125c>
  8109a8:	00c020b4 	movhi	r3,130
  8109ac:	18eef684 	addi	r3,r3,-17446
  8109b0:	d9001b17 	ldw	r4,108(sp)
  8109b4:	d8c02415 	stw	r3,144(sp)
  8109b8:	382b883a 	mov	r21,r7
  8109bc:	050001c4 	movi	r20,7
  8109c0:	dd802017 	ldw	r22,128(sp)
  8109c4:	00000506 	br	8109dc <___vfiprintf_internal_r+0x624>
  8109c8:	21400084 	addi	r5,r4,2
  8109cc:	42000204 	addi	r8,r8,8
  8109d0:	1809883a 	mov	r4,r3
  8109d4:	9cfffc04 	addi	r19,r19,-16
  8109d8:	acc00d0e 	bge	r21,r19,810a10 <___vfiprintf_internal_r+0x658>
  8109dc:	10800404 	addi	r2,r2,16
  8109e0:	20c00044 	addi	r3,r4,1
  8109e4:	47000015 	stw	fp,0(r8)
  8109e8:	45400115 	stw	r21,4(r8)
  8109ec:	d8801c15 	stw	r2,112(sp)
  8109f0:	d8c01b15 	stw	r3,108(sp)
  8109f4:	a0fff40e 	bge	r20,r3,8109c8 <__alt_data_end+0xff8109c8>
  8109f8:	10019f1e 	bne	r2,zero,811078 <___vfiprintf_internal_r+0xcc0>
  8109fc:	9cfffc04 	addi	r19,r19,-16
  810a00:	01400044 	movi	r5,1
  810a04:	0009883a 	mov	r4,zero
  810a08:	d811883a 	mov	r8,sp
  810a0c:	acfff316 	blt	r21,r19,8109dc <__alt_data_end+0xff8109dc>
  810a10:	d8c02417 	ldw	r3,144(sp)
  810a14:	14c5883a 	add	r2,r2,r19
  810a18:	44c00115 	stw	r19,4(r8)
  810a1c:	40c00015 	stw	r3,0(r8)
  810a20:	d8801c15 	stw	r2,112(sp)
  810a24:	d9401b15 	stw	r5,108(sp)
  810a28:	00c001c4 	movi	r3,7
  810a2c:	1941810e 	bge	r3,r5,811034 <___vfiprintf_internal_r+0xc7c>
  810a30:	10017a1e 	bne	r2,zero,81101c <___vfiprintf_internal_r+0xc64>
  810a34:	8c82a416 	blt	r17,r18,8114c8 <___vfiprintf_internal_r+0x1110>
  810a38:	d9002317 	ldw	r4,140(sp)
  810a3c:	2449883a 	add	r4,r4,r17
  810a40:	d9002315 	stw	r4,140(sp)
  810a44:	d8001b15 	stw	zero,108(sp)
  810a48:	d811883a 	mov	r8,sp
  810a4c:	003e8e06 	br	810488 <__alt_data_end+0xff810488>
  810a50:	d9002017 	ldw	r4,128(sp)
  810a54:	a80b883a 	mov	r5,r21
  810a58:	0806a3c0 	call	806a3c <__swsetup_r>
  810a5c:	10000c1e 	bne	r2,zero,810a90 <___vfiprintf_internal_r+0x6d8>
  810a60:	a880030b 	ldhu	r2,12(r21)
  810a64:	00c00284 	movi	r3,10
  810a68:	1080068c 	andi	r2,r2,26
  810a6c:	10fe741e 	bne	r2,r3,810440 <__alt_data_end+0xff810440>
  810a70:	a880038f 	ldh	r2,14(r21)
  810a74:	103e7216 	blt	r2,zero,810440 <__alt_data_end+0xff810440>
  810a78:	d9002017 	ldw	r4,128(sp)
  810a7c:	d9c02217 	ldw	r7,136(sp)
  810a80:	a80b883a 	mov	r5,r21
  810a84:	b00d883a 	mov	r6,r22
  810a88:	08116ac0 	call	8116ac <__sbprintf>
  810a8c:	00000106 	br	810a94 <___vfiprintf_internal_r+0x6dc>
  810a90:	00bfffc4 	movi	r2,-1
  810a94:	dfc03517 	ldw	ra,212(sp)
  810a98:	df003417 	ldw	fp,208(sp)
  810a9c:	ddc03317 	ldw	r23,204(sp)
  810aa0:	dd803217 	ldw	r22,200(sp)
  810aa4:	dd403117 	ldw	r21,196(sp)
  810aa8:	dd003017 	ldw	r20,192(sp)
  810aac:	dcc02f17 	ldw	r19,188(sp)
  810ab0:	dc802e17 	ldw	r18,184(sp)
  810ab4:	dc402d17 	ldw	r17,180(sp)
  810ab8:	dc002c17 	ldw	r16,176(sp)
  810abc:	dec03604 	addi	sp,sp,216
  810ac0:	f800283a 	ret
  810ac4:	08012d00 	call	8012d0 <__sinit>
  810ac8:	003e4d06 	br	810400 <__alt_data_end+0xff810400>
  810acc:	8005883a 	mov	r2,r16
  810ad0:	ad400114 	ori	r21,r21,4
  810ad4:	80c00007 	ldb	r3,0(r16)
  810ad8:	003e9506 	br	810530 <__alt_data_end+0xff810530>
  810adc:	b006d0fa 	srli	r3,r22,3
  810ae0:	6808977a 	slli	r4,r13,29
  810ae4:	681ad0fa 	srli	r13,r13,3
  810ae8:	b58001cc 	andi	r22,r22,7
  810aec:	b0800c04 	addi	r2,r22,48
  810af0:	a53fffc4 	addi	r20,r20,-1
  810af4:	20ecb03a 	or	r22,r4,r3
  810af8:	a0800005 	stb	r2,0(r20)
  810afc:	b346b03a 	or	r3,r22,r13
  810b00:	183ff61e 	bne	r3,zero,810adc <__alt_data_end+0xff810adc>
  810b04:	a8c0004c 	andi	r3,r21,1
  810b08:	a009883a 	mov	r4,r20
  810b0c:	18013b26 	beq	r3,zero,810ffc <___vfiprintf_internal_r+0xc44>
  810b10:	10803fcc 	andi	r2,r2,255
  810b14:	1080201c 	xori	r2,r2,128
  810b18:	10bfe004 	addi	r2,r2,-128
  810b1c:	00c00c04 	movi	r3,48
  810b20:	10ff1d26 	beq	r2,r3,810798 <__alt_data_end+0xff810798>
  810b24:	d8801e17 	ldw	r2,120(sp)
  810b28:	a53fffc4 	addi	r20,r20,-1
  810b2c:	20ffffc5 	stb	r3,-1(r4)
  810b30:	1527c83a 	sub	r19,r2,r20
  810b34:	003f1a06 	br	8107a0 <__alt_data_end+0xff8107a0>
  810b38:	ad402014 	ori	r21,r21,128
  810b3c:	8005883a 	mov	r2,r16
  810b40:	80c00007 	ldb	r3,0(r16)
  810b44:	003e7a06 	br	810530 <__alt_data_end+0xff810530>
  810b48:	8005883a 	mov	r2,r16
  810b4c:	0025883a 	mov	r18,zero
  810b50:	193ff404 	addi	r4,r3,-48
  810b54:	10c00007 	ldb	r3,0(r2)
  810b58:	948002a4 	muli	r18,r18,10
  810b5c:	84000044 	addi	r16,r16,1
  810b60:	8005883a 	mov	r2,r16
  810b64:	9125883a 	add	r18,r18,r4
  810b68:	193ff404 	addi	r4,r3,-48
  810b6c:	313ff92e 	bgeu	r6,r4,810b54 <__alt_data_end+0xff810b54>
  810b70:	003e7006 	br	810534 <__alt_data_end+0xff810534>
  810b74:	ad400414 	ori	r21,r21,16
  810b78:	d9c01d85 	stb	r7,118(sp)
  810b7c:	a880080c 	andi	r2,r21,32
  810b80:	d8c02217 	ldw	r3,136(sp)
  810b84:	10005a26 	beq	r2,zero,810cf0 <___vfiprintf_internal_r+0x938>
  810b88:	d9002217 	ldw	r4,136(sp)
  810b8c:	18800117 	ldw	r2,4(r3)
  810b90:	1d800017 	ldw	r22,0(r3)
  810b94:	21000204 	addi	r4,r4,8
  810b98:	d9002215 	stw	r4,136(sp)
  810b9c:	101b883a 	mov	r13,r2
  810ba0:	1001f416 	blt	r2,zero,811374 <___vfiprintf_internal_r+0xfbc>
  810ba4:	db801d83 	ldbu	r14,118(sp)
  810ba8:	4827883a 	mov	r19,r9
  810bac:	00800044 	movi	r2,1
  810bb0:	b348b03a 	or	r4,r22,r13
  810bb4:	003ee106 	br	81073c <__alt_data_end+0xff81073c>
  810bb8:	80c00007 	ldb	r3,0(r16)
  810bbc:	80800044 	addi	r2,r16,1
  810bc0:	1b42a326 	beq	r3,r13,811650 <___vfiprintf_internal_r+0x1298>
  810bc4:	193ff404 	addi	r4,r3,-48
  810bc8:	1021883a 	mov	r16,r2
  810bcc:	0013883a 	mov	r9,zero
  810bd0:	313e5836 	bltu	r6,r4,810534 <__alt_data_end+0xff810534>
  810bd4:	80c00007 	ldb	r3,0(r16)
  810bd8:	4a4002a4 	muli	r9,r9,10
  810bdc:	84000044 	addi	r16,r16,1
  810be0:	2253883a 	add	r9,r4,r9
  810be4:	193ff404 	addi	r4,r3,-48
  810be8:	313ffa2e 	bgeu	r6,r4,810bd4 <__alt_data_end+0xff810bd4>
  810bec:	483e510e 	bge	r9,zero,810534 <__alt_data_end+0xff810534>
  810bf0:	027fffc4 	movi	r9,-1
  810bf4:	003e4f06 	br	810534 <__alt_data_end+0xff810534>
  810bf8:	d9c01d85 	stb	r7,118(sp)
  810bfc:	a880080c 	andi	r2,r21,32
  810c00:	10020826 	beq	r2,zero,811424 <___vfiprintf_internal_r+0x106c>
  810c04:	d8c02217 	ldw	r3,136(sp)
  810c08:	d9002317 	ldw	r4,140(sp)
  810c0c:	18800017 	ldw	r2,0(r3)
  810c10:	2007d7fa 	srai	r3,r4,31
  810c14:	d9002217 	ldw	r4,136(sp)
  810c18:	10c00115 	stw	r3,4(r2)
  810c1c:	21000104 	addi	r4,r4,4
  810c20:	d9002215 	stw	r4,136(sp)
  810c24:	d9002317 	ldw	r4,140(sp)
  810c28:	11000015 	stw	r4,0(r2)
  810c2c:	003e1606 	br	810488 <__alt_data_end+0xff810488>
  810c30:	d8802217 	ldw	r2,136(sp)
  810c34:	d8c02217 	ldw	r3,136(sp)
  810c38:	15800017 	ldw	r22,0(r2)
  810c3c:	13400117 	ldw	r13,4(r2)
  810c40:	18c00204 	addi	r3,r3,8
  810c44:	0005883a 	mov	r2,zero
  810c48:	d8c02215 	stw	r3,136(sp)
  810c4c:	b348b03a 	or	r4,r22,r13
  810c50:	003eb706 	br	810730 <__alt_data_end+0xff810730>
  810c54:	38803fcc 	andi	r2,r7,255
  810c58:	1080201c 	xori	r2,r2,128
  810c5c:	10bfe004 	addi	r2,r2,-128
  810c60:	1001e31e 	bne	r2,zero,8113f0 <___vfiprintf_internal_r+0x1038>
  810c64:	8005883a 	mov	r2,r16
  810c68:	01c00804 	movi	r7,32
  810c6c:	80c00007 	ldb	r3,0(r16)
  810c70:	003e2f06 	br	810530 <__alt_data_end+0xff810530>
  810c74:	ad400054 	ori	r21,r21,1
  810c78:	8005883a 	mov	r2,r16
  810c7c:	80c00007 	ldb	r3,0(r16)
  810c80:	003e2b06 	br	810530 <__alt_data_end+0xff810530>
  810c84:	d8c02217 	ldw	r3,136(sp)
  810c88:	1c800017 	ldw	r18,0(r3)
  810c8c:	18c00104 	addi	r3,r3,4
  810c90:	90023816 	blt	r18,zero,811574 <___vfiprintf_internal_r+0x11bc>
  810c94:	d8c02215 	stw	r3,136(sp)
  810c98:	8005883a 	mov	r2,r16
  810c9c:	80c00007 	ldb	r3,0(r16)
  810ca0:	003e2306 	br	810530 <__alt_data_end+0xff810530>
  810ca4:	8005883a 	mov	r2,r16
  810ca8:	01c00ac4 	movi	r7,43
  810cac:	80c00007 	ldb	r3,0(r16)
  810cb0:	003e1f06 	br	810530 <__alt_data_end+0xff810530>
  810cb4:	d8c02217 	ldw	r3,136(sp)
  810cb8:	04400044 	movi	r17,1
  810cbc:	d8001d85 	stb	zero,118(sp)
  810cc0:	18800017 	ldw	r2,0(r3)
  810cc4:	18c00104 	addi	r3,r3,4
  810cc8:	d8c02215 	stw	r3,136(sp)
  810ccc:	d8801005 	stb	r2,64(sp)
  810cd0:	8827883a 	mov	r19,r17
  810cd4:	dd001004 	addi	r20,sp,64
  810cd8:	0013883a 	mov	r9,zero
  810cdc:	003eb806 	br	8107c0 <__alt_data_end+0xff8107c0>
  810ce0:	d9c01d85 	stb	r7,118(sp)
  810ce4:	a880080c 	andi	r2,r21,32
  810ce8:	d8c02217 	ldw	r3,136(sp)
  810cec:	103fa61e 	bne	r2,zero,810b88 <__alt_data_end+0xff810b88>
  810cf0:	a880040c 	andi	r2,r21,16
  810cf4:	1001dd26 	beq	r2,zero,81146c <___vfiprintf_internal_r+0x10b4>
  810cf8:	1d800017 	ldw	r22,0(r3)
  810cfc:	d8802217 	ldw	r2,136(sp)
  810d00:	b01bd7fa 	srai	r13,r22,31
  810d04:	10800104 	addi	r2,r2,4
  810d08:	d8802215 	stw	r2,136(sp)
  810d0c:	6805883a 	mov	r2,r13
  810d10:	003fa306 	br	810ba0 <__alt_data_end+0xff810ba0>
  810d14:	008020b4 	movhi	r2,130
  810d18:	10adc504 	addi	r2,r2,-18668
  810d1c:	d8802615 	stw	r2,152(sp)
  810d20:	d9c01d85 	stb	r7,118(sp)
  810d24:	a880080c 	andi	r2,r21,32
  810d28:	10004726 	beq	r2,zero,810e48 <___vfiprintf_internal_r+0xa90>
  810d2c:	d9002217 	ldw	r4,136(sp)
  810d30:	25800017 	ldw	r22,0(r4)
  810d34:	23400117 	ldw	r13,4(r4)
  810d38:	21000204 	addi	r4,r4,8
  810d3c:	d9002215 	stw	r4,136(sp)
  810d40:	a880004c 	andi	r2,r21,1
  810d44:	10014e26 	beq	r2,zero,811280 <___vfiprintf_internal_r+0xec8>
  810d48:	b348b03a 	or	r4,r22,r13
  810d4c:	20019c26 	beq	r4,zero,8113c0 <___vfiprintf_internal_r+0x1008>
  810d50:	00800c04 	movi	r2,48
  810d54:	d8801d05 	stb	r2,116(sp)
  810d58:	d8c01d45 	stb	r3,117(sp)
  810d5c:	ad400094 	ori	r21,r21,2
  810d60:	00800084 	movi	r2,2
  810d64:	003e7206 	br	810730 <__alt_data_end+0xff810730>
  810d68:	d8c02217 	ldw	r3,136(sp)
  810d6c:	d8001d85 	stb	zero,118(sp)
  810d70:	1d000017 	ldw	r20,0(r3)
  810d74:	1d800104 	addi	r22,r3,4
  810d78:	a0021c26 	beq	r20,zero,8115ec <___vfiprintf_internal_r+0x1234>
  810d7c:	a009883a 	mov	r4,r20
  810d80:	48020016 	blt	r9,zero,811584 <___vfiprintf_internal_r+0x11cc>
  810d84:	480d883a 	mov	r6,r9
  810d88:	000b883a 	mov	r5,zero
  810d8c:	da002a15 	stw	r8,168(sp)
  810d90:	da402b15 	stw	r9,172(sp)
  810d94:	0808e5c0 	call	808e5c <memchr>
  810d98:	da002a17 	ldw	r8,168(sp)
  810d9c:	da402b17 	ldw	r9,172(sp)
  810da0:	10022226 	beq	r2,zero,81162c <___vfiprintf_internal_r+0x1274>
  810da4:	1527c83a 	sub	r19,r2,r20
  810da8:	4cc1c916 	blt	r9,r19,8114d0 <___vfiprintf_internal_r+0x1118>
  810dac:	db801d83 	ldbu	r14,118(sp)
  810db0:	dd802215 	stw	r22,136(sp)
  810db4:	0013883a 	mov	r9,zero
  810db8:	003e7906 	br	8107a0 <__alt_data_end+0xff8107a0>
  810dbc:	ad401014 	ori	r21,r21,64
  810dc0:	8005883a 	mov	r2,r16
  810dc4:	80c00007 	ldb	r3,0(r16)
  810dc8:	003dd906 	br	810530 <__alt_data_end+0xff810530>
  810dcc:	80c00007 	ldb	r3,0(r16)
  810dd0:	8005883a 	mov	r2,r16
  810dd4:	1b01e326 	beq	r3,r12,811564 <___vfiprintf_internal_r+0x11ac>
  810dd8:	ad400414 	ori	r21,r21,16
  810ddc:	003dd406 	br	810530 <__alt_data_end+0xff810530>
  810de0:	d9002217 	ldw	r4,136(sp)
  810de4:	00800c04 	movi	r2,48
  810de8:	d8801d05 	stb	r2,116(sp)
  810dec:	25800017 	ldw	r22,0(r4)
  810df0:	00801e04 	movi	r2,120
  810df4:	d8801d45 	stb	r2,117(sp)
  810df8:	008020b4 	movhi	r2,130
  810dfc:	21000104 	addi	r4,r4,4
  810e00:	10adca04 	addi	r2,r2,-18648
  810e04:	d9002215 	stw	r4,136(sp)
  810e08:	d8802615 	stw	r2,152(sp)
  810e0c:	001b883a 	mov	r13,zero
  810e10:	ad400094 	ori	r21,r21,2
  810e14:	00800084 	movi	r2,2
  810e18:	b009883a 	mov	r4,r22
  810e1c:	003e4406 	br	810730 <__alt_data_end+0xff810730>
  810e20:	ad400814 	ori	r21,r21,32
  810e24:	8005883a 	mov	r2,r16
  810e28:	80c00007 	ldb	r3,0(r16)
  810e2c:	003dc006 	br	810530 <__alt_data_end+0xff810530>
  810e30:	008020b4 	movhi	r2,130
  810e34:	10adca04 	addi	r2,r2,-18648
  810e38:	d8802615 	stw	r2,152(sp)
  810e3c:	d9c01d85 	stb	r7,118(sp)
  810e40:	a880080c 	andi	r2,r21,32
  810e44:	103fb91e 	bne	r2,zero,810d2c <__alt_data_end+0xff810d2c>
  810e48:	a880040c 	andi	r2,r21,16
  810e4c:	10010f1e 	bne	r2,zero,81128c <___vfiprintf_internal_r+0xed4>
  810e50:	a880100c 	andi	r2,r21,64
  810e54:	10010d26 	beq	r2,zero,81128c <___vfiprintf_internal_r+0xed4>
  810e58:	d9002217 	ldw	r4,136(sp)
  810e5c:	001b883a 	mov	r13,zero
  810e60:	2580000b 	ldhu	r22,0(r4)
  810e64:	21000104 	addi	r4,r4,4
  810e68:	d9002215 	stw	r4,136(sp)
  810e6c:	003fb406 	br	810d40 <__alt_data_end+0xff810d40>
  810e70:	d9002217 	ldw	r4,136(sp)
  810e74:	00800044 	movi	r2,1
  810e78:	25800017 	ldw	r22,0(r4)
  810e7c:	23400117 	ldw	r13,4(r4)
  810e80:	21000204 	addi	r4,r4,8
  810e84:	d9002215 	stw	r4,136(sp)
  810e88:	b348b03a 	or	r4,r22,r13
  810e8c:	003e2806 	br	810730 <__alt_data_end+0xff810730>
  810e90:	d9c01d85 	stb	r7,118(sp)
  810e94:	1801ab26 	beq	r3,zero,811544 <___vfiprintf_internal_r+0x118c>
  810e98:	04400044 	movi	r17,1
  810e9c:	d8c01005 	stb	r3,64(sp)
  810ea0:	d8001d85 	stb	zero,118(sp)
  810ea4:	8827883a 	mov	r19,r17
  810ea8:	dd001004 	addi	r20,sp,64
  810eac:	003f8a06 	br	810cd8 <__alt_data_end+0xff810cd8>
  810eb0:	d9002017 	ldw	r4,128(sp)
  810eb4:	d9402117 	ldw	r5,132(sp)
  810eb8:	d9801a04 	addi	r6,sp,104
  810ebc:	d9c02b15 	stw	r7,172(sp)
  810ec0:	dbc02a15 	stw	r15,168(sp)
  810ec4:	08102a40 	call	8102a4 <__sprint_r.part.0>
  810ec8:	d9c02b17 	ldw	r7,172(sp)
  810ecc:	dbc02a17 	ldw	r15,168(sp)
  810ed0:	1000631e 	bne	r2,zero,811060 <___vfiprintf_internal_r+0xca8>
  810ed4:	d9801b17 	ldw	r6,108(sp)
  810ed8:	d8801c17 	ldw	r2,112(sp)
  810edc:	d811883a 	mov	r8,sp
  810ee0:	31400044 	addi	r5,r6,1
  810ee4:	003e4d06 	br	81081c <__alt_data_end+0xff81081c>
  810ee8:	d9401b17 	ldw	r5,108(sp)
  810eec:	d8801c17 	ldw	r2,112(sp)
  810ef0:	29000044 	addi	r4,r5,1
  810ef4:	d8c01d87 	ldb	r3,118(sp)
  810ef8:	183e6726 	beq	r3,zero,810898 <__alt_data_end+0xff810898>
  810efc:	00c00044 	movi	r3,1
  810f00:	d9401d84 	addi	r5,sp,118
  810f04:	10c5883a 	add	r2,r2,r3
  810f08:	41400015 	stw	r5,0(r8)
  810f0c:	40c00115 	stw	r3,4(r8)
  810f10:	d8801c15 	stw	r2,112(sp)
  810f14:	d9001b15 	stw	r4,108(sp)
  810f18:	014001c4 	movi	r5,7
  810f1c:	2900ab16 	blt	r5,r4,8111cc <___vfiprintf_internal_r+0xe14>
  810f20:	200b883a 	mov	r5,r4
  810f24:	42000204 	addi	r8,r8,8
  810f28:	21000044 	addi	r4,r4,1
  810f2c:	003e5a06 	br	810898 <__alt_data_end+0xff810898>
  810f30:	d9002017 	ldw	r4,128(sp)
  810f34:	d9402117 	ldw	r5,132(sp)
  810f38:	d9801a04 	addi	r6,sp,104
  810f3c:	d9c02b15 	stw	r7,172(sp)
  810f40:	db402a15 	stw	r13,168(sp)
  810f44:	08102a40 	call	8102a4 <__sprint_r.part.0>
  810f48:	d9c02b17 	ldw	r7,172(sp)
  810f4c:	db402a17 	ldw	r13,168(sp)
  810f50:	1000431e 	bne	r2,zero,811060 <___vfiprintf_internal_r+0xca8>
  810f54:	d9401b17 	ldw	r5,108(sp)
  810f58:	d8801c17 	ldw	r2,112(sp)
  810f5c:	d811883a 	mov	r8,sp
  810f60:	29000044 	addi	r4,r5,1
  810f64:	003e6706 	br	810904 <__alt_data_end+0xff810904>
  810f68:	10803fcc 	andi	r2,r2,255
  810f6c:	00c00044 	movi	r3,1
  810f70:	10fdfa1e 	bne	r2,r3,81075c <__alt_data_end+0xff81075c>
  810f74:	6800021e 	bne	r13,zero,810f80 <___vfiprintf_internal_r+0xbc8>
  810f78:	00800244 	movi	r2,9
  810f7c:	1580222e 	bgeu	r2,r22,811008 <___vfiprintf_internal_r+0xc50>
  810f80:	dc802415 	stw	r18,144(sp)
  810f84:	dc002515 	stw	r16,148(sp)
  810f88:	dc401a04 	addi	r17,sp,104
  810f8c:	b021883a 	mov	r16,r22
  810f90:	4827883a 	mov	r19,r9
  810f94:	4029883a 	mov	r20,r8
  810f98:	702d883a 	mov	r22,r14
  810f9c:	6825883a 	mov	r18,r13
  810fa0:	8009883a 	mov	r4,r16
  810fa4:	900b883a 	mov	r5,r18
  810fa8:	01800284 	movi	r6,10
  810fac:	000f883a 	mov	r7,zero
  810fb0:	08142400 	call	814240 <__umoddi3>
  810fb4:	10800c04 	addi	r2,r2,48
  810fb8:	8c7fffc4 	addi	r17,r17,-1
  810fbc:	8009883a 	mov	r4,r16
  810fc0:	900b883a 	mov	r5,r18
  810fc4:	01800284 	movi	r6,10
  810fc8:	000f883a 	mov	r7,zero
  810fcc:	88800005 	stb	r2,0(r17)
  810fd0:	0813c800 	call	813c80 <__udivdi3>
  810fd4:	1021883a 	mov	r16,r2
  810fd8:	10c4b03a 	or	r2,r2,r3
  810fdc:	1825883a 	mov	r18,r3
  810fe0:	103fef1e 	bne	r2,zero,810fa0 <__alt_data_end+0xff810fa0>
  810fe4:	dc802417 	ldw	r18,144(sp)
  810fe8:	dc002517 	ldw	r16,148(sp)
  810fec:	a011883a 	mov	r8,r20
  810ff0:	9813883a 	mov	r9,r19
  810ff4:	b01d883a 	mov	r14,r22
  810ff8:	8829883a 	mov	r20,r17
  810ffc:	d8c01e17 	ldw	r3,120(sp)
  811000:	1d27c83a 	sub	r19,r3,r20
  811004:	003de606 	br	8107a0 <__alt_data_end+0xff8107a0>
  811008:	b5800c04 	addi	r22,r22,48
  81100c:	dd8019c5 	stb	r22,103(sp)
  811010:	dcc02717 	ldw	r19,156(sp)
  811014:	dd0019c4 	addi	r20,sp,103
  811018:	003de106 	br	8107a0 <__alt_data_end+0xff8107a0>
  81101c:	d9002017 	ldw	r4,128(sp)
  811020:	d9402117 	ldw	r5,132(sp)
  811024:	d9801a04 	addi	r6,sp,104
  811028:	08102a40 	call	8102a4 <__sprint_r.part.0>
  81102c:	10000c1e 	bne	r2,zero,811060 <___vfiprintf_internal_r+0xca8>
  811030:	d8801c17 	ldw	r2,112(sp)
  811034:	8c80010e 	bge	r17,r18,81103c <___vfiprintf_internal_r+0xc84>
  811038:	9023883a 	mov	r17,r18
  81103c:	d8c02317 	ldw	r3,140(sp)
  811040:	1c47883a 	add	r3,r3,r17
  811044:	d8c02315 	stw	r3,140(sp)
  811048:	103e7e26 	beq	r2,zero,810a44 <__alt_data_end+0xff810a44>
  81104c:	d9002017 	ldw	r4,128(sp)
  811050:	d9402117 	ldw	r5,132(sp)
  811054:	d9801a04 	addi	r6,sp,104
  811058:	08102a40 	call	8102a4 <__sprint_r.part.0>
  81105c:	103e7926 	beq	r2,zero,810a44 <__alt_data_end+0xff810a44>
  811060:	dd402117 	ldw	r21,132(sp)
  811064:	a880030b 	ldhu	r2,12(r21)
  811068:	1080100c 	andi	r2,r2,64
  81106c:	103e881e 	bne	r2,zero,810a90 <__alt_data_end+0xff810a90>
  811070:	d8802317 	ldw	r2,140(sp)
  811074:	003e8706 	br	810a94 <__alt_data_end+0xff810a94>
  811078:	d9402117 	ldw	r5,132(sp)
  81107c:	b009883a 	mov	r4,r22
  811080:	d9801a04 	addi	r6,sp,104
  811084:	08102a40 	call	8102a4 <__sprint_r.part.0>
  811088:	103ff51e 	bne	r2,zero,811060 <__alt_data_end+0xff811060>
  81108c:	d9001b17 	ldw	r4,108(sp)
  811090:	d8801c17 	ldw	r2,112(sp)
  811094:	d811883a 	mov	r8,sp
  811098:	21400044 	addi	r5,r4,1
  81109c:	003e4d06 	br	8109d4 <__alt_data_end+0xff8109d4>
  8110a0:	1000aa1e 	bne	r2,zero,81134c <___vfiprintf_internal_r+0xf94>
  8110a4:	00c00044 	movi	r3,1
  8110a8:	9805883a 	mov	r2,r19
  8110ac:	dd000015 	stw	r20,0(sp)
  8110b0:	dcc00115 	stw	r19,4(sp)
  8110b4:	dcc01c15 	stw	r19,112(sp)
  8110b8:	d8c01b15 	stw	r3,108(sp)
  8110bc:	d811883a 	mov	r8,sp
  8110c0:	42000204 	addi	r8,r8,8
  8110c4:	aac0010c 	andi	r11,r21,4
  8110c8:	583fda26 	beq	r11,zero,811034 <__alt_data_end+0xff811034>
  8110cc:	9467c83a 	sub	r19,r18,r17
  8110d0:	04fe3316 	blt	zero,r19,8109a0 <__alt_data_end+0xff8109a0>
  8110d4:	003fd706 	br	811034 <__alt_data_end+0xff811034>
  8110d8:	946dc83a 	sub	r22,r18,r17
  8110dc:	05bdfd0e 	bge	zero,r22,8108d4 <__alt_data_end+0xff8108d4>
  8110e0:	00c020b4 	movhi	r3,130
  8110e4:	18eef284 	addi	r3,r3,-17462
  8110e8:	01c00404 	movi	r7,16
  8110ec:	d8c02415 	stw	r3,144(sp)
  8110f0:	3d81530e 	bge	r7,r22,811640 <___vfiprintf_internal_r+0x1288>
  8110f4:	8007883a 	mov	r3,r16
  8110f8:	034001c4 	movi	r13,7
  8110fc:	b021883a 	mov	r16,r22
  811100:	da402515 	stw	r9,148(sp)
  811104:	182d883a 	mov	r22,r3
  811108:	00000506 	br	811120 <___vfiprintf_internal_r+0xd68>
  81110c:	29800084 	addi	r6,r5,2
  811110:	42000204 	addi	r8,r8,8
  811114:	180b883a 	mov	r5,r3
  811118:	843ffc04 	addi	r16,r16,-16
  81111c:	3c000d0e 	bge	r7,r16,811154 <___vfiprintf_internal_r+0xd9c>
  811120:	10800404 	addi	r2,r2,16
  811124:	28c00044 	addi	r3,r5,1
  811128:	45c00015 	stw	r23,0(r8)
  81112c:	41c00115 	stw	r7,4(r8)
  811130:	d8801c15 	stw	r2,112(sp)
  811134:	d8c01b15 	stw	r3,108(sp)
  811138:	68fff40e 	bge	r13,r3,81110c <__alt_data_end+0xff81110c>
  81113c:	1000151e 	bne	r2,zero,811194 <___vfiprintf_internal_r+0xddc>
  811140:	843ffc04 	addi	r16,r16,-16
  811144:	01800044 	movi	r6,1
  811148:	000b883a 	mov	r5,zero
  81114c:	d811883a 	mov	r8,sp
  811150:	3c3ff316 	blt	r7,r16,811120 <__alt_data_end+0xff811120>
  811154:	da402517 	ldw	r9,148(sp)
  811158:	b007883a 	mov	r3,r22
  81115c:	802d883a 	mov	r22,r16
  811160:	1821883a 	mov	r16,r3
  811164:	d8c02417 	ldw	r3,144(sp)
  811168:	1585883a 	add	r2,r2,r22
  81116c:	45800115 	stw	r22,4(r8)
  811170:	40c00015 	stw	r3,0(r8)
  811174:	d8801c15 	stw	r2,112(sp)
  811178:	d9801b15 	stw	r6,108(sp)
  81117c:	00c001c4 	movi	r3,7
  811180:	19806d16 	blt	r3,r6,811338 <___vfiprintf_internal_r+0xf80>
  811184:	42000204 	addi	r8,r8,8
  811188:	31000044 	addi	r4,r6,1
  81118c:	300b883a 	mov	r5,r6
  811190:	003dd006 	br	8108d4 <__alt_data_end+0xff8108d4>
  811194:	d9002017 	ldw	r4,128(sp)
  811198:	d9402117 	ldw	r5,132(sp)
  81119c:	d9801a04 	addi	r6,sp,104
  8111a0:	d9c02b15 	stw	r7,172(sp)
  8111a4:	db402a15 	stw	r13,168(sp)
  8111a8:	08102a40 	call	8102a4 <__sprint_r.part.0>
  8111ac:	d9c02b17 	ldw	r7,172(sp)
  8111b0:	db402a17 	ldw	r13,168(sp)
  8111b4:	103faa1e 	bne	r2,zero,811060 <__alt_data_end+0xff811060>
  8111b8:	d9401b17 	ldw	r5,108(sp)
  8111bc:	d8801c17 	ldw	r2,112(sp)
  8111c0:	d811883a 	mov	r8,sp
  8111c4:	29800044 	addi	r6,r5,1
  8111c8:	003fd306 	br	811118 <__alt_data_end+0xff811118>
  8111cc:	1000401e 	bne	r2,zero,8112d0 <___vfiprintf_internal_r+0xf18>
  8111d0:	68003b26 	beq	r13,zero,8112c0 <___vfiprintf_internal_r+0xf08>
  8111d4:	d9001d04 	addi	r4,sp,116
  8111d8:	00800084 	movi	r2,2
  8111dc:	d9000015 	stw	r4,0(sp)
  8111e0:	d8800115 	stw	r2,4(sp)
  8111e4:	1809883a 	mov	r4,r3
  8111e8:	d811883a 	mov	r8,sp
  8111ec:	003db406 	br	8108c0 <__alt_data_end+0xff8108c0>
  8111f0:	1000451e 	bne	r2,zero,811308 <___vfiprintf_internal_r+0xf50>
  8111f4:	01000044 	movi	r4,1
  8111f8:	000b883a 	mov	r5,zero
  8111fc:	d811883a 	mov	r8,sp
  811200:	003db206 	br	8108cc <__alt_data_end+0xff8108cc>
  811204:	10803fcc 	andi	r2,r2,255
  811208:	1000071e 	bne	r2,zero,811228 <___vfiprintf_internal_r+0xe70>
  81120c:	a880004c 	andi	r2,r21,1
  811210:	10000526 	beq	r2,zero,811228 <___vfiprintf_internal_r+0xe70>
  811214:	00800c04 	movi	r2,48
  811218:	d88019c5 	stb	r2,103(sp)
  81121c:	dcc02717 	ldw	r19,156(sp)
  811220:	dd0019c4 	addi	r20,sp,103
  811224:	003d5e06 	br	8107a0 <__alt_data_end+0xff8107a0>
  811228:	dd001a04 	addi	r20,sp,104
  81122c:	003d5c06 	br	8107a0 <__alt_data_end+0xff8107a0>
  811230:	1000971e 	bne	r2,zero,811490 <___vfiprintf_internal_r+0x10d8>
  811234:	d8c01d87 	ldb	r3,118(sp)
  811238:	18005826 	beq	r3,zero,81139c <___vfiprintf_internal_r+0xfe4>
  81123c:	00800044 	movi	r2,1
  811240:	d8c01d84 	addi	r3,sp,118
  811244:	1009883a 	mov	r4,r2
  811248:	d8c00015 	stw	r3,0(sp)
  81124c:	d8800115 	stw	r2,4(sp)
  811250:	d811883a 	mov	r8,sp
  811254:	003f3206 	br	810f20 <__alt_data_end+0xff810f20>
  811258:	8023883a 	mov	r17,r16
  81125c:	003ca706 	br	8104fc <__alt_data_end+0xff8104fc>
  811260:	d9002017 	ldw	r4,128(sp)
  811264:	d9402117 	ldw	r5,132(sp)
  811268:	d9801a04 	addi	r6,sp,104
  81126c:	08102a40 	call	8102a4 <__sprint_r.part.0>
  811270:	103f7b1e 	bne	r2,zero,811060 <__alt_data_end+0xff811060>
  811274:	d8801c17 	ldw	r2,112(sp)
  811278:	d811883a 	mov	r8,sp
  81127c:	003f9106 	br	8110c4 <__alt_data_end+0xff8110c4>
  811280:	00800084 	movi	r2,2
  811284:	b348b03a 	or	r4,r22,r13
  811288:	003d2906 	br	810730 <__alt_data_end+0xff810730>
  81128c:	d8802217 	ldw	r2,136(sp)
  811290:	001b883a 	mov	r13,zero
  811294:	15800017 	ldw	r22,0(r2)
  811298:	10800104 	addi	r2,r2,4
  81129c:	d8802215 	stw	r2,136(sp)
  8112a0:	003ea706 	br	810d40 <__alt_data_end+0xff810d40>
  8112a4:	d9002017 	ldw	r4,128(sp)
  8112a8:	d9402117 	ldw	r5,132(sp)
  8112ac:	d9801a04 	addi	r6,sp,104
  8112b0:	08102a40 	call	8102a4 <__sprint_r.part.0>
  8112b4:	103f6a1e 	bne	r2,zero,811060 <__alt_data_end+0xff811060>
  8112b8:	d811883a 	mov	r8,sp
  8112bc:	003cff06 	br	8106bc <__alt_data_end+0xff8106bc>
  8112c0:	000b883a 	mov	r5,zero
  8112c4:	1809883a 	mov	r4,r3
  8112c8:	d811883a 	mov	r8,sp
  8112cc:	003d7f06 	br	8108cc <__alt_data_end+0xff8108cc>
  8112d0:	d9002017 	ldw	r4,128(sp)
  8112d4:	d9402117 	ldw	r5,132(sp)
  8112d8:	d9801a04 	addi	r6,sp,104
  8112dc:	da402b15 	stw	r9,172(sp)
  8112e0:	db402a15 	stw	r13,168(sp)
  8112e4:	08102a40 	call	8102a4 <__sprint_r.part.0>
  8112e8:	da402b17 	ldw	r9,172(sp)
  8112ec:	db402a17 	ldw	r13,168(sp)
  8112f0:	103f5b1e 	bne	r2,zero,811060 <__alt_data_end+0xff811060>
  8112f4:	d9401b17 	ldw	r5,108(sp)
  8112f8:	d8801c17 	ldw	r2,112(sp)
  8112fc:	d811883a 	mov	r8,sp
  811300:	29000044 	addi	r4,r5,1
  811304:	003d6406 	br	810898 <__alt_data_end+0xff810898>
  811308:	d9002017 	ldw	r4,128(sp)
  81130c:	d9402117 	ldw	r5,132(sp)
  811310:	d9801a04 	addi	r6,sp,104
  811314:	da402b15 	stw	r9,172(sp)
  811318:	08102a40 	call	8102a4 <__sprint_r.part.0>
  81131c:	da402b17 	ldw	r9,172(sp)
  811320:	103f4f1e 	bne	r2,zero,811060 <__alt_data_end+0xff811060>
  811324:	d9401b17 	ldw	r5,108(sp)
  811328:	d8801c17 	ldw	r2,112(sp)
  81132c:	d811883a 	mov	r8,sp
  811330:	29000044 	addi	r4,r5,1
  811334:	003d6506 	br	8108cc <__alt_data_end+0xff8108cc>
  811338:	10009a1e 	bne	r2,zero,8115a4 <___vfiprintf_internal_r+0x11ec>
  81133c:	01000044 	movi	r4,1
  811340:	000b883a 	mov	r5,zero
  811344:	d811883a 	mov	r8,sp
  811348:	003d6206 	br	8108d4 <__alt_data_end+0xff8108d4>
  81134c:	d9002017 	ldw	r4,128(sp)
  811350:	d9402117 	ldw	r5,132(sp)
  811354:	d9801a04 	addi	r6,sp,104
  811358:	08102a40 	call	8102a4 <__sprint_r.part.0>
  81135c:	103f401e 	bne	r2,zero,811060 <__alt_data_end+0xff811060>
  811360:	d9001b17 	ldw	r4,108(sp)
  811364:	d8801c17 	ldw	r2,112(sp)
  811368:	d811883a 	mov	r8,sp
  81136c:	21000044 	addi	r4,r4,1
  811370:	003d7d06 	br	810968 <__alt_data_end+0xff810968>
  811374:	05adc83a 	sub	r22,zero,r22
  811378:	b004c03a 	cmpne	r2,r22,zero
  81137c:	035bc83a 	sub	r13,zero,r13
  811380:	689bc83a 	sub	r13,r13,r2
  811384:	03800b44 	movi	r14,45
  811388:	db801d85 	stb	r14,118(sp)
  81138c:	4827883a 	mov	r19,r9
  811390:	00800044 	movi	r2,1
  811394:	b348b03a 	or	r4,r22,r13
  811398:	003ce806 	br	81073c <__alt_data_end+0xff81073c>
  81139c:	000b883a 	mov	r5,zero
  8113a0:	01000044 	movi	r4,1
  8113a4:	d811883a 	mov	r8,sp
  8113a8:	683d4826 	beq	r13,zero,8108cc <__alt_data_end+0xff8108cc>
  8113ac:	00800084 	movi	r2,2
  8113b0:	d8c01d04 	addi	r3,sp,116
  8113b4:	d8c00015 	stw	r3,0(sp)
  8113b8:	d8800115 	stw	r2,4(sp)
  8113bc:	003d4006 	br	8108c0 <__alt_data_end+0xff8108c0>
  8113c0:	00800084 	movi	r2,2
  8113c4:	003cda06 	br	810730 <__alt_data_end+0xff810730>
  8113c8:	a880100c 	andi	r2,r21,64
  8113cc:	10004226 	beq	r2,zero,8114d8 <___vfiprintf_internal_r+0x1120>
  8113d0:	d8802217 	ldw	r2,136(sp)
  8113d4:	001b883a 	mov	r13,zero
  8113d8:	1580000b 	ldhu	r22,0(r2)
  8113dc:	10800104 	addi	r2,r2,4
  8113e0:	d8802215 	stw	r2,136(sp)
  8113e4:	b009883a 	mov	r4,r22
  8113e8:	0005883a 	mov	r2,zero
  8113ec:	003cd006 	br	810730 <__alt_data_end+0xff810730>
  8113f0:	80c00007 	ldb	r3,0(r16)
  8113f4:	8005883a 	mov	r2,r16
  8113f8:	003c4d06 	br	810530 <__alt_data_end+0xff810530>
  8113fc:	a880100c 	andi	r2,r21,64
  811400:	10004426 	beq	r2,zero,811514 <___vfiprintf_internal_r+0x115c>
  811404:	d8c02217 	ldw	r3,136(sp)
  811408:	001b883a 	mov	r13,zero
  81140c:	00800044 	movi	r2,1
  811410:	1d80000b 	ldhu	r22,0(r3)
  811414:	18c00104 	addi	r3,r3,4
  811418:	d8c02215 	stw	r3,136(sp)
  81141c:	b009883a 	mov	r4,r22
  811420:	003cc306 	br	810730 <__alt_data_end+0xff810730>
  811424:	a880040c 	andi	r2,r21,16
  811428:	1000091e 	bne	r2,zero,811450 <___vfiprintf_internal_r+0x1098>
  81142c:	aac0100c 	andi	r11,r21,64
  811430:	58000726 	beq	r11,zero,811450 <___vfiprintf_internal_r+0x1098>
  811434:	d8c02217 	ldw	r3,136(sp)
  811438:	d9002317 	ldw	r4,140(sp)
  81143c:	18800017 	ldw	r2,0(r3)
  811440:	18c00104 	addi	r3,r3,4
  811444:	d8c02215 	stw	r3,136(sp)
  811448:	1100000d 	sth	r4,0(r2)
  81144c:	003c0e06 	br	810488 <__alt_data_end+0xff810488>
  811450:	d8c02217 	ldw	r3,136(sp)
  811454:	d9002317 	ldw	r4,140(sp)
  811458:	18800017 	ldw	r2,0(r3)
  81145c:	18c00104 	addi	r3,r3,4
  811460:	d8c02215 	stw	r3,136(sp)
  811464:	11000015 	stw	r4,0(r2)
  811468:	003c0706 	br	810488 <__alt_data_end+0xff810488>
  81146c:	a880100c 	andi	r2,r21,64
  811470:	10002126 	beq	r2,zero,8114f8 <___vfiprintf_internal_r+0x1140>
  811474:	1d80000f 	ldh	r22,0(r3)
  811478:	d8c02217 	ldw	r3,136(sp)
  81147c:	b01bd7fa 	srai	r13,r22,31
  811480:	18c00104 	addi	r3,r3,4
  811484:	d8c02215 	stw	r3,136(sp)
  811488:	6805883a 	mov	r2,r13
  81148c:	003dc406 	br	810ba0 <__alt_data_end+0xff810ba0>
  811490:	d9002017 	ldw	r4,128(sp)
  811494:	d9402117 	ldw	r5,132(sp)
  811498:	d9801a04 	addi	r6,sp,104
  81149c:	da402b15 	stw	r9,172(sp)
  8114a0:	db402a15 	stw	r13,168(sp)
  8114a4:	08102a40 	call	8102a4 <__sprint_r.part.0>
  8114a8:	da402b17 	ldw	r9,172(sp)
  8114ac:	db402a17 	ldw	r13,168(sp)
  8114b0:	103eeb1e 	bne	r2,zero,811060 <__alt_data_end+0xff811060>
  8114b4:	d9401b17 	ldw	r5,108(sp)
  8114b8:	d8801c17 	ldw	r2,112(sp)
  8114bc:	d811883a 	mov	r8,sp
  8114c0:	29000044 	addi	r4,r5,1
  8114c4:	003e8b06 	br	810ef4 <__alt_data_end+0xff810ef4>
  8114c8:	9023883a 	mov	r17,r18
  8114cc:	003d5a06 	br	810a38 <__alt_data_end+0xff810a38>
  8114d0:	4827883a 	mov	r19,r9
  8114d4:	003e3506 	br	810dac <__alt_data_end+0xff810dac>
  8114d8:	d8c02217 	ldw	r3,136(sp)
  8114dc:	001b883a 	mov	r13,zero
  8114e0:	0005883a 	mov	r2,zero
  8114e4:	1d800017 	ldw	r22,0(r3)
  8114e8:	18c00104 	addi	r3,r3,4
  8114ec:	d8c02215 	stw	r3,136(sp)
  8114f0:	b009883a 	mov	r4,r22
  8114f4:	003c8e06 	br	810730 <__alt_data_end+0xff810730>
  8114f8:	1d800017 	ldw	r22,0(r3)
  8114fc:	d9002217 	ldw	r4,136(sp)
  811500:	b01bd7fa 	srai	r13,r22,31
  811504:	21000104 	addi	r4,r4,4
  811508:	d9002215 	stw	r4,136(sp)
  81150c:	6805883a 	mov	r2,r13
  811510:	003da306 	br	810ba0 <__alt_data_end+0xff810ba0>
  811514:	d9002217 	ldw	r4,136(sp)
  811518:	001b883a 	mov	r13,zero
  81151c:	00800044 	movi	r2,1
  811520:	25800017 	ldw	r22,0(r4)
  811524:	21000104 	addi	r4,r4,4
  811528:	d9002215 	stw	r4,136(sp)
  81152c:	b009883a 	mov	r4,r22
  811530:	003c7f06 	br	810730 <__alt_data_end+0xff810730>
  811534:	00c020b4 	movhi	r3,130
  811538:	18eef284 	addi	r3,r3,-17462
  81153c:	d8c02415 	stw	r3,144(sp)
  811540:	003cff06 	br	810940 <__alt_data_end+0xff810940>
  811544:	d8801c17 	ldw	r2,112(sp)
  811548:	dd402117 	ldw	r21,132(sp)
  81154c:	103ec526 	beq	r2,zero,811064 <__alt_data_end+0xff811064>
  811550:	d9002017 	ldw	r4,128(sp)
  811554:	a80b883a 	mov	r5,r21
  811558:	d9801a04 	addi	r6,sp,104
  81155c:	08102a40 	call	8102a4 <__sprint_r.part.0>
  811560:	003ec006 	br	811064 <__alt_data_end+0xff811064>
  811564:	80800044 	addi	r2,r16,1
  811568:	ad400814 	ori	r21,r21,32
  81156c:	80c00047 	ldb	r3,1(r16)
  811570:	003bef06 	br	810530 <__alt_data_end+0xff810530>
  811574:	04a5c83a 	sub	r18,zero,r18
  811578:	8005883a 	mov	r2,r16
  81157c:	d8c02215 	stw	r3,136(sp)
  811580:	003d5306 	br	810ad0 <__alt_data_end+0xff810ad0>
  811584:	da002a15 	stw	r8,168(sp)
  811588:	08032200 	call	803220 <strlen>
  81158c:	1027883a 	mov	r19,r2
  811590:	db801d83 	ldbu	r14,118(sp)
  811594:	dd802215 	stw	r22,136(sp)
  811598:	0013883a 	mov	r9,zero
  81159c:	da002a17 	ldw	r8,168(sp)
  8115a0:	003c7f06 	br	8107a0 <__alt_data_end+0xff8107a0>
  8115a4:	d9002017 	ldw	r4,128(sp)
  8115a8:	d9402117 	ldw	r5,132(sp)
  8115ac:	d9801a04 	addi	r6,sp,104
  8115b0:	da402b15 	stw	r9,172(sp)
  8115b4:	08102a40 	call	8102a4 <__sprint_r.part.0>
  8115b8:	da402b17 	ldw	r9,172(sp)
  8115bc:	103ea81e 	bne	r2,zero,811060 <__alt_data_end+0xff811060>
  8115c0:	d9401b17 	ldw	r5,108(sp)
  8115c4:	d8801c17 	ldw	r2,112(sp)
  8115c8:	d811883a 	mov	r8,sp
  8115cc:	29000044 	addi	r4,r5,1
  8115d0:	003cc006 	br	8108d4 <__alt_data_end+0xff8108d4>
  8115d4:	d9401b17 	ldw	r5,108(sp)
  8115d8:	010020b4 	movhi	r4,130
  8115dc:	212ef684 	addi	r4,r4,-17446
  8115e0:	d9002415 	stw	r4,144(sp)
  8115e4:	29400044 	addi	r5,r5,1
  8115e8:	003c9f06 	br	810868 <__alt_data_end+0xff810868>
  8115ec:	00800184 	movi	r2,6
  8115f0:	1240012e 	bgeu	r2,r9,8115f8 <___vfiprintf_internal_r+0x1240>
  8115f4:	1013883a 	mov	r9,r2
  8115f8:	4827883a 	mov	r19,r9
  8115fc:	4823883a 	mov	r17,r9
  811600:	48001116 	blt	r9,zero,811648 <___vfiprintf_internal_r+0x1290>
  811604:	050020b4 	movhi	r20,130
  811608:	dd802215 	stw	r22,136(sp)
  81160c:	a52dcf04 	addi	r20,r20,-18628
  811610:	003db106 	br	810cd8 <__alt_data_end+0xff810cd8>
  811614:	d9401b17 	ldw	r5,108(sp)
  811618:	010020b4 	movhi	r4,130
  81161c:	212ef684 	addi	r4,r4,-17446
  811620:	d9002415 	stw	r4,144(sp)
  811624:	29400044 	addi	r5,r5,1
  811628:	003cf906 	br	810a10 <__alt_data_end+0xff810a10>
  81162c:	4827883a 	mov	r19,r9
  811630:	db801d83 	ldbu	r14,118(sp)
  811634:	dd802215 	stw	r22,136(sp)
  811638:	0013883a 	mov	r9,zero
  81163c:	003c5806 	br	8107a0 <__alt_data_end+0xff8107a0>
  811640:	200d883a 	mov	r6,r4
  811644:	003ec706 	br	811164 <__alt_data_end+0xff811164>
  811648:	0023883a 	mov	r17,zero
  81164c:	003fed06 	br	811604 <__alt_data_end+0xff811604>
  811650:	d9002217 	ldw	r4,136(sp)
  811654:	22400017 	ldw	r9,0(r4)
  811658:	20c00104 	addi	r3,r4,4
  81165c:	d8c02215 	stw	r3,136(sp)
  811660:	483fc20e 	bge	r9,zero,81156c <__alt_data_end+0xff81156c>
  811664:	027fffc4 	movi	r9,-1
  811668:	80c00047 	ldb	r3,1(r16)
  81166c:	003bb006 	br	810530 <__alt_data_end+0xff810530>
  811670:	8c80010e 	bge	r17,r18,811678 <___vfiprintf_internal_r+0x12c0>
  811674:	9023883a 	mov	r17,r18
  811678:	d8802317 	ldw	r2,140(sp)
  81167c:	1445883a 	add	r2,r2,r17
  811680:	d8802315 	stw	r2,140(sp)
  811684:	003cef06 	br	810a44 <__alt_data_end+0xff810a44>

00811688 <__vfiprintf_internal>:
  811688:	2007883a 	mov	r3,r4
  81168c:	010020b4 	movhi	r4,130
  811690:	2136e204 	addi	r4,r4,-9336
  811694:	21000017 	ldw	r4,0(r4)
  811698:	2805883a 	mov	r2,r5
  81169c:	300f883a 	mov	r7,r6
  8116a0:	180b883a 	mov	r5,r3
  8116a4:	100d883a 	mov	r6,r2
  8116a8:	08103b81 	jmpi	8103b8 <___vfiprintf_internal_r>

008116ac <__sbprintf>:
  8116ac:	2880030b 	ldhu	r2,12(r5)
  8116b0:	2ac01917 	ldw	r11,100(r5)
  8116b4:	2a80038b 	ldhu	r10,14(r5)
  8116b8:	2a400717 	ldw	r9,28(r5)
  8116bc:	2a000917 	ldw	r8,36(r5)
  8116c0:	defee204 	addi	sp,sp,-1144
  8116c4:	00c10004 	movi	r3,1024
  8116c8:	dc011a15 	stw	r16,1128(sp)
  8116cc:	10bfff4c 	andi	r2,r2,65533
  8116d0:	2821883a 	mov	r16,r5
  8116d4:	d8cb883a 	add	r5,sp,r3
  8116d8:	dc811c15 	stw	r18,1136(sp)
  8116dc:	dc411b15 	stw	r17,1132(sp)
  8116e0:	dfc11d15 	stw	ra,1140(sp)
  8116e4:	2025883a 	mov	r18,r4
  8116e8:	d881030d 	sth	r2,1036(sp)
  8116ec:	dac11915 	stw	r11,1124(sp)
  8116f0:	da81038d 	sth	r10,1038(sp)
  8116f4:	da410715 	stw	r9,1052(sp)
  8116f8:	da010915 	stw	r8,1060(sp)
  8116fc:	dec10015 	stw	sp,1024(sp)
  811700:	dec10415 	stw	sp,1040(sp)
  811704:	d8c10215 	stw	r3,1032(sp)
  811708:	d8c10515 	stw	r3,1044(sp)
  81170c:	d8010615 	stw	zero,1048(sp)
  811710:	08103b80 	call	8103b8 <___vfiprintf_internal_r>
  811714:	1023883a 	mov	r17,r2
  811718:	10000416 	blt	r2,zero,81172c <__sbprintf+0x80>
  81171c:	9009883a 	mov	r4,r18
  811720:	d9410004 	addi	r5,sp,1024
  811724:	0800ef40 	call	800ef4 <_fflush_r>
  811728:	10000d1e 	bne	r2,zero,811760 <__sbprintf+0xb4>
  81172c:	d8c1030b 	ldhu	r3,1036(sp)
  811730:	18c0100c 	andi	r3,r3,64
  811734:	18000326 	beq	r3,zero,811744 <__sbprintf+0x98>
  811738:	8080030b 	ldhu	r2,12(r16)
  81173c:	10801014 	ori	r2,r2,64
  811740:	8080030d 	sth	r2,12(r16)
  811744:	8805883a 	mov	r2,r17
  811748:	dfc11d17 	ldw	ra,1140(sp)
  81174c:	dc811c17 	ldw	r18,1136(sp)
  811750:	dc411b17 	ldw	r17,1132(sp)
  811754:	dc011a17 	ldw	r16,1128(sp)
  811758:	dec11e04 	addi	sp,sp,1144
  81175c:	f800283a 	ret
  811760:	047fffc4 	movi	r17,-1
  811764:	003ff106 	br	81172c <__alt_data_end+0xff81172c>

00811768 <__swbuf_r>:
  811768:	defffc04 	addi	sp,sp,-16
  81176c:	dc800215 	stw	r18,8(sp)
  811770:	dc400115 	stw	r17,4(sp)
  811774:	dc000015 	stw	r16,0(sp)
  811778:	dfc00315 	stw	ra,12(sp)
  81177c:	2025883a 	mov	r18,r4
  811780:	2823883a 	mov	r17,r5
  811784:	3021883a 	mov	r16,r6
  811788:	20000226 	beq	r4,zero,811794 <__swbuf_r+0x2c>
  81178c:	20800e17 	ldw	r2,56(r4)
  811790:	10004126 	beq	r2,zero,811898 <__swbuf_r+0x130>
  811794:	80c00617 	ldw	r3,24(r16)
  811798:	8180030b 	ldhu	r6,12(r16)
  81179c:	80c00215 	stw	r3,8(r16)
  8117a0:	30c0020c 	andi	r3,r6,8
  8117a4:	18003526 	beq	r3,zero,81187c <__swbuf_r+0x114>
  8117a8:	80c00417 	ldw	r3,16(r16)
  8117ac:	18003326 	beq	r3,zero,81187c <__swbuf_r+0x114>
  8117b0:	3088000c 	andi	r2,r6,8192
  8117b4:	8c403fcc 	andi	r17,r17,255
  8117b8:	10001726 	beq	r2,zero,811818 <__swbuf_r+0xb0>
  8117bc:	80800017 	ldw	r2,0(r16)
  8117c0:	81000517 	ldw	r4,20(r16)
  8117c4:	10c7c83a 	sub	r3,r2,r3
  8117c8:	19001d0e 	bge	r3,r4,811840 <__swbuf_r+0xd8>
  8117cc:	18c00044 	addi	r3,r3,1
  8117d0:	81400217 	ldw	r5,8(r16)
  8117d4:	11000044 	addi	r4,r2,1
  8117d8:	81000015 	stw	r4,0(r16)
  8117dc:	297fffc4 	addi	r5,r5,-1
  8117e0:	81400215 	stw	r5,8(r16)
  8117e4:	14400005 	stb	r17,0(r2)
  8117e8:	80800517 	ldw	r2,20(r16)
  8117ec:	10c01d26 	beq	r2,r3,811864 <__swbuf_r+0xfc>
  8117f0:	8080030b 	ldhu	r2,12(r16)
  8117f4:	1080004c 	andi	r2,r2,1
  8117f8:	1000181e 	bne	r2,zero,81185c <__swbuf_r+0xf4>
  8117fc:	8805883a 	mov	r2,r17
  811800:	dfc00317 	ldw	ra,12(sp)
  811804:	dc800217 	ldw	r18,8(sp)
  811808:	dc400117 	ldw	r17,4(sp)
  81180c:	dc000017 	ldw	r16,0(sp)
  811810:	dec00404 	addi	sp,sp,16
  811814:	f800283a 	ret
  811818:	81001917 	ldw	r4,100(r16)
  81181c:	00b7ffc4 	movi	r2,-8193
  811820:	31880014 	ori	r6,r6,8192
  811824:	2084703a 	and	r2,r4,r2
  811828:	80801915 	stw	r2,100(r16)
  81182c:	80800017 	ldw	r2,0(r16)
  811830:	81000517 	ldw	r4,20(r16)
  811834:	8180030d 	sth	r6,12(r16)
  811838:	10c7c83a 	sub	r3,r2,r3
  81183c:	193fe316 	blt	r3,r4,8117cc <__alt_data_end+0xff8117cc>
  811840:	9009883a 	mov	r4,r18
  811844:	800b883a 	mov	r5,r16
  811848:	0800ef40 	call	800ef4 <_fflush_r>
  81184c:	1000091e 	bne	r2,zero,811874 <__swbuf_r+0x10c>
  811850:	80800017 	ldw	r2,0(r16)
  811854:	00c00044 	movi	r3,1
  811858:	003fdd06 	br	8117d0 <__alt_data_end+0xff8117d0>
  81185c:	00800284 	movi	r2,10
  811860:	88bfe61e 	bne	r17,r2,8117fc <__alt_data_end+0xff8117fc>
  811864:	9009883a 	mov	r4,r18
  811868:	800b883a 	mov	r5,r16
  81186c:	0800ef40 	call	800ef4 <_fflush_r>
  811870:	103fe226 	beq	r2,zero,8117fc <__alt_data_end+0xff8117fc>
  811874:	00bfffc4 	movi	r2,-1
  811878:	003fe106 	br	811800 <__alt_data_end+0xff811800>
  81187c:	9009883a 	mov	r4,r18
  811880:	800b883a 	mov	r5,r16
  811884:	0806a3c0 	call	806a3c <__swsetup_r>
  811888:	103ffa1e 	bne	r2,zero,811874 <__alt_data_end+0xff811874>
  81188c:	8180030b 	ldhu	r6,12(r16)
  811890:	80c00417 	ldw	r3,16(r16)
  811894:	003fc606 	br	8117b0 <__alt_data_end+0xff8117b0>
  811898:	08012d00 	call	8012d0 <__sinit>
  81189c:	003fbd06 	br	811794 <__alt_data_end+0xff811794>

008118a0 <__swbuf>:
  8118a0:	00c020b4 	movhi	r3,130
  8118a4:	18f6e204 	addi	r3,r3,-9336
  8118a8:	2005883a 	mov	r2,r4
  8118ac:	19000017 	ldw	r4,0(r3)
  8118b0:	280d883a 	mov	r6,r5
  8118b4:	100b883a 	mov	r5,r2
  8118b8:	08117681 	jmpi	811768 <__swbuf_r>

008118bc <_calloc_r>:
  8118bc:	298b383a 	mul	r5,r5,r6
  8118c0:	defffe04 	addi	sp,sp,-8
  8118c4:	dc000015 	stw	r16,0(sp)
  8118c8:	dfc00115 	stw	ra,4(sp)
  8118cc:	08022b80 	call	8022b8 <_malloc_r>
  8118d0:	1021883a 	mov	r16,r2
  8118d4:	10002826 	beq	r2,zero,811978 <_calloc_r+0xbc>
  8118d8:	11bfff17 	ldw	r6,-4(r2)
  8118dc:	00bfff04 	movi	r2,-4
  8118e0:	00c00904 	movi	r3,36
  8118e4:	308c703a 	and	r6,r6,r2
  8118e8:	308d883a 	add	r6,r6,r2
  8118ec:	19801436 	bltu	r3,r6,811940 <_calloc_r+0x84>
  8118f0:	008004c4 	movi	r2,19
  8118f4:	11800936 	bltu	r2,r6,81191c <_calloc_r+0x60>
  8118f8:	8005883a 	mov	r2,r16
  8118fc:	10000015 	stw	zero,0(r2)
  811900:	10000115 	stw	zero,4(r2)
  811904:	10000215 	stw	zero,8(r2)
  811908:	8005883a 	mov	r2,r16
  81190c:	dfc00117 	ldw	ra,4(sp)
  811910:	dc000017 	ldw	r16,0(sp)
  811914:	dec00204 	addi	sp,sp,8
  811918:	f800283a 	ret
  81191c:	80000015 	stw	zero,0(r16)
  811920:	80000115 	stw	zero,4(r16)
  811924:	008006c4 	movi	r2,27
  811928:	11800d2e 	bgeu	r2,r6,811960 <_calloc_r+0xa4>
  81192c:	80000215 	stw	zero,8(r16)
  811930:	80000315 	stw	zero,12(r16)
  811934:	30c00c26 	beq	r6,r3,811968 <_calloc_r+0xac>
  811938:	80800404 	addi	r2,r16,16
  81193c:	003fef06 	br	8118fc <__alt_data_end+0xff8118fc>
  811940:	8009883a 	mov	r4,r16
  811944:	000b883a 	mov	r5,zero
  811948:	0802a600 	call	802a60 <memset>
  81194c:	8005883a 	mov	r2,r16
  811950:	dfc00117 	ldw	ra,4(sp)
  811954:	dc000017 	ldw	r16,0(sp)
  811958:	dec00204 	addi	sp,sp,8
  81195c:	f800283a 	ret
  811960:	80800204 	addi	r2,r16,8
  811964:	003fe506 	br	8118fc <__alt_data_end+0xff8118fc>
  811968:	80000415 	stw	zero,16(r16)
  81196c:	80800604 	addi	r2,r16,24
  811970:	80000515 	stw	zero,20(r16)
  811974:	003fe106 	br	8118fc <__alt_data_end+0xff8118fc>
  811978:	0005883a 	mov	r2,zero
  81197c:	003fe306 	br	81190c <__alt_data_end+0xff81190c>

00811980 <_fputwc_r>:
  811980:	3080030b 	ldhu	r2,12(r6)
  811984:	defff804 	addi	sp,sp,-32
  811988:	dcc00415 	stw	r19,16(sp)
  81198c:	dc800315 	stw	r18,12(sp)
  811990:	dc000115 	stw	r16,4(sp)
  811994:	dfc00715 	stw	ra,28(sp)
  811998:	dd400615 	stw	r21,24(sp)
  81199c:	dd000515 	stw	r20,20(sp)
  8119a0:	dc400215 	stw	r17,8(sp)
  8119a4:	10c8000c 	andi	r3,r2,8192
  8119a8:	3021883a 	mov	r16,r6
  8119ac:	2027883a 	mov	r19,r4
  8119b0:	2825883a 	mov	r18,r5
  8119b4:	1800051e 	bne	r3,zero,8119cc <_fputwc_r+0x4c>
  8119b8:	30c01917 	ldw	r3,100(r6)
  8119bc:	10880014 	ori	r2,r2,8192
  8119c0:	3080030d 	sth	r2,12(r6)
  8119c4:	18880014 	ori	r2,r3,8192
  8119c8:	30801915 	stw	r2,100(r6)
  8119cc:	0808b840 	call	808b84 <__locale_mb_cur_max>
  8119d0:	00c00044 	movi	r3,1
  8119d4:	10c03e26 	beq	r2,r3,811ad0 <_fputwc_r+0x150>
  8119d8:	9809883a 	mov	r4,r19
  8119dc:	d80b883a 	mov	r5,sp
  8119e0:	900d883a 	mov	r6,r18
  8119e4:	81c01704 	addi	r7,r16,92
  8119e8:	08139c40 	call	8139c4 <_wcrtomb_r>
  8119ec:	1029883a 	mov	r20,r2
  8119f0:	00bfffc4 	movi	r2,-1
  8119f4:	a0802026 	beq	r20,r2,811a78 <_fputwc_r+0xf8>
  8119f8:	d9400003 	ldbu	r5,0(sp)
  8119fc:	a0001c26 	beq	r20,zero,811a70 <_fputwc_r+0xf0>
  811a00:	0023883a 	mov	r17,zero
  811a04:	05400284 	movi	r21,10
  811a08:	00000906 	br	811a30 <_fputwc_r+0xb0>
  811a0c:	80800017 	ldw	r2,0(r16)
  811a10:	11400005 	stb	r5,0(r2)
  811a14:	80c00017 	ldw	r3,0(r16)
  811a18:	18c00044 	addi	r3,r3,1
  811a1c:	80c00015 	stw	r3,0(r16)
  811a20:	8c400044 	addi	r17,r17,1
  811a24:	dc45883a 	add	r2,sp,r17
  811a28:	8d00112e 	bgeu	r17,r20,811a70 <_fputwc_r+0xf0>
  811a2c:	11400003 	ldbu	r5,0(r2)
  811a30:	80c00217 	ldw	r3,8(r16)
  811a34:	18ffffc4 	addi	r3,r3,-1
  811a38:	80c00215 	stw	r3,8(r16)
  811a3c:	183ff30e 	bge	r3,zero,811a0c <__alt_data_end+0xff811a0c>
  811a40:	80800617 	ldw	r2,24(r16)
  811a44:	18801916 	blt	r3,r2,811aac <_fputwc_r+0x12c>
  811a48:	80800017 	ldw	r2,0(r16)
  811a4c:	11400005 	stb	r5,0(r2)
  811a50:	80800017 	ldw	r2,0(r16)
  811a54:	10c00003 	ldbu	r3,0(r2)
  811a58:	10800044 	addi	r2,r2,1
  811a5c:	1d402326 	beq	r3,r21,811aec <_fputwc_r+0x16c>
  811a60:	80800015 	stw	r2,0(r16)
  811a64:	8c400044 	addi	r17,r17,1
  811a68:	dc45883a 	add	r2,sp,r17
  811a6c:	8d3fef36 	bltu	r17,r20,811a2c <__alt_data_end+0xff811a2c>
  811a70:	9005883a 	mov	r2,r18
  811a74:	00000406 	br	811a88 <_fputwc_r+0x108>
  811a78:	80c0030b 	ldhu	r3,12(r16)
  811a7c:	a005883a 	mov	r2,r20
  811a80:	18c01014 	ori	r3,r3,64
  811a84:	80c0030d 	sth	r3,12(r16)
  811a88:	dfc00717 	ldw	ra,28(sp)
  811a8c:	dd400617 	ldw	r21,24(sp)
  811a90:	dd000517 	ldw	r20,20(sp)
  811a94:	dcc00417 	ldw	r19,16(sp)
  811a98:	dc800317 	ldw	r18,12(sp)
  811a9c:	dc400217 	ldw	r17,8(sp)
  811aa0:	dc000117 	ldw	r16,4(sp)
  811aa4:	dec00804 	addi	sp,sp,32
  811aa8:	f800283a 	ret
  811aac:	9809883a 	mov	r4,r19
  811ab0:	29403fcc 	andi	r5,r5,255
  811ab4:	800d883a 	mov	r6,r16
  811ab8:	08117680 	call	811768 <__swbuf_r>
  811abc:	10bfffe0 	cmpeqi	r2,r2,-1
  811ac0:	10803fcc 	andi	r2,r2,255
  811ac4:	103fd626 	beq	r2,zero,811a20 <__alt_data_end+0xff811a20>
  811ac8:	00bfffc4 	movi	r2,-1
  811acc:	003fee06 	br	811a88 <__alt_data_end+0xff811a88>
  811ad0:	90ffffc4 	addi	r3,r18,-1
  811ad4:	01003f84 	movi	r4,254
  811ad8:	20ffbf36 	bltu	r4,r3,8119d8 <__alt_data_end+0xff8119d8>
  811adc:	900b883a 	mov	r5,r18
  811ae0:	dc800005 	stb	r18,0(sp)
  811ae4:	1029883a 	mov	r20,r2
  811ae8:	003fc506 	br	811a00 <__alt_data_end+0xff811a00>
  811aec:	9809883a 	mov	r4,r19
  811af0:	a80b883a 	mov	r5,r21
  811af4:	800d883a 	mov	r6,r16
  811af8:	08117680 	call	811768 <__swbuf_r>
  811afc:	10bfffe0 	cmpeqi	r2,r2,-1
  811b00:	003fef06 	br	811ac0 <__alt_data_end+0xff811ac0>

00811b04 <fputwc>:
  811b04:	008020b4 	movhi	r2,130
  811b08:	defffc04 	addi	sp,sp,-16
  811b0c:	10b6e204 	addi	r2,r2,-9336
  811b10:	dc000115 	stw	r16,4(sp)
  811b14:	14000017 	ldw	r16,0(r2)
  811b18:	dc400215 	stw	r17,8(sp)
  811b1c:	dfc00315 	stw	ra,12(sp)
  811b20:	2023883a 	mov	r17,r4
  811b24:	280d883a 	mov	r6,r5
  811b28:	80000626 	beq	r16,zero,811b44 <fputwc+0x40>
  811b2c:	80800e17 	ldw	r2,56(r16)
  811b30:	1000041e 	bne	r2,zero,811b44 <fputwc+0x40>
  811b34:	8009883a 	mov	r4,r16
  811b38:	d9400015 	stw	r5,0(sp)
  811b3c:	08012d00 	call	8012d0 <__sinit>
  811b40:	d9800017 	ldw	r6,0(sp)
  811b44:	8009883a 	mov	r4,r16
  811b48:	880b883a 	mov	r5,r17
  811b4c:	dfc00317 	ldw	ra,12(sp)
  811b50:	dc400217 	ldw	r17,8(sp)
  811b54:	dc000117 	ldw	r16,4(sp)
  811b58:	dec00404 	addi	sp,sp,16
  811b5c:	08119801 	jmpi	811980 <_fputwc_r>

00811b60 <rshift>:
  811b60:	2807d17a 	srai	r3,r5,5
  811b64:	20800417 	ldw	r2,16(r4)
  811b68:	22400504 	addi	r9,r4,20
  811b6c:	1880250e 	bge	r3,r2,811c04 <rshift+0xa4>
  811b70:	1085883a 	add	r2,r2,r2
  811b74:	18c7883a 	add	r3,r3,r3
  811b78:	1085883a 	add	r2,r2,r2
  811b7c:	18c7883a 	add	r3,r3,r3
  811b80:	294007cc 	andi	r5,r5,31
  811b84:	4885883a 	add	r2,r9,r2
  811b88:	48c7883a 	add	r3,r9,r3
  811b8c:	28002026 	beq	r5,zero,811c10 <rshift+0xb0>
  811b90:	19800017 	ldw	r6,0(r3)
  811b94:	02c00804 	movi	r11,32
  811b98:	19c00104 	addi	r7,r3,4
  811b9c:	5957c83a 	sub	r11,r11,r5
  811ba0:	3150d83a 	srl	r8,r6,r5
  811ba4:	38802c2e 	bgeu	r7,r2,811c58 <rshift+0xf8>
  811ba8:	4815883a 	mov	r10,r9
  811bac:	39800017 	ldw	r6,0(r7)
  811bb0:	52800104 	addi	r10,r10,4
  811bb4:	39c00104 	addi	r7,r7,4
  811bb8:	32cc983a 	sll	r6,r6,r11
  811bbc:	418cb03a 	or	r6,r8,r6
  811bc0:	51bfff15 	stw	r6,-4(r10)
  811bc4:	39bfff17 	ldw	r6,-4(r7)
  811bc8:	3150d83a 	srl	r8,r6,r5
  811bcc:	38bff736 	bltu	r7,r2,811bac <__alt_data_end+0xff811bac>
  811bd0:	10c7c83a 	sub	r3,r2,r3
  811bd4:	18fffec4 	addi	r3,r3,-5
  811bd8:	1806d0ba 	srli	r3,r3,2
  811bdc:	18c00044 	addi	r3,r3,1
  811be0:	18c7883a 	add	r3,r3,r3
  811be4:	18c7883a 	add	r3,r3,r3
  811be8:	48c7883a 	add	r3,r9,r3
  811bec:	1a000015 	stw	r8,0(r3)
  811bf0:	40000126 	beq	r8,zero,811bf8 <rshift+0x98>
  811bf4:	18c00104 	addi	r3,r3,4
  811bf8:	1a45c83a 	sub	r2,r3,r9
  811bfc:	1005d0ba 	srai	r2,r2,2
  811c00:	00001206 	br	811c4c <rshift+0xec>
  811c04:	20000415 	stw	zero,16(r4)
  811c08:	20000515 	stw	zero,20(r4)
  811c0c:	f800283a 	ret
  811c10:	18bffc2e 	bgeu	r3,r2,811c04 <__alt_data_end+0xff811c04>
  811c14:	180d883a 	mov	r6,r3
  811c18:	480b883a 	mov	r5,r9
  811c1c:	31c00017 	ldw	r7,0(r6)
  811c20:	29400104 	addi	r5,r5,4
  811c24:	31800104 	addi	r6,r6,4
  811c28:	29ffff15 	stw	r7,-4(r5)
  811c2c:	30bffb36 	bltu	r6,r2,811c1c <__alt_data_end+0xff811c1c>
  811c30:	00c6303a 	nor	r3,zero,r3
  811c34:	1885883a 	add	r2,r3,r2
  811c38:	1004d0ba 	srli	r2,r2,2
  811c3c:	10800044 	addi	r2,r2,1
  811c40:	1085883a 	add	r2,r2,r2
  811c44:	1085883a 	add	r2,r2,r2
  811c48:	1005d0ba 	srai	r2,r2,2
  811c4c:	20800415 	stw	r2,16(r4)
  811c50:	103fed26 	beq	r2,zero,811c08 <__alt_data_end+0xff811c08>
  811c54:	f800283a 	ret
  811c58:	4807883a 	mov	r3,r9
  811c5c:	003fe306 	br	811bec <__alt_data_end+0xff811bec>

00811c60 <__gethex>:
  811c60:	deffeb04 	addi	sp,sp,-84
  811c64:	d9c00415 	stw	r7,16(sp)
  811c68:	dfc01415 	stw	ra,80(sp)
  811c6c:	dd801115 	stw	r22,68(sp)
  811c70:	dcc00e15 	stw	r19,56(sp)
  811c74:	dc800d15 	stw	r18,52(sp)
  811c78:	2827883a 	mov	r19,r5
  811c7c:	d9000115 	stw	r4,4(sp)
  811c80:	d9800015 	stw	r6,0(sp)
  811c84:	df001315 	stw	fp,76(sp)
  811c88:	ddc01215 	stw	r23,72(sp)
  811c8c:	dd401015 	stw	r21,64(sp)
  811c90:	dd000f15 	stw	r20,60(sp)
  811c94:	dc400c15 	stw	r17,48(sp)
  811c98:	dc000b15 	stw	r16,44(sp)
  811c9c:	0808ba80 	call	808ba8 <_localeconv_r>
  811ca0:	14800017 	ldw	r18,0(r2)
  811ca4:	9009883a 	mov	r4,r18
  811ca8:	08032200 	call	803220 <strlen>
  811cac:	99c00017 	ldw	r7,0(r19)
  811cb0:	9087883a 	add	r3,r18,r2
  811cb4:	18ffffc3 	ldbu	r3,-1(r3)
  811cb8:	102d883a 	mov	r22,r2
  811cbc:	38800083 	ldbu	r2,2(r7)
  811cc0:	d8c00305 	stb	r3,12(sp)
  811cc4:	00c00c04 	movi	r3,48
  811cc8:	10c14c1e 	bne	r2,r3,8121fc <__gethex+0x59c>
  811ccc:	013fff84 	movi	r4,-2
  811cd0:	38c000c4 	addi	r3,r7,3
  811cd4:	21c9c83a 	sub	r4,r4,r7
  811cd8:	100b883a 	mov	r5,r2
  811cdc:	20e3883a 	add	r17,r4,r3
  811ce0:	182b883a 	mov	r21,r3
  811ce4:	18c00044 	addi	r3,r3,1
  811ce8:	18bfffc3 	ldbu	r2,-1(r3)
  811cec:	117ffb26 	beq	r2,r5,811cdc <__alt_data_end+0xff811cdc>
  811cf0:	050020b4 	movhi	r20,130
  811cf4:	a52efa84 	addi	r20,r20,-17430
  811cf8:	a085883a 	add	r2,r20,r2
  811cfc:	10800003 	ldbu	r2,0(r2)
  811d00:	1000c526 	beq	r2,zero,812018 <__gethex+0x3b8>
  811d04:	a8800003 	ldbu	r2,0(r21)
  811d08:	0017883a 	mov	r11,zero
  811d0c:	002f883a 	mov	r23,zero
  811d10:	a085883a 	add	r2,r20,r2
  811d14:	10800003 	ldbu	r2,0(r2)
  811d18:	a821883a 	mov	r16,r21
  811d1c:	10000526 	beq	r2,zero,811d34 <__gethex+0xd4>
  811d20:	84000044 	addi	r16,r16,1
  811d24:	80c00003 	ldbu	r3,0(r16)
  811d28:	a0c7883a 	add	r3,r20,r3
  811d2c:	18800003 	ldbu	r2,0(r3)
  811d30:	103ffb1e 	bne	r2,zero,811d20 <__alt_data_end+0xff811d20>
  811d34:	8009883a 	mov	r4,r16
  811d38:	900b883a 	mov	r5,r18
  811d3c:	b00d883a 	mov	r6,r22
  811d40:	dac00a15 	stw	r11,40(sp)
  811d44:	08127000 	call	812700 <strncmp>
  811d48:	dac00a17 	ldw	r11,40(sp)
  811d4c:	1000031e 	bne	r2,zero,811d5c <__gethex+0xfc>
  811d50:	b8014c26 	beq	r23,zero,812284 <__gethex+0x624>
  811d54:	80800003 	ldbu	r2,0(r16)
  811d58:	00000206 	br	811d64 <__gethex+0x104>
  811d5c:	80800003 	ldbu	r2,0(r16)
  811d60:	b8011926 	beq	r23,zero,8121c8 <__gethex+0x568>
  811d64:	85efc83a 	sub	r23,r16,r23
  811d68:	bdef883a 	add	r23,r23,r23
  811d6c:	bdef883a 	add	r23,r23,r23
  811d70:	05efc83a 	sub	r23,zero,r23
  811d74:	10803fcc 	andi	r2,r2,255
  811d78:	00c01404 	movi	r3,80
  811d7c:	10c07926 	beq	r2,r3,811f64 <__gethex+0x304>
  811d80:	00c01c04 	movi	r3,112
  811d84:	10c07726 	beq	r2,r3,811f64 <__gethex+0x304>
  811d88:	8039883a 	mov	fp,r16
  811d8c:	9c000015 	stw	r16,0(r19)
  811d90:	58000e26 	beq	r11,zero,811dcc <__gethex+0x16c>
  811d94:	8800ae1e 	bne	r17,zero,812050 <__gethex+0x3f0>
  811d98:	00800184 	movi	r2,6
  811d9c:	dfc01417 	ldw	ra,80(sp)
  811da0:	df001317 	ldw	fp,76(sp)
  811da4:	ddc01217 	ldw	r23,72(sp)
  811da8:	dd801117 	ldw	r22,68(sp)
  811dac:	dd401017 	ldw	r21,64(sp)
  811db0:	dd000f17 	ldw	r20,60(sp)
  811db4:	dcc00e17 	ldw	r19,56(sp)
  811db8:	dc800d17 	ldw	r18,52(sp)
  811dbc:	dc400c17 	ldw	r17,48(sp)
  811dc0:	dc000b17 	ldw	r16,44(sp)
  811dc4:	dec01504 	addi	sp,sp,84
  811dc8:	f800283a 	ret
  811dcc:	e545c83a 	sub	r2,fp,r21
  811dd0:	10bfffc4 	addi	r2,r2,-1
  811dd4:	00c001c4 	movi	r3,7
  811dd8:	000b883a 	mov	r5,zero
  811ddc:	1880030e 	bge	r3,r2,811dec <__gethex+0x18c>
  811de0:	1005d07a 	srai	r2,r2,1
  811de4:	29400044 	addi	r5,r5,1
  811de8:	18bffd16 	blt	r3,r2,811de0 <__alt_data_end+0xff811de0>
  811dec:	d9000117 	ldw	r4,4(sp)
  811df0:	08091d80 	call	8091d8 <_Balloc>
  811df4:	10c00504 	addi	r3,r2,20
  811df8:	d8c00215 	stw	r3,8(sp)
  811dfc:	1021883a 	mov	r16,r2
  811e00:	af01612e 	bgeu	r21,fp,812388 <__gethex+0x728>
  811e04:	dc400303 	ldbu	r17,12(sp)
  811e08:	03800044 	movi	r14,1
  811e0c:	1817883a 	mov	r11,r3
  811e10:	0015883a 	mov	r10,zero
  811e14:	0027883a 	mov	r19,zero
  811e18:	759dc83a 	sub	r14,r14,r22
  811e1c:	03000804 	movi	r12,32
  811e20:	e0bfffc3 	ldbu	r2,-1(fp)
  811e24:	e3ffffc4 	addi	r15,fp,-1
  811e28:	14403026 	beq	r2,r17,811eec <__gethex+0x28c>
  811e2c:	9b004526 	beq	r19,r12,811f44 <__gethex+0x2e4>
  811e30:	9809883a 	mov	r4,r19
  811e34:	9cc00104 	addi	r19,r19,4
  811e38:	e0bfffc3 	ldbu	r2,-1(fp)
  811e3c:	7839883a 	mov	fp,r15
  811e40:	a085883a 	add	r2,r20,r2
  811e44:	10c00003 	ldbu	r3,0(r2)
  811e48:	18c003cc 	andi	r3,r3,15
  811e4c:	1906983a 	sll	r3,r3,r4
  811e50:	50d4b03a 	or	r10,r10,r3
  811e54:	af3ff236 	bltu	r21,fp,811e20 <__alt_data_end+0xff811e20>
  811e58:	d8c00217 	ldw	r3,8(sp)
  811e5c:	58800104 	addi	r2,r11,4
  811e60:	5a800015 	stw	r10,0(r11)
  811e64:	10c5c83a 	sub	r2,r2,r3
  811e68:	1005d0ba 	srai	r2,r2,2
  811e6c:	5009883a 	mov	r4,r10
  811e70:	80800415 	stw	r2,16(r16)
  811e74:	1022917a 	slli	r17,r2,5
  811e78:	08094cc0 	call	8094cc <__hi0bits>
  811e7c:	d8c00017 	ldw	r3,0(sp)
  811e80:	8885c83a 	sub	r2,r17,r2
  811e84:	1c800017 	ldw	r18,0(r3)
  811e88:	9080b316 	blt	r18,r2,812158 <__gethex+0x4f8>
  811e8c:	1480d016 	blt	r2,r18,8121d0 <__gethex+0x570>
  811e90:	0027883a 	mov	r19,zero
  811e94:	d8c00017 	ldw	r3,0(sp)
  811e98:	18800217 	ldw	r2,8(r3)
  811e9c:	15c07b16 	blt	r2,r23,81208c <__gethex+0x42c>
  811ea0:	d8c00017 	ldw	r3,0(sp)
  811ea4:	18800117 	ldw	r2,4(r3)
  811ea8:	b880980e 	bge	r23,r2,81210c <__gethex+0x4ac>
  811eac:	15efc83a 	sub	r23,r2,r23
  811eb0:	bc80d916 	blt	r23,r18,812218 <__gethex+0x5b8>
  811eb4:	18c00317 	ldw	r3,12(r3)
  811eb8:	01000084 	movi	r4,2
  811ebc:	19014026 	beq	r3,r4,8123c0 <__gethex+0x760>
  811ec0:	010000c4 	movi	r4,3
  811ec4:	19011c26 	beq	r3,r4,812338 <__gethex+0x6d8>
  811ec8:	01000044 	movi	r4,1
  811ecc:	19013326 	beq	r3,r4,81239c <__gethex+0x73c>
  811ed0:	d9000117 	ldw	r4,4(sp)
  811ed4:	800b883a 	mov	r5,r16
  811ed8:	08092800 	call	809280 <_Bfree>
  811edc:	d8801517 	ldw	r2,84(sp)
  811ee0:	10000015 	stw	zero,0(r2)
  811ee4:	00801404 	movi	r2,80
  811ee8:	003fac06 	br	811d9c <__alt_data_end+0xff811d9c>
  811eec:	7b87883a 	add	r3,r15,r14
  811ef0:	1d7fce36 	bltu	r3,r21,811e2c <__alt_data_end+0xff811e2c>
  811ef4:	1809883a 	mov	r4,r3
  811ef8:	900b883a 	mov	r5,r18
  811efc:	b00d883a 	mov	r6,r22
  811f00:	d8c00615 	stw	r3,24(sp)
  811f04:	da800715 	stw	r10,28(sp)
  811f08:	dac00a15 	stw	r11,40(sp)
  811f0c:	db000915 	stw	r12,36(sp)
  811f10:	db800815 	stw	r14,32(sp)
  811f14:	dbc00515 	stw	r15,20(sp)
  811f18:	08127000 	call	812700 <strncmp>
  811f1c:	d8c00617 	ldw	r3,24(sp)
  811f20:	da800717 	ldw	r10,28(sp)
  811f24:	dac00a17 	ldw	r11,40(sp)
  811f28:	db000917 	ldw	r12,36(sp)
  811f2c:	db800817 	ldw	r14,32(sp)
  811f30:	dbc00517 	ldw	r15,20(sp)
  811f34:	103fbd1e 	bne	r2,zero,811e2c <__alt_data_end+0xff811e2c>
  811f38:	1839883a 	mov	fp,r3
  811f3c:	af3fb836 	bltu	r21,fp,811e20 <__alt_data_end+0xff811e20>
  811f40:	003fc506 	br	811e58 <__alt_data_end+0xff811e58>
  811f44:	04c00104 	movi	r19,4
  811f48:	5a800015 	stw	r10,0(r11)
  811f4c:	0009883a 	mov	r4,zero
  811f50:	5cd7883a 	add	r11,r11,r19
  811f54:	0015883a 	mov	r10,zero
  811f58:	003fb706 	br	811e38 <__alt_data_end+0xff811e38>
  811f5c:	002f883a 	mov	r23,zero
  811f60:	02c00044 	movi	r11,1
  811f64:	80800043 	ldbu	r2,1(r16)
  811f68:	01000ac4 	movi	r4,43
  811f6c:	10c03fcc 	andi	r3,r2,255
  811f70:	19007726 	beq	r3,r4,812150 <__gethex+0x4f0>
  811f74:	01000b44 	movi	r4,45
  811f78:	19004b26 	beq	r3,r4,8120a8 <__gethex+0x448>
  811f7c:	81000044 	addi	r4,r16,1
  811f80:	000b883a 	mov	r5,zero
  811f84:	10803fcc 	andi	r2,r2,255
  811f88:	a085883a 	add	r2,r20,r2
  811f8c:	10c00003 	ldbu	r3,0(r2)
  811f90:	03000604 	movi	r12,24
  811f94:	18bfffc4 	addi	r2,r3,-1
  811f98:	10803fcc 	andi	r2,r2,255
  811f9c:	60bf7a36 	bltu	r12,r2,811d88 <__alt_data_end+0xff811d88>
  811fa0:	21800043 	ldbu	r6,1(r4)
  811fa4:	18803fcc 	andi	r2,r3,255
  811fa8:	00c020b4 	movhi	r3,130
  811fac:	18eefa84 	addi	r3,r3,-17430
  811fb0:	1987883a 	add	r3,r3,r6
  811fb4:	1b400003 	ldbu	r13,0(r3)
  811fb8:	10bffc04 	addi	r2,r2,-16
  811fbc:	21000044 	addi	r4,r4,1
  811fc0:	68ffffc4 	addi	r3,r13,-1
  811fc4:	18c03fcc 	andi	r3,r3,255
  811fc8:	6b403fcc 	andi	r13,r13,255
  811fcc:	60c00b36 	bltu	r12,r3,811ffc <__gethex+0x39c>
  811fd0:	21000044 	addi	r4,r4,1
  811fd4:	20c00003 	ldbu	r3,0(r4)
  811fd8:	108002a4 	muli	r2,r2,10
  811fdc:	a0c7883a 	add	r3,r20,r3
  811fe0:	19800003 	ldbu	r6,0(r3)
  811fe4:	1345883a 	add	r2,r2,r13
  811fe8:	10bffc04 	addi	r2,r2,-16
  811fec:	30ffffc4 	addi	r3,r6,-1
  811ff0:	18c03fcc 	andi	r3,r3,255
  811ff4:	33403fcc 	andi	r13,r6,255
  811ff8:	60fff52e 	bgeu	r12,r3,811fd0 <__alt_data_end+0xff811fd0>
  811ffc:	0147c83a 	sub	r3,zero,r5
  812000:	10c4f03a 	xor	r2,r2,r3
  812004:	114b883a 	add	r5,r2,r5
  812008:	8039883a 	mov	fp,r16
  81200c:	b96f883a 	add	r23,r23,r5
  812010:	2021883a 	mov	r16,r4
  812014:	003f5d06 	br	811d8c <__alt_data_end+0xff811d8c>
  812018:	a809883a 	mov	r4,r21
  81201c:	900b883a 	mov	r5,r18
  812020:	b00d883a 	mov	r6,r22
  812024:	08127000 	call	812700 <strncmp>
  812028:	10002326 	beq	r2,zero,8120b8 <__gethex+0x458>
  81202c:	a8800003 	ldbu	r2,0(r21)
  812030:	a821883a 	mov	r16,r21
  812034:	10803fcc 	andi	r2,r2,255
  812038:	00c01404 	movi	r3,80
  81203c:	10ffc726 	beq	r2,r3,811f5c <__alt_data_end+0xff811f5c>
  812040:	00c01c04 	movi	r3,112
  812044:	10ffc526 	beq	r2,r3,811f5c <__alt_data_end+0xff811f5c>
  812048:	9c000015 	stw	r16,0(r19)
  81204c:	883f5226 	beq	r17,zero,811d98 <__alt_data_end+0xff811d98>
  812050:	0005883a 	mov	r2,zero
  812054:	003f5106 	br	811d9c <__alt_data_end+0xff811d9c>
  812058:	2ce7883a 	add	r19,r5,r19
  81205c:	993fff17 	ldw	r4,-4(r19)
  812060:	08094cc0 	call	8094cc <__hi0bits>
  812064:	00c00804 	movi	r3,32
  812068:	1c63c83a 	sub	r17,r3,r17
  81206c:	1440ae0e 	bge	r2,r17,812328 <__gethex+0x6c8>
  812070:	8009883a 	mov	r4,r16
  812074:	01400044 	movi	r5,1
  812078:	0811b600 	call	811b60 <rshift>
  81207c:	d8c00017 	ldw	r3,0(sp)
  812080:	bdc00044 	addi	r23,r23,1
  812084:	18800217 	ldw	r2,8(r3)
  812088:	15c0a70e 	bge	r2,r23,812328 <__gethex+0x6c8>
  81208c:	d9000117 	ldw	r4,4(sp)
  812090:	800b883a 	mov	r5,r16
  812094:	08092800 	call	809280 <_Bfree>
  812098:	d9001517 	ldw	r4,84(sp)
  81209c:	008028c4 	movi	r2,163
  8120a0:	20000015 	stw	zero,0(r4)
  8120a4:	003f3d06 	br	811d9c <__alt_data_end+0xff811d9c>
  8120a8:	01400044 	movi	r5,1
  8120ac:	80800083 	ldbu	r2,2(r16)
  8120b0:	81000084 	addi	r4,r16,2
  8120b4:	003fb306 	br	811f84 <__alt_data_end+0xff811f84>
  8120b8:	ada1883a 	add	r16,r21,r22
  8120bc:	80c00003 	ldbu	r3,0(r16)
  8120c0:	19003fcc 	andi	r4,r3,255
  8120c4:	a105883a 	add	r2,r20,r4
  8120c8:	10800003 	ldbu	r2,0(r2)
  8120cc:	11403fcc 	andi	r5,r2,255
  8120d0:	28004f26 	beq	r5,zero,812210 <__gethex+0x5b0>
  8120d4:	00c00c04 	movi	r3,48
  8120d8:	802b883a 	mov	r21,r16
  8120dc:	20c0061e 	bne	r4,r3,8120f8 <__gethex+0x498>
  8120e0:	2007883a 	mov	r3,r4
  8120e4:	ad400044 	addi	r21,r21,1
  8120e8:	a8800003 	ldbu	r2,0(r21)
  8120ec:	10fffd26 	beq	r2,r3,8120e4 <__alt_data_end+0xff8120e4>
  8120f0:	a085883a 	add	r2,r20,r2
  8120f4:	10800003 	ldbu	r2,0(r2)
  8120f8:	10803fcc 	andi	r2,r2,255
  8120fc:	1017003a 	cmpeq	r11,r2,zero
  812100:	802f883a 	mov	r23,r16
  812104:	04400044 	movi	r17,1
  812108:	003f0306 	br	811d18 <__alt_data_end+0xff811d18>
  81210c:	04400044 	movi	r17,1
  812110:	98000926 	beq	r19,zero,812138 <__gethex+0x4d8>
  812114:	d8c00017 	ldw	r3,0(sp)
  812118:	18800317 	ldw	r2,12(r3)
  81211c:	00c00084 	movi	r3,2
  812120:	10c06626 	beq	r2,r3,8122bc <__gethex+0x65c>
  812124:	00c000c4 	movi	r3,3
  812128:	10c06826 	beq	r2,r3,8122cc <__gethex+0x66c>
  81212c:	00c00044 	movi	r3,1
  812130:	10c08d26 	beq	r2,r3,812368 <__gethex+0x708>
  812134:	8c400414 	ori	r17,r17,16
  812138:	d9001517 	ldw	r4,84(sp)
  81213c:	d8c00417 	ldw	r3,16(sp)
  812140:	8805883a 	mov	r2,r17
  812144:	24000015 	stw	r16,0(r4)
  812148:	1dc00015 	stw	r23,0(r3)
  81214c:	003f1306 	br	811d9c <__alt_data_end+0xff811d9c>
  812150:	000b883a 	mov	r5,zero
  812154:	003fd506 	br	8120ac <__alt_data_end+0xff8120ac>
  812158:	14a3c83a 	sub	r17,r2,r18
  81215c:	8009883a 	mov	r4,r16
  812160:	880b883a 	mov	r5,r17
  812164:	080a0ec0 	call	80a0ec <__any_on>
  812168:	10002726 	beq	r2,zero,812208 <__gethex+0x5a8>
  81216c:	897fffc4 	addi	r5,r17,-1
  812170:	2807d17a 	srai	r3,r5,5
  812174:	d8800217 	ldw	r2,8(sp)
  812178:	290007cc 	andi	r4,r5,31
  81217c:	18c7883a 	add	r3,r3,r3
  812180:	18c7883a 	add	r3,r3,r3
  812184:	04c00044 	movi	r19,1
  812188:	10c7883a 	add	r3,r2,r3
  81218c:	9908983a 	sll	r4,r19,r4
  812190:	18c00017 	ldw	r3,0(r3)
  812194:	20c6703a 	and	r3,r4,r3
  812198:	18000626 	beq	r3,zero,8121b4 <__gethex+0x554>
  81219c:	99407d0e 	bge	r19,r5,812394 <__gethex+0x734>
  8121a0:	8009883a 	mov	r4,r16
  8121a4:	897fff84 	addi	r5,r17,-2
  8121a8:	080a0ec0 	call	80a0ec <__any_on>
  8121ac:	10007926 	beq	r2,zero,812394 <__gethex+0x734>
  8121b0:	04c000c4 	movi	r19,3
  8121b4:	8009883a 	mov	r4,r16
  8121b8:	880b883a 	mov	r5,r17
  8121bc:	0811b600 	call	811b60 <rshift>
  8121c0:	bc6f883a 	add	r23,r23,r17
  8121c4:	003f3306 	br	811e94 <__alt_data_end+0xff811e94>
  8121c8:	002f883a 	mov	r23,zero
  8121cc:	003ee906 	br	811d74 <__alt_data_end+0xff811d74>
  8121d0:	d9000117 	ldw	r4,4(sp)
  8121d4:	90a3c83a 	sub	r17,r18,r2
  8121d8:	800b883a 	mov	r5,r16
  8121dc:	880d883a 	mov	r6,r17
  8121e0:	080995c0 	call	80995c <__lshift>
  8121e4:	10c00504 	addi	r3,r2,20
  8121e8:	1021883a 	mov	r16,r2
  8121ec:	bc6fc83a 	sub	r23,r23,r17
  8121f0:	d8c00215 	stw	r3,8(sp)
  8121f4:	0027883a 	mov	r19,zero
  8121f8:	003f2606 	br	811e94 <__alt_data_end+0xff811e94>
  8121fc:	3d400084 	addi	r21,r7,2
  812200:	0023883a 	mov	r17,zero
  812204:	003eba06 	br	811cf0 <__alt_data_end+0xff811cf0>
  812208:	0027883a 	mov	r19,zero
  81220c:	003fe906 	br	8121b4 <__alt_data_end+0xff8121b4>
  812210:	1805883a 	mov	r2,r3
  812214:	003f8706 	br	812034 <__alt_data_end+0xff812034>
  812218:	bc7fffc4 	addi	r17,r23,-1
  81221c:	9800441e 	bne	r19,zero,812330 <__gethex+0x6d0>
  812220:	0440040e 	bge	zero,r17,812234 <__gethex+0x5d4>
  812224:	8009883a 	mov	r4,r16
  812228:	880b883a 	mov	r5,r17
  81222c:	080a0ec0 	call	80a0ec <__any_on>
  812230:	1027883a 	mov	r19,r2
  812234:	8805d17a 	srai	r2,r17,5
  812238:	d8c00217 	ldw	r3,8(sp)
  81223c:	8c4007cc 	andi	r17,r17,31
  812240:	1085883a 	add	r2,r2,r2
  812244:	1085883a 	add	r2,r2,r2
  812248:	1885883a 	add	r2,r3,r2
  81224c:	00c00044 	movi	r3,1
  812250:	1c62983a 	sll	r17,r3,r17
  812254:	10800017 	ldw	r2,0(r2)
  812258:	8884703a 	and	r2,r17,r2
  81225c:	10000126 	beq	r2,zero,812264 <__gethex+0x604>
  812260:	9cc00094 	ori	r19,r19,2
  812264:	b80b883a 	mov	r5,r23
  812268:	8009883a 	mov	r4,r16
  81226c:	0811b600 	call	811b60 <rshift>
  812270:	d8c00017 	ldw	r3,0(sp)
  812274:	95e5c83a 	sub	r18,r18,r23
  812278:	04400084 	movi	r17,2
  81227c:	1dc00117 	ldw	r23,4(r3)
  812280:	003fa306 	br	812110 <__alt_data_end+0xff812110>
  812284:	85af883a 	add	r23,r16,r22
  812288:	b8800003 	ldbu	r2,0(r23)
  81228c:	b821883a 	mov	r16,r23
  812290:	10c03fcc 	andi	r3,r2,255
  812294:	a0c7883a 	add	r3,r20,r3
  812298:	18c00003 	ldbu	r3,0(r3)
  81229c:	183eb026 	beq	r3,zero,811d60 <__alt_data_end+0xff811d60>
  8122a0:	84000044 	addi	r16,r16,1
  8122a4:	80800003 	ldbu	r2,0(r16)
  8122a8:	10c03fcc 	andi	r3,r2,255
  8122ac:	a0c7883a 	add	r3,r20,r3
  8122b0:	18c00003 	ldbu	r3,0(r3)
  8122b4:	183ffa1e 	bne	r3,zero,8122a0 <__alt_data_end+0xff8122a0>
  8122b8:	003ea906 	br	811d60 <__alt_data_end+0xff811d60>
  8122bc:	d9001617 	ldw	r4,88(sp)
  8122c0:	00800044 	movi	r2,1
  8122c4:	1109c83a 	sub	r4,r2,r4
  8122c8:	d9001615 	stw	r4,88(sp)
  8122cc:	d8801617 	ldw	r2,88(sp)
  8122d0:	103f9826 	beq	r2,zero,812134 <__alt_data_end+0xff812134>
  8122d4:	87000417 	ldw	fp,16(r16)
  8122d8:	d8800217 	ldw	r2,8(sp)
  8122dc:	013fffc4 	movi	r4,-1
  8122e0:	e727883a 	add	r19,fp,fp
  8122e4:	9ce7883a 	add	r19,r19,r19
  8122e8:	14cb883a 	add	r5,r2,r19
  8122ec:	00000306 	br	8122fc <__gethex+0x69c>
  8122f0:	10000015 	stw	zero,0(r2)
  8122f4:	10800104 	addi	r2,r2,4
  8122f8:	1140342e 	bgeu	r2,r5,8123cc <__gethex+0x76c>
  8122fc:	10c00017 	ldw	r3,0(r2)
  812300:	193ffb26 	beq	r3,r4,8122f0 <__alt_data_end+0xff8122f0>
  812304:	d9400217 	ldw	r5,8(sp)
  812308:	18c00044 	addi	r3,r3,1
  81230c:	10c00015 	stw	r3,0(r2)
  812310:	00800084 	movi	r2,2
  812314:	88803a26 	beq	r17,r2,812400 <__gethex+0x7a0>
  812318:	80800417 	ldw	r2,16(r16)
  81231c:	e0bf5416 	blt	fp,r2,812070 <__alt_data_end+0xff812070>
  812320:	944007cc 	andi	r17,r18,31
  812324:	883f4c1e 	bne	r17,zero,812058 <__alt_data_end+0xff812058>
  812328:	04400844 	movi	r17,33
  81232c:	003f8206 	br	812138 <__alt_data_end+0xff812138>
  812330:	04c00044 	movi	r19,1
  812334:	003fbf06 	br	812234 <__alt_data_end+0xff812234>
  812338:	d8c01617 	ldw	r3,88(sp)
  81233c:	183ee426 	beq	r3,zero,811ed0 <__alt_data_end+0xff811ed0>
  812340:	d8c00417 	ldw	r3,16(sp)
  812344:	d9001517 	ldw	r4,84(sp)
  812348:	18800015 	stw	r2,0(r3)
  81234c:	d8c00217 	ldw	r3,8(sp)
  812350:	00800044 	movi	r2,1
  812354:	80800415 	stw	r2,16(r16)
  812358:	18800015 	stw	r2,0(r3)
  81235c:	24000015 	stw	r16,0(r4)
  812360:	00801884 	movi	r2,98
  812364:	003e8d06 	br	811d9c <__alt_data_end+0xff811d9c>
  812368:	9880008c 	andi	r2,r19,2
  81236c:	103f7126 	beq	r2,zero,812134 <__alt_data_end+0xff812134>
  812370:	d8c00217 	ldw	r3,8(sp)
  812374:	18800017 	ldw	r2,0(r3)
  812378:	9884b03a 	or	r2,r19,r2
  81237c:	1080004c 	andi	r2,r2,1
  812380:	103fd41e 	bne	r2,zero,8122d4 <__alt_data_end+0xff8122d4>
  812384:	003f6b06 	br	812134 <__alt_data_end+0xff812134>
  812388:	dac00217 	ldw	r11,8(sp)
  81238c:	0015883a 	mov	r10,zero
  812390:	003eb106 	br	811e58 <__alt_data_end+0xff811e58>
  812394:	04c00084 	movi	r19,2
  812398:	003f8606 	br	8121b4 <__alt_data_end+0xff8121b4>
  81239c:	bcbecc1e 	bne	r23,r18,811ed0 <__alt_data_end+0xff811ed0>
  8123a0:	1cbfe70e 	bge	r3,r18,812340 <__alt_data_end+0xff812340>
  8123a4:	8009883a 	mov	r4,r16
  8123a8:	917fffc4 	addi	r5,r18,-1
  8123ac:	080a0ec0 	call	80a0ec <__any_on>
  8123b0:	103ec726 	beq	r2,zero,811ed0 <__alt_data_end+0xff811ed0>
  8123b4:	d8c00017 	ldw	r3,0(sp)
  8123b8:	18800117 	ldw	r2,4(r3)
  8123bc:	003fe006 	br	812340 <__alt_data_end+0xff812340>
  8123c0:	d9001617 	ldw	r4,88(sp)
  8123c4:	203fde26 	beq	r4,zero,812340 <__alt_data_end+0xff812340>
  8123c8:	003ec106 	br	811ed0 <__alt_data_end+0xff811ed0>
  8123cc:	80800217 	ldw	r2,8(r16)
  8123d0:	e080110e 	bge	fp,r2,812418 <__gethex+0x7b8>
  8123d4:	d9400217 	ldw	r5,8(sp)
  8123d8:	e009883a 	mov	r4,fp
  8123dc:	20c00144 	addi	r3,r4,5
  8123e0:	18c7883a 	add	r3,r3,r3
  8123e4:	21000044 	addi	r4,r4,1
  8123e8:	18c7883a 	add	r3,r3,r3
  8123ec:	81000415 	stw	r4,16(r16)
  8123f0:	80c7883a 	add	r3,r16,r3
  8123f4:	00800044 	movi	r2,1
  8123f8:	18800015 	stw	r2,0(r3)
  8123fc:	003fc406 	br	812310 <__alt_data_end+0xff812310>
  812400:	d8c00017 	ldw	r3,0(sp)
  812404:	18800017 	ldw	r2,0(r3)
  812408:	10bfffc4 	addi	r2,r2,-1
  81240c:	14801526 	beq	r2,r18,812464 <__gethex+0x804>
  812410:	04400884 	movi	r17,34
  812414:	003f4806 	br	812138 <__alt_data_end+0xff812138>
  812418:	81400117 	ldw	r5,4(r16)
  81241c:	d9000117 	ldw	r4,4(sp)
  812420:	29400044 	addi	r5,r5,1
  812424:	08091d80 	call	8091d8 <_Balloc>
  812428:	81800417 	ldw	r6,16(r16)
  81242c:	81400304 	addi	r5,r16,12
  812430:	11000304 	addi	r4,r2,12
  812434:	31800084 	addi	r6,r6,2
  812438:	318d883a 	add	r6,r6,r6
  81243c:	318d883a 	add	r6,r6,r6
  812440:	1029883a 	mov	r20,r2
  812444:	0808f440 	call	808f44 <memcpy>
  812448:	d9000117 	ldw	r4,4(sp)
  81244c:	800b883a 	mov	r5,r16
  812450:	a021883a 	mov	r16,r20
  812454:	08092800 	call	809280 <_Bfree>
  812458:	a1000417 	ldw	r4,16(r20)
  81245c:	a1400504 	addi	r5,r20,20
  812460:	003fde06 	br	8123dc <__alt_data_end+0xff8123dc>
  812464:	9005d17a 	srai	r2,r18,5
  812468:	944007cc 	andi	r17,r18,31
  81246c:	00c00044 	movi	r3,1
  812470:	1085883a 	add	r2,r2,r2
  812474:	1085883a 	add	r2,r2,r2
  812478:	2885883a 	add	r2,r5,r2
  81247c:	1c62983a 	sll	r17,r3,r17
  812480:	10800017 	ldw	r2,0(r2)
  812484:	8884703a 	and	r2,r17,r2
  812488:	1023003a 	cmpeq	r17,r2,zero
  81248c:	8c400844 	addi	r17,r17,33
  812490:	003f2906 	br	812138 <__alt_data_end+0xff812138>

00812494 <__hexnan>:
  812494:	defff904 	addi	sp,sp,-28
  812498:	dcc00315 	stw	r19,12(sp)
  81249c:	2cc00017 	ldw	r19,0(r5)
  8124a0:	dd800615 	stw	r22,24(sp)
  8124a4:	dd400515 	stw	r21,20(sp)
  8124a8:	981fd17a 	srai	r15,r19,5
  8124ac:	dd000415 	stw	r20,16(sp)
  8124b0:	dc800215 	stw	r18,8(sp)
  8124b4:	7bdf883a 	add	r15,r15,r15
  8124b8:	7bdf883a 	add	r15,r15,r15
  8124bc:	dc400115 	stw	r17,4(sp)
  8124c0:	dc000015 	stw	r16,0(sp)
  8124c4:	9cc007cc 	andi	r19,r19,31
  8124c8:	33df883a 	add	r15,r6,r15
  8124cc:	98000126 	beq	r19,zero,8124d4 <__hexnan+0x40>
  8124d0:	7bc00104 	addi	r15,r15,4
  8124d4:	21c00017 	ldw	r7,0(r4)
  8124d8:	7affff04 	addi	r11,r15,-4
  8124dc:	038020b4 	movhi	r14,130
  8124e0:	783fff15 	stw	zero,-4(r15)
  8124e4:	581b883a 	mov	r13,r11
  8124e8:	5813883a 	mov	r9,r11
  8124ec:	000b883a 	mov	r5,zero
  8124f0:	0021883a 	mov	r16,zero
  8124f4:	0019883a 	mov	r12,zero
  8124f8:	73aefa84 	addi	r14,r14,-17430
  8124fc:	04800204 	movi	r18,8
  812500:	04400804 	movi	r17,32
  812504:	050001c4 	movi	r20,7
  812508:	39c00044 	addi	r7,r7,1
  81250c:	38c00003 	ldbu	r3,0(r7)
  812510:	18001d26 	beq	r3,zero,812588 <__hexnan+0xf4>
  812514:	70c5883a 	add	r2,r14,r3
  812518:	10800003 	ldbu	r2,0(r2)
  81251c:	12003fcc 	andi	r8,r2,255
  812520:	4000441e 	bne	r8,zero,812634 <__hexnan+0x1a0>
  812524:	88c05836 	bltu	r17,r3,812688 <__hexnan+0x1f4>
  812528:	833ff70e 	bge	r16,r12,812508 <__alt_data_end+0xff812508>
  81252c:	4b40112e 	bgeu	r9,r13,812574 <__hexnan+0xe0>
  812530:	a1401016 	blt	r20,r5,812574 <__hexnan+0xe0>
  812534:	914bc83a 	sub	r5,r18,r5
  812538:	294b883a 	add	r5,r5,r5
  81253c:	4a800017 	ldw	r10,0(r9)
  812540:	294b883a 	add	r5,r5,r5
  812544:	896dc83a 	sub	r22,r17,r5
  812548:	48c00104 	addi	r3,r9,4
  81254c:	4805883a 	mov	r2,r9
  812550:	1d400017 	ldw	r21,0(r3)
  812554:	10800104 	addi	r2,r2,4
  812558:	18c00104 	addi	r3,r3,4
  81255c:	ad90983a 	sll	r8,r21,r22
  812560:	5210b03a 	or	r8,r10,r8
  812564:	a954d83a 	srl	r10,r21,r5
  812568:	123fff15 	stw	r8,-4(r2)
  81256c:	1abfff15 	stw	r10,-4(r3)
  812570:	137ff736 	bltu	r2,r13,812550 <__alt_data_end+0xff812550>
  812574:	32403e36 	bltu	r6,r9,812670 <__hexnan+0x1dc>
  812578:	39c00044 	addi	r7,r7,1
  81257c:	38c00003 	ldbu	r3,0(r7)
  812580:	01400204 	movi	r5,8
  812584:	183fe31e 	bne	r3,zero,812514 <__alt_data_end+0xff812514>
  812588:	4807883a 	mov	r3,r9
  81258c:	60004026 	beq	r12,zero,812690 <__hexnan+0x1fc>
  812590:	4b40162e 	bgeu	r9,r13,8125ec <__hexnan+0x158>
  812594:	008001c4 	movi	r2,7
  812598:	11401416 	blt	r2,r5,8125ec <__hexnan+0x158>
  81259c:	02800204 	movi	r10,8
  8125a0:	5155c83a 	sub	r10,r10,r5
  8125a4:	5295883a 	add	r10,r10,r10
  8125a8:	5295883a 	add	r10,r10,r10
  8125ac:	49400104 	addi	r5,r9,4
  8125b0:	03000804 	movi	r12,32
  8125b4:	49c00017 	ldw	r7,0(r9)
  8125b8:	6299c83a 	sub	r12,r12,r10
  8125bc:	2805883a 	mov	r2,r5
  8125c0:	00000106 	br	8125c8 <__hexnan+0x134>
  8125c4:	29400104 	addi	r5,r5,4
  8125c8:	12000017 	ldw	r8,0(r2)
  8125cc:	10800104 	addi	r2,r2,4
  8125d0:	4308983a 	sll	r4,r8,r12
  8125d4:	3908b03a 	or	r4,r7,r4
  8125d8:	428ed83a 	srl	r7,r8,r10
  8125dc:	49000015 	stw	r4,0(r9)
  8125e0:	2813883a 	mov	r9,r5
  8125e4:	11ffff15 	stw	r7,-4(r2)
  8125e8:	2b7ff636 	bltu	r5,r13,8125c4 <__alt_data_end+0xff8125c4>
  8125ec:	30c0322e 	bgeu	r6,r3,8126b8 <__hexnan+0x224>
  8125f0:	3005883a 	mov	r2,r6
  8125f4:	19000017 	ldw	r4,0(r3)
  8125f8:	10800104 	addi	r2,r2,4
  8125fc:	18c00104 	addi	r3,r3,4
  812600:	113fff15 	stw	r4,-4(r2)
  812604:	58fffb2e 	bgeu	r11,r3,8125f4 <__alt_data_end+0xff8125f4>
  812608:	10000015 	stw	zero,0(r2)
  81260c:	10800104 	addi	r2,r2,4
  812610:	58bffd2e 	bgeu	r11,r2,812608 <__alt_data_end+0xff812608>
  812614:	78bfff17 	ldw	r2,-4(r15)
  812618:	1000041e 	bne	r2,zero,81262c <__hexnan+0x198>
  81261c:	32c02f26 	beq	r6,r11,8126dc <__hexnan+0x248>
  812620:	5affff04 	addi	r11,r11,-4
  812624:	58800017 	ldw	r2,0(r11)
  812628:	103ffc26 	beq	r2,zero,81261c <__alt_data_end+0xff81261c>
  81262c:	00800144 	movi	r2,5
  812630:	00001806 	br	812694 <__hexnan+0x200>
  812634:	29400044 	addi	r5,r5,1
  812638:	63000044 	addi	r12,r12,1
  81263c:	91400616 	blt	r18,r5,812658 <__hexnan+0x1c4>
  812640:	48c00017 	ldw	r3,0(r9)
  812644:	1806913a 	slli	r3,r3,4
  812648:	108003cc 	andi	r2,r2,15
  81264c:	1884b03a 	or	r2,r3,r2
  812650:	48800015 	stw	r2,0(r9)
  812654:	003fac06 	br	812508 <__alt_data_end+0xff812508>
  812658:	327fab2e 	bgeu	r6,r9,812508 <__alt_data_end+0xff812508>
  81265c:	483fff15 	stw	zero,-4(r9)
  812660:	0007883a 	mov	r3,zero
  812664:	4a7fff04 	addi	r9,r9,-4
  812668:	01400044 	movi	r5,1
  81266c:	003ff606 	br	812648 <__alt_data_end+0xff812648>
  812670:	4b7fff04 	addi	r13,r9,-4
  812674:	483fff15 	stw	zero,-4(r9)
  812678:	6021883a 	mov	r16,r12
  81267c:	6813883a 	mov	r9,r13
  812680:	000b883a 	mov	r5,zero
  812684:	003fa006 	br	812508 <__alt_data_end+0xff812508>
  812688:	00800a44 	movi	r2,41
  81268c:	18801726 	beq	r3,r2,8126ec <__hexnan+0x258>
  812690:	00800104 	movi	r2,4
  812694:	dd800617 	ldw	r22,24(sp)
  812698:	dd400517 	ldw	r21,20(sp)
  81269c:	dd000417 	ldw	r20,16(sp)
  8126a0:	dcc00317 	ldw	r19,12(sp)
  8126a4:	dc800217 	ldw	r18,8(sp)
  8126a8:	dc400117 	ldw	r17,4(sp)
  8126ac:	dc000017 	ldw	r16,0(sp)
  8126b0:	dec00704 	addi	sp,sp,28
  8126b4:	f800283a 	ret
  8126b8:	983fd626 	beq	r19,zero,812614 <__alt_data_end+0xff812614>
  8126bc:	00c00804 	movi	r3,32
  8126c0:	1ce7c83a 	sub	r19,r3,r19
  8126c4:	00ffffc4 	movi	r3,-1
  8126c8:	78bfff17 	ldw	r2,-4(r15)
  8126cc:	1cc6d83a 	srl	r3,r3,r19
  8126d0:	1884703a 	and	r2,r3,r2
  8126d4:	78bfff15 	stw	r2,-4(r15)
  8126d8:	003fcf06 	br	812618 <__alt_data_end+0xff812618>
  8126dc:	00800044 	movi	r2,1
  8126e0:	58800015 	stw	r2,0(r11)
  8126e4:	00800144 	movi	r2,5
  8126e8:	003fea06 	br	812694 <__alt_data_end+0xff812694>
  8126ec:	39c00044 	addi	r7,r7,1
  8126f0:	21c00015 	stw	r7,0(r4)
  8126f4:	4807883a 	mov	r3,r9
  8126f8:	603fa51e 	bne	r12,zero,812590 <__alt_data_end+0xff812590>
  8126fc:	003fe406 	br	812690 <__alt_data_end+0xff812690>

00812700 <strncmp>:
  812700:	30002126 	beq	r6,zero,812788 <strncmp+0x88>
  812704:	2144b03a 	or	r2,r4,r5
  812708:	108000cc 	andi	r2,r2,3
  81270c:	1000241e 	bne	r2,zero,8127a0 <strncmp+0xa0>
  812710:	024000c4 	movi	r9,3
  812714:	4980222e 	bgeu	r9,r6,8127a0 <strncmp+0xa0>
  812718:	20800017 	ldw	r2,0(r4)
  81271c:	28c00017 	ldw	r3,0(r5)
  812720:	10c01f1e 	bne	r2,r3,8127a0 <strncmp+0xa0>
  812724:	31bfff04 	addi	r6,r6,-4
  812728:	30001726 	beq	r6,zero,812788 <strncmp+0x88>
  81272c:	02ffbff4 	movhi	r11,65279
  812730:	5affbfc4 	addi	r11,r11,-257
  812734:	0086303a 	nor	r3,zero,r2
  812738:	02a02074 	movhi	r10,32897
  81273c:	12c5883a 	add	r2,r2,r11
  812740:	52a02004 	addi	r10,r10,-32640
  812744:	10c4703a 	and	r2,r2,r3
  812748:	1284703a 	and	r2,r2,r10
  81274c:	10000226 	beq	r2,zero,812758 <strncmp+0x58>
  812750:	00000d06 	br	812788 <strncmp+0x88>
  812754:	10000c1e 	bne	r2,zero,812788 <strncmp+0x88>
  812758:	21000104 	addi	r4,r4,4
  81275c:	29400104 	addi	r5,r5,4
  812760:	49800f2e 	bgeu	r9,r6,8127a0 <strncmp+0xa0>
  812764:	20c00017 	ldw	r3,0(r4)
  812768:	29c00017 	ldw	r7,0(r5)
  81276c:	1ad1883a 	add	r8,r3,r11
  812770:	00c4303a 	nor	r2,zero,r3
  812774:	4084703a 	and	r2,r8,r2
  812778:	1284703a 	and	r2,r2,r10
  81277c:	19c0081e 	bne	r3,r7,8127a0 <strncmp+0xa0>
  812780:	31bfff04 	addi	r6,r6,-4
  812784:	303ff31e 	bne	r6,zero,812754 <__alt_data_end+0xff812754>
  812788:	0005883a 	mov	r2,zero
  81278c:	f800283a 	ret
  812790:	303ffd26 	beq	r6,zero,812788 <__alt_data_end+0xff812788>
  812794:	103ffc26 	beq	r2,zero,812788 <__alt_data_end+0xff812788>
  812798:	21000044 	addi	r4,r4,1
  81279c:	29400044 	addi	r5,r5,1
  8127a0:	20800007 	ldb	r2,0(r4)
  8127a4:	28c00007 	ldb	r3,0(r5)
  8127a8:	31bfffc4 	addi	r6,r6,-1
  8127ac:	10fff826 	beq	r2,r3,812790 <__alt_data_end+0xff812790>
  8127b0:	20800003 	ldbu	r2,0(r4)
  8127b4:	28c00003 	ldbu	r3,0(r5)
  8127b8:	10c5c83a 	sub	r2,r2,r3
  8127bc:	f800283a 	ret

008127c0 <__ssprint_r>:
  8127c0:	30800217 	ldw	r2,8(r6)
  8127c4:	defff604 	addi	sp,sp,-40
  8127c8:	ddc00715 	stw	r23,28(sp)
  8127cc:	dc800215 	stw	r18,8(sp)
  8127d0:	dfc00915 	stw	ra,36(sp)
  8127d4:	df000815 	stw	fp,32(sp)
  8127d8:	dd800615 	stw	r22,24(sp)
  8127dc:	dd400515 	stw	r21,20(sp)
  8127e0:	dd000415 	stw	r20,16(sp)
  8127e4:	dcc00315 	stw	r19,12(sp)
  8127e8:	dc400115 	stw	r17,4(sp)
  8127ec:	dc000015 	stw	r16,0(sp)
  8127f0:	3025883a 	mov	r18,r6
  8127f4:	35c00017 	ldw	r23,0(r6)
  8127f8:	10005626 	beq	r2,zero,812954 <__ssprint_r+0x194>
  8127fc:	2027883a 	mov	r19,r4
  812800:	28800217 	ldw	r2,8(r5)
  812804:	29000017 	ldw	r4,0(r5)
  812808:	2823883a 	mov	r17,r5
  81280c:	0039883a 	mov	fp,zero
  812810:	0021883a 	mov	r16,zero
  812814:	80003926 	beq	r16,zero,8128fc <__ssprint_r+0x13c>
  812818:	102b883a 	mov	r21,r2
  81281c:	102d883a 	mov	r22,r2
  812820:	80803a36 	bltu	r16,r2,81290c <__ssprint_r+0x14c>
  812824:	88c0030b 	ldhu	r3,12(r17)
  812828:	1881200c 	andi	r2,r3,1152
  81282c:	10002626 	beq	r2,zero,8128c8 <__ssprint_r+0x108>
  812830:	88800517 	ldw	r2,20(r17)
  812834:	89400417 	ldw	r5,16(r17)
  812838:	81c00044 	addi	r7,r16,1
  81283c:	108d883a 	add	r6,r2,r2
  812840:	3085883a 	add	r2,r6,r2
  812844:	100cd7fa 	srli	r6,r2,31
  812848:	216dc83a 	sub	r22,r4,r5
  81284c:	3d89883a 	add	r4,r7,r22
  812850:	3085883a 	add	r2,r6,r2
  812854:	102bd07a 	srai	r21,r2,1
  812858:	a80d883a 	mov	r6,r21
  81285c:	a900022e 	bgeu	r21,r4,812868 <__ssprint_r+0xa8>
  812860:	202b883a 	mov	r21,r4
  812864:	200d883a 	mov	r6,r4
  812868:	18c1000c 	andi	r3,r3,1024
  81286c:	9809883a 	mov	r4,r19
  812870:	18002926 	beq	r3,zero,812918 <__ssprint_r+0x158>
  812874:	300b883a 	mov	r5,r6
  812878:	08022b80 	call	8022b8 <_malloc_r>
  81287c:	1029883a 	mov	r20,r2
  812880:	10002b26 	beq	r2,zero,812930 <__ssprint_r+0x170>
  812884:	89400417 	ldw	r5,16(r17)
  812888:	1009883a 	mov	r4,r2
  81288c:	b00d883a 	mov	r6,r22
  812890:	0808f440 	call	808f44 <memcpy>
  812894:	8880030b 	ldhu	r2,12(r17)
  812898:	00fedfc4 	movi	r3,-1153
  81289c:	10c4703a 	and	r2,r2,r3
  8128a0:	10802014 	ori	r2,r2,128
  8128a4:	8880030d 	sth	r2,12(r17)
  8128a8:	a589883a 	add	r4,r20,r22
  8128ac:	adadc83a 	sub	r22,r21,r22
  8128b0:	8d400515 	stw	r21,20(r17)
  8128b4:	8d800215 	stw	r22,8(r17)
  8128b8:	8d000415 	stw	r20,16(r17)
  8128bc:	89000015 	stw	r4,0(r17)
  8128c0:	802b883a 	mov	r21,r16
  8128c4:	802d883a 	mov	r22,r16
  8128c8:	e00b883a 	mov	r5,fp
  8128cc:	b00d883a 	mov	r6,r22
  8128d0:	080907c0 	call	80907c <memmove>
  8128d4:	88800217 	ldw	r2,8(r17)
  8128d8:	89000017 	ldw	r4,0(r17)
  8128dc:	90c00217 	ldw	r3,8(r18)
  8128e0:	1545c83a 	sub	r2,r2,r21
  8128e4:	2589883a 	add	r4,r4,r22
  8128e8:	88800215 	stw	r2,8(r17)
  8128ec:	89000015 	stw	r4,0(r17)
  8128f0:	1c21c83a 	sub	r16,r3,r16
  8128f4:	94000215 	stw	r16,8(r18)
  8128f8:	80001626 	beq	r16,zero,812954 <__ssprint_r+0x194>
  8128fc:	bf000017 	ldw	fp,0(r23)
  812900:	bc000117 	ldw	r16,4(r23)
  812904:	bdc00204 	addi	r23,r23,8
  812908:	003fc206 	br	812814 <__alt_data_end+0xff812814>
  81290c:	802b883a 	mov	r21,r16
  812910:	802d883a 	mov	r22,r16
  812914:	003fec06 	br	8128c8 <__alt_data_end+0xff8128c8>
  812918:	080a3400 	call	80a340 <_realloc_r>
  81291c:	1029883a 	mov	r20,r2
  812920:	103fe11e 	bne	r2,zero,8128a8 <__alt_data_end+0xff8128a8>
  812924:	89400417 	ldw	r5,16(r17)
  812928:	9809883a 	mov	r4,r19
  81292c:	080159c0 	call	80159c <_free_r>
  812930:	88c0030b 	ldhu	r3,12(r17)
  812934:	00800304 	movi	r2,12
  812938:	98800015 	stw	r2,0(r19)
  81293c:	18c01014 	ori	r3,r3,64
  812940:	88c0030d 	sth	r3,12(r17)
  812944:	00bfffc4 	movi	r2,-1
  812948:	90000215 	stw	zero,8(r18)
  81294c:	90000115 	stw	zero,4(r18)
  812950:	00000206 	br	81295c <__ssprint_r+0x19c>
  812954:	90000115 	stw	zero,4(r18)
  812958:	0005883a 	mov	r2,zero
  81295c:	dfc00917 	ldw	ra,36(sp)
  812960:	df000817 	ldw	fp,32(sp)
  812964:	ddc00717 	ldw	r23,28(sp)
  812968:	dd800617 	ldw	r22,24(sp)
  81296c:	dd400517 	ldw	r21,20(sp)
  812970:	dd000417 	ldw	r20,16(sp)
  812974:	dcc00317 	ldw	r19,12(sp)
  812978:	dc800217 	ldw	r18,8(sp)
  81297c:	dc400117 	ldw	r17,4(sp)
  812980:	dc000017 	ldw	r16,0(sp)
  812984:	dec00a04 	addi	sp,sp,40
  812988:	f800283a 	ret

0081298c <___svfiprintf_internal_r>:
  81298c:	2880030b 	ldhu	r2,12(r5)
  812990:	deffc904 	addi	sp,sp,-220
  812994:	dd403215 	stw	r21,200(sp)
  812998:	dfc03615 	stw	ra,216(sp)
  81299c:	df003515 	stw	fp,212(sp)
  8129a0:	ddc03415 	stw	r23,208(sp)
  8129a4:	dd803315 	stw	r22,204(sp)
  8129a8:	dd003115 	stw	r20,196(sp)
  8129ac:	dcc03015 	stw	r19,192(sp)
  8129b0:	dc802f15 	stw	r18,188(sp)
  8129b4:	dc402e15 	stw	r17,184(sp)
  8129b8:	dc002d15 	stw	r16,180(sp)
  8129bc:	d9402715 	stw	r5,156(sp)
  8129c0:	d9002915 	stw	r4,164(sp)
  8129c4:	1080200c 	andi	r2,r2,128
  8129c8:	d9c02315 	stw	r7,140(sp)
  8129cc:	302b883a 	mov	r21,r6
  8129d0:	10000226 	beq	r2,zero,8129dc <___svfiprintf_internal_r+0x50>
  8129d4:	28800417 	ldw	r2,16(r5)
  8129d8:	1003ce26 	beq	r2,zero,813914 <___svfiprintf_internal_r+0xf88>
  8129dc:	dac01a04 	addi	r11,sp,104
  8129e0:	da8019c4 	addi	r10,sp,103
  8129e4:	dc802917 	ldw	r18,164(sp)
  8129e8:	dd002717 	ldw	r20,156(sp)
  8129ec:	04c020b4 	movhi	r19,130
  8129f0:	dac01e15 	stw	r11,120(sp)
  8129f4:	5a97c83a 	sub	r11,r11,r10
  8129f8:	9cef3a84 	addi	r19,r19,-17174
  8129fc:	da801f15 	stw	r10,124(sp)
  812a00:	dec01a15 	stw	sp,104(sp)
  812a04:	d8001c15 	stw	zero,112(sp)
  812a08:	d8001b15 	stw	zero,108(sp)
  812a0c:	d811883a 	mov	r8,sp
  812a10:	d8002a15 	stw	zero,168(sp)
  812a14:	d8002415 	stw	zero,144(sp)
  812a18:	dac02b15 	stw	r11,172(sp)
  812a1c:	a8800007 	ldb	r2,0(r21)
  812a20:	10026a26 	beq	r2,zero,8133cc <___svfiprintf_internal_r+0xa40>
  812a24:	01000944 	movi	r4,37
  812a28:	11026826 	beq	r2,r4,8133cc <___svfiprintf_internal_r+0xa40>
  812a2c:	a805883a 	mov	r2,r21
  812a30:	00000106 	br	812a38 <___svfiprintf_internal_r+0xac>
  812a34:	19000326 	beq	r3,r4,812a44 <___svfiprintf_internal_r+0xb8>
  812a38:	10800044 	addi	r2,r2,1
  812a3c:	10c00007 	ldb	r3,0(r2)
  812a40:	183ffc1e 	bne	r3,zero,812a34 <__alt_data_end+0xff812a34>
  812a44:	1561c83a 	sub	r16,r2,r21
  812a48:	102d883a 	mov	r22,r2
  812a4c:	80000e26 	beq	r16,zero,812a88 <___svfiprintf_internal_r+0xfc>
  812a50:	d8c01c17 	ldw	r3,112(sp)
  812a54:	d8801b17 	ldw	r2,108(sp)
  812a58:	45400015 	stw	r21,0(r8)
  812a5c:	1c07883a 	add	r3,r3,r16
  812a60:	10800044 	addi	r2,r2,1
  812a64:	d8c01c15 	stw	r3,112(sp)
  812a68:	44000115 	stw	r16,4(r8)
  812a6c:	d8801b15 	stw	r2,108(sp)
  812a70:	00c001c4 	movi	r3,7
  812a74:	1882d816 	blt	r3,r2,8135d8 <___svfiprintf_internal_r+0xc4c>
  812a78:	42000204 	addi	r8,r8,8
  812a7c:	da802417 	ldw	r10,144(sp)
  812a80:	5415883a 	add	r10,r10,r16
  812a84:	da802415 	stw	r10,144(sp)
  812a88:	b0800007 	ldb	r2,0(r22)
  812a8c:	10027526 	beq	r2,zero,813464 <___svfiprintf_internal_r+0xad8>
  812a90:	b1000047 	ldb	r4,1(r22)
  812a94:	b5400044 	addi	r21,r22,1
  812a98:	d8001d85 	stb	zero,118(sp)
  812a9c:	000d883a 	mov	r6,zero
  812aa0:	043fffc4 	movi	r16,-1
  812aa4:	d8002115 	stw	zero,132(sp)
  812aa8:	0023883a 	mov	r17,zero
  812aac:	00c01604 	movi	r3,88
  812ab0:	01400244 	movi	r5,9
  812ab4:	02400a84 	movi	r9,42
  812ab8:	01c01b04 	movi	r7,108
  812abc:	ad400044 	addi	r21,r21,1
  812ac0:	20bff804 	addi	r2,r4,-32
  812ac4:	18819736 	bltu	r3,r2,813124 <___svfiprintf_internal_r+0x798>
  812ac8:	100490ba 	slli	r2,r2,2
  812acc:	02c02074 	movhi	r11,129
  812ad0:	5acab804 	addi	r11,r11,10976
  812ad4:	12c5883a 	add	r2,r2,r11
  812ad8:	10800017 	ldw	r2,0(r2)
  812adc:	1000683a 	jmp	r2
  812ae0:	0081301c 	xori	r2,zero,1216
  812ae4:	00813124 	muli	r2,zero,1220
  812ae8:	00813124 	muli	r2,zero,1220
  812aec:	00813010 	cmplti	r2,zero,1216
  812af0:	00813124 	muli	r2,zero,1220
  812af4:	00813124 	muli	r2,zero,1220
  812af8:	00813124 	muli	r2,zero,1220
  812afc:	00813124 	muli	r2,zero,1220
  812b00:	00813124 	muli	r2,zero,1220
  812b04:	00813124 	muli	r2,zero,1220
  812b08:	00812d3c 	xorhi	r2,zero,1204
  812b0c:	00813158 	cmpnei	r2,zero,1221
  812b10:	00813124 	muli	r2,zero,1220
  812b14:	00812d64 	muli	r2,zero,1205
  812b18:	00813164 	muli	r2,zero,1221
  812b1c:	00813124 	muli	r2,zero,1220
  812b20:	0081314c 	andi	r2,zero,1221
  812b24:	008130ec 	andhi	r2,zero,1219
  812b28:	008130ec 	andhi	r2,zero,1219
  812b2c:	008130ec 	andhi	r2,zero,1219
  812b30:	008130ec 	andhi	r2,zero,1219
  812b34:	008130ec 	andhi	r2,zero,1219
  812b38:	008130ec 	andhi	r2,zero,1219
  812b3c:	008130ec 	andhi	r2,zero,1219
  812b40:	008130ec 	andhi	r2,zero,1219
  812b44:	008130ec 	andhi	r2,zero,1219
  812b48:	00813124 	muli	r2,zero,1220
  812b4c:	00813124 	muli	r2,zero,1220
  812b50:	00813124 	muli	r2,zero,1220
  812b54:	00813124 	muli	r2,zero,1220
  812b58:	00813124 	muli	r2,zero,1220
  812b5c:	00813124 	muli	r2,zero,1220
  812b60:	00813124 	muli	r2,zero,1220
  812b64:	00813124 	muli	r2,zero,1220
  812b68:	00813124 	muli	r2,zero,1220
  812b6c:	00813124 	muli	r2,zero,1220
  812b70:	00813084 	movi	r2,1218
  812b74:	00813124 	muli	r2,zero,1220
  812b78:	00813124 	muli	r2,zero,1220
  812b7c:	00813124 	muli	r2,zero,1220
  812b80:	00813124 	muli	r2,zero,1220
  812b84:	00813124 	muli	r2,zero,1220
  812b88:	00813124 	muli	r2,zero,1220
  812b8c:	00813124 	muli	r2,zero,1220
  812b90:	00813124 	muli	r2,zero,1220
  812b94:	00813124 	muli	r2,zero,1220
  812b98:	00813124 	muli	r2,zero,1220
  812b9c:	00812d10 	cmplti	r2,zero,1204
  812ba0:	00813124 	muli	r2,zero,1220
  812ba4:	00813124 	muli	r2,zero,1220
  812ba8:	00813124 	muli	r2,zero,1220
  812bac:	00813124 	muli	r2,zero,1220
  812bb0:	00813124 	muli	r2,zero,1220
  812bb4:	00812c44 	movi	r2,1201
  812bb8:	00813124 	muli	r2,zero,1220
  812bbc:	00813124 	muli	r2,zero,1220
  812bc0:	00812f70 	cmpltui	r2,zero,1213
  812bc4:	00813124 	muli	r2,zero,1220
  812bc8:	00813124 	muli	r2,zero,1220
  812bcc:	00813124 	muli	r2,zero,1220
  812bd0:	00813124 	muli	r2,zero,1220
  812bd4:	00813124 	muli	r2,zero,1220
  812bd8:	00813124 	muli	r2,zero,1220
  812bdc:	00813124 	muli	r2,zero,1220
  812be0:	00813124 	muli	r2,zero,1220
  812be4:	00813124 	muli	r2,zero,1220
  812be8:	00813124 	muli	r2,zero,1220
  812bec:	00812e5c 	xori	r2,zero,1209
  812bf0:	00812e1c 	xori	r2,zero,1208
  812bf4:	00813124 	muli	r2,zero,1220
  812bf8:	00813124 	muli	r2,zero,1220
  812bfc:	00813124 	muli	r2,zero,1220
  812c00:	00812fcc 	andi	r2,zero,1215
  812c04:	00812e1c 	xori	r2,zero,1208
  812c08:	00813124 	muli	r2,zero,1220
  812c0c:	00813124 	muli	r2,zero,1220
  812c10:	00812fb8 	rdprs	r2,zero,1214
  812c14:	00813124 	muli	r2,zero,1220
  812c18:	00812fd8 	cmpnei	r2,zero,1215
  812c1c:	00812d14 	movui	r2,1204
  812c20:	00812dd8 	cmpnei	r2,zero,1207
  812c24:	00812dcc 	andi	r2,zero,1207
  812c28:	00813124 	muli	r2,zero,1220
  812c2c:	00812d70 	cmpltui	r2,zero,1205
  812c30:	00813124 	muli	r2,zero,1220
  812c34:	00812c48 	cmpgei	r2,zero,1201
  812c38:	00813124 	muli	r2,zero,1220
  812c3c:	00813124 	muli	r2,zero,1220
  812c40:	00813038 	rdprs	r2,zero,1216
  812c44:	8c400414 	ori	r17,r17,16
  812c48:	8880080c 	andi	r2,r17,32
  812c4c:	10029626 	beq	r2,zero,8136a8 <___svfiprintf_internal_r+0xd1c>
  812c50:	da802317 	ldw	r10,140(sp)
  812c54:	dac02317 	ldw	r11,140(sp)
  812c58:	00800044 	movi	r2,1
  812c5c:	52400017 	ldw	r9,0(r10)
  812c60:	52800117 	ldw	r10,4(r10)
  812c64:	5ac00204 	addi	r11,r11,8
  812c68:	dac02315 	stw	r11,140(sp)
  812c6c:	4a86b03a 	or	r3,r9,r10
  812c70:	d8001d85 	stb	zero,118(sp)
  812c74:	8039883a 	mov	fp,r16
  812c78:	0017883a 	mov	r11,zero
  812c7c:	80000216 	blt	r16,zero,812c88 <___svfiprintf_internal_r+0x2fc>
  812c80:	013fdfc4 	movi	r4,-129
  812c84:	8922703a 	and	r17,r17,r4
  812c88:	1801d21e 	bne	r3,zero,8133d4 <___svfiprintf_internal_r+0xa48>
  812c8c:	80024626 	beq	r16,zero,8135a8 <___svfiprintf_internal_r+0xc1c>
  812c90:	10803fcc 	andi	r2,r2,255
  812c94:	00c00044 	movi	r3,1
  812c98:	10c2b426 	beq	r2,r3,81376c <___svfiprintf_internal_r+0xde0>
  812c9c:	00c00084 	movi	r3,2
  812ca0:	10c25d26 	beq	r2,r3,813618 <___svfiprintf_internal_r+0xc8c>
  812ca4:	d8c01a04 	addi	r3,sp,104
  812ca8:	4808d0fa 	srli	r4,r9,3
  812cac:	500a977a 	slli	r5,r10,29
  812cb0:	5014d0fa 	srli	r10,r10,3
  812cb4:	4a4001cc 	andi	r9,r9,7
  812cb8:	48800c04 	addi	r2,r9,48
  812cbc:	18ffffc4 	addi	r3,r3,-1
  812cc0:	2912b03a 	or	r9,r5,r4
  812cc4:	18800005 	stb	r2,0(r3)
  812cc8:	4a88b03a 	or	r4,r9,r10
  812ccc:	203ff61e 	bne	r4,zero,812ca8 <__alt_data_end+0xff812ca8>
  812cd0:	8900004c 	andi	r4,r17,1
  812cd4:	d8c02615 	stw	r3,152(sp)
  812cd8:	2002961e 	bne	r4,zero,813734 <___svfiprintf_internal_r+0xda8>
  812cdc:	da801e17 	ldw	r10,120(sp)
  812ce0:	50f9c83a 	sub	fp,r10,r3
  812ce4:	df002015 	stw	fp,128(sp)
  812ce8:	e400010e 	bge	fp,r16,812cf0 <___svfiprintf_internal_r+0x364>
  812cec:	dc002015 	stw	r16,128(sp)
  812cf0:	5ac03fcc 	andi	r11,r11,255
  812cf4:	5ac0201c 	xori	r11,r11,128
  812cf8:	5affe004 	addi	r11,r11,-128
  812cfc:	58006326 	beq	r11,zero,812e8c <___svfiprintf_internal_r+0x500>
  812d00:	d8c02017 	ldw	r3,128(sp)
  812d04:	18c00044 	addi	r3,r3,1
  812d08:	d8c02015 	stw	r3,128(sp)
  812d0c:	00005f06 	br	812e8c <___svfiprintf_internal_r+0x500>
  812d10:	8c400414 	ori	r17,r17,16
  812d14:	8880080c 	andi	r2,r17,32
  812d18:	10027926 	beq	r2,zero,813700 <___svfiprintf_internal_r+0xd74>
  812d1c:	dac02317 	ldw	r11,140(sp)
  812d20:	0005883a 	mov	r2,zero
  812d24:	5a400017 	ldw	r9,0(r11)
  812d28:	5a800117 	ldw	r10,4(r11)
  812d2c:	5ac00204 	addi	r11,r11,8
  812d30:	dac02315 	stw	r11,140(sp)
  812d34:	4a86b03a 	or	r3,r9,r10
  812d38:	003fcd06 	br	812c70 <__alt_data_end+0xff812c70>
  812d3c:	da802317 	ldw	r10,140(sp)
  812d40:	dac02317 	ldw	r11,140(sp)
  812d44:	52800017 	ldw	r10,0(r10)
  812d48:	58800104 	addi	r2,r11,4
  812d4c:	da802115 	stw	r10,132(sp)
  812d50:	50028c0e 	bge	r10,zero,813784 <___svfiprintf_internal_r+0xdf8>
  812d54:	da802117 	ldw	r10,132(sp)
  812d58:	d8802315 	stw	r2,140(sp)
  812d5c:	0295c83a 	sub	r10,zero,r10
  812d60:	da802115 	stw	r10,132(sp)
  812d64:	8c400114 	ori	r17,r17,4
  812d68:	a9000007 	ldb	r4,0(r21)
  812d6c:	003f5306 	br	812abc <__alt_data_end+0xff812abc>
  812d70:	da802317 	ldw	r10,140(sp)
  812d74:	dac02317 	ldw	r11,140(sp)
  812d78:	d8001d85 	stb	zero,118(sp)
  812d7c:	52800017 	ldw	r10,0(r10)
  812d80:	5dc00104 	addi	r23,r11,4
  812d84:	da802615 	stw	r10,152(sp)
  812d88:	5002d626 	beq	r10,zero,8138e4 <___svfiprintf_internal_r+0xf58>
  812d8c:	d9002617 	ldw	r4,152(sp)
  812d90:	8002cc16 	blt	r16,zero,8138c4 <___svfiprintf_internal_r+0xf38>
  812d94:	000b883a 	mov	r5,zero
  812d98:	800d883a 	mov	r6,r16
  812d9c:	da002c15 	stw	r8,176(sp)
  812da0:	0808e5c0 	call	808e5c <memchr>
  812da4:	da002c17 	ldw	r8,176(sp)
  812da8:	1002f026 	beq	r2,zero,81396c <___svfiprintf_internal_r+0xfe0>
  812dac:	d8c02617 	ldw	r3,152(sp)
  812db0:	10f9c83a 	sub	fp,r2,r3
  812db4:	8700010e 	bge	r16,fp,812dbc <___svfiprintf_internal_r+0x430>
  812db8:	8039883a 	mov	fp,r16
  812dbc:	dac01d83 	ldbu	r11,118(sp)
  812dc0:	ddc02315 	stw	r23,140(sp)
  812dc4:	0021883a 	mov	r16,zero
  812dc8:	003fc606 	br	812ce4 <__alt_data_end+0xff812ce4>
  812dcc:	8c400814 	ori	r17,r17,32
  812dd0:	a9000007 	ldb	r4,0(r21)
  812dd4:	003f3906 	br	812abc <__alt_data_end+0xff812abc>
  812dd8:	da802317 	ldw	r10,140(sp)
  812ddc:	00800c04 	movi	r2,48
  812de0:	dac02317 	ldw	r11,140(sp)
  812de4:	52400017 	ldw	r9,0(r10)
  812de8:	d8801d05 	stb	r2,116(sp)
  812dec:	00801e04 	movi	r2,120
  812df0:	d8801d45 	stb	r2,117(sp)
  812df4:	008020b4 	movhi	r2,130
  812df8:	10adca04 	addi	r2,r2,-18648
  812dfc:	5ac00104 	addi	r11,r11,4
  812e00:	d8802a15 	stw	r2,168(sp)
  812e04:	0015883a 	mov	r10,zero
  812e08:	8c400094 	ori	r17,r17,2
  812e0c:	dac02315 	stw	r11,140(sp)
  812e10:	00800084 	movi	r2,2
  812e14:	4807883a 	mov	r3,r9
  812e18:	003f9506 	br	812c70 <__alt_data_end+0xff812c70>
  812e1c:	d9801d85 	stb	r6,118(sp)
  812e20:	8880080c 	andi	r2,r17,32
  812e24:	d8c02317 	ldw	r3,140(sp)
  812e28:	10009b26 	beq	r2,zero,813098 <___svfiprintf_internal_r+0x70c>
  812e2c:	dac02317 	ldw	r11,140(sp)
  812e30:	18800117 	ldw	r2,4(r3)
  812e34:	1a400017 	ldw	r9,0(r3)
  812e38:	5ac00204 	addi	r11,r11,8
  812e3c:	dac02315 	stw	r11,140(sp)
  812e40:	1015883a 	mov	r10,r2
  812e44:	10009f16 	blt	r2,zero,8130c4 <___svfiprintf_internal_r+0x738>
  812e48:	dac01d83 	ldbu	r11,118(sp)
  812e4c:	8039883a 	mov	fp,r16
  812e50:	00800044 	movi	r2,1
  812e54:	4a86b03a 	or	r3,r9,r10
  812e58:	003f8806 	br	812c7c <__alt_data_end+0xff812c7c>
  812e5c:	dac02317 	ldw	r11,140(sp)
  812e60:	00c00044 	movi	r3,1
  812e64:	da801004 	addi	r10,sp,64
  812e68:	58800017 	ldw	r2,0(r11)
  812e6c:	5ac00104 	addi	r11,r11,4
  812e70:	d8c02015 	stw	r3,128(sp)
  812e74:	d8001d85 	stb	zero,118(sp)
  812e78:	d8801005 	stb	r2,64(sp)
  812e7c:	dac02315 	stw	r11,140(sp)
  812e80:	1839883a 	mov	fp,r3
  812e84:	da802615 	stw	r10,152(sp)
  812e88:	0021883a 	mov	r16,zero
  812e8c:	8a80008c 	andi	r10,r17,2
  812e90:	da802215 	stw	r10,136(sp)
  812e94:	50000326 	beq	r10,zero,812ea4 <___svfiprintf_internal_r+0x518>
  812e98:	dac02017 	ldw	r11,128(sp)
  812e9c:	5ac00084 	addi	r11,r11,2
  812ea0:	dac02015 	stw	r11,128(sp)
  812ea4:	88c0210c 	andi	r3,r17,132
  812ea8:	d8c02515 	stw	r3,148(sp)
  812eac:	1800bd1e 	bne	r3,zero,8131a4 <___svfiprintf_internal_r+0x818>
  812eb0:	da802117 	ldw	r10,132(sp)
  812eb4:	dac02017 	ldw	r11,128(sp)
  812eb8:	52edc83a 	sub	r22,r10,r11
  812ebc:	0580b90e 	bge	zero,r22,8131a4 <___svfiprintf_internal_r+0x818>
  812ec0:	02400404 	movi	r9,16
  812ec4:	d8c01c17 	ldw	r3,112(sp)
  812ec8:	d8801b17 	ldw	r2,108(sp)
  812ecc:	4d829b0e 	bge	r9,r22,81393c <___svfiprintf_internal_r+0xfb0>
  812ed0:	014020b4 	movhi	r5,130
  812ed4:	296f3e84 	addi	r5,r5,-17158
  812ed8:	d9402815 	stw	r5,160(sp)
  812edc:	05c001c4 	movi	r23,7
  812ee0:	00000306 	br	812ef0 <___svfiprintf_internal_r+0x564>
  812ee4:	b5bffc04 	addi	r22,r22,-16
  812ee8:	42000204 	addi	r8,r8,8
  812eec:	4d80150e 	bge	r9,r22,812f44 <___svfiprintf_internal_r+0x5b8>
  812ef0:	028020b4 	movhi	r10,130
  812ef4:	18c00404 	addi	r3,r3,16
  812ef8:	10800044 	addi	r2,r2,1
  812efc:	52af3e84 	addi	r10,r10,-17158
  812f00:	42800015 	stw	r10,0(r8)
  812f04:	42400115 	stw	r9,4(r8)
  812f08:	d8c01c15 	stw	r3,112(sp)
  812f0c:	d8801b15 	stw	r2,108(sp)
  812f10:	b8bff40e 	bge	r23,r2,812ee4 <__alt_data_end+0xff812ee4>
  812f14:	9009883a 	mov	r4,r18
  812f18:	a00b883a 	mov	r5,r20
  812f1c:	d9801a04 	addi	r6,sp,104
  812f20:	da402c15 	stw	r9,176(sp)
  812f24:	08127c00 	call	8127c0 <__ssprint_r>
  812f28:	da402c17 	ldw	r9,176(sp)
  812f2c:	1001531e 	bne	r2,zero,81347c <___svfiprintf_internal_r+0xaf0>
  812f30:	b5bffc04 	addi	r22,r22,-16
  812f34:	d8c01c17 	ldw	r3,112(sp)
  812f38:	d8801b17 	ldw	r2,108(sp)
  812f3c:	d811883a 	mov	r8,sp
  812f40:	4dbfeb16 	blt	r9,r22,812ef0 <__alt_data_end+0xff812ef0>
  812f44:	dac02817 	ldw	r11,160(sp)
  812f48:	b0c7883a 	add	r3,r22,r3
  812f4c:	10800044 	addi	r2,r2,1
  812f50:	42c00015 	stw	r11,0(r8)
  812f54:	45800115 	stw	r22,4(r8)
  812f58:	d8c01c15 	stw	r3,112(sp)
  812f5c:	d8801b15 	stw	r2,108(sp)
  812f60:	010001c4 	movi	r4,7
  812f64:	2081dd16 	blt	r4,r2,8136dc <___svfiprintf_internal_r+0xd50>
  812f68:	42000204 	addi	r8,r8,8
  812f6c:	00008f06 	br	8131ac <___svfiprintf_internal_r+0x820>
  812f70:	008020b4 	movhi	r2,130
  812f74:	10adc504 	addi	r2,r2,-18668
  812f78:	d8802a15 	stw	r2,168(sp)
  812f7c:	d9801d85 	stb	r6,118(sp)
  812f80:	8880080c 	andi	r2,r17,32
  812f84:	10003226 	beq	r2,zero,813050 <___svfiprintf_internal_r+0x6c4>
  812f88:	da802317 	ldw	r10,140(sp)
  812f8c:	dac02317 	ldw	r11,140(sp)
  812f90:	52400017 	ldw	r9,0(r10)
  812f94:	52800117 	ldw	r10,4(r10)
  812f98:	5ac00204 	addi	r11,r11,8
  812f9c:	dac02315 	stw	r11,140(sp)
  812fa0:	8880004c 	andi	r2,r17,1
  812fa4:	10003426 	beq	r2,zero,813078 <___svfiprintf_internal_r+0x6ec>
  812fa8:	4a86b03a 	or	r3,r9,r10
  812fac:	1802231e 	bne	r3,zero,81383c <___svfiprintf_internal_r+0xeb0>
  812fb0:	00800084 	movi	r2,2
  812fb4:	003f2e06 	br	812c70 <__alt_data_end+0xff812c70>
  812fb8:	a9000007 	ldb	r4,0(r21)
  812fbc:	a805883a 	mov	r2,r21
  812fc0:	21c22426 	beq	r4,r7,813854 <___svfiprintf_internal_r+0xec8>
  812fc4:	8c400414 	ori	r17,r17,16
  812fc8:	003ebc06 	br	812abc <__alt_data_end+0xff812abc>
  812fcc:	8c401014 	ori	r17,r17,64
  812fd0:	a9000007 	ldb	r4,0(r21)
  812fd4:	003eb906 	br	812abc <__alt_data_end+0xff812abc>
  812fd8:	d9801d85 	stb	r6,118(sp)
  812fdc:	8880080c 	andi	r2,r17,32
  812fe0:	10020d1e 	bne	r2,zero,813818 <___svfiprintf_internal_r+0xe8c>
  812fe4:	8880040c 	andi	r2,r17,16
  812fe8:	10021e1e 	bne	r2,zero,813864 <___svfiprintf_internal_r+0xed8>
  812fec:	8c40100c 	andi	r17,r17,64
  812ff0:	88021c26 	beq	r17,zero,813864 <___svfiprintf_internal_r+0xed8>
  812ff4:	dac02317 	ldw	r11,140(sp)
  812ff8:	da802417 	ldw	r10,144(sp)
  812ffc:	58800017 	ldw	r2,0(r11)
  813000:	5ac00104 	addi	r11,r11,4
  813004:	dac02315 	stw	r11,140(sp)
  813008:	1280000d 	sth	r10,0(r2)
  81300c:	003e8306 	br	812a1c <__alt_data_end+0xff812a1c>
  813010:	8c400054 	ori	r17,r17,1
  813014:	a9000007 	ldb	r4,0(r21)
  813018:	003ea806 	br	812abc <__alt_data_end+0xff812abc>
  81301c:	30803fcc 	andi	r2,r6,255
  813020:	1080201c 	xori	r2,r2,128
  813024:	10bfe004 	addi	r2,r2,-128
  813028:	1001f91e 	bne	r2,zero,813810 <___svfiprintf_internal_r+0xe84>
  81302c:	01800804 	movi	r6,32
  813030:	a9000007 	ldb	r4,0(r21)
  813034:	003ea106 	br	812abc <__alt_data_end+0xff812abc>
  813038:	008020b4 	movhi	r2,130
  81303c:	10adca04 	addi	r2,r2,-18648
  813040:	d8802a15 	stw	r2,168(sp)
  813044:	d9801d85 	stb	r6,118(sp)
  813048:	8880080c 	andi	r2,r17,32
  81304c:	103fce1e 	bne	r2,zero,812f88 <__alt_data_end+0xff812f88>
  813050:	8880040c 	andi	r2,r17,16
  813054:	1001e526 	beq	r2,zero,8137ec <___svfiprintf_internal_r+0xe60>
  813058:	da802317 	ldw	r10,140(sp)
  81305c:	dac02317 	ldw	r11,140(sp)
  813060:	52400017 	ldw	r9,0(r10)
  813064:	8880004c 	andi	r2,r17,1
  813068:	5ac00104 	addi	r11,r11,4
  81306c:	dac02315 	stw	r11,140(sp)
  813070:	0015883a 	mov	r10,zero
  813074:	103fcc1e 	bne	r2,zero,812fa8 <__alt_data_end+0xff812fa8>
  813078:	00800084 	movi	r2,2
  81307c:	4a86b03a 	or	r3,r9,r10
  813080:	003efb06 	br	812c70 <__alt_data_end+0xff812c70>
  813084:	8c400414 	ori	r17,r17,16
  813088:	d9801d85 	stb	r6,118(sp)
  81308c:	8880080c 	andi	r2,r17,32
  813090:	d8c02317 	ldw	r3,140(sp)
  813094:	103f651e 	bne	r2,zero,812e2c <__alt_data_end+0xff812e2c>
  813098:	8880040c 	andi	r2,r17,16
  81309c:	1001c61e 	bne	r2,zero,8137b8 <___svfiprintf_internal_r+0xe2c>
  8130a0:	8880100c 	andi	r2,r17,64
  8130a4:	1001c426 	beq	r2,zero,8137b8 <___svfiprintf_internal_r+0xe2c>
  8130a8:	1a40000f 	ldh	r9,0(r3)
  8130ac:	dac02317 	ldw	r11,140(sp)
  8130b0:	4815d7fa 	srai	r10,r9,31
  8130b4:	5ac00104 	addi	r11,r11,4
  8130b8:	dac02315 	stw	r11,140(sp)
  8130bc:	5005883a 	mov	r2,r10
  8130c0:	103f610e 	bge	r2,zero,812e48 <__alt_data_end+0xff812e48>
  8130c4:	0253c83a 	sub	r9,zero,r9
  8130c8:	4804c03a 	cmpne	r2,r9,zero
  8130cc:	0295c83a 	sub	r10,zero,r10
  8130d0:	5095c83a 	sub	r10,r10,r2
  8130d4:	02c00b44 	movi	r11,45
  8130d8:	dac01d85 	stb	r11,118(sp)
  8130dc:	8039883a 	mov	fp,r16
  8130e0:	00800044 	movi	r2,1
  8130e4:	4a86b03a 	or	r3,r9,r10
  8130e8:	003ee406 	br	812c7c <__alt_data_end+0xff812c7c>
  8130ec:	a815883a 	mov	r10,r21
  8130f0:	d8002115 	stw	zero,132(sp)
  8130f4:	20bff404 	addi	r2,r4,-48
  8130f8:	51000007 	ldb	r4,0(r10)
  8130fc:	da802117 	ldw	r10,132(sp)
  813100:	ad400044 	addi	r21,r21,1
  813104:	52c002a4 	muli	r11,r10,10
  813108:	a815883a 	mov	r10,r21
  81310c:	5885883a 	add	r2,r11,r2
  813110:	d8802115 	stw	r2,132(sp)
  813114:	20bff404 	addi	r2,r4,-48
  813118:	28bff72e 	bgeu	r5,r2,8130f8 <__alt_data_end+0xff8130f8>
  81311c:	20bff804 	addi	r2,r4,-32
  813120:	18be692e 	bgeu	r3,r2,812ac8 <__alt_data_end+0xff812ac8>
  813124:	d9801d85 	stb	r6,118(sp)
  813128:	2000ce26 	beq	r4,zero,813464 <___svfiprintf_internal_r+0xad8>
  81312c:	02800044 	movi	r10,1
  813130:	dac01004 	addi	r11,sp,64
  813134:	da802015 	stw	r10,128(sp)
  813138:	d9001005 	stb	r4,64(sp)
  81313c:	d8001d85 	stb	zero,118(sp)
  813140:	5039883a 	mov	fp,r10
  813144:	dac02615 	stw	r11,152(sp)
  813148:	003f4f06 	br	812e88 <__alt_data_end+0xff812e88>
  81314c:	8c402014 	ori	r17,r17,128
  813150:	a9000007 	ldb	r4,0(r21)
  813154:	003e5906 	br	812abc <__alt_data_end+0xff812abc>
  813158:	01800ac4 	movi	r6,43
  81315c:	a9000007 	ldb	r4,0(r21)
  813160:	003e5606 	br	812abc <__alt_data_end+0xff812abc>
  813164:	a9000007 	ldb	r4,0(r21)
  813168:	aa800044 	addi	r10,r21,1
  81316c:	22420626 	beq	r4,r9,813988 <___svfiprintf_internal_r+0xffc>
  813170:	20bff404 	addi	r2,r4,-48
  813174:	502b883a 	mov	r21,r10
  813178:	0021883a 	mov	r16,zero
  81317c:	28be5036 	bltu	r5,r2,812ac0 <__alt_data_end+0xff812ac0>
  813180:	a9000007 	ldb	r4,0(r21)
  813184:	840002a4 	muli	r16,r16,10
  813188:	ad400044 	addi	r21,r21,1
  81318c:	1421883a 	add	r16,r2,r16
  813190:	20bff404 	addi	r2,r4,-48
  813194:	28bffa2e 	bgeu	r5,r2,813180 <__alt_data_end+0xff813180>
  813198:	803e490e 	bge	r16,zero,812ac0 <__alt_data_end+0xff812ac0>
  81319c:	043fffc4 	movi	r16,-1
  8131a0:	003e4706 	br	812ac0 <__alt_data_end+0xff812ac0>
  8131a4:	d8c01c17 	ldw	r3,112(sp)
  8131a8:	d8801b17 	ldw	r2,108(sp)
  8131ac:	d9001d87 	ldb	r4,118(sp)
  8131b0:	20000b26 	beq	r4,zero,8131e0 <___svfiprintf_internal_r+0x854>
  8131b4:	d9001d84 	addi	r4,sp,118
  8131b8:	18c00044 	addi	r3,r3,1
  8131bc:	10800044 	addi	r2,r2,1
  8131c0:	41000015 	stw	r4,0(r8)
  8131c4:	01000044 	movi	r4,1
  8131c8:	41000115 	stw	r4,4(r8)
  8131cc:	d8c01c15 	stw	r3,112(sp)
  8131d0:	d8801b15 	stw	r2,108(sp)
  8131d4:	010001c4 	movi	r4,7
  8131d8:	20811e16 	blt	r4,r2,813654 <___svfiprintf_internal_r+0xcc8>
  8131dc:	42000204 	addi	r8,r8,8
  8131e0:	da802217 	ldw	r10,136(sp)
  8131e4:	50000b26 	beq	r10,zero,813214 <___svfiprintf_internal_r+0x888>
  8131e8:	d9001d04 	addi	r4,sp,116
  8131ec:	18c00084 	addi	r3,r3,2
  8131f0:	10800044 	addi	r2,r2,1
  8131f4:	41000015 	stw	r4,0(r8)
  8131f8:	01000084 	movi	r4,2
  8131fc:	41000115 	stw	r4,4(r8)
  813200:	d8c01c15 	stw	r3,112(sp)
  813204:	d8801b15 	stw	r2,108(sp)
  813208:	010001c4 	movi	r4,7
  81320c:	20811a16 	blt	r4,r2,813678 <___svfiprintf_internal_r+0xcec>
  813210:	42000204 	addi	r8,r8,8
  813214:	dac02517 	ldw	r11,148(sp)
  813218:	01002004 	movi	r4,128
  81321c:	5900a826 	beq	r11,r4,8134c0 <___svfiprintf_internal_r+0xb34>
  813220:	8721c83a 	sub	r16,r16,fp
  813224:	0400260e 	bge	zero,r16,8132c0 <___svfiprintf_internal_r+0x934>
  813228:	01c00404 	movi	r7,16
  81322c:	3c019d0e 	bge	r7,r16,8138a4 <___svfiprintf_internal_r+0xf18>
  813230:	010020b4 	movhi	r4,130
  813234:	212f3a84 	addi	r4,r4,-17174
  813238:	d9002215 	stw	r4,136(sp)
  81323c:	382f883a 	mov	r23,r7
  813240:	058001c4 	movi	r22,7
  813244:	00000306 	br	813254 <___svfiprintf_internal_r+0x8c8>
  813248:	843ffc04 	addi	r16,r16,-16
  81324c:	42000204 	addi	r8,r8,8
  813250:	bc00110e 	bge	r23,r16,813298 <___svfiprintf_internal_r+0x90c>
  813254:	18c00404 	addi	r3,r3,16
  813258:	10800044 	addi	r2,r2,1
  81325c:	44c00015 	stw	r19,0(r8)
  813260:	45c00115 	stw	r23,4(r8)
  813264:	d8c01c15 	stw	r3,112(sp)
  813268:	d8801b15 	stw	r2,108(sp)
  81326c:	b0bff60e 	bge	r22,r2,813248 <__alt_data_end+0xff813248>
  813270:	9009883a 	mov	r4,r18
  813274:	a00b883a 	mov	r5,r20
  813278:	d9801a04 	addi	r6,sp,104
  81327c:	08127c00 	call	8127c0 <__ssprint_r>
  813280:	10007e1e 	bne	r2,zero,81347c <___svfiprintf_internal_r+0xaf0>
  813284:	843ffc04 	addi	r16,r16,-16
  813288:	d8c01c17 	ldw	r3,112(sp)
  81328c:	d8801b17 	ldw	r2,108(sp)
  813290:	d811883a 	mov	r8,sp
  813294:	bc3fef16 	blt	r23,r16,813254 <__alt_data_end+0xff813254>
  813298:	da802217 	ldw	r10,136(sp)
  81329c:	1c07883a 	add	r3,r3,r16
  8132a0:	10800044 	addi	r2,r2,1
  8132a4:	42800015 	stw	r10,0(r8)
  8132a8:	44000115 	stw	r16,4(r8)
  8132ac:	d8c01c15 	stw	r3,112(sp)
  8132b0:	d8801b15 	stw	r2,108(sp)
  8132b4:	010001c4 	movi	r4,7
  8132b8:	2080ce16 	blt	r4,r2,8135f4 <___svfiprintf_internal_r+0xc68>
  8132bc:	42000204 	addi	r8,r8,8
  8132c0:	dac02617 	ldw	r11,152(sp)
  8132c4:	1f07883a 	add	r3,r3,fp
  8132c8:	10800044 	addi	r2,r2,1
  8132cc:	42c00015 	stw	r11,0(r8)
  8132d0:	47000115 	stw	fp,4(r8)
  8132d4:	d8c01c15 	stw	r3,112(sp)
  8132d8:	d8801b15 	stw	r2,108(sp)
  8132dc:	010001c4 	movi	r4,7
  8132e0:	2080a316 	blt	r4,r2,813570 <___svfiprintf_internal_r+0xbe4>
  8132e4:	42000204 	addi	r8,r8,8
  8132e8:	8c40010c 	andi	r17,r17,4
  8132ec:	88002b26 	beq	r17,zero,81339c <___svfiprintf_internal_r+0xa10>
  8132f0:	da802117 	ldw	r10,132(sp)
  8132f4:	dac02017 	ldw	r11,128(sp)
  8132f8:	52e1c83a 	sub	r16,r10,r11
  8132fc:	0400270e 	bge	zero,r16,81339c <___svfiprintf_internal_r+0xa10>
  813300:	04400404 	movi	r17,16
  813304:	d8801b17 	ldw	r2,108(sp)
  813308:	8c01900e 	bge	r17,r16,81394c <___svfiprintf_internal_r+0xfc0>
  81330c:	014020b4 	movhi	r5,130
  813310:	296f3e84 	addi	r5,r5,-17158
  813314:	d9402815 	stw	r5,160(sp)
  813318:	070001c4 	movi	fp,7
  81331c:	00000306 	br	81332c <___svfiprintf_internal_r+0x9a0>
  813320:	843ffc04 	addi	r16,r16,-16
  813324:	42000204 	addi	r8,r8,8
  813328:	8c00130e 	bge	r17,r16,813378 <___svfiprintf_internal_r+0x9ec>
  81332c:	028020b4 	movhi	r10,130
  813330:	18c00404 	addi	r3,r3,16
  813334:	10800044 	addi	r2,r2,1
  813338:	52af3e84 	addi	r10,r10,-17158
  81333c:	42800015 	stw	r10,0(r8)
  813340:	44400115 	stw	r17,4(r8)
  813344:	d8c01c15 	stw	r3,112(sp)
  813348:	d8801b15 	stw	r2,108(sp)
  81334c:	e0bff40e 	bge	fp,r2,813320 <__alt_data_end+0xff813320>
  813350:	9009883a 	mov	r4,r18
  813354:	a00b883a 	mov	r5,r20
  813358:	d9801a04 	addi	r6,sp,104
  81335c:	08127c00 	call	8127c0 <__ssprint_r>
  813360:	1000461e 	bne	r2,zero,81347c <___svfiprintf_internal_r+0xaf0>
  813364:	843ffc04 	addi	r16,r16,-16
  813368:	d8c01c17 	ldw	r3,112(sp)
  81336c:	d8801b17 	ldw	r2,108(sp)
  813370:	d811883a 	mov	r8,sp
  813374:	8c3fed16 	blt	r17,r16,81332c <__alt_data_end+0xff81332c>
  813378:	dac02817 	ldw	r11,160(sp)
  81337c:	1c07883a 	add	r3,r3,r16
  813380:	10800044 	addi	r2,r2,1
  813384:	42c00015 	stw	r11,0(r8)
  813388:	44000115 	stw	r16,4(r8)
  81338c:	d8c01c15 	stw	r3,112(sp)
  813390:	d8801b15 	stw	r2,108(sp)
  813394:	010001c4 	movi	r4,7
  813398:	2080fd16 	blt	r4,r2,813790 <___svfiprintf_internal_r+0xe04>
  81339c:	dd802017 	ldw	r22,128(sp)
  8133a0:	da802117 	ldw	r10,132(sp)
  8133a4:	b280010e 	bge	r22,r10,8133ac <___svfiprintf_internal_r+0xa20>
  8133a8:	502d883a 	mov	r22,r10
  8133ac:	dac02417 	ldw	r11,144(sp)
  8133b0:	5d97883a 	add	r11,r11,r22
  8133b4:	dac02415 	stw	r11,144(sp)
  8133b8:	1800751e 	bne	r3,zero,813590 <___svfiprintf_internal_r+0xc04>
  8133bc:	a8800007 	ldb	r2,0(r21)
  8133c0:	d8001b15 	stw	zero,108(sp)
  8133c4:	d811883a 	mov	r8,sp
  8133c8:	103d961e 	bne	r2,zero,812a24 <__alt_data_end+0xff812a24>
  8133cc:	a82d883a 	mov	r22,r21
  8133d0:	003dad06 	br	812a88 <__alt_data_end+0xff812a88>
  8133d4:	10803fcc 	andi	r2,r2,255
  8133d8:	00c00044 	movi	r3,1
  8133dc:	10fe2f1e 	bne	r2,r3,812c9c <__alt_data_end+0xff812c9c>
  8133e0:	5000e026 	beq	r10,zero,813764 <___svfiprintf_internal_r+0xdd8>
  8133e4:	dc002015 	stw	r16,128(sp)
  8133e8:	dc402215 	stw	r17,136(sp)
  8133ec:	dd801a04 	addi	r22,sp,104
  8133f0:	402f883a 	mov	r23,r8
  8133f4:	5839883a 	mov	fp,r11
  8133f8:	4821883a 	mov	r16,r9
  8133fc:	5023883a 	mov	r17,r10
  813400:	8009883a 	mov	r4,r16
  813404:	880b883a 	mov	r5,r17
  813408:	01800284 	movi	r6,10
  81340c:	000f883a 	mov	r7,zero
  813410:	08142400 	call	814240 <__umoddi3>
  813414:	10800c04 	addi	r2,r2,48
  813418:	b5bfffc4 	addi	r22,r22,-1
  81341c:	8009883a 	mov	r4,r16
  813420:	880b883a 	mov	r5,r17
  813424:	01800284 	movi	r6,10
  813428:	000f883a 	mov	r7,zero
  81342c:	b0800005 	stb	r2,0(r22)
  813430:	0813c800 	call	813c80 <__udivdi3>
  813434:	1021883a 	mov	r16,r2
  813438:	10c4b03a 	or	r2,r2,r3
  81343c:	1823883a 	mov	r17,r3
  813440:	103fef1e 	bne	r2,zero,813400 <__alt_data_end+0xff813400>
  813444:	da801e17 	ldw	r10,120(sp)
  813448:	e017883a 	mov	r11,fp
  81344c:	dc002017 	ldw	r16,128(sp)
  813450:	dc402217 	ldw	r17,136(sp)
  813454:	b811883a 	mov	r8,r23
  813458:	dd802615 	stw	r22,152(sp)
  81345c:	55b9c83a 	sub	fp,r10,r22
  813460:	003e2006 	br	812ce4 <__alt_data_end+0xff812ce4>
  813464:	d8801c17 	ldw	r2,112(sp)
  813468:	10000426 	beq	r2,zero,81347c <___svfiprintf_internal_r+0xaf0>
  81346c:	d9002917 	ldw	r4,164(sp)
  813470:	d9402717 	ldw	r5,156(sp)
  813474:	d9801a04 	addi	r6,sp,104
  813478:	08127c00 	call	8127c0 <__ssprint_r>
  81347c:	da802717 	ldw	r10,156(sp)
  813480:	5080030b 	ldhu	r2,12(r10)
  813484:	1080100c 	andi	r2,r2,64
  813488:	1000511e 	bne	r2,zero,8135d0 <___svfiprintf_internal_r+0xc44>
  81348c:	d8802417 	ldw	r2,144(sp)
  813490:	dfc03617 	ldw	ra,216(sp)
  813494:	df003517 	ldw	fp,212(sp)
  813498:	ddc03417 	ldw	r23,208(sp)
  81349c:	dd803317 	ldw	r22,204(sp)
  8134a0:	dd403217 	ldw	r21,200(sp)
  8134a4:	dd003117 	ldw	r20,196(sp)
  8134a8:	dcc03017 	ldw	r19,192(sp)
  8134ac:	dc802f17 	ldw	r18,188(sp)
  8134b0:	dc402e17 	ldw	r17,184(sp)
  8134b4:	dc002d17 	ldw	r16,180(sp)
  8134b8:	dec03704 	addi	sp,sp,220
  8134bc:	f800283a 	ret
  8134c0:	da802117 	ldw	r10,132(sp)
  8134c4:	dac02017 	ldw	r11,128(sp)
  8134c8:	52edc83a 	sub	r22,r10,r11
  8134cc:	05bf540e 	bge	zero,r22,813220 <__alt_data_end+0xff813220>
  8134d0:	02400404 	movi	r9,16
  8134d4:	4d81210e 	bge	r9,r22,81395c <___svfiprintf_internal_r+0xfd0>
  8134d8:	014020b4 	movhi	r5,130
  8134dc:	296f3a84 	addi	r5,r5,-17174
  8134e0:	d9402215 	stw	r5,136(sp)
  8134e4:	05c001c4 	movi	r23,7
  8134e8:	00000306 	br	8134f8 <___svfiprintf_internal_r+0xb6c>
  8134ec:	b5bffc04 	addi	r22,r22,-16
  8134f0:	42000204 	addi	r8,r8,8
  8134f4:	4d80130e 	bge	r9,r22,813544 <___svfiprintf_internal_r+0xbb8>
  8134f8:	18c00404 	addi	r3,r3,16
  8134fc:	10800044 	addi	r2,r2,1
  813500:	44c00015 	stw	r19,0(r8)
  813504:	42400115 	stw	r9,4(r8)
  813508:	d8c01c15 	stw	r3,112(sp)
  81350c:	d8801b15 	stw	r2,108(sp)
  813510:	b8bff60e 	bge	r23,r2,8134ec <__alt_data_end+0xff8134ec>
  813514:	9009883a 	mov	r4,r18
  813518:	a00b883a 	mov	r5,r20
  81351c:	d9801a04 	addi	r6,sp,104
  813520:	da402c15 	stw	r9,176(sp)
  813524:	08127c00 	call	8127c0 <__ssprint_r>
  813528:	da402c17 	ldw	r9,176(sp)
  81352c:	103fd31e 	bne	r2,zero,81347c <__alt_data_end+0xff81347c>
  813530:	b5bffc04 	addi	r22,r22,-16
  813534:	d8c01c17 	ldw	r3,112(sp)
  813538:	d8801b17 	ldw	r2,108(sp)
  81353c:	d811883a 	mov	r8,sp
  813540:	4dbfed16 	blt	r9,r22,8134f8 <__alt_data_end+0xff8134f8>
  813544:	da802217 	ldw	r10,136(sp)
  813548:	1d87883a 	add	r3,r3,r22
  81354c:	10800044 	addi	r2,r2,1
  813550:	42800015 	stw	r10,0(r8)
  813554:	45800115 	stw	r22,4(r8)
  813558:	d8c01c15 	stw	r3,112(sp)
  81355c:	d8801b15 	stw	r2,108(sp)
  813560:	010001c4 	movi	r4,7
  813564:	2080c616 	blt	r4,r2,813880 <___svfiprintf_internal_r+0xef4>
  813568:	42000204 	addi	r8,r8,8
  81356c:	003f2c06 	br	813220 <__alt_data_end+0xff813220>
  813570:	9009883a 	mov	r4,r18
  813574:	a00b883a 	mov	r5,r20
  813578:	d9801a04 	addi	r6,sp,104
  81357c:	08127c00 	call	8127c0 <__ssprint_r>
  813580:	103fbe1e 	bne	r2,zero,81347c <__alt_data_end+0xff81347c>
  813584:	d8c01c17 	ldw	r3,112(sp)
  813588:	d811883a 	mov	r8,sp
  81358c:	003f5606 	br	8132e8 <__alt_data_end+0xff8132e8>
  813590:	9009883a 	mov	r4,r18
  813594:	a00b883a 	mov	r5,r20
  813598:	d9801a04 	addi	r6,sp,104
  81359c:	08127c00 	call	8127c0 <__ssprint_r>
  8135a0:	103f8626 	beq	r2,zero,8133bc <__alt_data_end+0xff8133bc>
  8135a4:	003fb506 	br	81347c <__alt_data_end+0xff81347c>
  8135a8:	10803fcc 	andi	r2,r2,255
  8135ac:	10003b1e 	bne	r2,zero,81369c <___svfiprintf_internal_r+0xd10>
  8135b0:	8880004c 	andi	r2,r17,1
  8135b4:	10007d26 	beq	r2,zero,8137ac <___svfiprintf_internal_r+0xe20>
  8135b8:	00800c04 	movi	r2,48
  8135bc:	d8c019c4 	addi	r3,sp,103
  8135c0:	d88019c5 	stb	r2,103(sp)
  8135c4:	df002b17 	ldw	fp,172(sp)
  8135c8:	d8c02615 	stw	r3,152(sp)
  8135cc:	003dc506 	br	812ce4 <__alt_data_end+0xff812ce4>
  8135d0:	00bfffc4 	movi	r2,-1
  8135d4:	003fae06 	br	813490 <__alt_data_end+0xff813490>
  8135d8:	9009883a 	mov	r4,r18
  8135dc:	a00b883a 	mov	r5,r20
  8135e0:	d9801a04 	addi	r6,sp,104
  8135e4:	08127c00 	call	8127c0 <__ssprint_r>
  8135e8:	103fa41e 	bne	r2,zero,81347c <__alt_data_end+0xff81347c>
  8135ec:	d811883a 	mov	r8,sp
  8135f0:	003d2206 	br	812a7c <__alt_data_end+0xff812a7c>
  8135f4:	9009883a 	mov	r4,r18
  8135f8:	a00b883a 	mov	r5,r20
  8135fc:	d9801a04 	addi	r6,sp,104
  813600:	08127c00 	call	8127c0 <__ssprint_r>
  813604:	103f9d1e 	bne	r2,zero,81347c <__alt_data_end+0xff81347c>
  813608:	d8c01c17 	ldw	r3,112(sp)
  81360c:	d8801b17 	ldw	r2,108(sp)
  813610:	d811883a 	mov	r8,sp
  813614:	003f2a06 	br	8132c0 <__alt_data_end+0xff8132c0>
  813618:	d9402a17 	ldw	r5,168(sp)
  81361c:	d8c01a04 	addi	r3,sp,104
  813620:	488003cc 	andi	r2,r9,15
  813624:	5008973a 	slli	r4,r10,28
  813628:	2885883a 	add	r2,r5,r2
  81362c:	4812d13a 	srli	r9,r9,4
  813630:	10800003 	ldbu	r2,0(r2)
  813634:	5014d13a 	srli	r10,r10,4
  813638:	18ffffc4 	addi	r3,r3,-1
  81363c:	2252b03a 	or	r9,r4,r9
  813640:	18800005 	stb	r2,0(r3)
  813644:	4a84b03a 	or	r2,r9,r10
  813648:	103ff51e 	bne	r2,zero,813620 <__alt_data_end+0xff813620>
  81364c:	d8c02615 	stw	r3,152(sp)
  813650:	003da206 	br	812cdc <__alt_data_end+0xff812cdc>
  813654:	9009883a 	mov	r4,r18
  813658:	a00b883a 	mov	r5,r20
  81365c:	d9801a04 	addi	r6,sp,104
  813660:	08127c00 	call	8127c0 <__ssprint_r>
  813664:	103f851e 	bne	r2,zero,81347c <__alt_data_end+0xff81347c>
  813668:	d8c01c17 	ldw	r3,112(sp)
  81366c:	d8801b17 	ldw	r2,108(sp)
  813670:	d811883a 	mov	r8,sp
  813674:	003eda06 	br	8131e0 <__alt_data_end+0xff8131e0>
  813678:	9009883a 	mov	r4,r18
  81367c:	a00b883a 	mov	r5,r20
  813680:	d9801a04 	addi	r6,sp,104
  813684:	08127c00 	call	8127c0 <__ssprint_r>
  813688:	103f7c1e 	bne	r2,zero,81347c <__alt_data_end+0xff81347c>
  81368c:	d8c01c17 	ldw	r3,112(sp)
  813690:	d8801b17 	ldw	r2,108(sp)
  813694:	d811883a 	mov	r8,sp
  813698:	003ede06 	br	813214 <__alt_data_end+0xff813214>
  81369c:	da801a04 	addi	r10,sp,104
  8136a0:	da802615 	stw	r10,152(sp)
  8136a4:	003d8f06 	br	812ce4 <__alt_data_end+0xff812ce4>
  8136a8:	8880040c 	andi	r2,r17,16
  8136ac:	10004c1e 	bne	r2,zero,8137e0 <___svfiprintf_internal_r+0xe54>
  8136b0:	8880100c 	andi	r2,r17,64
  8136b4:	da802317 	ldw	r10,140(sp)
  8136b8:	10004a26 	beq	r2,zero,8137e4 <___svfiprintf_internal_r+0xe58>
  8136bc:	5240000b 	ldhu	r9,0(r10)
  8136c0:	dac02317 	ldw	r11,140(sp)
  8136c4:	0015883a 	mov	r10,zero
  8136c8:	00800044 	movi	r2,1
  8136cc:	5ac00104 	addi	r11,r11,4
  8136d0:	dac02315 	stw	r11,140(sp)
  8136d4:	4807883a 	mov	r3,r9
  8136d8:	003d6506 	br	812c70 <__alt_data_end+0xff812c70>
  8136dc:	9009883a 	mov	r4,r18
  8136e0:	a00b883a 	mov	r5,r20
  8136e4:	d9801a04 	addi	r6,sp,104
  8136e8:	08127c00 	call	8127c0 <__ssprint_r>
  8136ec:	103f631e 	bne	r2,zero,81347c <__alt_data_end+0xff81347c>
  8136f0:	d8c01c17 	ldw	r3,112(sp)
  8136f4:	d8801b17 	ldw	r2,108(sp)
  8136f8:	d811883a 	mov	r8,sp
  8136fc:	003eab06 	br	8131ac <__alt_data_end+0xff8131ac>
  813700:	8880040c 	andi	r2,r17,16
  813704:	1000331e 	bne	r2,zero,8137d4 <___svfiprintf_internal_r+0xe48>
  813708:	8880100c 	andi	r2,r17,64
  81370c:	da802317 	ldw	r10,140(sp)
  813710:	10003126 	beq	r2,zero,8137d8 <___svfiprintf_internal_r+0xe4c>
  813714:	5240000b 	ldhu	r9,0(r10)
  813718:	dac02317 	ldw	r11,140(sp)
  81371c:	0015883a 	mov	r10,zero
  813720:	0005883a 	mov	r2,zero
  813724:	5ac00104 	addi	r11,r11,4
  813728:	dac02315 	stw	r11,140(sp)
  81372c:	4807883a 	mov	r3,r9
  813730:	003d4f06 	br	812c70 <__alt_data_end+0xff812c70>
  813734:	10803fcc 	andi	r2,r2,255
  813738:	1080201c 	xori	r2,r2,128
  81373c:	10bfe004 	addi	r2,r2,-128
  813740:	01000c04 	movi	r4,48
  813744:	11005b26 	beq	r2,r4,8138b4 <___svfiprintf_internal_r+0xf28>
  813748:	da802617 	ldw	r10,152(sp)
  81374c:	d8801e17 	ldw	r2,120(sp)
  813750:	193fffc5 	stb	r4,-1(r3)
  813754:	52bfffc4 	addi	r10,r10,-1
  813758:	da802615 	stw	r10,152(sp)
  81375c:	12b9c83a 	sub	fp,r2,r10
  813760:	003d6006 	br	812ce4 <__alt_data_end+0xff812ce4>
  813764:	00800244 	movi	r2,9
  813768:	127f1e36 	bltu	r2,r9,8133e4 <__alt_data_end+0xff8133e4>
  81376c:	4a400c04 	addi	r9,r9,48
  813770:	d8c019c4 	addi	r3,sp,103
  813774:	da4019c5 	stb	r9,103(sp)
  813778:	df002b17 	ldw	fp,172(sp)
  81377c:	d8c02615 	stw	r3,152(sp)
  813780:	003d5806 	br	812ce4 <__alt_data_end+0xff812ce4>
  813784:	d8802315 	stw	r2,140(sp)
  813788:	a9000007 	ldb	r4,0(r21)
  81378c:	003ccb06 	br	812abc <__alt_data_end+0xff812abc>
  813790:	9009883a 	mov	r4,r18
  813794:	a00b883a 	mov	r5,r20
  813798:	d9801a04 	addi	r6,sp,104
  81379c:	08127c00 	call	8127c0 <__ssprint_r>
  8137a0:	103f361e 	bne	r2,zero,81347c <__alt_data_end+0xff81347c>
  8137a4:	d8c01c17 	ldw	r3,112(sp)
  8137a8:	003efc06 	br	81339c <__alt_data_end+0xff81339c>
  8137ac:	d8c01a04 	addi	r3,sp,104
  8137b0:	d8c02615 	stw	r3,152(sp)
  8137b4:	003d4b06 	br	812ce4 <__alt_data_end+0xff812ce4>
  8137b8:	da802317 	ldw	r10,140(sp)
  8137bc:	1a400017 	ldw	r9,0(r3)
  8137c0:	52800104 	addi	r10,r10,4
  8137c4:	da802315 	stw	r10,140(sp)
  8137c8:	4815d7fa 	srai	r10,r9,31
  8137cc:	5005883a 	mov	r2,r10
  8137d0:	003d9c06 	br	812e44 <__alt_data_end+0xff812e44>
  8137d4:	da802317 	ldw	r10,140(sp)
  8137d8:	52400017 	ldw	r9,0(r10)
  8137dc:	003fce06 	br	813718 <__alt_data_end+0xff813718>
  8137e0:	da802317 	ldw	r10,140(sp)
  8137e4:	52400017 	ldw	r9,0(r10)
  8137e8:	003fb506 	br	8136c0 <__alt_data_end+0xff8136c0>
  8137ec:	8880100c 	andi	r2,r17,64
  8137f0:	da802317 	ldw	r10,140(sp)
  8137f4:	103e1926 	beq	r2,zero,81305c <__alt_data_end+0xff81305c>
  8137f8:	dac02317 	ldw	r11,140(sp)
  8137fc:	5240000b 	ldhu	r9,0(r10)
  813800:	0015883a 	mov	r10,zero
  813804:	5ac00104 	addi	r11,r11,4
  813808:	dac02315 	stw	r11,140(sp)
  81380c:	003de406 	br	812fa0 <__alt_data_end+0xff812fa0>
  813810:	a9000007 	ldb	r4,0(r21)
  813814:	003ca906 	br	812abc <__alt_data_end+0xff812abc>
  813818:	dac02317 	ldw	r11,140(sp)
  81381c:	da802417 	ldw	r10,144(sp)
  813820:	58800017 	ldw	r2,0(r11)
  813824:	5007d7fa 	srai	r3,r10,31
  813828:	5ac00104 	addi	r11,r11,4
  81382c:	dac02315 	stw	r11,140(sp)
  813830:	12800015 	stw	r10,0(r2)
  813834:	10c00115 	stw	r3,4(r2)
  813838:	003c7806 	br	812a1c <__alt_data_end+0xff812a1c>
  81383c:	00800c04 	movi	r2,48
  813840:	d8801d05 	stb	r2,116(sp)
  813844:	d9001d45 	stb	r4,117(sp)
  813848:	8c400094 	ori	r17,r17,2
  81384c:	00800084 	movi	r2,2
  813850:	003d0706 	br	812c70 <__alt_data_end+0xff812c70>
  813854:	ad400044 	addi	r21,r21,1
  813858:	8c400814 	ori	r17,r17,32
  81385c:	11000047 	ldb	r4,1(r2)
  813860:	003c9606 	br	812abc <__alt_data_end+0xff812abc>
  813864:	dac02317 	ldw	r11,140(sp)
  813868:	da802417 	ldw	r10,144(sp)
  81386c:	58800017 	ldw	r2,0(r11)
  813870:	5ac00104 	addi	r11,r11,4
  813874:	dac02315 	stw	r11,140(sp)
  813878:	12800015 	stw	r10,0(r2)
  81387c:	003c6706 	br	812a1c <__alt_data_end+0xff812a1c>
  813880:	9009883a 	mov	r4,r18
  813884:	a00b883a 	mov	r5,r20
  813888:	d9801a04 	addi	r6,sp,104
  81388c:	08127c00 	call	8127c0 <__ssprint_r>
  813890:	103efa1e 	bne	r2,zero,81347c <__alt_data_end+0xff81347c>
  813894:	d8c01c17 	ldw	r3,112(sp)
  813898:	d8801b17 	ldw	r2,108(sp)
  81389c:	d811883a 	mov	r8,sp
  8138a0:	003e5f06 	br	813220 <__alt_data_end+0xff813220>
  8138a4:	02c020b4 	movhi	r11,130
  8138a8:	5aef3a84 	addi	r11,r11,-17174
  8138ac:	dac02215 	stw	r11,136(sp)
  8138b0:	003e7906 	br	813298 <__alt_data_end+0xff813298>
  8138b4:	da801e17 	ldw	r10,120(sp)
  8138b8:	d8c02617 	ldw	r3,152(sp)
  8138bc:	50f9c83a 	sub	fp,r10,r3
  8138c0:	003d0806 	br	812ce4 <__alt_data_end+0xff812ce4>
  8138c4:	da002c15 	stw	r8,176(sp)
  8138c8:	08032200 	call	803220 <strlen>
  8138cc:	1039883a 	mov	fp,r2
  8138d0:	dac01d83 	ldbu	r11,118(sp)
  8138d4:	ddc02315 	stw	r23,140(sp)
  8138d8:	0021883a 	mov	r16,zero
  8138dc:	da002c17 	ldw	r8,176(sp)
  8138e0:	003d0006 	br	812ce4 <__alt_data_end+0xff812ce4>
  8138e4:	00800184 	movi	r2,6
  8138e8:	1400012e 	bgeu	r2,r16,8138f0 <___svfiprintf_internal_r+0xf64>
  8138ec:	1021883a 	mov	r16,r2
  8138f0:	8039883a 	mov	fp,r16
  8138f4:	802d883a 	mov	r22,r16
  8138f8:	80002116 	blt	r16,zero,813980 <___svfiprintf_internal_r+0xff4>
  8138fc:	008020b4 	movhi	r2,130
  813900:	10adcf04 	addi	r2,r2,-18628
  813904:	dd802015 	stw	r22,128(sp)
  813908:	ddc02315 	stw	r23,140(sp)
  81390c:	d8802615 	stw	r2,152(sp)
  813910:	003d5d06 	br	812e88 <__alt_data_end+0xff812e88>
  813914:	04001004 	movi	r16,64
  813918:	800b883a 	mov	r5,r16
  81391c:	08022b80 	call	8022b8 <_malloc_r>
  813920:	da802717 	ldw	r10,156(sp)
  813924:	50800015 	stw	r2,0(r10)
  813928:	50800415 	stw	r2,16(r10)
  81392c:	10002026 	beq	r2,zero,8139b0 <___svfiprintf_internal_r+0x1024>
  813930:	da802717 	ldw	r10,156(sp)
  813934:	54000515 	stw	r16,20(r10)
  813938:	003c2806 	br	8129dc <__alt_data_end+0xff8129dc>
  81393c:	010020b4 	movhi	r4,130
  813940:	212f3e84 	addi	r4,r4,-17158
  813944:	d9002815 	stw	r4,160(sp)
  813948:	003d7e06 	br	812f44 <__alt_data_end+0xff812f44>
  81394c:	010020b4 	movhi	r4,130
  813950:	212f3e84 	addi	r4,r4,-17158
  813954:	d9002815 	stw	r4,160(sp)
  813958:	003e8706 	br	813378 <__alt_data_end+0xff813378>
  81395c:	010020b4 	movhi	r4,130
  813960:	212f3a84 	addi	r4,r4,-17174
  813964:	d9002215 	stw	r4,136(sp)
  813968:	003ef606 	br	813544 <__alt_data_end+0xff813544>
  81396c:	8039883a 	mov	fp,r16
  813970:	dac01d83 	ldbu	r11,118(sp)
  813974:	ddc02315 	stw	r23,140(sp)
  813978:	0021883a 	mov	r16,zero
  81397c:	003cd906 	br	812ce4 <__alt_data_end+0xff812ce4>
  813980:	002d883a 	mov	r22,zero
  813984:	003fdd06 	br	8138fc <__alt_data_end+0xff8138fc>
  813988:	dac02317 	ldw	r11,140(sp)
  81398c:	a805883a 	mov	r2,r21
  813990:	502b883a 	mov	r21,r10
  813994:	5c000017 	ldw	r16,0(r11)
  813998:	59000104 	addi	r4,r11,4
  81399c:	d9002315 	stw	r4,140(sp)
  8139a0:	803fae0e 	bge	r16,zero,81385c <__alt_data_end+0xff81385c>
  8139a4:	043fffc4 	movi	r16,-1
  8139a8:	11000047 	ldb	r4,1(r2)
  8139ac:	003c4306 	br	812abc <__alt_data_end+0xff812abc>
  8139b0:	dac02917 	ldw	r11,164(sp)
  8139b4:	00800304 	movi	r2,12
  8139b8:	58800015 	stw	r2,0(r11)
  8139bc:	00bfffc4 	movi	r2,-1
  8139c0:	003eb306 	br	813490 <__alt_data_end+0xff813490>

008139c4 <_wcrtomb_r>:
  8139c4:	defff604 	addi	sp,sp,-40
  8139c8:	008020b4 	movhi	r2,130
  8139cc:	dc800815 	stw	r18,32(sp)
  8139d0:	dc400715 	stw	r17,28(sp)
  8139d4:	dc000615 	stw	r16,24(sp)
  8139d8:	10b6e804 	addi	r2,r2,-9312
  8139dc:	dfc00915 	stw	ra,36(sp)
  8139e0:	2021883a 	mov	r16,r4
  8139e4:	3823883a 	mov	r17,r7
  8139e8:	14800017 	ldw	r18,0(r2)
  8139ec:	28001426 	beq	r5,zero,813a40 <_wcrtomb_r+0x7c>
  8139f0:	d9400415 	stw	r5,16(sp)
  8139f4:	d9800515 	stw	r6,20(sp)
  8139f8:	0808b780 	call	808b78 <__locale_charset>
  8139fc:	d9400417 	ldw	r5,16(sp)
  813a00:	d9800517 	ldw	r6,20(sp)
  813a04:	8009883a 	mov	r4,r16
  813a08:	dc400015 	stw	r17,0(sp)
  813a0c:	100f883a 	mov	r7,r2
  813a10:	903ee83a 	callr	r18
  813a14:	00ffffc4 	movi	r3,-1
  813a18:	10c0031e 	bne	r2,r3,813a28 <_wcrtomb_r+0x64>
  813a1c:	88000015 	stw	zero,0(r17)
  813a20:	00c02284 	movi	r3,138
  813a24:	80c00015 	stw	r3,0(r16)
  813a28:	dfc00917 	ldw	ra,36(sp)
  813a2c:	dc800817 	ldw	r18,32(sp)
  813a30:	dc400717 	ldw	r17,28(sp)
  813a34:	dc000617 	ldw	r16,24(sp)
  813a38:	dec00a04 	addi	sp,sp,40
  813a3c:	f800283a 	ret
  813a40:	0808b780 	call	808b78 <__locale_charset>
  813a44:	8009883a 	mov	r4,r16
  813a48:	dc400015 	stw	r17,0(sp)
  813a4c:	d9400104 	addi	r5,sp,4
  813a50:	000d883a 	mov	r6,zero
  813a54:	100f883a 	mov	r7,r2
  813a58:	903ee83a 	callr	r18
  813a5c:	003fed06 	br	813a14 <__alt_data_end+0xff813a14>

00813a60 <wcrtomb>:
  813a60:	defff604 	addi	sp,sp,-40
  813a64:	008020b4 	movhi	r2,130
  813a68:	dc800615 	stw	r18,24(sp)
  813a6c:	dc400515 	stw	r17,20(sp)
  813a70:	dc000415 	stw	r16,16(sp)
  813a74:	10b6e204 	addi	r2,r2,-9336
  813a78:	dfc00915 	stw	ra,36(sp)
  813a7c:	dd000815 	stw	r20,32(sp)
  813a80:	dcc00715 	stw	r19,28(sp)
  813a84:	2021883a 	mov	r16,r4
  813a88:	3025883a 	mov	r18,r6
  813a8c:	14400017 	ldw	r17,0(r2)
  813a90:	20001826 	beq	r4,zero,813af4 <wcrtomb+0x94>
  813a94:	008020b4 	movhi	r2,130
  813a98:	10b6e804 	addi	r2,r2,-9312
  813a9c:	15000017 	ldw	r20,0(r2)
  813aa0:	2827883a 	mov	r19,r5
  813aa4:	0808b780 	call	808b78 <__locale_charset>
  813aa8:	8809883a 	mov	r4,r17
  813aac:	dc800015 	stw	r18,0(sp)
  813ab0:	800b883a 	mov	r5,r16
  813ab4:	980d883a 	mov	r6,r19
  813ab8:	100f883a 	mov	r7,r2
  813abc:	a03ee83a 	callr	r20
  813ac0:	00ffffc4 	movi	r3,-1
  813ac4:	10c0031e 	bne	r2,r3,813ad4 <wcrtomb+0x74>
  813ac8:	90000015 	stw	zero,0(r18)
  813acc:	00c02284 	movi	r3,138
  813ad0:	88c00015 	stw	r3,0(r17)
  813ad4:	dfc00917 	ldw	ra,36(sp)
  813ad8:	dd000817 	ldw	r20,32(sp)
  813adc:	dcc00717 	ldw	r19,28(sp)
  813ae0:	dc800617 	ldw	r18,24(sp)
  813ae4:	dc400517 	ldw	r17,20(sp)
  813ae8:	dc000417 	ldw	r16,16(sp)
  813aec:	dec00a04 	addi	sp,sp,40
  813af0:	f800283a 	ret
  813af4:	008020b4 	movhi	r2,130
  813af8:	10b6e804 	addi	r2,r2,-9312
  813afc:	14000017 	ldw	r16,0(r2)
  813b00:	0808b780 	call	808b78 <__locale_charset>
  813b04:	8809883a 	mov	r4,r17
  813b08:	dc800015 	stw	r18,0(sp)
  813b0c:	d9400104 	addi	r5,sp,4
  813b10:	000d883a 	mov	r6,zero
  813b14:	100f883a 	mov	r7,r2
  813b18:	803ee83a 	callr	r16
  813b1c:	003fe806 	br	813ac0 <__alt_data_end+0xff813ac0>

00813b20 <__ascii_wctomb>:
  813b20:	28000526 	beq	r5,zero,813b38 <__ascii_wctomb+0x18>
  813b24:	00803fc4 	movi	r2,255
  813b28:	11800536 	bltu	r2,r6,813b40 <__ascii_wctomb+0x20>
  813b2c:	29800005 	stb	r6,0(r5)
  813b30:	00800044 	movi	r2,1
  813b34:	f800283a 	ret
  813b38:	0005883a 	mov	r2,zero
  813b3c:	f800283a 	ret
  813b40:	00802284 	movi	r2,138
  813b44:	20800015 	stw	r2,0(r4)
  813b48:	00bfffc4 	movi	r2,-1
  813b4c:	f800283a 	ret

00813b50 <_wctomb_r>:
  813b50:	008020b4 	movhi	r2,130
  813b54:	defff904 	addi	sp,sp,-28
  813b58:	10b6e804 	addi	r2,r2,-9312
  813b5c:	dfc00615 	stw	ra,24(sp)
  813b60:	dc400515 	stw	r17,20(sp)
  813b64:	dc000415 	stw	r16,16(sp)
  813b68:	3823883a 	mov	r17,r7
  813b6c:	14000017 	ldw	r16,0(r2)
  813b70:	d9000115 	stw	r4,4(sp)
  813b74:	d9400215 	stw	r5,8(sp)
  813b78:	d9800315 	stw	r6,12(sp)
  813b7c:	0808b780 	call	808b78 <__locale_charset>
  813b80:	d9000117 	ldw	r4,4(sp)
  813b84:	d9400217 	ldw	r5,8(sp)
  813b88:	d9800317 	ldw	r6,12(sp)
  813b8c:	dc400015 	stw	r17,0(sp)
  813b90:	100f883a 	mov	r7,r2
  813b94:	803ee83a 	callr	r16
  813b98:	dfc00617 	ldw	ra,24(sp)
  813b9c:	dc400517 	ldw	r17,20(sp)
  813ba0:	dc000417 	ldw	r16,16(sp)
  813ba4:	dec00704 	addi	sp,sp,28
  813ba8:	f800283a 	ret

00813bac <__muldi3>:
  813bac:	223fffcc 	andi	r8,r4,65535
  813bb0:	2012d43a 	srli	r9,r4,16
  813bb4:	32bfffcc 	andi	r10,r6,65535
  813bb8:	3006d43a 	srli	r3,r6,16
  813bbc:	5217383a 	mul	r11,r10,r8
  813bc0:	5255383a 	mul	r10,r10,r9
  813bc4:	1a05383a 	mul	r2,r3,r8
  813bc8:	5810d43a 	srli	r8,r11,16
  813bcc:	5085883a 	add	r2,r10,r2
  813bd0:	1205883a 	add	r2,r2,r8
  813bd4:	1a51383a 	mul	r8,r3,r9
  813bd8:	1280022e 	bgeu	r2,r10,813be4 <__muldi3+0x38>
  813bdc:	00c00074 	movhi	r3,1
  813be0:	40d1883a 	add	r8,r8,r3
  813be4:	1006d43a 	srli	r3,r2,16
  813be8:	21cf383a 	mul	r7,r4,r7
  813bec:	314b383a 	mul	r5,r6,r5
  813bf0:	1004943a 	slli	r2,r2,16
  813bf4:	40c7883a 	add	r3,r8,r3
  813bf8:	5affffcc 	andi	r11,r11,65535
  813bfc:	3949883a 	add	r4,r7,r5
  813c00:	12c5883a 	add	r2,r2,r11
  813c04:	20c7883a 	add	r3,r4,r3
  813c08:	f800283a 	ret

00813c0c <__fixunsdfsi>:
  813c0c:	defffd04 	addi	sp,sp,-12
  813c10:	000d883a 	mov	r6,zero
  813c14:	01d07834 	movhi	r7,16864
  813c18:	dc400115 	stw	r17,4(sp)
  813c1c:	dc000015 	stw	r16,0(sp)
  813c20:	dfc00215 	stw	ra,8(sp)
  813c24:	2023883a 	mov	r17,r4
  813c28:	2821883a 	mov	r16,r5
  813c2c:	0815ccc0 	call	815ccc <__gedf2>
  813c30:	1000080e 	bge	r2,zero,813c54 <__fixunsdfsi+0x48>
  813c34:	8809883a 	mov	r4,r17
  813c38:	800b883a 	mov	r5,r16
  813c3c:	0816e800 	call	816e80 <__fixdfsi>
  813c40:	dfc00217 	ldw	ra,8(sp)
  813c44:	dc400117 	ldw	r17,4(sp)
  813c48:	dc000017 	ldw	r16,0(sp)
  813c4c:	dec00304 	addi	sp,sp,12
  813c50:	f800283a 	ret
  813c54:	000d883a 	mov	r6,zero
  813c58:	01d07834 	movhi	r7,16864
  813c5c:	8809883a 	mov	r4,r17
  813c60:	800b883a 	mov	r5,r16
  813c64:	08165b00 	call	8165b0 <__subdf3>
  813c68:	180b883a 	mov	r5,r3
  813c6c:	1009883a 	mov	r4,r2
  813c70:	0816e800 	call	816e80 <__fixdfsi>
  813c74:	00e00034 	movhi	r3,32768
  813c78:	10c5883a 	add	r2,r2,r3
  813c7c:	003ff006 	br	813c40 <__alt_data_end+0xff813c40>

00813c80 <__udivdi3>:
  813c80:	defff504 	addi	sp,sp,-44
  813c84:	dcc00415 	stw	r19,16(sp)
  813c88:	dc000115 	stw	r16,4(sp)
  813c8c:	dfc00a15 	stw	ra,40(sp)
  813c90:	df000915 	stw	fp,36(sp)
  813c94:	ddc00815 	stw	r23,32(sp)
  813c98:	dd800715 	stw	r22,28(sp)
  813c9c:	dd400615 	stw	r21,24(sp)
  813ca0:	dd000515 	stw	r20,20(sp)
  813ca4:	dc800315 	stw	r18,12(sp)
  813ca8:	dc400215 	stw	r17,8(sp)
  813cac:	2027883a 	mov	r19,r4
  813cb0:	2821883a 	mov	r16,r5
  813cb4:	3800421e 	bne	r7,zero,813dc0 <__udivdi3+0x140>
  813cb8:	3025883a 	mov	r18,r6
  813cbc:	2023883a 	mov	r17,r4
  813cc0:	2980542e 	bgeu	r5,r6,813e14 <__udivdi3+0x194>
  813cc4:	00bfffd4 	movui	r2,65535
  813cc8:	282d883a 	mov	r22,r5
  813ccc:	1180a836 	bltu	r2,r6,813f70 <__udivdi3+0x2f0>
  813cd0:	00803fc4 	movi	r2,255
  813cd4:	1181422e 	bgeu	r2,r6,8141e0 <__udivdi3+0x560>
  813cd8:	00800204 	movi	r2,8
  813cdc:	1007883a 	mov	r3,r2
  813ce0:	3084d83a 	srl	r2,r6,r2
  813ce4:	010020b4 	movhi	r4,130
  813ce8:	212f4284 	addi	r4,r4,-17142
  813cec:	2085883a 	add	r2,r4,r2
  813cf0:	10800003 	ldbu	r2,0(r2)
  813cf4:	10c7883a 	add	r3,r2,r3
  813cf8:	00800804 	movi	r2,32
  813cfc:	10c5c83a 	sub	r2,r2,r3
  813d00:	10000526 	beq	r2,zero,813d18 <__udivdi3+0x98>
  813d04:	80a0983a 	sll	r16,r16,r2
  813d08:	98c6d83a 	srl	r3,r19,r3
  813d0c:	30a4983a 	sll	r18,r6,r2
  813d10:	98a2983a 	sll	r17,r19,r2
  813d14:	80ecb03a 	or	r22,r16,r3
  813d18:	902ad43a 	srli	r21,r18,16
  813d1c:	b009883a 	mov	r4,r22
  813d20:	953fffcc 	andi	r20,r18,65535
  813d24:	a80b883a 	mov	r5,r21
  813d28:	08148f40 	call	8148f4 <__umodsi3>
  813d2c:	b009883a 	mov	r4,r22
  813d30:	a80b883a 	mov	r5,r21
  813d34:	1027883a 	mov	r19,r2
  813d38:	08148ec0 	call	8148ec <__udivsi3>
  813d3c:	1021883a 	mov	r16,r2
  813d40:	8806d43a 	srli	r3,r17,16
  813d44:	9804943a 	slli	r2,r19,16
  813d48:	8527383a 	mul	r19,r16,r20
  813d4c:	10c4b03a 	or	r2,r2,r3
  813d50:	14c0052e 	bgeu	r2,r19,813d68 <__udivdi3+0xe8>
  813d54:	1485883a 	add	r2,r2,r18
  813d58:	80ffffc4 	addi	r3,r16,-1
  813d5c:	14800136 	bltu	r2,r18,813d64 <__udivdi3+0xe4>
  813d60:	14c13436 	bltu	r2,r19,814234 <__udivdi3+0x5b4>
  813d64:	1821883a 	mov	r16,r3
  813d68:	14e7c83a 	sub	r19,r2,r19
  813d6c:	9809883a 	mov	r4,r19
  813d70:	a80b883a 	mov	r5,r21
  813d74:	08148f40 	call	8148f4 <__umodsi3>
  813d78:	102d883a 	mov	r22,r2
  813d7c:	9809883a 	mov	r4,r19
  813d80:	a80b883a 	mov	r5,r21
  813d84:	08148ec0 	call	8148ec <__udivsi3>
  813d88:	b02c943a 	slli	r22,r22,16
  813d8c:	1529383a 	mul	r20,r2,r20
  813d90:	8c7fffcc 	andi	r17,r17,65535
  813d94:	b462b03a 	or	r17,r22,r17
  813d98:	8d00052e 	bgeu	r17,r20,813db0 <__udivdi3+0x130>
  813d9c:	8ca3883a 	add	r17,r17,r18
  813da0:	10ffffc4 	addi	r3,r2,-1
  813da4:	8c80f636 	bltu	r17,r18,814180 <__udivdi3+0x500>
  813da8:	8d00f52e 	bgeu	r17,r20,814180 <__udivdi3+0x500>
  813dac:	10bfff84 	addi	r2,r2,-2
  813db0:	8020943a 	slli	r16,r16,16
  813db4:	0007883a 	mov	r3,zero
  813db8:	1404b03a 	or	r2,r2,r16
  813dbc:	00005b06 	br	813f2c <__udivdi3+0x2ac>
  813dc0:	29c05836 	bltu	r5,r7,813f24 <__udivdi3+0x2a4>
  813dc4:	00bfffd4 	movui	r2,65535
  813dc8:	11c0642e 	bgeu	r2,r7,813f5c <__udivdi3+0x2dc>
  813dcc:	00804034 	movhi	r2,256
  813dd0:	10bfffc4 	addi	r2,r2,-1
  813dd4:	11c0f32e 	bgeu	r2,r7,8141a4 <__udivdi3+0x524>
  813dd8:	00c00604 	movi	r3,24
  813ddc:	180b883a 	mov	r5,r3
  813de0:	38c6d83a 	srl	r3,r7,r3
  813de4:	008020b4 	movhi	r2,130
  813de8:	10af4284 	addi	r2,r2,-17142
  813dec:	10c7883a 	add	r3,r2,r3
  813df0:	18c00003 	ldbu	r3,0(r3)
  813df4:	01000804 	movi	r4,32
  813df8:	1947883a 	add	r3,r3,r5
  813dfc:	20e5c83a 	sub	r18,r4,r3
  813e00:	9000661e 	bne	r18,zero,813f9c <__udivdi3+0x31c>
  813e04:	3c00f936 	bltu	r7,r16,8141ec <__udivdi3+0x56c>
  813e08:	9985403a 	cmpgeu	r2,r19,r6
  813e0c:	0007883a 	mov	r3,zero
  813e10:	00004606 	br	813f2c <__udivdi3+0x2ac>
  813e14:	3000041e 	bne	r6,zero,813e28 <__udivdi3+0x1a8>
  813e18:	01000044 	movi	r4,1
  813e1c:	000b883a 	mov	r5,zero
  813e20:	08148ec0 	call	8148ec <__udivsi3>
  813e24:	1025883a 	mov	r18,r2
  813e28:	00bfffd4 	movui	r2,65535
  813e2c:	1480562e 	bgeu	r2,r18,813f88 <__udivdi3+0x308>
  813e30:	00804034 	movhi	r2,256
  813e34:	10bfffc4 	addi	r2,r2,-1
  813e38:	1480e32e 	bgeu	r2,r18,8141c8 <__udivdi3+0x548>
  813e3c:	00800604 	movi	r2,24
  813e40:	1007883a 	mov	r3,r2
  813e44:	9084d83a 	srl	r2,r18,r2
  813e48:	010020b4 	movhi	r4,130
  813e4c:	212f4284 	addi	r4,r4,-17142
  813e50:	2085883a 	add	r2,r4,r2
  813e54:	10800003 	ldbu	r2,0(r2)
  813e58:	10c5883a 	add	r2,r2,r3
  813e5c:	00c00804 	movi	r3,32
  813e60:	1887c83a 	sub	r3,r3,r2
  813e64:	1800911e 	bne	r3,zero,8140ac <__udivdi3+0x42c>
  813e68:	9028d43a 	srli	r20,r18,16
  813e6c:	84a1c83a 	sub	r16,r16,r18
  813e70:	957fffcc 	andi	r21,r18,65535
  813e74:	00c00044 	movi	r3,1
  813e78:	8009883a 	mov	r4,r16
  813e7c:	a00b883a 	mov	r5,r20
  813e80:	d8c00015 	stw	r3,0(sp)
  813e84:	08148f40 	call	8148f4 <__umodsi3>
  813e88:	8009883a 	mov	r4,r16
  813e8c:	a00b883a 	mov	r5,r20
  813e90:	1027883a 	mov	r19,r2
  813e94:	08148ec0 	call	8148ec <__udivsi3>
  813e98:	1021883a 	mov	r16,r2
  813e9c:	880cd43a 	srli	r6,r17,16
  813ea0:	9804943a 	slli	r2,r19,16
  813ea4:	8567383a 	mul	r19,r16,r21
  813ea8:	d8c00017 	ldw	r3,0(sp)
  813eac:	1188b03a 	or	r4,r2,r6
  813eb0:	24c0052e 	bgeu	r4,r19,813ec8 <__udivdi3+0x248>
  813eb4:	2489883a 	add	r4,r4,r18
  813eb8:	80bfffc4 	addi	r2,r16,-1
  813ebc:	24800136 	bltu	r4,r18,813ec4 <__udivdi3+0x244>
  813ec0:	24c0d936 	bltu	r4,r19,814228 <__udivdi3+0x5a8>
  813ec4:	1021883a 	mov	r16,r2
  813ec8:	24e7c83a 	sub	r19,r4,r19
  813ecc:	9809883a 	mov	r4,r19
  813ed0:	a00b883a 	mov	r5,r20
  813ed4:	d8c00015 	stw	r3,0(sp)
  813ed8:	08148f40 	call	8148f4 <__umodsi3>
  813edc:	102d883a 	mov	r22,r2
  813ee0:	9809883a 	mov	r4,r19
  813ee4:	a00b883a 	mov	r5,r20
  813ee8:	08148ec0 	call	8148ec <__udivsi3>
  813eec:	b02c943a 	slli	r22,r22,16
  813ef0:	156b383a 	mul	r21,r2,r21
  813ef4:	8c7fffcc 	andi	r17,r17,65535
  813ef8:	b462b03a 	or	r17,r22,r17
  813efc:	d8c00017 	ldw	r3,0(sp)
  813f00:	8d40052e 	bgeu	r17,r21,813f18 <__udivdi3+0x298>
  813f04:	8ca3883a 	add	r17,r17,r18
  813f08:	113fffc4 	addi	r4,r2,-1
  813f0c:	8c809a36 	bltu	r17,r18,814178 <__udivdi3+0x4f8>
  813f10:	8d40992e 	bgeu	r17,r21,814178 <__udivdi3+0x4f8>
  813f14:	10bfff84 	addi	r2,r2,-2
  813f18:	8020943a 	slli	r16,r16,16
  813f1c:	1404b03a 	or	r2,r2,r16
  813f20:	00000206 	br	813f2c <__udivdi3+0x2ac>
  813f24:	0007883a 	mov	r3,zero
  813f28:	0005883a 	mov	r2,zero
  813f2c:	dfc00a17 	ldw	ra,40(sp)
  813f30:	df000917 	ldw	fp,36(sp)
  813f34:	ddc00817 	ldw	r23,32(sp)
  813f38:	dd800717 	ldw	r22,28(sp)
  813f3c:	dd400617 	ldw	r21,24(sp)
  813f40:	dd000517 	ldw	r20,20(sp)
  813f44:	dcc00417 	ldw	r19,16(sp)
  813f48:	dc800317 	ldw	r18,12(sp)
  813f4c:	dc400217 	ldw	r17,8(sp)
  813f50:	dc000117 	ldw	r16,4(sp)
  813f54:	dec00b04 	addi	sp,sp,44
  813f58:	f800283a 	ret
  813f5c:	00803fc4 	movi	r2,255
  813f60:	11c0932e 	bgeu	r2,r7,8141b0 <__udivdi3+0x530>
  813f64:	00c00204 	movi	r3,8
  813f68:	180b883a 	mov	r5,r3
  813f6c:	003f9c06 	br	813de0 <__alt_data_end+0xff813de0>
  813f70:	00804034 	movhi	r2,256
  813f74:	10bfffc4 	addi	r2,r2,-1
  813f78:	1180902e 	bgeu	r2,r6,8141bc <__udivdi3+0x53c>
  813f7c:	00800604 	movi	r2,24
  813f80:	1007883a 	mov	r3,r2
  813f84:	003f5606 	br	813ce0 <__alt_data_end+0xff813ce0>
  813f88:	00803fc4 	movi	r2,255
  813f8c:	1480912e 	bgeu	r2,r18,8141d4 <__udivdi3+0x554>
  813f90:	00800204 	movi	r2,8
  813f94:	1007883a 	mov	r3,r2
  813f98:	003faa06 	br	813e44 <__alt_data_end+0xff813e44>
  813f9c:	30eed83a 	srl	r23,r6,r3
  813fa0:	3c8e983a 	sll	r7,r7,r18
  813fa4:	80f8d83a 	srl	fp,r16,r3
  813fa8:	98c6d83a 	srl	r3,r19,r3
  813fac:	3deeb03a 	or	r23,r7,r23
  813fb0:	b828d43a 	srli	r20,r23,16
  813fb4:	84a0983a 	sll	r16,r16,r18
  813fb8:	e009883a 	mov	r4,fp
  813fbc:	a00b883a 	mov	r5,r20
  813fc0:	80e2b03a 	or	r17,r16,r3
  813fc4:	34aa983a 	sll	r21,r6,r18
  813fc8:	08148f40 	call	8148f4 <__umodsi3>
  813fcc:	e009883a 	mov	r4,fp
  813fd0:	a00b883a 	mov	r5,r20
  813fd4:	102d883a 	mov	r22,r2
  813fd8:	08148ec0 	call	8148ec <__udivsi3>
  813fdc:	1021883a 	mov	r16,r2
  813fe0:	bf3fffcc 	andi	fp,r23,65535
  813fe4:	b004943a 	slli	r2,r22,16
  813fe8:	8808d43a 	srli	r4,r17,16
  813fec:	872d383a 	mul	r22,r16,fp
  813ff0:	1104b03a 	or	r2,r2,r4
  813ff4:	1580042e 	bgeu	r2,r22,814008 <__udivdi3+0x388>
  813ff8:	15c5883a 	add	r2,r2,r23
  813ffc:	80ffffc4 	addi	r3,r16,-1
  814000:	15c0812e 	bgeu	r2,r23,814208 <__udivdi3+0x588>
  814004:	1821883a 	mov	r16,r3
  814008:	15adc83a 	sub	r22,r2,r22
  81400c:	b009883a 	mov	r4,r22
  814010:	a00b883a 	mov	r5,r20
  814014:	08148f40 	call	8148f4 <__umodsi3>
  814018:	a00b883a 	mov	r5,r20
  81401c:	b009883a 	mov	r4,r22
  814020:	d8800015 	stw	r2,0(sp)
  814024:	08148ec0 	call	8148ec <__udivsi3>
  814028:	d8c00017 	ldw	r3,0(sp)
  81402c:	170b383a 	mul	r5,r2,fp
  814030:	8c7fffcc 	andi	r17,r17,65535
  814034:	1806943a 	slli	r3,r3,16
  814038:	1c46b03a 	or	r3,r3,r17
  81403c:	1940042e 	bgeu	r3,r5,814050 <__udivdi3+0x3d0>
  814040:	1dc7883a 	add	r3,r3,r23
  814044:	113fffc4 	addi	r4,r2,-1
  814048:	1dc06b2e 	bgeu	r3,r23,8141f8 <__udivdi3+0x578>
  81404c:	2005883a 	mov	r2,r4
  814050:	8020943a 	slli	r16,r16,16
  814054:	a9ffffcc 	andi	r7,r21,65535
  814058:	a82ad43a 	srli	r21,r21,16
  81405c:	1404b03a 	or	r2,r2,r16
  814060:	113fffcc 	andi	r4,r2,65535
  814064:	100cd43a 	srli	r6,r2,16
  814068:	21d3383a 	mul	r9,r4,r7
  81406c:	2549383a 	mul	r4,r4,r21
  814070:	31cf383a 	mul	r7,r6,r7
  814074:	4810d43a 	srli	r8,r9,16
  814078:	1947c83a 	sub	r3,r3,r5
  81407c:	3909883a 	add	r4,r7,r4
  814080:	2209883a 	add	r4,r4,r8
  814084:	354d383a 	mul	r6,r6,r21
  814088:	21c0022e 	bgeu	r4,r7,814094 <__udivdi3+0x414>
  81408c:	01400074 	movhi	r5,1
  814090:	314d883a 	add	r6,r6,r5
  814094:	202ad43a 	srli	r21,r4,16
  814098:	354d883a 	add	r6,r6,r21
  81409c:	19803f36 	bltu	r3,r6,81419c <__udivdi3+0x51c>
  8140a0:	19803926 	beq	r3,r6,814188 <__udivdi3+0x508>
  8140a4:	0007883a 	mov	r3,zero
  8140a8:	003fa006 	br	813f2c <__alt_data_end+0xff813f2c>
  8140ac:	90e4983a 	sll	r18,r18,r3
  8140b0:	80aad83a 	srl	r21,r16,r2
  8140b4:	80e0983a 	sll	r16,r16,r3
  8140b8:	9028d43a 	srli	r20,r18,16
  8140bc:	9884d83a 	srl	r2,r19,r2
  8140c0:	a809883a 	mov	r4,r21
  8140c4:	a00b883a 	mov	r5,r20
  8140c8:	80acb03a 	or	r22,r16,r2
  8140cc:	98e2983a 	sll	r17,r19,r3
  8140d0:	08148f40 	call	8148f4 <__umodsi3>
  8140d4:	a809883a 	mov	r4,r21
  8140d8:	a00b883a 	mov	r5,r20
  8140dc:	1021883a 	mov	r16,r2
  8140e0:	08148ec0 	call	8148ec <__udivsi3>
  8140e4:	957fffcc 	andi	r21,r18,65535
  8140e8:	8020943a 	slli	r16,r16,16
  8140ec:	b00ad43a 	srli	r5,r22,16
  8140f0:	1567383a 	mul	r19,r2,r21
  8140f4:	102f883a 	mov	r23,r2
  8140f8:	8148b03a 	or	r4,r16,r5
  8140fc:	24c0062e 	bgeu	r4,r19,814118 <__udivdi3+0x498>
  814100:	2489883a 	add	r4,r4,r18
  814104:	10bfffc4 	addi	r2,r2,-1
  814108:	24804536 	bltu	r4,r18,814220 <__udivdi3+0x5a0>
  81410c:	24c0442e 	bgeu	r4,r19,814220 <__udivdi3+0x5a0>
  814110:	bdffff84 	addi	r23,r23,-2
  814114:	2489883a 	add	r4,r4,r18
  814118:	24e7c83a 	sub	r19,r4,r19
  81411c:	9809883a 	mov	r4,r19
  814120:	a00b883a 	mov	r5,r20
  814124:	08148f40 	call	8148f4 <__umodsi3>
  814128:	1021883a 	mov	r16,r2
  81412c:	9809883a 	mov	r4,r19
  814130:	a00b883a 	mov	r5,r20
  814134:	08148ec0 	call	8148ec <__udivsi3>
  814138:	8020943a 	slli	r16,r16,16
  81413c:	1007883a 	mov	r3,r2
  814140:	1545383a 	mul	r2,r2,r21
  814144:	b13fffcc 	andi	r4,r22,65535
  814148:	8108b03a 	or	r4,r16,r4
  81414c:	2080062e 	bgeu	r4,r2,814168 <__udivdi3+0x4e8>
  814150:	2489883a 	add	r4,r4,r18
  814154:	197fffc4 	addi	r5,r3,-1
  814158:	24802f36 	bltu	r4,r18,814218 <__udivdi3+0x598>
  81415c:	20802e2e 	bgeu	r4,r2,814218 <__udivdi3+0x598>
  814160:	18ffff84 	addi	r3,r3,-2
  814164:	2489883a 	add	r4,r4,r18
  814168:	b82e943a 	slli	r23,r23,16
  81416c:	20a1c83a 	sub	r16,r4,r2
  814170:	1dc6b03a 	or	r3,r3,r23
  814174:	003f4006 	br	813e78 <__alt_data_end+0xff813e78>
  814178:	2005883a 	mov	r2,r4
  81417c:	003f6606 	br	813f18 <__alt_data_end+0xff813f18>
  814180:	1805883a 	mov	r2,r3
  814184:	003f0a06 	br	813db0 <__alt_data_end+0xff813db0>
  814188:	2006943a 	slli	r3,r4,16
  81418c:	9c88983a 	sll	r4,r19,r18
  814190:	4a7fffcc 	andi	r9,r9,65535
  814194:	1a47883a 	add	r3,r3,r9
  814198:	20ffc22e 	bgeu	r4,r3,8140a4 <__alt_data_end+0xff8140a4>
  81419c:	10bfffc4 	addi	r2,r2,-1
  8141a0:	003fc006 	br	8140a4 <__alt_data_end+0xff8140a4>
  8141a4:	00c00404 	movi	r3,16
  8141a8:	180b883a 	mov	r5,r3
  8141ac:	003f0c06 	br	813de0 <__alt_data_end+0xff813de0>
  8141b0:	0007883a 	mov	r3,zero
  8141b4:	000b883a 	mov	r5,zero
  8141b8:	003f0906 	br	813de0 <__alt_data_end+0xff813de0>
  8141bc:	00800404 	movi	r2,16
  8141c0:	1007883a 	mov	r3,r2
  8141c4:	003ec606 	br	813ce0 <__alt_data_end+0xff813ce0>
  8141c8:	00800404 	movi	r2,16
  8141cc:	1007883a 	mov	r3,r2
  8141d0:	003f1c06 	br	813e44 <__alt_data_end+0xff813e44>
  8141d4:	0005883a 	mov	r2,zero
  8141d8:	0007883a 	mov	r3,zero
  8141dc:	003f1906 	br	813e44 <__alt_data_end+0xff813e44>
  8141e0:	0005883a 	mov	r2,zero
  8141e4:	0007883a 	mov	r3,zero
  8141e8:	003ebd06 	br	813ce0 <__alt_data_end+0xff813ce0>
  8141ec:	0007883a 	mov	r3,zero
  8141f0:	00800044 	movi	r2,1
  8141f4:	003f4d06 	br	813f2c <__alt_data_end+0xff813f2c>
  8141f8:	197f942e 	bgeu	r3,r5,81404c <__alt_data_end+0xff81404c>
  8141fc:	10bfff84 	addi	r2,r2,-2
  814200:	1dc7883a 	add	r3,r3,r23
  814204:	003f9206 	br	814050 <__alt_data_end+0xff814050>
  814208:	15bf7e2e 	bgeu	r2,r22,814004 <__alt_data_end+0xff814004>
  81420c:	843fff84 	addi	r16,r16,-2
  814210:	15c5883a 	add	r2,r2,r23
  814214:	003f7c06 	br	814008 <__alt_data_end+0xff814008>
  814218:	2807883a 	mov	r3,r5
  81421c:	003fd206 	br	814168 <__alt_data_end+0xff814168>
  814220:	102f883a 	mov	r23,r2
  814224:	003fbc06 	br	814118 <__alt_data_end+0xff814118>
  814228:	843fff84 	addi	r16,r16,-2
  81422c:	2489883a 	add	r4,r4,r18
  814230:	003f2506 	br	813ec8 <__alt_data_end+0xff813ec8>
  814234:	843fff84 	addi	r16,r16,-2
  814238:	1485883a 	add	r2,r2,r18
  81423c:	003eca06 	br	813d68 <__alt_data_end+0xff813d68>

00814240 <__umoddi3>:
  814240:	defff404 	addi	sp,sp,-48
  814244:	ddc00915 	stw	r23,36(sp)
  814248:	dc400315 	stw	r17,12(sp)
  81424c:	dc000215 	stw	r16,8(sp)
  814250:	dfc00b15 	stw	ra,44(sp)
  814254:	df000a15 	stw	fp,40(sp)
  814258:	dd800815 	stw	r22,32(sp)
  81425c:	dd400715 	stw	r21,28(sp)
  814260:	dd000615 	stw	r20,24(sp)
  814264:	dcc00515 	stw	r19,20(sp)
  814268:	dc800415 	stw	r18,16(sp)
  81426c:	2021883a 	mov	r16,r4
  814270:	2823883a 	mov	r17,r5
  814274:	282f883a 	mov	r23,r5
  814278:	3800381e 	bne	r7,zero,81435c <__umoddi3+0x11c>
  81427c:	3027883a 	mov	r19,r6
  814280:	2029883a 	mov	r20,r4
  814284:	29804e2e 	bgeu	r5,r6,8143c0 <__umoddi3+0x180>
  814288:	00bfffd4 	movui	r2,65535
  81428c:	11809c36 	bltu	r2,r6,814500 <__umoddi3+0x2c0>
  814290:	00803fc4 	movi	r2,255
  814294:	11813b2e 	bgeu	r2,r6,814784 <__umoddi3+0x544>
  814298:	01400204 	movi	r5,8
  81429c:	2805883a 	mov	r2,r5
  8142a0:	314ad83a 	srl	r5,r6,r5
  8142a4:	00c020b4 	movhi	r3,130
  8142a8:	18ef4284 	addi	r3,r3,-17142
  8142ac:	194b883a 	add	r5,r3,r5
  8142b0:	29000003 	ldbu	r4,0(r5)
  8142b4:	2089883a 	add	r4,r4,r2
  8142b8:	00800804 	movi	r2,32
  8142bc:	1105c83a 	sub	r2,r2,r4
  8142c0:	1000ec26 	beq	r2,zero,814674 <__umoddi3+0x434>
  8142c4:	88a2983a 	sll	r17,r17,r2
  8142c8:	8108d83a 	srl	r4,r16,r4
  8142cc:	30a6983a 	sll	r19,r6,r2
  8142d0:	80a8983a 	sll	r20,r16,r2
  8142d4:	1025883a 	mov	r18,r2
  8142d8:	892eb03a 	or	r23,r17,r4
  8142dc:	982cd43a 	srli	r22,r19,16
  8142e0:	b809883a 	mov	r4,r23
  8142e4:	9d7fffcc 	andi	r21,r19,65535
  8142e8:	b00b883a 	mov	r5,r22
  8142ec:	08148f40 	call	8148f4 <__umodsi3>
  8142f0:	b809883a 	mov	r4,r23
  8142f4:	b00b883a 	mov	r5,r22
  8142f8:	1021883a 	mov	r16,r2
  8142fc:	08148ec0 	call	8148ec <__udivsi3>
  814300:	8020943a 	slli	r16,r16,16
  814304:	a00cd43a 	srli	r6,r20,16
  814308:	1545383a 	mul	r2,r2,r21
  81430c:	8188b03a 	or	r4,r16,r6
  814310:	2080042e 	bgeu	r4,r2,814324 <__umoddi3+0xe4>
  814314:	24c9883a 	add	r4,r4,r19
  814318:	24c00236 	bltu	r4,r19,814324 <__umoddi3+0xe4>
  81431c:	2080012e 	bgeu	r4,r2,814324 <__umoddi3+0xe4>
  814320:	24c9883a 	add	r4,r4,r19
  814324:	20a3c83a 	sub	r17,r4,r2
  814328:	8809883a 	mov	r4,r17
  81432c:	b00b883a 	mov	r5,r22
  814330:	08148f40 	call	8148f4 <__umodsi3>
  814334:	8809883a 	mov	r4,r17
  814338:	b00b883a 	mov	r5,r22
  81433c:	1021883a 	mov	r16,r2
  814340:	08148ec0 	call	8148ec <__udivsi3>
  814344:	8006943a 	slli	r3,r16,16
  814348:	1545383a 	mul	r2,r2,r21
  81434c:	a13fffcc 	andi	r4,r20,65535
  814350:	1906b03a 	or	r3,r3,r4
  814354:	1880532e 	bgeu	r3,r2,8144a4 <__umoddi3+0x264>
  814358:	00004e06 	br	814494 <__umoddi3+0x254>
  81435c:	29c05536 	bltu	r5,r7,8144b4 <__umoddi3+0x274>
  814360:	00bfffd4 	movui	r2,65535
  814364:	11c0612e 	bgeu	r2,r7,8144ec <__umoddi3+0x2ac>
  814368:	00804034 	movhi	r2,256
  81436c:	10bfffc4 	addi	r2,r2,-1
  814370:	11c0f82e 	bgeu	r2,r7,814754 <__umoddi3+0x514>
  814374:	01400604 	movi	r5,24
  814378:	282b883a 	mov	r21,r5
  81437c:	394ad83a 	srl	r5,r7,r5
  814380:	00c020b4 	movhi	r3,130
  814384:	18ef4284 	addi	r3,r3,-17142
  814388:	194b883a 	add	r5,r3,r5
  81438c:	28800003 	ldbu	r2,0(r5)
  814390:	00c00804 	movi	r3,32
  814394:	156b883a 	add	r21,r2,r21
  814398:	1d69c83a 	sub	r20,r3,r21
  81439c:	a000631e 	bne	r20,zero,81452c <__umoddi3+0x2ec>
  8143a0:	3c400136 	bltu	r7,r17,8143a8 <__umoddi3+0x168>
  8143a4:	81810436 	bltu	r16,r6,8147b8 <__umoddi3+0x578>
  8143a8:	8185c83a 	sub	r2,r16,r6
  8143ac:	89e3c83a 	sub	r17,r17,r7
  8143b0:	8087803a 	cmpltu	r3,r16,r2
  8143b4:	88efc83a 	sub	r23,r17,r3
  8143b8:	b807883a 	mov	r3,r23
  8143bc:	00003f06 	br	8144bc <__umoddi3+0x27c>
  8143c0:	3000041e 	bne	r6,zero,8143d4 <__umoddi3+0x194>
  8143c4:	01000044 	movi	r4,1
  8143c8:	000b883a 	mov	r5,zero
  8143cc:	08148ec0 	call	8148ec <__udivsi3>
  8143d0:	1027883a 	mov	r19,r2
  8143d4:	00bfffd4 	movui	r2,65535
  8143d8:	14c04f2e 	bgeu	r2,r19,814518 <__umoddi3+0x2d8>
  8143dc:	00804034 	movhi	r2,256
  8143e0:	10bfffc4 	addi	r2,r2,-1
  8143e4:	14c0e42e 	bgeu	r2,r19,814778 <__umoddi3+0x538>
  8143e8:	00800604 	movi	r2,24
  8143ec:	1007883a 	mov	r3,r2
  8143f0:	9884d83a 	srl	r2,r19,r2
  8143f4:	010020b4 	movhi	r4,130
  8143f8:	212f4284 	addi	r4,r4,-17142
  8143fc:	2085883a 	add	r2,r4,r2
  814400:	11000003 	ldbu	r4,0(r2)
  814404:	00800804 	movi	r2,32
  814408:	20c7883a 	add	r3,r4,r3
  81440c:	10c5c83a 	sub	r2,r2,r3
  814410:	10009a1e 	bne	r2,zero,81467c <__umoddi3+0x43c>
  814414:	982cd43a 	srli	r22,r19,16
  814418:	8ce3c83a 	sub	r17,r17,r19
  81441c:	9c3fffcc 	andi	r16,r19,65535
  814420:	0025883a 	mov	r18,zero
  814424:	8809883a 	mov	r4,r17
  814428:	b00b883a 	mov	r5,r22
  81442c:	08148f40 	call	8148f4 <__umodsi3>
  814430:	8809883a 	mov	r4,r17
  814434:	b00b883a 	mov	r5,r22
  814438:	102b883a 	mov	r21,r2
  81443c:	08148ec0 	call	8148ec <__udivsi3>
  814440:	a806943a 	slli	r3,r21,16
  814444:	a008d43a 	srli	r4,r20,16
  814448:	1405383a 	mul	r2,r2,r16
  81444c:	190cb03a 	or	r6,r3,r4
  814450:	3080032e 	bgeu	r6,r2,814460 <__umoddi3+0x220>
  814454:	34cd883a 	add	r6,r6,r19
  814458:	34c00136 	bltu	r6,r19,814460 <__umoddi3+0x220>
  81445c:	3080d436 	bltu	r6,r2,8147b0 <__umoddi3+0x570>
  814460:	30abc83a 	sub	r21,r6,r2
  814464:	a809883a 	mov	r4,r21
  814468:	b00b883a 	mov	r5,r22
  81446c:	08148f40 	call	8148f4 <__umodsi3>
  814470:	1023883a 	mov	r17,r2
  814474:	a809883a 	mov	r4,r21
  814478:	b00b883a 	mov	r5,r22
  81447c:	08148ec0 	call	8148ec <__udivsi3>
  814480:	8822943a 	slli	r17,r17,16
  814484:	1405383a 	mul	r2,r2,r16
  814488:	a13fffcc 	andi	r4,r20,65535
  81448c:	8906b03a 	or	r3,r17,r4
  814490:	1880042e 	bgeu	r3,r2,8144a4 <__umoddi3+0x264>
  814494:	1cc7883a 	add	r3,r3,r19
  814498:	1cc00236 	bltu	r3,r19,8144a4 <__umoddi3+0x264>
  81449c:	1880012e 	bgeu	r3,r2,8144a4 <__umoddi3+0x264>
  8144a0:	1cc7883a 	add	r3,r3,r19
  8144a4:	1887c83a 	sub	r3,r3,r2
  8144a8:	1c84d83a 	srl	r2,r3,r18
  8144ac:	0007883a 	mov	r3,zero
  8144b0:	00000206 	br	8144bc <__umoddi3+0x27c>
  8144b4:	2005883a 	mov	r2,r4
  8144b8:	2807883a 	mov	r3,r5
  8144bc:	dfc00b17 	ldw	ra,44(sp)
  8144c0:	df000a17 	ldw	fp,40(sp)
  8144c4:	ddc00917 	ldw	r23,36(sp)
  8144c8:	dd800817 	ldw	r22,32(sp)
  8144cc:	dd400717 	ldw	r21,28(sp)
  8144d0:	dd000617 	ldw	r20,24(sp)
  8144d4:	dcc00517 	ldw	r19,20(sp)
  8144d8:	dc800417 	ldw	r18,16(sp)
  8144dc:	dc400317 	ldw	r17,12(sp)
  8144e0:	dc000217 	ldw	r16,8(sp)
  8144e4:	dec00c04 	addi	sp,sp,48
  8144e8:	f800283a 	ret
  8144ec:	00803fc4 	movi	r2,255
  8144f0:	11c0952e 	bgeu	r2,r7,814748 <__umoddi3+0x508>
  8144f4:	01400204 	movi	r5,8
  8144f8:	282b883a 	mov	r21,r5
  8144fc:	003f9f06 	br	81437c <__alt_data_end+0xff81437c>
  814500:	00804034 	movhi	r2,256
  814504:	10bfffc4 	addi	r2,r2,-1
  814508:	1180952e 	bgeu	r2,r6,814760 <__umoddi3+0x520>
  81450c:	01400604 	movi	r5,24
  814510:	2805883a 	mov	r2,r5
  814514:	003f6206 	br	8142a0 <__alt_data_end+0xff8142a0>
  814518:	00803fc4 	movi	r2,255
  81451c:	14c0932e 	bgeu	r2,r19,81476c <__umoddi3+0x52c>
  814520:	00800204 	movi	r2,8
  814524:	1007883a 	mov	r3,r2
  814528:	003fb106 	br	8143f0 <__alt_data_end+0xff8143f0>
  81452c:	3548d83a 	srl	r4,r6,r21
  814530:	3d0e983a 	sll	r7,r7,r20
  814534:	8d10983a 	sll	r8,r17,r20
  814538:	8d6cd83a 	srl	r22,r17,r21
  81453c:	3922b03a 	or	r17,r7,r4
  814540:	882ed43a 	srli	r23,r17,16
  814544:	8564d83a 	srl	r18,r16,r21
  814548:	b009883a 	mov	r4,r22
  81454c:	b80b883a 	mov	r5,r23
  814550:	44a4b03a 	or	r18,r8,r18
  814554:	3526983a 	sll	r19,r6,r20
  814558:	08148f40 	call	8148f4 <__umodsi3>
  81455c:	b009883a 	mov	r4,r22
  814560:	b80b883a 	mov	r5,r23
  814564:	1039883a 	mov	fp,r2
  814568:	08148ec0 	call	8148ec <__udivsi3>
  81456c:	102d883a 	mov	r22,r2
  814570:	8a3fffcc 	andi	r8,r17,65535
  814574:	e004943a 	slli	r2,fp,16
  814578:	900cd43a 	srli	r6,r18,16
  81457c:	b239383a 	mul	fp,r22,r8
  814580:	8520983a 	sll	r16,r16,r20
  814584:	118ab03a 	or	r5,r2,r6
  814588:	2f00042e 	bgeu	r5,fp,81459c <__umoddi3+0x35c>
  81458c:	2c4b883a 	add	r5,r5,r17
  814590:	b0bfffc4 	addi	r2,r22,-1
  814594:	2c40822e 	bgeu	r5,r17,8147a0 <__umoddi3+0x560>
  814598:	102d883a 	mov	r22,r2
  81459c:	2f39c83a 	sub	fp,r5,fp
  8145a0:	e009883a 	mov	r4,fp
  8145a4:	b80b883a 	mov	r5,r23
  8145a8:	da000115 	stw	r8,4(sp)
  8145ac:	08148f40 	call	8148f4 <__umodsi3>
  8145b0:	e009883a 	mov	r4,fp
  8145b4:	b80b883a 	mov	r5,r23
  8145b8:	d8800015 	stw	r2,0(sp)
  8145bc:	08148ec0 	call	8148ec <__udivsi3>
  8145c0:	d9800017 	ldw	r6,0(sp)
  8145c4:	da000117 	ldw	r8,4(sp)
  8145c8:	94bfffcc 	andi	r18,r18,65535
  8145cc:	300c943a 	slli	r6,r6,16
  8145d0:	1209383a 	mul	r4,r2,r8
  8145d4:	3490b03a 	or	r8,r6,r18
  8145d8:	4100042e 	bgeu	r8,r4,8145ec <__umoddi3+0x3ac>
  8145dc:	4451883a 	add	r8,r8,r17
  8145e0:	10ffffc4 	addi	r3,r2,-1
  8145e4:	44406a2e 	bgeu	r8,r17,814790 <__umoddi3+0x550>
  8145e8:	1805883a 	mov	r2,r3
  8145ec:	b012943a 	slli	r9,r22,16
  8145f0:	9abfffcc 	andi	r10,r19,65535
  8145f4:	980ed43a 	srli	r7,r19,16
  8145f8:	124ab03a 	or	r5,r2,r9
  8145fc:	2a7fffcc 	andi	r9,r5,65535
  814600:	280ad43a 	srli	r5,r5,16
  814604:	4a8d383a 	mul	r6,r9,r10
  814608:	49d3383a 	mul	r9,r9,r7
  81460c:	2a95383a 	mul	r10,r5,r10
  814610:	3004d43a 	srli	r2,r6,16
  814614:	4111c83a 	sub	r8,r8,r4
  814618:	5253883a 	add	r9,r10,r9
  81461c:	4893883a 	add	r9,r9,r2
  814620:	29cb383a 	mul	r5,r5,r7
  814624:	4a80022e 	bgeu	r9,r10,814630 <__umoddi3+0x3f0>
  814628:	00800074 	movhi	r2,1
  81462c:	288b883a 	add	r5,r5,r2
  814630:	4808d43a 	srli	r4,r9,16
  814634:	4812943a 	slli	r9,r9,16
  814638:	31bfffcc 	andi	r6,r6,65535
  81463c:	290b883a 	add	r5,r5,r4
  814640:	498d883a 	add	r6,r9,r6
  814644:	41403a36 	bltu	r8,r5,814730 <__umoddi3+0x4f0>
  814648:	41405d26 	beq	r8,r5,8147c0 <__umoddi3+0x580>
  81464c:	4149c83a 	sub	r4,r8,r5
  814650:	300f883a 	mov	r7,r6
  814654:	81cfc83a 	sub	r7,r16,r7
  814658:	81c7803a 	cmpltu	r3,r16,r7
  81465c:	20c7c83a 	sub	r3,r4,r3
  814660:	1d44983a 	sll	r2,r3,r21
  814664:	3d0ed83a 	srl	r7,r7,r20
  814668:	1d06d83a 	srl	r3,r3,r20
  81466c:	11c4b03a 	or	r2,r2,r7
  814670:	003f9206 	br	8144bc <__alt_data_end+0xff8144bc>
  814674:	0025883a 	mov	r18,zero
  814678:	003f1806 	br	8142dc <__alt_data_end+0xff8142dc>
  81467c:	98a6983a 	sll	r19,r19,r2
  814680:	88e8d83a 	srl	r20,r17,r3
  814684:	80c6d83a 	srl	r3,r16,r3
  814688:	982cd43a 	srli	r22,r19,16
  81468c:	88a2983a 	sll	r17,r17,r2
  814690:	a009883a 	mov	r4,r20
  814694:	b00b883a 	mov	r5,r22
  814698:	88eab03a 	or	r21,r17,r3
  81469c:	1025883a 	mov	r18,r2
  8146a0:	08148f40 	call	8148f4 <__umodsi3>
  8146a4:	a009883a 	mov	r4,r20
  8146a8:	b00b883a 	mov	r5,r22
  8146ac:	1023883a 	mov	r17,r2
  8146b0:	08148ec0 	call	8148ec <__udivsi3>
  8146b4:	9f3fffcc 	andi	fp,r19,65535
  8146b8:	8822943a 	slli	r17,r17,16
  8146bc:	a80ad43a 	srli	r5,r21,16
  8146c0:	1705383a 	mul	r2,r2,fp
  8146c4:	84a8983a 	sll	r20,r16,r18
  8146c8:	8948b03a 	or	r4,r17,r5
  8146cc:	2080042e 	bgeu	r4,r2,8146e0 <__umoddi3+0x4a0>
  8146d0:	24c9883a 	add	r4,r4,r19
  8146d4:	24c00236 	bltu	r4,r19,8146e0 <__umoddi3+0x4a0>
  8146d8:	2080012e 	bgeu	r4,r2,8146e0 <__umoddi3+0x4a0>
  8146dc:	24c9883a 	add	r4,r4,r19
  8146e0:	20afc83a 	sub	r23,r4,r2
  8146e4:	b809883a 	mov	r4,r23
  8146e8:	b00b883a 	mov	r5,r22
  8146ec:	08148f40 	call	8148f4 <__umodsi3>
  8146f0:	1023883a 	mov	r17,r2
  8146f4:	b809883a 	mov	r4,r23
  8146f8:	b00b883a 	mov	r5,r22
  8146fc:	08148ec0 	call	8148ec <__udivsi3>
  814700:	8822943a 	slli	r17,r17,16
  814704:	1705383a 	mul	r2,r2,fp
  814708:	a93fffcc 	andi	r4,r21,65535
  81470c:	8908b03a 	or	r4,r17,r4
  814710:	2080042e 	bgeu	r4,r2,814724 <__umoddi3+0x4e4>
  814714:	24c9883a 	add	r4,r4,r19
  814718:	24c00236 	bltu	r4,r19,814724 <__umoddi3+0x4e4>
  81471c:	2080012e 	bgeu	r4,r2,814724 <__umoddi3+0x4e4>
  814720:	24c9883a 	add	r4,r4,r19
  814724:	20a3c83a 	sub	r17,r4,r2
  814728:	e021883a 	mov	r16,fp
  81472c:	003f3d06 	br	814424 <__alt_data_end+0xff814424>
  814730:	34cfc83a 	sub	r7,r6,r19
  814734:	2c4bc83a 	sub	r5,r5,r17
  814738:	31cd803a 	cmpltu	r6,r6,r7
  81473c:	298dc83a 	sub	r6,r5,r6
  814740:	4189c83a 	sub	r4,r8,r6
  814744:	003fc306 	br	814654 <__alt_data_end+0xff814654>
  814748:	000b883a 	mov	r5,zero
  81474c:	002b883a 	mov	r21,zero
  814750:	003f0a06 	br	81437c <__alt_data_end+0xff81437c>
  814754:	01400404 	movi	r5,16
  814758:	282b883a 	mov	r21,r5
  81475c:	003f0706 	br	81437c <__alt_data_end+0xff81437c>
  814760:	01400404 	movi	r5,16
  814764:	2805883a 	mov	r2,r5
  814768:	003ecd06 	br	8142a0 <__alt_data_end+0xff8142a0>
  81476c:	0005883a 	mov	r2,zero
  814770:	0007883a 	mov	r3,zero
  814774:	003f1e06 	br	8143f0 <__alt_data_end+0xff8143f0>
  814778:	00800404 	movi	r2,16
  81477c:	1007883a 	mov	r3,r2
  814780:	003f1b06 	br	8143f0 <__alt_data_end+0xff8143f0>
  814784:	000b883a 	mov	r5,zero
  814788:	0005883a 	mov	r2,zero
  81478c:	003ec406 	br	8142a0 <__alt_data_end+0xff8142a0>
  814790:	413f952e 	bgeu	r8,r4,8145e8 <__alt_data_end+0xff8145e8>
  814794:	10bfff84 	addi	r2,r2,-2
  814798:	4451883a 	add	r8,r8,r17
  81479c:	003f9306 	br	8145ec <__alt_data_end+0xff8145ec>
  8147a0:	2f3f7d2e 	bgeu	r5,fp,814598 <__alt_data_end+0xff814598>
  8147a4:	b5bfff84 	addi	r22,r22,-2
  8147a8:	2c4b883a 	add	r5,r5,r17
  8147ac:	003f7b06 	br	81459c <__alt_data_end+0xff81459c>
  8147b0:	34cd883a 	add	r6,r6,r19
  8147b4:	003f2a06 	br	814460 <__alt_data_end+0xff814460>
  8147b8:	8005883a 	mov	r2,r16
  8147bc:	003efe06 	br	8143b8 <__alt_data_end+0xff8143b8>
  8147c0:	81bfdb36 	bltu	r16,r6,814730 <__alt_data_end+0xff814730>
  8147c4:	300f883a 	mov	r7,r6
  8147c8:	0009883a 	mov	r4,zero
  8147cc:	003fa106 	br	814654 <__alt_data_end+0xff814654>

008147d0 <udivmodsi4>:
  8147d0:	2900182e 	bgeu	r5,r4,814834 <udivmodsi4+0x64>
  8147d4:	28001716 	blt	r5,zero,814834 <udivmodsi4+0x64>
  8147d8:	00800804 	movi	r2,32
  8147dc:	00c00044 	movi	r3,1
  8147e0:	00000206 	br	8147ec <udivmodsi4+0x1c>
  8147e4:	10001126 	beq	r2,zero,81482c <udivmodsi4+0x5c>
  8147e8:	28000516 	blt	r5,zero,814800 <udivmodsi4+0x30>
  8147ec:	294b883a 	add	r5,r5,r5
  8147f0:	10bfffc4 	addi	r2,r2,-1
  8147f4:	18c7883a 	add	r3,r3,r3
  8147f8:	293ffa36 	bltu	r5,r4,8147e4 <__alt_data_end+0xff8147e4>
  8147fc:	18000b26 	beq	r3,zero,81482c <udivmodsi4+0x5c>
  814800:	0005883a 	mov	r2,zero
  814804:	21400236 	bltu	r4,r5,814810 <udivmodsi4+0x40>
  814808:	2149c83a 	sub	r4,r4,r5
  81480c:	10c4b03a 	or	r2,r2,r3
  814810:	1806d07a 	srli	r3,r3,1
  814814:	280ad07a 	srli	r5,r5,1
  814818:	183ffa1e 	bne	r3,zero,814804 <__alt_data_end+0xff814804>
  81481c:	3000011e 	bne	r6,zero,814824 <udivmodsi4+0x54>
  814820:	f800283a 	ret
  814824:	2005883a 	mov	r2,r4
  814828:	f800283a 	ret
  81482c:	0005883a 	mov	r2,zero
  814830:	003ffa06 	br	81481c <__alt_data_end+0xff81481c>
  814834:	00c00044 	movi	r3,1
  814838:	003ff106 	br	814800 <__alt_data_end+0xff814800>

0081483c <__divsi3>:
  81483c:	defffe04 	addi	sp,sp,-8
  814840:	dfc00115 	stw	ra,4(sp)
  814844:	dc000015 	stw	r16,0(sp)
  814848:	20000b16 	blt	r4,zero,814878 <__divsi3+0x3c>
  81484c:	0021883a 	mov	r16,zero
  814850:	28000c16 	blt	r5,zero,814884 <__divsi3+0x48>
  814854:	000d883a 	mov	r6,zero
  814858:	08147d00 	call	8147d0 <udivmodsi4>
  81485c:	0407c83a 	sub	r3,zero,r16
  814860:	1884f03a 	xor	r2,r3,r2
  814864:	1405883a 	add	r2,r2,r16
  814868:	dfc00117 	ldw	ra,4(sp)
  81486c:	dc000017 	ldw	r16,0(sp)
  814870:	dec00204 	addi	sp,sp,8
  814874:	f800283a 	ret
  814878:	0109c83a 	sub	r4,zero,r4
  81487c:	04000044 	movi	r16,1
  814880:	283ff40e 	bge	r5,zero,814854 <__alt_data_end+0xff814854>
  814884:	014bc83a 	sub	r5,zero,r5
  814888:	8400005c 	xori	r16,r16,1
  81488c:	003ff106 	br	814854 <__alt_data_end+0xff814854>

00814890 <__modsi3>:
  814890:	defffd04 	addi	sp,sp,-12
  814894:	dfc00215 	stw	ra,8(sp)
  814898:	dc400115 	stw	r17,4(sp)
  81489c:	dc000015 	stw	r16,0(sp)
  8148a0:	20000c16 	blt	r4,zero,8148d4 <__modsi3+0x44>
  8148a4:	0023883a 	mov	r17,zero
  8148a8:	0021883a 	mov	r16,zero
  8148ac:	28000d16 	blt	r5,zero,8148e4 <__modsi3+0x54>
  8148b0:	01800044 	movi	r6,1
  8148b4:	08147d00 	call	8147d0 <udivmodsi4>
  8148b8:	1404f03a 	xor	r2,r2,r16
  8148bc:	8885883a 	add	r2,r17,r2
  8148c0:	dfc00217 	ldw	ra,8(sp)
  8148c4:	dc400117 	ldw	r17,4(sp)
  8148c8:	dc000017 	ldw	r16,0(sp)
  8148cc:	dec00304 	addi	sp,sp,12
  8148d0:	f800283a 	ret
  8148d4:	0109c83a 	sub	r4,zero,r4
  8148d8:	04400044 	movi	r17,1
  8148dc:	043fffc4 	movi	r16,-1
  8148e0:	283ff30e 	bge	r5,zero,8148b0 <__alt_data_end+0xff8148b0>
  8148e4:	014bc83a 	sub	r5,zero,r5
  8148e8:	003ff106 	br	8148b0 <__alt_data_end+0xff8148b0>

008148ec <__udivsi3>:
  8148ec:	000d883a 	mov	r6,zero
  8148f0:	08147d01 	jmpi	8147d0 <udivmodsi4>

008148f4 <__umodsi3>:
  8148f4:	01800044 	movi	r6,1
  8148f8:	08147d01 	jmpi	8147d0 <udivmodsi4>

008148fc <__eqsf2>:
  8148fc:	2006d5fa 	srli	r3,r4,23
  814900:	280cd5fa 	srli	r6,r5,23
  814904:	01c02034 	movhi	r7,128
  814908:	39ffffc4 	addi	r7,r7,-1
  81490c:	18c03fcc 	andi	r3,r3,255
  814910:	02003fc4 	movi	r8,255
  814914:	3904703a 	and	r2,r7,r4
  814918:	31803fcc 	andi	r6,r6,255
  81491c:	394e703a 	and	r7,r7,r5
  814920:	2008d7fa 	srli	r4,r4,31
  814924:	280ad7fa 	srli	r5,r5,31
  814928:	1a000c26 	beq	r3,r8,81495c <__eqsf2+0x60>
  81492c:	02003fc4 	movi	r8,255
  814930:	32000326 	beq	r6,r8,814940 <__eqsf2+0x44>
  814934:	19800426 	beq	r3,r6,814948 <__eqsf2+0x4c>
  814938:	00800044 	movi	r2,1
  81493c:	f800283a 	ret
  814940:	383ffd1e 	bne	r7,zero,814938 <__alt_data_end+0xff814938>
  814944:	19bffc1e 	bne	r3,r6,814938 <__alt_data_end+0xff814938>
  814948:	11fffb1e 	bne	r2,r7,814938 <__alt_data_end+0xff814938>
  81494c:	21400626 	beq	r4,r5,814968 <__eqsf2+0x6c>
  814950:	183ff91e 	bne	r3,zero,814938 <__alt_data_end+0xff814938>
  814954:	1004c03a 	cmpne	r2,r2,zero
  814958:	f800283a 	ret
  81495c:	103ff326 	beq	r2,zero,81492c <__alt_data_end+0xff81492c>
  814960:	00800044 	movi	r2,1
  814964:	f800283a 	ret
  814968:	0005883a 	mov	r2,zero
  81496c:	f800283a 	ret

00814970 <__gesf2>:
  814970:	2004d5fa 	srli	r2,r4,23
  814974:	2806d5fa 	srli	r3,r5,23
  814978:	01802034 	movhi	r6,128
  81497c:	31bfffc4 	addi	r6,r6,-1
  814980:	10803fcc 	andi	r2,r2,255
  814984:	01c03fc4 	movi	r7,255
  814988:	3110703a 	and	r8,r6,r4
  81498c:	18c03fcc 	andi	r3,r3,255
  814990:	314c703a 	and	r6,r6,r5
  814994:	2008d7fa 	srli	r4,r4,31
  814998:	280ad7fa 	srli	r5,r5,31
  81499c:	11c00926 	beq	r2,r7,8149c4 <__gesf2+0x54>
  8149a0:	19c01226 	beq	r3,r7,8149ec <__gesf2+0x7c>
  8149a4:	1000091e 	bne	r2,zero,8149cc <__gesf2+0x5c>
  8149a8:	4013003a 	cmpeq	r9,r8,zero
  8149ac:	480f883a 	mov	r7,r9
  8149b0:	1800091e 	bne	r3,zero,8149d8 <__gesf2+0x68>
  8149b4:	3000081e 	bne	r6,zero,8149d8 <__gesf2+0x68>
  8149b8:	48001026 	beq	r9,zero,8149fc <__gesf2+0x8c>
  8149bc:	0005883a 	mov	r2,zero
  8149c0:	f800283a 	ret
  8149c4:	4000161e 	bne	r8,zero,814a20 <__gesf2+0xb0>
  8149c8:	18800826 	beq	r3,r2,8149ec <__gesf2+0x7c>
  8149cc:	1800091e 	bne	r3,zero,8149f4 <__gesf2+0x84>
  8149d0:	000f883a 	mov	r7,zero
  8149d4:	30000926 	beq	r6,zero,8149fc <__gesf2+0x8c>
  8149d8:	29403fcc 	andi	r5,r5,255
  8149dc:	38000626 	beq	r7,zero,8149f8 <__gesf2+0x88>
  8149e0:	2800071e 	bne	r5,zero,814a00 <__gesf2+0x90>
  8149e4:	00bfffc4 	movi	r2,-1
  8149e8:	f800283a 	ret
  8149ec:	30000c1e 	bne	r6,zero,814a20 <__gesf2+0xb0>
  8149f0:	103fed26 	beq	r2,zero,8149a8 <__alt_data_end+0xff8149a8>
  8149f4:	29403fcc 	andi	r5,r5,255
  8149f8:	21400326 	beq	r4,r5,814a08 <__gesf2+0x98>
  8149fc:	203ff91e 	bne	r4,zero,8149e4 <__alt_data_end+0xff8149e4>
  814a00:	00800044 	movi	r2,1
  814a04:	f800283a 	ret
  814a08:	18bffc16 	blt	r3,r2,8149fc <__alt_data_end+0xff8149fc>
  814a0c:	10c00216 	blt	r2,r3,814a18 <__gesf2+0xa8>
  814a10:	323ffa36 	bltu	r6,r8,8149fc <__alt_data_end+0xff8149fc>
  814a14:	41bfe92e 	bgeu	r8,r6,8149bc <__alt_data_end+0xff8149bc>
  814a18:	203ff226 	beq	r4,zero,8149e4 <__alt_data_end+0xff8149e4>
  814a1c:	003ff806 	br	814a00 <__alt_data_end+0xff814a00>
  814a20:	00bfff84 	movi	r2,-2
  814a24:	f800283a 	ret

00814a28 <__lesf2>:
  814a28:	2004d5fa 	srli	r2,r4,23
  814a2c:	280cd5fa 	srli	r6,r5,23
  814a30:	00c02034 	movhi	r3,128
  814a34:	18ffffc4 	addi	r3,r3,-1
  814a38:	10803fcc 	andi	r2,r2,255
  814a3c:	01c03fc4 	movi	r7,255
  814a40:	1910703a 	and	r8,r3,r4
  814a44:	31803fcc 	andi	r6,r6,255
  814a48:	1946703a 	and	r3,r3,r5
  814a4c:	2008d7fa 	srli	r4,r4,31
  814a50:	280ad7fa 	srli	r5,r5,31
  814a54:	11c00a26 	beq	r2,r7,814a80 <__lesf2+0x58>
  814a58:	31c01526 	beq	r6,r7,814ab0 <__lesf2+0x88>
  814a5c:	10000a1e 	bne	r2,zero,814a88 <__lesf2+0x60>
  814a60:	4013003a 	cmpeq	r9,r8,zero
  814a64:	480f883a 	mov	r7,r9
  814a68:	30000d26 	beq	r6,zero,814aa0 <__lesf2+0x78>
  814a6c:	29403fcc 	andi	r5,r5,255
  814a70:	38001426 	beq	r7,zero,814ac4 <__lesf2+0x9c>
  814a74:	2800081e 	bne	r5,zero,814a98 <__lesf2+0x70>
  814a78:	00bfffc4 	movi	r2,-1
  814a7c:	f800283a 	ret
  814a80:	40000c1e 	bne	r8,zero,814ab4 <__lesf2+0x8c>
  814a84:	30800a26 	beq	r6,r2,814ab0 <__lesf2+0x88>
  814a88:	30000d1e 	bne	r6,zero,814ac0 <__lesf2+0x98>
  814a8c:	000f883a 	mov	r7,zero
  814a90:	183ff61e 	bne	r3,zero,814a6c <__alt_data_end+0xff814a6c>
  814a94:	203ff81e 	bne	r4,zero,814a78 <__alt_data_end+0xff814a78>
  814a98:	00800044 	movi	r2,1
  814a9c:	f800283a 	ret
  814aa0:	183ff21e 	bne	r3,zero,814a6c <__alt_data_end+0xff814a6c>
  814aa4:	483ffb26 	beq	r9,zero,814a94 <__alt_data_end+0xff814a94>
  814aa8:	0005883a 	mov	r2,zero
  814aac:	f800283a 	ret
  814ab0:	18000226 	beq	r3,zero,814abc <__lesf2+0x94>
  814ab4:	00800084 	movi	r2,2
  814ab8:	f800283a 	ret
  814abc:	103fe826 	beq	r2,zero,814a60 <__alt_data_end+0xff814a60>
  814ac0:	29403fcc 	andi	r5,r5,255
  814ac4:	217ff31e 	bne	r4,r5,814a94 <__alt_data_end+0xff814a94>
  814ac8:	30bff216 	blt	r6,r2,814a94 <__alt_data_end+0xff814a94>
  814acc:	11800216 	blt	r2,r6,814ad8 <__lesf2+0xb0>
  814ad0:	1a3ff036 	bltu	r3,r8,814a94 <__alt_data_end+0xff814a94>
  814ad4:	40fff42e 	bgeu	r8,r3,814aa8 <__alt_data_end+0xff814aa8>
  814ad8:	203fe726 	beq	r4,zero,814a78 <__alt_data_end+0xff814a78>
  814adc:	003fee06 	br	814a98 <__alt_data_end+0xff814a98>

00814ae0 <__adddf3>:
  814ae0:	02000434 	movhi	r8,16
  814ae4:	423fffc4 	addi	r8,r8,-1
  814ae8:	defffb04 	addi	sp,sp,-20
  814aec:	2a12703a 	and	r9,r5,r8
  814af0:	2806d7fa 	srli	r3,r5,31
  814af4:	3a10703a 	and	r8,r7,r8
  814af8:	3804d53a 	srli	r2,r7,20
  814afc:	3014d77a 	srli	r10,r6,29
  814b00:	dc000015 	stw	r16,0(sp)
  814b04:	481290fa 	slli	r9,r9,3
  814b08:	2820d53a 	srli	r16,r5,20
  814b0c:	401090fa 	slli	r8,r8,3
  814b10:	200ad77a 	srli	r5,r4,29
  814b14:	380ed7fa 	srli	r7,r7,31
  814b18:	dc800215 	stw	r18,8(sp)
  814b1c:	dc400115 	stw	r17,4(sp)
  814b20:	dfc00415 	stw	ra,16(sp)
  814b24:	dcc00315 	stw	r19,12(sp)
  814b28:	1c803fcc 	andi	r18,r3,255
  814b2c:	8401ffcc 	andi	r16,r16,2047
  814b30:	494ab03a 	or	r5,r9,r5
  814b34:	202290fa 	slli	r17,r4,3
  814b38:	1081ffcc 	andi	r2,r2,2047
  814b3c:	4290b03a 	or	r8,r8,r10
  814b40:	300c90fa 	slli	r6,r6,3
  814b44:	91c07026 	beq	r18,r7,814d08 <__adddf3+0x228>
  814b48:	8087c83a 	sub	r3,r16,r2
  814b4c:	00c0b30e 	bge	zero,r3,814e1c <__adddf3+0x33c>
  814b50:	10002a1e 	bne	r2,zero,814bfc <__adddf3+0x11c>
  814b54:	4184b03a 	or	r2,r8,r6
  814b58:	1000991e 	bne	r2,zero,814dc0 <__adddf3+0x2e0>
  814b5c:	888001cc 	andi	r2,r17,7
  814b60:	10005b26 	beq	r2,zero,814cd0 <__adddf3+0x1f0>
  814b64:	88c003cc 	andi	r3,r17,15
  814b68:	00800104 	movi	r2,4
  814b6c:	18805826 	beq	r3,r2,814cd0 <__adddf3+0x1f0>
  814b70:	89800104 	addi	r6,r17,4
  814b74:	3463803a 	cmpltu	r17,r6,r17
  814b78:	2c4b883a 	add	r5,r5,r17
  814b7c:	2880202c 	andhi	r2,r5,128
  814b80:	9007883a 	mov	r3,r18
  814b84:	3023883a 	mov	r17,r6
  814b88:	10005426 	beq	r2,zero,814cdc <__adddf3+0x1fc>
  814b8c:	84000044 	addi	r16,r16,1
  814b90:	0081ffc4 	movi	r2,2047
  814b94:	8080c126 	beq	r16,r2,814e9c <__adddf3+0x3bc>
  814b98:	013fe034 	movhi	r4,65408
  814b9c:	213fffc4 	addi	r4,r4,-1
  814ba0:	290a703a 	and	r5,r5,r4
  814ba4:	2804977a 	slli	r2,r5,29
  814ba8:	280a927a 	slli	r5,r5,9
  814bac:	8822d0fa 	srli	r17,r17,3
  814bb0:	8401ffcc 	andi	r16,r16,2047
  814bb4:	2808d33a 	srli	r4,r5,12
  814bb8:	1444b03a 	or	r2,r2,r17
  814bbc:	8401ffcc 	andi	r16,r16,2047
  814bc0:	800a953a 	slli	r5,r16,20
  814bc4:	18c03fcc 	andi	r3,r3,255
  814bc8:	04000434 	movhi	r16,16
  814bcc:	180697fa 	slli	r3,r3,31
  814bd0:	843fffc4 	addi	r16,r16,-1
  814bd4:	2420703a 	and	r16,r4,r16
  814bd8:	8160b03a 	or	r16,r16,r5
  814bdc:	80c6b03a 	or	r3,r16,r3
  814be0:	dfc00417 	ldw	ra,16(sp)
  814be4:	dcc00317 	ldw	r19,12(sp)
  814be8:	dc800217 	ldw	r18,8(sp)
  814bec:	dc400117 	ldw	r17,4(sp)
  814bf0:	dc000017 	ldw	r16,0(sp)
  814bf4:	dec00504 	addi	sp,sp,20
  814bf8:	f800283a 	ret
  814bfc:	0081ffc4 	movi	r2,2047
  814c00:	80bfd626 	beq	r16,r2,814b5c <__alt_data_end+0xff814b5c>
  814c04:	42002034 	orhi	r8,r8,128
  814c08:	00800e04 	movi	r2,56
  814c0c:	10c0a616 	blt	r2,r3,814ea8 <__adddf3+0x3c8>
  814c10:	008007c4 	movi	r2,31
  814c14:	10c0c916 	blt	r2,r3,814f3c <__adddf3+0x45c>
  814c18:	00800804 	movi	r2,32
  814c1c:	10c5c83a 	sub	r2,r2,r3
  814c20:	408e983a 	sll	r7,r8,r2
  814c24:	30c8d83a 	srl	r4,r6,r3
  814c28:	3084983a 	sll	r2,r6,r2
  814c2c:	40c6d83a 	srl	r3,r8,r3
  814c30:	390cb03a 	or	r6,r7,r4
  814c34:	1004c03a 	cmpne	r2,r2,zero
  814c38:	308cb03a 	or	r6,r6,r2
  814c3c:	898dc83a 	sub	r6,r17,r6
  814c40:	89a3803a 	cmpltu	r17,r17,r6
  814c44:	28cbc83a 	sub	r5,r5,r3
  814c48:	2c4bc83a 	sub	r5,r5,r17
  814c4c:	3023883a 	mov	r17,r6
  814c50:	2880202c 	andhi	r2,r5,128
  814c54:	10006d26 	beq	r2,zero,814e0c <__adddf3+0x32c>
  814c58:	04c02034 	movhi	r19,128
  814c5c:	9cffffc4 	addi	r19,r19,-1
  814c60:	2ce6703a 	and	r19,r5,r19
  814c64:	98007e26 	beq	r19,zero,814e60 <__adddf3+0x380>
  814c68:	9809883a 	mov	r4,r19
  814c6c:	08172140 	call	817214 <__clzsi2>
  814c70:	10fffe04 	addi	r3,r2,-8
  814c74:	010007c4 	movi	r4,31
  814c78:	20c07f16 	blt	r4,r3,814e78 <__adddf3+0x398>
  814c7c:	01400a04 	movi	r5,40
  814c80:	2885c83a 	sub	r2,r5,r2
  814c84:	888ad83a 	srl	r5,r17,r2
  814c88:	98e6983a 	sll	r19,r19,r3
  814c8c:	88e2983a 	sll	r17,r17,r3
  814c90:	2ce6b03a 	or	r19,r5,r19
  814c94:	1c007c16 	blt	r3,r16,814e88 <__adddf3+0x3a8>
  814c98:	1c21c83a 	sub	r16,r3,r16
  814c9c:	81400044 	addi	r5,r16,1
  814ca0:	00c007c4 	movi	r3,31
  814ca4:	19409816 	blt	r3,r5,814f08 <__adddf3+0x428>
  814ca8:	1c21c83a 	sub	r16,r3,r16
  814cac:	8c08983a 	sll	r4,r17,r16
  814cb0:	8946d83a 	srl	r3,r17,r5
  814cb4:	9c20983a 	sll	r16,r19,r16
  814cb8:	2008c03a 	cmpne	r4,r4,zero
  814cbc:	994ad83a 	srl	r5,r19,r5
  814cc0:	1c06b03a 	or	r3,r3,r16
  814cc4:	1922b03a 	or	r17,r3,r4
  814cc8:	0021883a 	mov	r16,zero
  814ccc:	003fa306 	br	814b5c <__alt_data_end+0xff814b5c>
  814cd0:	2880202c 	andhi	r2,r5,128
  814cd4:	9007883a 	mov	r3,r18
  814cd8:	103fac1e 	bne	r2,zero,814b8c <__alt_data_end+0xff814b8c>
  814cdc:	2804977a 	slli	r2,r5,29
  814ce0:	8822d0fa 	srli	r17,r17,3
  814ce4:	0101ffc4 	movi	r4,2047
  814ce8:	280ad0fa 	srli	r5,r5,3
  814cec:	1444b03a 	or	r2,r2,r17
  814cf0:	81002c26 	beq	r16,r4,814da4 <__adddf3+0x2c4>
  814cf4:	8120703a 	and	r16,r16,r4
  814cf8:	01000434 	movhi	r4,16
  814cfc:	213fffc4 	addi	r4,r4,-1
  814d00:	2908703a 	and	r4,r5,r4
  814d04:	003fad06 	br	814bbc <__alt_data_end+0xff814bbc>
  814d08:	8089c83a 	sub	r4,r16,r2
  814d0c:	01006a0e 	bge	zero,r4,814eb8 <__adddf3+0x3d8>
  814d10:	10003326 	beq	r2,zero,814de0 <__adddf3+0x300>
  814d14:	0081ffc4 	movi	r2,2047
  814d18:	80bf9026 	beq	r16,r2,814b5c <__alt_data_end+0xff814b5c>
  814d1c:	42002034 	orhi	r8,r8,128
  814d20:	00800e04 	movi	r2,56
  814d24:	1100b116 	blt	r2,r4,814fec <__adddf3+0x50c>
  814d28:	008007c4 	movi	r2,31
  814d2c:	1100e216 	blt	r2,r4,8150b8 <__adddf3+0x5d8>
  814d30:	00800804 	movi	r2,32
  814d34:	1105c83a 	sub	r2,r2,r4
  814d38:	4092983a 	sll	r9,r8,r2
  814d3c:	310ed83a 	srl	r7,r6,r4
  814d40:	3084983a 	sll	r2,r6,r2
  814d44:	4110d83a 	srl	r8,r8,r4
  814d48:	49ccb03a 	or	r6,r9,r7
  814d4c:	1004c03a 	cmpne	r2,r2,zero
  814d50:	308cb03a 	or	r6,r6,r2
  814d54:	344d883a 	add	r6,r6,r17
  814d58:	3463803a 	cmpltu	r17,r6,r17
  814d5c:	414b883a 	add	r5,r8,r5
  814d60:	2c4b883a 	add	r5,r5,r17
  814d64:	3023883a 	mov	r17,r6
  814d68:	2880202c 	andhi	r2,r5,128
  814d6c:	10002726 	beq	r2,zero,814e0c <__adddf3+0x32c>
  814d70:	84000044 	addi	r16,r16,1
  814d74:	0081ffc4 	movi	r2,2047
  814d78:	8080ae26 	beq	r16,r2,815034 <__adddf3+0x554>
  814d7c:	00bfe034 	movhi	r2,65408
  814d80:	10bfffc4 	addi	r2,r2,-1
  814d84:	288a703a 	and	r5,r5,r2
  814d88:	880cd07a 	srli	r6,r17,1
  814d8c:	280897fa 	slli	r4,r5,31
  814d90:	88c0004c 	andi	r3,r17,1
  814d94:	30e2b03a 	or	r17,r6,r3
  814d98:	280ad07a 	srli	r5,r5,1
  814d9c:	8922b03a 	or	r17,r17,r4
  814da0:	003f6e06 	br	814b5c <__alt_data_end+0xff814b5c>
  814da4:	1148b03a 	or	r4,r2,r5
  814da8:	20003c26 	beq	r4,zero,814e9c <__adddf3+0x3bc>
  814dac:	29000234 	orhi	r4,r5,8
  814db0:	01400434 	movhi	r5,16
  814db4:	297fffc4 	addi	r5,r5,-1
  814db8:	2148703a 	and	r4,r4,r5
  814dbc:	003f7f06 	br	814bbc <__alt_data_end+0xff814bbc>
  814dc0:	18ffffc4 	addi	r3,r3,-1
  814dc4:	18004d1e 	bne	r3,zero,814efc <__adddf3+0x41c>
  814dc8:	898dc83a 	sub	r6,r17,r6
  814dcc:	89a3803a 	cmpltu	r17,r17,r6
  814dd0:	2a0bc83a 	sub	r5,r5,r8
  814dd4:	2c4bc83a 	sub	r5,r5,r17
  814dd8:	3023883a 	mov	r17,r6
  814ddc:	003f9c06 	br	814c50 <__alt_data_end+0xff814c50>
  814de0:	4184b03a 	or	r2,r8,r6
  814de4:	103f5d26 	beq	r2,zero,814b5c <__alt_data_end+0xff814b5c>
  814de8:	213fffc4 	addi	r4,r4,-1
  814dec:	203fd926 	beq	r4,zero,814d54 <__alt_data_end+0xff814d54>
  814df0:	0081ffc4 	movi	r2,2047
  814df4:	80bfca1e 	bne	r16,r2,814d20 <__alt_data_end+0xff814d20>
  814df8:	003f5806 	br	814b5c <__alt_data_end+0xff814b5c>
  814dfc:	10c8b03a 	or	r4,r2,r3
  814e00:	20008b26 	beq	r4,zero,815030 <__adddf3+0x550>
  814e04:	100b883a 	mov	r5,r2
  814e08:	1823883a 	mov	r17,r3
  814e0c:	888001cc 	andi	r2,r17,7
  814e10:	103f541e 	bne	r2,zero,814b64 <__alt_data_end+0xff814b64>
  814e14:	9007883a 	mov	r3,r18
  814e18:	003fb006 	br	814cdc <__alt_data_end+0xff814cdc>
  814e1c:	1800531e 	bne	r3,zero,814f6c <__adddf3+0x48c>
  814e20:	80800044 	addi	r2,r16,1
  814e24:	1081ffcc 	andi	r2,r2,2047
  814e28:	00c00044 	movi	r3,1
  814e2c:	1880990e 	bge	r3,r2,815094 <__adddf3+0x5b4>
  814e30:	8985c83a 	sub	r2,r17,r6
  814e34:	8887803a 	cmpltu	r3,r17,r2
  814e38:	2a27c83a 	sub	r19,r5,r8
  814e3c:	98e7c83a 	sub	r19,r19,r3
  814e40:	98c0202c 	andhi	r3,r19,128
  814e44:	18006226 	beq	r3,zero,814fd0 <__adddf3+0x4f0>
  814e48:	3463c83a 	sub	r17,r6,r17
  814e4c:	4151c83a 	sub	r8,r8,r5
  814e50:	344d803a 	cmpltu	r6,r6,r17
  814e54:	41a7c83a 	sub	r19,r8,r6
  814e58:	3825883a 	mov	r18,r7
  814e5c:	983f821e 	bne	r19,zero,814c68 <__alt_data_end+0xff814c68>
  814e60:	8809883a 	mov	r4,r17
  814e64:	08172140 	call	817214 <__clzsi2>
  814e68:	10800804 	addi	r2,r2,32
  814e6c:	10fffe04 	addi	r3,r2,-8
  814e70:	010007c4 	movi	r4,31
  814e74:	20ff810e 	bge	r4,r3,814c7c <__alt_data_end+0xff814c7c>
  814e78:	14fff604 	addi	r19,r2,-40
  814e7c:	8ce6983a 	sll	r19,r17,r19
  814e80:	0023883a 	mov	r17,zero
  814e84:	1c3f840e 	bge	r3,r16,814c98 <__alt_data_end+0xff814c98>
  814e88:	017fe034 	movhi	r5,65408
  814e8c:	297fffc4 	addi	r5,r5,-1
  814e90:	80e1c83a 	sub	r16,r16,r3
  814e94:	994a703a 	and	r5,r19,r5
  814e98:	003f3006 	br	814b5c <__alt_data_end+0xff814b5c>
  814e9c:	0009883a 	mov	r4,zero
  814ea0:	0005883a 	mov	r2,zero
  814ea4:	003f4506 	br	814bbc <__alt_data_end+0xff814bbc>
  814ea8:	418cb03a 	or	r6,r8,r6
  814eac:	300cc03a 	cmpne	r6,r6,zero
  814eb0:	0007883a 	mov	r3,zero
  814eb4:	003f6106 	br	814c3c <__alt_data_end+0xff814c3c>
  814eb8:	2000921e 	bne	r4,zero,815104 <__adddf3+0x624>
  814ebc:	80800044 	addi	r2,r16,1
  814ec0:	11c1ffcc 	andi	r7,r2,2047
  814ec4:	01000044 	movi	r4,1
  814ec8:	21c0610e 	bge	r4,r7,815050 <__adddf3+0x570>
  814ecc:	0101ffc4 	movi	r4,2047
  814ed0:	1100a326 	beq	r2,r4,815160 <__adddf3+0x680>
  814ed4:	344d883a 	add	r6,r6,r17
  814ed8:	3463803a 	cmpltu	r17,r6,r17
  814edc:	414b883a 	add	r5,r8,r5
  814ee0:	2c4b883a 	add	r5,r5,r17
  814ee4:	282297fa 	slli	r17,r5,31
  814ee8:	300cd07a 	srli	r6,r6,1
  814eec:	280ad07a 	srli	r5,r5,1
  814ef0:	1021883a 	mov	r16,r2
  814ef4:	89a2b03a 	or	r17,r17,r6
  814ef8:	003f1806 	br	814b5c <__alt_data_end+0xff814b5c>
  814efc:	0081ffc4 	movi	r2,2047
  814f00:	80bf411e 	bne	r16,r2,814c08 <__alt_data_end+0xff814c08>
  814f04:	003f1506 	br	814b5c <__alt_data_end+0xff814b5c>
  814f08:	80bff844 	addi	r2,r16,-31
  814f0c:	00c00804 	movi	r3,32
  814f10:	9884d83a 	srl	r2,r19,r2
  814f14:	28c04a26 	beq	r5,r3,815040 <__adddf3+0x560>
  814f18:	00c00fc4 	movi	r3,63
  814f1c:	1c21c83a 	sub	r16,r3,r16
  814f20:	9c26983a 	sll	r19,r19,r16
  814f24:	9c62b03a 	or	r17,r19,r17
  814f28:	8822c03a 	cmpne	r17,r17,zero
  814f2c:	88a2b03a 	or	r17,r17,r2
  814f30:	000b883a 	mov	r5,zero
  814f34:	0021883a 	mov	r16,zero
  814f38:	003fb406 	br	814e0c <__alt_data_end+0xff814e0c>
  814f3c:	18bff804 	addi	r2,r3,-32
  814f40:	01000804 	movi	r4,32
  814f44:	4084d83a 	srl	r2,r8,r2
  814f48:	19003f26 	beq	r3,r4,815048 <__adddf3+0x568>
  814f4c:	01001004 	movi	r4,64
  814f50:	20c7c83a 	sub	r3,r4,r3
  814f54:	40d0983a 	sll	r8,r8,r3
  814f58:	418cb03a 	or	r6,r8,r6
  814f5c:	300cc03a 	cmpne	r6,r6,zero
  814f60:	308cb03a 	or	r6,r6,r2
  814f64:	0007883a 	mov	r3,zero
  814f68:	003f3406 	br	814c3c <__alt_data_end+0xff814c3c>
  814f6c:	80002326 	beq	r16,zero,814ffc <__adddf3+0x51c>
  814f70:	0101ffc4 	movi	r4,2047
  814f74:	11005e26 	beq	r2,r4,8150f0 <__adddf3+0x610>
  814f78:	00c7c83a 	sub	r3,zero,r3
  814f7c:	29402034 	orhi	r5,r5,128
  814f80:	01000e04 	movi	r4,56
  814f84:	20c07216 	blt	r4,r3,815150 <__adddf3+0x670>
  814f88:	010007c4 	movi	r4,31
  814f8c:	20c0ce16 	blt	r4,r3,8152c8 <__adddf3+0x7e8>
  814f90:	01000804 	movi	r4,32
  814f94:	20c9c83a 	sub	r4,r4,r3
  814f98:	2914983a 	sll	r10,r5,r4
  814f9c:	88d2d83a 	srl	r9,r17,r3
  814fa0:	8908983a 	sll	r4,r17,r4
  814fa4:	28c6d83a 	srl	r3,r5,r3
  814fa8:	5262b03a 	or	r17,r10,r9
  814fac:	2008c03a 	cmpne	r4,r4,zero
  814fb0:	8922b03a 	or	r17,r17,r4
  814fb4:	3463c83a 	sub	r17,r6,r17
  814fb8:	40c7c83a 	sub	r3,r8,r3
  814fbc:	344d803a 	cmpltu	r6,r6,r17
  814fc0:	198bc83a 	sub	r5,r3,r6
  814fc4:	1021883a 	mov	r16,r2
  814fc8:	3825883a 	mov	r18,r7
  814fcc:	003f2006 	br	814c50 <__alt_data_end+0xff814c50>
  814fd0:	9886b03a 	or	r3,r19,r2
  814fd4:	1800141e 	bne	r3,zero,815028 <__adddf3+0x548>
  814fd8:	0007883a 	mov	r3,zero
  814fdc:	000b883a 	mov	r5,zero
  814fe0:	0023883a 	mov	r17,zero
  814fe4:	0021883a 	mov	r16,zero
  814fe8:	003f3c06 	br	814cdc <__alt_data_end+0xff814cdc>
  814fec:	418cb03a 	or	r6,r8,r6
  814ff0:	300cc03a 	cmpne	r6,r6,zero
  814ff4:	0011883a 	mov	r8,zero
  814ff8:	003f5606 	br	814d54 <__alt_data_end+0xff814d54>
  814ffc:	2c48b03a 	or	r4,r5,r17
  815000:	20003b26 	beq	r4,zero,8150f0 <__adddf3+0x610>
  815004:	00c6303a 	nor	r3,zero,r3
  815008:	1800371e 	bne	r3,zero,8150e8 <__adddf3+0x608>
  81500c:	3463c83a 	sub	r17,r6,r17
  815010:	414bc83a 	sub	r5,r8,r5
  815014:	344d803a 	cmpltu	r6,r6,r17
  815018:	298bc83a 	sub	r5,r5,r6
  81501c:	1021883a 	mov	r16,r2
  815020:	3825883a 	mov	r18,r7
  815024:	003f0a06 	br	814c50 <__alt_data_end+0xff814c50>
  815028:	1023883a 	mov	r17,r2
  81502c:	003f0d06 	br	814c64 <__alt_data_end+0xff814c64>
  815030:	0007883a 	mov	r3,zero
  815034:	000b883a 	mov	r5,zero
  815038:	0023883a 	mov	r17,zero
  81503c:	003f2706 	br	814cdc <__alt_data_end+0xff814cdc>
  815040:	0027883a 	mov	r19,zero
  815044:	003fb706 	br	814f24 <__alt_data_end+0xff814f24>
  815048:	0011883a 	mov	r8,zero
  81504c:	003fc206 	br	814f58 <__alt_data_end+0xff814f58>
  815050:	2c44b03a 	or	r2,r5,r17
  815054:	8000871e 	bne	r16,zero,815274 <__adddf3+0x794>
  815058:	1000b126 	beq	r2,zero,815320 <__adddf3+0x840>
  81505c:	4184b03a 	or	r2,r8,r6
  815060:	103ebe26 	beq	r2,zero,814b5c <__alt_data_end+0xff814b5c>
  815064:	3445883a 	add	r2,r6,r17
  815068:	1463803a 	cmpltu	r17,r2,r17
  81506c:	414b883a 	add	r5,r8,r5
  815070:	2c4b883a 	add	r5,r5,r17
  815074:	28c0202c 	andhi	r3,r5,128
  815078:	1023883a 	mov	r17,r2
  81507c:	183f6326 	beq	r3,zero,814e0c <__alt_data_end+0xff814e0c>
  815080:	00bfe034 	movhi	r2,65408
  815084:	10bfffc4 	addi	r2,r2,-1
  815088:	2021883a 	mov	r16,r4
  81508c:	288a703a 	and	r5,r5,r2
  815090:	003eb206 	br	814b5c <__alt_data_end+0xff814b5c>
  815094:	2c44b03a 	or	r2,r5,r17
  815098:	8000251e 	bne	r16,zero,815130 <__adddf3+0x650>
  81509c:	10004b1e 	bne	r2,zero,8151cc <__adddf3+0x6ec>
  8150a0:	4184b03a 	or	r2,r8,r6
  8150a4:	103fe226 	beq	r2,zero,815030 <__alt_data_end+0xff815030>
  8150a8:	400b883a 	mov	r5,r8
  8150ac:	3023883a 	mov	r17,r6
  8150b0:	3825883a 	mov	r18,r7
  8150b4:	003ea906 	br	814b5c <__alt_data_end+0xff814b5c>
  8150b8:	20bff804 	addi	r2,r4,-32
  8150bc:	01c00804 	movi	r7,32
  8150c0:	4084d83a 	srl	r2,r8,r2
  8150c4:	21c07e26 	beq	r4,r7,8152c0 <__adddf3+0x7e0>
  8150c8:	01c01004 	movi	r7,64
  8150cc:	3909c83a 	sub	r4,r7,r4
  8150d0:	4110983a 	sll	r8,r8,r4
  8150d4:	418cb03a 	or	r6,r8,r6
  8150d8:	300cc03a 	cmpne	r6,r6,zero
  8150dc:	308cb03a 	or	r6,r6,r2
  8150e0:	0011883a 	mov	r8,zero
  8150e4:	003f1b06 	br	814d54 <__alt_data_end+0xff814d54>
  8150e8:	0101ffc4 	movi	r4,2047
  8150ec:	113fa41e 	bne	r2,r4,814f80 <__alt_data_end+0xff814f80>
  8150f0:	400b883a 	mov	r5,r8
  8150f4:	3023883a 	mov	r17,r6
  8150f8:	1021883a 	mov	r16,r2
  8150fc:	3825883a 	mov	r18,r7
  815100:	003e9606 	br	814b5c <__alt_data_end+0xff814b5c>
  815104:	80001a1e 	bne	r16,zero,815170 <__adddf3+0x690>
  815108:	2c4eb03a 	or	r7,r5,r17
  81510c:	38005526 	beq	r7,zero,815264 <__adddf3+0x784>
  815110:	0108303a 	nor	r4,zero,r4
  815114:	2000511e 	bne	r4,zero,81525c <__adddf3+0x77c>
  815118:	89a3883a 	add	r17,r17,r6
  81511c:	414b883a 	add	r5,r8,r5
  815120:	898d803a 	cmpltu	r6,r17,r6
  815124:	298b883a 	add	r5,r5,r6
  815128:	1021883a 	mov	r16,r2
  81512c:	003f0e06 	br	814d68 <__alt_data_end+0xff814d68>
  815130:	1000341e 	bne	r2,zero,815204 <__adddf3+0x724>
  815134:	4184b03a 	or	r2,r8,r6
  815138:	10006f26 	beq	r2,zero,8152f8 <__adddf3+0x818>
  81513c:	400b883a 	mov	r5,r8
  815140:	3023883a 	mov	r17,r6
  815144:	3825883a 	mov	r18,r7
  815148:	0401ffc4 	movi	r16,2047
  81514c:	003e8306 	br	814b5c <__alt_data_end+0xff814b5c>
  815150:	2c62b03a 	or	r17,r5,r17
  815154:	8822c03a 	cmpne	r17,r17,zero
  815158:	0007883a 	mov	r3,zero
  81515c:	003f9506 	br	814fb4 <__alt_data_end+0xff814fb4>
  815160:	1021883a 	mov	r16,r2
  815164:	000b883a 	mov	r5,zero
  815168:	0023883a 	mov	r17,zero
  81516c:	003edb06 	br	814cdc <__alt_data_end+0xff814cdc>
  815170:	01c1ffc4 	movi	r7,2047
  815174:	11c03b26 	beq	r2,r7,815264 <__adddf3+0x784>
  815178:	0109c83a 	sub	r4,zero,r4
  81517c:	29402034 	orhi	r5,r5,128
  815180:	01c00e04 	movi	r7,56
  815184:	39006216 	blt	r7,r4,815310 <__adddf3+0x830>
  815188:	01c007c4 	movi	r7,31
  81518c:	39006b16 	blt	r7,r4,81533c <__adddf3+0x85c>
  815190:	01c00804 	movi	r7,32
  815194:	390fc83a 	sub	r7,r7,r4
  815198:	29d4983a 	sll	r10,r5,r7
  81519c:	8912d83a 	srl	r9,r17,r4
  8151a0:	89ce983a 	sll	r7,r17,r7
  8151a4:	2908d83a 	srl	r4,r5,r4
  8151a8:	5262b03a 	or	r17,r10,r9
  8151ac:	380ac03a 	cmpne	r5,r7,zero
  8151b0:	8962b03a 	or	r17,r17,r5
  8151b4:	89a3883a 	add	r17,r17,r6
  8151b8:	2211883a 	add	r8,r4,r8
  8151bc:	898d803a 	cmpltu	r6,r17,r6
  8151c0:	418b883a 	add	r5,r8,r6
  8151c4:	1021883a 	mov	r16,r2
  8151c8:	003ee706 	br	814d68 <__alt_data_end+0xff814d68>
  8151cc:	4184b03a 	or	r2,r8,r6
  8151d0:	103e6226 	beq	r2,zero,814b5c <__alt_data_end+0xff814b5c>
  8151d4:	8987c83a 	sub	r3,r17,r6
  8151d8:	88c9803a 	cmpltu	r4,r17,r3
  8151dc:	2a05c83a 	sub	r2,r5,r8
  8151e0:	1105c83a 	sub	r2,r2,r4
  8151e4:	1100202c 	andhi	r4,r2,128
  8151e8:	203f0426 	beq	r4,zero,814dfc <__alt_data_end+0xff814dfc>
  8151ec:	3463c83a 	sub	r17,r6,r17
  8151f0:	414bc83a 	sub	r5,r8,r5
  8151f4:	344d803a 	cmpltu	r6,r6,r17
  8151f8:	298bc83a 	sub	r5,r5,r6
  8151fc:	3825883a 	mov	r18,r7
  815200:	003e5606 	br	814b5c <__alt_data_end+0xff814b5c>
  815204:	4184b03a 	or	r2,r8,r6
  815208:	10002b26 	beq	r2,zero,8152b8 <__adddf3+0x7d8>
  81520c:	2804d0fa 	srli	r2,r5,3
  815210:	8822d0fa 	srli	r17,r17,3
  815214:	280a977a 	slli	r5,r5,29
  815218:	10c0022c 	andhi	r3,r2,8
  81521c:	2c62b03a 	or	r17,r5,r17
  815220:	18000826 	beq	r3,zero,815244 <__adddf3+0x764>
  815224:	4008d0fa 	srli	r4,r8,3
  815228:	20c0022c 	andhi	r3,r4,8
  81522c:	1800051e 	bne	r3,zero,815244 <__adddf3+0x764>
  815230:	300cd0fa 	srli	r6,r6,3
  815234:	4010977a 	slli	r8,r8,29
  815238:	2005883a 	mov	r2,r4
  81523c:	3825883a 	mov	r18,r7
  815240:	41a2b03a 	or	r17,r8,r6
  815244:	880ad77a 	srli	r5,r17,29
  815248:	100490fa 	slli	r2,r2,3
  81524c:	882290fa 	slli	r17,r17,3
  815250:	0401ffc4 	movi	r16,2047
  815254:	288ab03a 	or	r5,r5,r2
  815258:	003e4006 	br	814b5c <__alt_data_end+0xff814b5c>
  81525c:	01c1ffc4 	movi	r7,2047
  815260:	11ffc71e 	bne	r2,r7,815180 <__alt_data_end+0xff815180>
  815264:	400b883a 	mov	r5,r8
  815268:	3023883a 	mov	r17,r6
  81526c:	1021883a 	mov	r16,r2
  815270:	003e3a06 	br	814b5c <__alt_data_end+0xff814b5c>
  815274:	10002d26 	beq	r2,zero,81532c <__adddf3+0x84c>
  815278:	4184b03a 	or	r2,r8,r6
  81527c:	10000e26 	beq	r2,zero,8152b8 <__adddf3+0x7d8>
  815280:	2804d0fa 	srli	r2,r5,3
  815284:	8822d0fa 	srli	r17,r17,3
  815288:	280a977a 	slli	r5,r5,29
  81528c:	10c0022c 	andhi	r3,r2,8
  815290:	2c62b03a 	or	r17,r5,r17
  815294:	183feb26 	beq	r3,zero,815244 <__alt_data_end+0xff815244>
  815298:	4008d0fa 	srli	r4,r8,3
  81529c:	20c0022c 	andhi	r3,r4,8
  8152a0:	183fe81e 	bne	r3,zero,815244 <__alt_data_end+0xff815244>
  8152a4:	300cd0fa 	srli	r6,r6,3
  8152a8:	4010977a 	slli	r8,r8,29
  8152ac:	2005883a 	mov	r2,r4
  8152b0:	41a2b03a 	or	r17,r8,r6
  8152b4:	003fe306 	br	815244 <__alt_data_end+0xff815244>
  8152b8:	0401ffc4 	movi	r16,2047
  8152bc:	003e2706 	br	814b5c <__alt_data_end+0xff814b5c>
  8152c0:	0011883a 	mov	r8,zero
  8152c4:	003f8306 	br	8150d4 <__alt_data_end+0xff8150d4>
  8152c8:	193ff804 	addi	r4,r3,-32
  8152cc:	02400804 	movi	r9,32
  8152d0:	2908d83a 	srl	r4,r5,r4
  8152d4:	1a402526 	beq	r3,r9,81536c <__adddf3+0x88c>
  8152d8:	02401004 	movi	r9,64
  8152dc:	48c7c83a 	sub	r3,r9,r3
  8152e0:	28ca983a 	sll	r5,r5,r3
  8152e4:	2c62b03a 	or	r17,r5,r17
  8152e8:	8822c03a 	cmpne	r17,r17,zero
  8152ec:	8922b03a 	or	r17,r17,r4
  8152f0:	0007883a 	mov	r3,zero
  8152f4:	003f2f06 	br	814fb4 <__alt_data_end+0xff814fb4>
  8152f8:	01402034 	movhi	r5,128
  8152fc:	0007883a 	mov	r3,zero
  815300:	297fffc4 	addi	r5,r5,-1
  815304:	047ffe04 	movi	r17,-8
  815308:	0401ffc4 	movi	r16,2047
  81530c:	003e7306 	br	814cdc <__alt_data_end+0xff814cdc>
  815310:	2c62b03a 	or	r17,r5,r17
  815314:	8822c03a 	cmpne	r17,r17,zero
  815318:	0009883a 	mov	r4,zero
  81531c:	003fa506 	br	8151b4 <__alt_data_end+0xff8151b4>
  815320:	400b883a 	mov	r5,r8
  815324:	3023883a 	mov	r17,r6
  815328:	003e0c06 	br	814b5c <__alt_data_end+0xff814b5c>
  81532c:	400b883a 	mov	r5,r8
  815330:	3023883a 	mov	r17,r6
  815334:	0401ffc4 	movi	r16,2047
  815338:	003e0806 	br	814b5c <__alt_data_end+0xff814b5c>
  81533c:	21fff804 	addi	r7,r4,-32
  815340:	02400804 	movi	r9,32
  815344:	29ced83a 	srl	r7,r5,r7
  815348:	22400a26 	beq	r4,r9,815374 <__adddf3+0x894>
  81534c:	02401004 	movi	r9,64
  815350:	4909c83a 	sub	r4,r9,r4
  815354:	290a983a 	sll	r5,r5,r4
  815358:	2c62b03a 	or	r17,r5,r17
  81535c:	8822c03a 	cmpne	r17,r17,zero
  815360:	89e2b03a 	or	r17,r17,r7
  815364:	0009883a 	mov	r4,zero
  815368:	003f9206 	br	8151b4 <__alt_data_end+0xff8151b4>
  81536c:	000b883a 	mov	r5,zero
  815370:	003fdc06 	br	8152e4 <__alt_data_end+0xff8152e4>
  815374:	000b883a 	mov	r5,zero
  815378:	003ff706 	br	815358 <__alt_data_end+0xff815358>

0081537c <__divdf3>:
  81537c:	defff204 	addi	sp,sp,-56
  815380:	dd000815 	stw	r20,32(sp)
  815384:	2828d53a 	srli	r20,r5,20
  815388:	dd800a15 	stw	r22,40(sp)
  81538c:	282cd7fa 	srli	r22,r5,31
  815390:	dc000415 	stw	r16,16(sp)
  815394:	04000434 	movhi	r16,16
  815398:	df000c15 	stw	fp,48(sp)
  81539c:	dcc00715 	stw	r19,28(sp)
  8153a0:	dc800615 	stw	r18,24(sp)
  8153a4:	dc400515 	stw	r17,20(sp)
  8153a8:	843fffc4 	addi	r16,r16,-1
  8153ac:	dfc00d15 	stw	ra,52(sp)
  8153b0:	ddc00b15 	stw	r23,44(sp)
  8153b4:	dd400915 	stw	r21,36(sp)
  8153b8:	a501ffcc 	andi	r20,r20,2047
  8153bc:	2025883a 	mov	r18,r4
  8153c0:	2027883a 	mov	r19,r4
  8153c4:	2c22703a 	and	r17,r5,r16
  8153c8:	b7003fcc 	andi	fp,r22,255
  8153cc:	a0005e26 	beq	r20,zero,815548 <__divdf3+0x1cc>
  8153d0:	0081ffc4 	movi	r2,2047
  8153d4:	a0803526 	beq	r20,r2,8154ac <__divdf3+0x130>
  8153d8:	8c000434 	orhi	r16,r17,16
  8153dc:	2004d77a 	srli	r2,r4,29
  8153e0:	802090fa 	slli	r16,r16,3
  8153e4:	202690fa 	slli	r19,r4,3
  8153e8:	a53f0044 	addi	r20,r20,-1023
  8153ec:	80a2b03a 	or	r17,r16,r2
  8153f0:	0025883a 	mov	r18,zero
  8153f4:	0011883a 	mov	r8,zero
  8153f8:	380ad53a 	srli	r5,r7,20
  8153fc:	382ed7fa 	srli	r23,r7,31
  815400:	04000434 	movhi	r16,16
  815404:	843fffc4 	addi	r16,r16,-1
  815408:	2941ffcc 	andi	r5,r5,2047
  81540c:	302b883a 	mov	r21,r6
  815410:	3c20703a 	and	r16,r7,r16
  815414:	ba403fcc 	andi	r9,r23,255
  815418:	28006726 	beq	r5,zero,8155b8 <__divdf3+0x23c>
  81541c:	0081ffc4 	movi	r2,2047
  815420:	28805f26 	beq	r5,r2,8155a0 <__divdf3+0x224>
  815424:	84000434 	orhi	r16,r16,16
  815428:	3004d77a 	srli	r2,r6,29
  81542c:	802090fa 	slli	r16,r16,3
  815430:	302a90fa 	slli	r21,r6,3
  815434:	297f0044 	addi	r5,r5,-1023
  815438:	80a0b03a 	or	r16,r16,r2
  81543c:	000f883a 	mov	r7,zero
  815440:	3c86b03a 	or	r3,r7,r18
  815444:	180690ba 	slli	r3,r3,2
  815448:	00802074 	movhi	r2,129
  81544c:	10951b04 	addi	r2,r2,21612
  815450:	1887883a 	add	r3,r3,r2
  815454:	18c00017 	ldw	r3,0(r3)
  815458:	b5c8f03a 	xor	r4,r22,r23
  81545c:	200d883a 	mov	r6,r4
  815460:	24803fcc 	andi	r18,r4,255
  815464:	a169c83a 	sub	r20,r20,r5
  815468:	1800683a 	jmp	r3
  81546c:	008156b4 	movhi	r2,1370
  815470:	008154e4 	muli	r2,zero,1363
  815474:	00815678 	rdprs	r2,zero,1369
  815478:	008154c8 	cmpgei	r2,zero,1363
  81547c:	00815678 	rdprs	r2,zero,1369
  815480:	0081564c 	andi	r2,zero,1369
  815484:	00815678 	rdprs	r2,zero,1369
  815488:	008154c8 	cmpgei	r2,zero,1363
  81548c:	008154e4 	muli	r2,zero,1363
  815490:	008154e4 	muli	r2,zero,1363
  815494:	0081564c 	andi	r2,zero,1369
  815498:	008154c8 	cmpgei	r2,zero,1363
  81549c:	008154d8 	cmpnei	r2,zero,1363
  8154a0:	008154d8 	cmpnei	r2,zero,1363
  8154a4:	008154d8 	cmpnei	r2,zero,1363
  8154a8:	00815688 	cmpgei	r2,zero,1370
  8154ac:	8904b03a 	or	r2,r17,r4
  8154b0:	1000631e 	bne	r2,zero,815640 <__divdf3+0x2c4>
  8154b4:	04800204 	movi	r18,8
  8154b8:	0023883a 	mov	r17,zero
  8154bc:	0027883a 	mov	r19,zero
  8154c0:	02000084 	movi	r8,2
  8154c4:	003fcc06 	br	8153f8 <__alt_data_end+0xff8153f8>
  8154c8:	8023883a 	mov	r17,r16
  8154cc:	a827883a 	mov	r19,r21
  8154d0:	4839883a 	mov	fp,r9
  8154d4:	3811883a 	mov	r8,r7
  8154d8:	00800084 	movi	r2,2
  8154dc:	40812a1e 	bne	r8,r2,815988 <__divdf3+0x60c>
  8154e0:	e025883a 	mov	r18,fp
  8154e4:	9180004c 	andi	r6,r18,1
  8154e8:	0101ffc4 	movi	r4,2047
  8154ec:	000b883a 	mov	r5,zero
  8154f0:	0027883a 	mov	r19,zero
  8154f4:	2008953a 	slli	r4,r4,20
  8154f8:	30c03fcc 	andi	r3,r6,255
  8154fc:	04000434 	movhi	r16,16
  815500:	180697fa 	slli	r3,r3,31
  815504:	843fffc4 	addi	r16,r16,-1
  815508:	2c20703a 	and	r16,r5,r16
  81550c:	8120b03a 	or	r16,r16,r4
  815510:	80c6b03a 	or	r3,r16,r3
  815514:	9805883a 	mov	r2,r19
  815518:	dfc00d17 	ldw	ra,52(sp)
  81551c:	df000c17 	ldw	fp,48(sp)
  815520:	ddc00b17 	ldw	r23,44(sp)
  815524:	dd800a17 	ldw	r22,40(sp)
  815528:	dd400917 	ldw	r21,36(sp)
  81552c:	dd000817 	ldw	r20,32(sp)
  815530:	dcc00717 	ldw	r19,28(sp)
  815534:	dc800617 	ldw	r18,24(sp)
  815538:	dc400517 	ldw	r17,20(sp)
  81553c:	dc000417 	ldw	r16,16(sp)
  815540:	dec00e04 	addi	sp,sp,56
  815544:	f800283a 	ret
  815548:	8904b03a 	or	r2,r17,r4
  81554c:	10003726 	beq	r2,zero,81562c <__divdf3+0x2b0>
  815550:	88011c26 	beq	r17,zero,8159c4 <__divdf3+0x648>
  815554:	8809883a 	mov	r4,r17
  815558:	d9800315 	stw	r6,12(sp)
  81555c:	d9c00115 	stw	r7,4(sp)
  815560:	08172140 	call	817214 <__clzsi2>
  815564:	d9800317 	ldw	r6,12(sp)
  815568:	d9c00117 	ldw	r7,4(sp)
  81556c:	1007883a 	mov	r3,r2
  815570:	01000a04 	movi	r4,40
  815574:	1cfffe04 	addi	r19,r3,-8
  815578:	20c9c83a 	sub	r4,r4,r3
  81557c:	8cca983a 	sll	r5,r17,r19
  815580:	9108d83a 	srl	r4,r18,r4
  815584:	94e6983a 	sll	r19,r18,r19
  815588:	2162b03a 	or	r17,r4,r5
  81558c:	053f0344 	movi	r20,-1011
  815590:	a0e9c83a 	sub	r20,r20,r3
  815594:	0025883a 	mov	r18,zero
  815598:	0011883a 	mov	r8,zero
  81559c:	003f9606 	br	8153f8 <__alt_data_end+0xff8153f8>
  8155a0:	8184b03a 	or	r2,r16,r6
  8155a4:	10001f1e 	bne	r2,zero,815624 <__divdf3+0x2a8>
  8155a8:	0021883a 	mov	r16,zero
  8155ac:	002b883a 	mov	r21,zero
  8155b0:	01c00084 	movi	r7,2
  8155b4:	003fa206 	br	815440 <__alt_data_end+0xff815440>
  8155b8:	8184b03a 	or	r2,r16,r6
  8155bc:	10001526 	beq	r2,zero,815614 <__divdf3+0x298>
  8155c0:	80010c26 	beq	r16,zero,8159f4 <__divdf3+0x678>
  8155c4:	8009883a 	mov	r4,r16
  8155c8:	d9800315 	stw	r6,12(sp)
  8155cc:	da000215 	stw	r8,8(sp)
  8155d0:	da400015 	stw	r9,0(sp)
  8155d4:	08172140 	call	817214 <__clzsi2>
  8155d8:	d9800317 	ldw	r6,12(sp)
  8155dc:	da000217 	ldw	r8,8(sp)
  8155e0:	da400017 	ldw	r9,0(sp)
  8155e4:	1007883a 	mov	r3,r2
  8155e8:	01000a04 	movi	r4,40
  8155ec:	1d7ffe04 	addi	r21,r3,-8
  8155f0:	20c9c83a 	sub	r4,r4,r3
  8155f4:	8560983a 	sll	r16,r16,r21
  8155f8:	3108d83a 	srl	r4,r6,r4
  8155fc:	356a983a 	sll	r21,r6,r21
  815600:	2420b03a 	or	r16,r4,r16
  815604:	017f0344 	movi	r5,-1011
  815608:	28cbc83a 	sub	r5,r5,r3
  81560c:	000f883a 	mov	r7,zero
  815610:	003f8b06 	br	815440 <__alt_data_end+0xff815440>
  815614:	0021883a 	mov	r16,zero
  815618:	002b883a 	mov	r21,zero
  81561c:	01c00044 	movi	r7,1
  815620:	003f8706 	br	815440 <__alt_data_end+0xff815440>
  815624:	01c000c4 	movi	r7,3
  815628:	003f8506 	br	815440 <__alt_data_end+0xff815440>
  81562c:	04800104 	movi	r18,4
  815630:	0023883a 	mov	r17,zero
  815634:	0027883a 	mov	r19,zero
  815638:	02000044 	movi	r8,1
  81563c:	003f6e06 	br	8153f8 <__alt_data_end+0xff8153f8>
  815640:	04800304 	movi	r18,12
  815644:	020000c4 	movi	r8,3
  815648:	003f6b06 	br	8153f8 <__alt_data_end+0xff8153f8>
  81564c:	01400434 	movhi	r5,16
  815650:	000d883a 	mov	r6,zero
  815654:	297fffc4 	addi	r5,r5,-1
  815658:	04ffffc4 	movi	r19,-1
  81565c:	0101ffc4 	movi	r4,2047
  815660:	003fa406 	br	8154f4 <__alt_data_end+0xff8154f4>
  815664:	043f0084 	movi	r16,-1022
  815668:	8521c83a 	sub	r16,r16,r20
  81566c:	00800e04 	movi	r2,56
  815670:	1401200e 	bge	r2,r16,815af4 <__divdf3+0x778>
  815674:	9180004c 	andi	r6,r18,1
  815678:	0009883a 	mov	r4,zero
  81567c:	000b883a 	mov	r5,zero
  815680:	0027883a 	mov	r19,zero
  815684:	003f9b06 	br	8154f4 <__alt_data_end+0xff8154f4>
  815688:	8880022c 	andhi	r2,r17,8
  81568c:	1000c726 	beq	r2,zero,8159ac <__divdf3+0x630>
  815690:	8080022c 	andhi	r2,r16,8
  815694:	1000c51e 	bne	r2,zero,8159ac <__divdf3+0x630>
  815698:	00800434 	movhi	r2,16
  81569c:	81400234 	orhi	r5,r16,8
  8156a0:	10bfffc4 	addi	r2,r2,-1
  8156a4:	b80d883a 	mov	r6,r23
  8156a8:	288a703a 	and	r5,r5,r2
  8156ac:	a827883a 	mov	r19,r21
  8156b0:	003fea06 	br	81565c <__alt_data_end+0xff81565c>
  8156b4:	8440ea36 	bltu	r16,r17,815a60 <__divdf3+0x6e4>
  8156b8:	8c00e826 	beq	r17,r16,815a5c <__divdf3+0x6e0>
  8156bc:	a53fffc4 	addi	r20,r20,-1
  8156c0:	882d883a 	mov	r22,r17
  8156c4:	000d883a 	mov	r6,zero
  8156c8:	a804d63a 	srli	r2,r21,24
  8156cc:	8020923a 	slli	r16,r16,8
  8156d0:	b009883a 	mov	r4,r22
  8156d4:	d9800315 	stw	r6,12(sp)
  8156d8:	1420b03a 	or	r16,r2,r16
  8156dc:	802ed43a 	srli	r23,r16,16
  8156e0:	873fffcc 	andi	fp,r16,65535
  8156e4:	a82a923a 	slli	r21,r21,8
  8156e8:	b80b883a 	mov	r5,r23
  8156ec:	08148ec0 	call	8148ec <__udivsi3>
  8156f0:	b009883a 	mov	r4,r22
  8156f4:	b80b883a 	mov	r5,r23
  8156f8:	1023883a 	mov	r17,r2
  8156fc:	08148f40 	call	8148f4 <__umodsi3>
  815700:	1004943a 	slli	r2,r2,16
  815704:	9808d43a 	srli	r4,r19,16
  815708:	8f2d383a 	mul	r22,r17,fp
  81570c:	d9800317 	ldw	r6,12(sp)
  815710:	1106b03a 	or	r3,r2,r4
  815714:	1d80062e 	bgeu	r3,r22,815730 <__divdf3+0x3b4>
  815718:	1c07883a 	add	r3,r3,r16
  81571c:	88bfffc4 	addi	r2,r17,-1
  815720:	1c00dc36 	bltu	r3,r16,815a94 <__divdf3+0x718>
  815724:	1d80db2e 	bgeu	r3,r22,815a94 <__divdf3+0x718>
  815728:	8c7fff84 	addi	r17,r17,-2
  81572c:	1c07883a 	add	r3,r3,r16
  815730:	1dadc83a 	sub	r22,r3,r22
  815734:	b009883a 	mov	r4,r22
  815738:	b80b883a 	mov	r5,r23
  81573c:	d9800315 	stw	r6,12(sp)
  815740:	08148ec0 	call	8148ec <__udivsi3>
  815744:	b009883a 	mov	r4,r22
  815748:	b80b883a 	mov	r5,r23
  81574c:	d8800015 	stw	r2,0(sp)
  815750:	08148f40 	call	8148f4 <__umodsi3>
  815754:	da400017 	ldw	r9,0(sp)
  815758:	1004943a 	slli	r2,r2,16
  81575c:	9cffffcc 	andi	r19,r19,65535
  815760:	4f07383a 	mul	r3,r9,fp
  815764:	14c8b03a 	or	r4,r2,r19
  815768:	d9800317 	ldw	r6,12(sp)
  81576c:	20c0062e 	bgeu	r4,r3,815788 <__divdf3+0x40c>
  815770:	2409883a 	add	r4,r4,r16
  815774:	48bfffc4 	addi	r2,r9,-1
  815778:	2400c436 	bltu	r4,r16,815a8c <__divdf3+0x710>
  81577c:	20c0c32e 	bgeu	r4,r3,815a8c <__divdf3+0x710>
  815780:	4a7fff84 	addi	r9,r9,-2
  815784:	2409883a 	add	r4,r4,r16
  815788:	8822943a 	slli	r17,r17,16
  81578c:	a80ed43a 	srli	r7,r21,16
  815790:	aa3fffcc 	andi	r8,r21,65535
  815794:	4c62b03a 	or	r17,r9,r17
  815798:	8816d43a 	srli	r11,r17,16
  81579c:	897fffcc 	andi	r5,r17,65535
  8157a0:	2a15383a 	mul	r10,r5,r8
  8157a4:	5a19383a 	mul	r12,r11,r8
  8157a8:	29cb383a 	mul	r5,r5,r7
  8157ac:	5012d43a 	srli	r9,r10,16
  8157b0:	20c5c83a 	sub	r2,r4,r3
  8157b4:	614b883a 	add	r5,r12,r5
  8157b8:	2a4b883a 	add	r5,r5,r9
  8157bc:	59c7383a 	mul	r3,r11,r7
  8157c0:	2b00022e 	bgeu	r5,r12,8157cc <__divdf3+0x450>
  8157c4:	01000074 	movhi	r4,1
  8157c8:	1907883a 	add	r3,r3,r4
  8157cc:	2808d43a 	srli	r4,r5,16
  8157d0:	280a943a 	slli	r5,r5,16
  8157d4:	54ffffcc 	andi	r19,r10,65535
  8157d8:	1907883a 	add	r3,r3,r4
  8157dc:	2ccb883a 	add	r5,r5,r19
  8157e0:	10c09336 	bltu	r2,r3,815a30 <__divdf3+0x6b4>
  8157e4:	10c0ad26 	beq	r2,r3,815a9c <__divdf3+0x720>
  8157e8:	10c7c83a 	sub	r3,r2,r3
  8157ec:	3167c83a 	sub	r19,r6,r5
  8157f0:	34ed803a 	cmpltu	r22,r6,r19
  8157f4:	1dadc83a 	sub	r22,r3,r22
  8157f8:	b400b226 	beq	r22,r16,815ac4 <__divdf3+0x748>
  8157fc:	b009883a 	mov	r4,r22
  815800:	b80b883a 	mov	r5,r23
  815804:	d9c00115 	stw	r7,4(sp)
  815808:	da000215 	stw	r8,8(sp)
  81580c:	08148ec0 	call	8148ec <__udivsi3>
  815810:	b009883a 	mov	r4,r22
  815814:	b80b883a 	mov	r5,r23
  815818:	d8800315 	stw	r2,12(sp)
  81581c:	08148f40 	call	8148f4 <__umodsi3>
  815820:	d9800317 	ldw	r6,12(sp)
  815824:	1004943a 	slli	r2,r2,16
  815828:	9808d43a 	srli	r4,r19,16
  81582c:	372d383a 	mul	r22,r6,fp
  815830:	d9c00117 	ldw	r7,4(sp)
  815834:	1106b03a 	or	r3,r2,r4
  815838:	da000217 	ldw	r8,8(sp)
  81583c:	1d80062e 	bgeu	r3,r22,815858 <__divdf3+0x4dc>
  815840:	1c07883a 	add	r3,r3,r16
  815844:	30bfffc4 	addi	r2,r6,-1
  815848:	1c00a036 	bltu	r3,r16,815acc <__divdf3+0x750>
  81584c:	1d809f2e 	bgeu	r3,r22,815acc <__divdf3+0x750>
  815850:	31bfff84 	addi	r6,r6,-2
  815854:	1c07883a 	add	r3,r3,r16
  815858:	1dadc83a 	sub	r22,r3,r22
  81585c:	b009883a 	mov	r4,r22
  815860:	b80b883a 	mov	r5,r23
  815864:	d9800315 	stw	r6,12(sp)
  815868:	d9c00115 	stw	r7,4(sp)
  81586c:	da000215 	stw	r8,8(sp)
  815870:	08148ec0 	call	8148ec <__udivsi3>
  815874:	b009883a 	mov	r4,r22
  815878:	b80b883a 	mov	r5,r23
  81587c:	d8800015 	stw	r2,0(sp)
  815880:	08148f40 	call	8148f4 <__umodsi3>
  815884:	da400017 	ldw	r9,0(sp)
  815888:	1004943a 	slli	r2,r2,16
  81588c:	993fffcc 	andi	r4,r19,65535
  815890:	4f39383a 	mul	fp,r9,fp
  815894:	1106b03a 	or	r3,r2,r4
  815898:	d9800317 	ldw	r6,12(sp)
  81589c:	d9c00117 	ldw	r7,4(sp)
  8158a0:	da000217 	ldw	r8,8(sp)
  8158a4:	1f00062e 	bgeu	r3,fp,8158c0 <__divdf3+0x544>
  8158a8:	1c07883a 	add	r3,r3,r16
  8158ac:	48bfffc4 	addi	r2,r9,-1
  8158b0:	1c008836 	bltu	r3,r16,815ad4 <__divdf3+0x758>
  8158b4:	1f00872e 	bgeu	r3,fp,815ad4 <__divdf3+0x758>
  8158b8:	4a7fff84 	addi	r9,r9,-2
  8158bc:	1c07883a 	add	r3,r3,r16
  8158c0:	3008943a 	slli	r4,r6,16
  8158c4:	1f07c83a 	sub	r3,r3,fp
  8158c8:	4926b03a 	or	r19,r9,r4
  8158cc:	993fffcc 	andi	r4,r19,65535
  8158d0:	980cd43a 	srli	r6,r19,16
  8158d4:	220b383a 	mul	r5,r4,r8
  8158d8:	21c5383a 	mul	r2,r4,r7
  8158dc:	3211383a 	mul	r8,r6,r8
  8158e0:	2808d43a 	srli	r4,r5,16
  8158e4:	31cf383a 	mul	r7,r6,r7
  8158e8:	4085883a 	add	r2,r8,r2
  8158ec:	1105883a 	add	r2,r2,r4
  8158f0:	1200022e 	bgeu	r2,r8,8158fc <__divdf3+0x580>
  8158f4:	01000074 	movhi	r4,1
  8158f8:	390f883a 	add	r7,r7,r4
  8158fc:	1008d43a 	srli	r4,r2,16
  815900:	1004943a 	slli	r2,r2,16
  815904:	297fffcc 	andi	r5,r5,65535
  815908:	390f883a 	add	r7,r7,r4
  81590c:	1145883a 	add	r2,r2,r5
  815910:	19c06536 	bltu	r3,r7,815aa8 <__divdf3+0x72c>
  815914:	19c09f26 	beq	r3,r7,815b94 <__divdf3+0x818>
  815918:	9cc00054 	ori	r19,r19,1
  81591c:	a100ffc4 	addi	r4,r20,1023
  815920:	013f500e 	bge	zero,r4,815664 <__alt_data_end+0xff815664>
  815924:	988001cc 	andi	r2,r19,7
  815928:	10000726 	beq	r2,zero,815948 <__divdf3+0x5cc>
  81592c:	98c003cc 	andi	r3,r19,15
  815930:	00800104 	movi	r2,4
  815934:	18800426 	beq	r3,r2,815948 <__divdf3+0x5cc>
  815938:	9885883a 	add	r2,r19,r2
  81593c:	14e1803a 	cmpltu	r16,r2,r19
  815940:	8c23883a 	add	r17,r17,r16
  815944:	1027883a 	mov	r19,r2
  815948:	8880402c 	andhi	r2,r17,256
  81594c:	10000426 	beq	r2,zero,815960 <__divdf3+0x5e4>
  815950:	00bfc034 	movhi	r2,65280
  815954:	10bfffc4 	addi	r2,r2,-1
  815958:	a1010004 	addi	r4,r20,1024
  81595c:	88a2703a 	and	r17,r17,r2
  815960:	0081ff84 	movi	r2,2046
  815964:	113edf16 	blt	r2,r4,8154e4 <__alt_data_end+0xff8154e4>
  815968:	9826d0fa 	srli	r19,r19,3
  81596c:	8804977a 	slli	r2,r17,29
  815970:	8820927a 	slli	r16,r17,9
  815974:	2101ffcc 	andi	r4,r4,2047
  815978:	14e6b03a 	or	r19,r2,r19
  81597c:	800ad33a 	srli	r5,r16,12
  815980:	9180004c 	andi	r6,r18,1
  815984:	003edb06 	br	8154f4 <__alt_data_end+0xff8154f4>
  815988:	008000c4 	movi	r2,3
  81598c:	4080a826 	beq	r8,r2,815c30 <__divdf3+0x8b4>
  815990:	00800044 	movi	r2,1
  815994:	4080551e 	bne	r8,r2,815aec <__divdf3+0x770>
  815998:	e00d883a 	mov	r6,fp
  81599c:	0009883a 	mov	r4,zero
  8159a0:	000b883a 	mov	r5,zero
  8159a4:	0027883a 	mov	r19,zero
  8159a8:	003ed206 	br	8154f4 <__alt_data_end+0xff8154f4>
  8159ac:	00800434 	movhi	r2,16
  8159b0:	89400234 	orhi	r5,r17,8
  8159b4:	10bfffc4 	addi	r2,r2,-1
  8159b8:	b00d883a 	mov	r6,r22
  8159bc:	288a703a 	and	r5,r5,r2
  8159c0:	003f2606 	br	81565c <__alt_data_end+0xff81565c>
  8159c4:	d9800315 	stw	r6,12(sp)
  8159c8:	d9c00115 	stw	r7,4(sp)
  8159cc:	08172140 	call	817214 <__clzsi2>
  8159d0:	10c00804 	addi	r3,r2,32
  8159d4:	010009c4 	movi	r4,39
  8159d8:	d9800317 	ldw	r6,12(sp)
  8159dc:	d9c00117 	ldw	r7,4(sp)
  8159e0:	20fee30e 	bge	r4,r3,815570 <__alt_data_end+0xff815570>
  8159e4:	117ffe04 	addi	r5,r2,-8
  8159e8:	9162983a 	sll	r17,r18,r5
  8159ec:	0027883a 	mov	r19,zero
  8159f0:	003ee606 	br	81558c <__alt_data_end+0xff81558c>
  8159f4:	3009883a 	mov	r4,r6
  8159f8:	d9800315 	stw	r6,12(sp)
  8159fc:	da000215 	stw	r8,8(sp)
  815a00:	da400015 	stw	r9,0(sp)
  815a04:	08172140 	call	817214 <__clzsi2>
  815a08:	10c00804 	addi	r3,r2,32
  815a0c:	010009c4 	movi	r4,39
  815a10:	d9800317 	ldw	r6,12(sp)
  815a14:	da000217 	ldw	r8,8(sp)
  815a18:	da400017 	ldw	r9,0(sp)
  815a1c:	20fef20e 	bge	r4,r3,8155e8 <__alt_data_end+0xff8155e8>
  815a20:	10bffe04 	addi	r2,r2,-8
  815a24:	a8a0983a 	sll	r16,r21,r2
  815a28:	002b883a 	mov	r21,zero
  815a2c:	003ef506 	br	815604 <__alt_data_end+0xff815604>
  815a30:	354d883a 	add	r6,r6,r21
  815a34:	3549803a 	cmpltu	r4,r6,r21
  815a38:	2409883a 	add	r4,r4,r16
  815a3c:	2089883a 	add	r4,r4,r2
  815a40:	88bfffc4 	addi	r2,r17,-1
  815a44:	81000c2e 	bgeu	r16,r4,815a78 <__divdf3+0x6fc>
  815a48:	20c04436 	bltu	r4,r3,815b5c <__divdf3+0x7e0>
  815a4c:	19006f26 	beq	r3,r4,815c0c <__divdf3+0x890>
  815a50:	20c7c83a 	sub	r3,r4,r3
  815a54:	1023883a 	mov	r17,r2
  815a58:	003f6406 	br	8157ec <__alt_data_end+0xff8157ec>
  815a5c:	9d7f1736 	bltu	r19,r21,8156bc <__alt_data_end+0xff8156bc>
  815a60:	9806d07a 	srli	r3,r19,1
  815a64:	880497fa 	slli	r2,r17,31
  815a68:	980c97fa 	slli	r6,r19,31
  815a6c:	882cd07a 	srli	r22,r17,1
  815a70:	18a6b03a 	or	r19,r3,r2
  815a74:	003f1406 	br	8156c8 <__alt_data_end+0xff8156c8>
  815a78:	243ff51e 	bne	r4,r16,815a50 <__alt_data_end+0xff815a50>
  815a7c:	357ff22e 	bgeu	r6,r21,815a48 <__alt_data_end+0xff815a48>
  815a80:	80c7c83a 	sub	r3,r16,r3
  815a84:	1023883a 	mov	r17,r2
  815a88:	003f5806 	br	8157ec <__alt_data_end+0xff8157ec>
  815a8c:	1013883a 	mov	r9,r2
  815a90:	003f3d06 	br	815788 <__alt_data_end+0xff815788>
  815a94:	1023883a 	mov	r17,r2
  815a98:	003f2506 	br	815730 <__alt_data_end+0xff815730>
  815a9c:	317fe436 	bltu	r6,r5,815a30 <__alt_data_end+0xff815a30>
  815aa0:	0007883a 	mov	r3,zero
  815aa4:	003f5106 	br	8157ec <__alt_data_end+0xff8157ec>
  815aa8:	1c07883a 	add	r3,r3,r16
  815aac:	993fffc4 	addi	r4,r19,-1
  815ab0:	1c000a2e 	bgeu	r3,r16,815adc <__divdf3+0x760>
  815ab4:	2027883a 	mov	r19,r4
  815ab8:	19ff971e 	bne	r3,r7,815918 <__alt_data_end+0xff815918>
  815abc:	a8bf961e 	bne	r21,r2,815918 <__alt_data_end+0xff815918>
  815ac0:	003f9606 	br	81591c <__alt_data_end+0xff81591c>
  815ac4:	04ffffc4 	movi	r19,-1
  815ac8:	003f9406 	br	81591c <__alt_data_end+0xff81591c>
  815acc:	100d883a 	mov	r6,r2
  815ad0:	003f6106 	br	815858 <__alt_data_end+0xff815858>
  815ad4:	1013883a 	mov	r9,r2
  815ad8:	003f7906 	br	8158c0 <__alt_data_end+0xff8158c0>
  815adc:	19c02636 	bltu	r3,r7,815b78 <__divdf3+0x7fc>
  815ae0:	38c04d26 	beq	r7,r3,815c18 <__divdf3+0x89c>
  815ae4:	2027883a 	mov	r19,r4
  815ae8:	003f8b06 	br	815918 <__alt_data_end+0xff815918>
  815aec:	e025883a 	mov	r18,fp
  815af0:	003f8a06 	br	81591c <__alt_data_end+0xff81591c>
  815af4:	008007c4 	movi	r2,31
  815af8:	14002a16 	blt	r2,r16,815ba4 <__divdf3+0x828>
  815afc:	a5010784 	addi	r20,r20,1054
  815b00:	8d04983a 	sll	r2,r17,r20
  815b04:	9c06d83a 	srl	r3,r19,r16
  815b08:	9d28983a 	sll	r20,r19,r20
  815b0c:	8c20d83a 	srl	r16,r17,r16
  815b10:	1886b03a 	or	r3,r3,r2
  815b14:	a004c03a 	cmpne	r2,r20,zero
  815b18:	1884b03a 	or	r2,r3,r2
  815b1c:	10c001cc 	andi	r3,r2,7
  815b20:	18000726 	beq	r3,zero,815b40 <__divdf3+0x7c4>
  815b24:	110003cc 	andi	r4,r2,15
  815b28:	00c00104 	movi	r3,4
  815b2c:	20c00426 	beq	r4,r3,815b40 <__divdf3+0x7c4>
  815b30:	10c00104 	addi	r3,r2,4
  815b34:	1885803a 	cmpltu	r2,r3,r2
  815b38:	80a1883a 	add	r16,r16,r2
  815b3c:	1805883a 	mov	r2,r3
  815b40:	80c0202c 	andhi	r3,r16,128
  815b44:	18002d26 	beq	r3,zero,815bfc <__divdf3+0x880>
  815b48:	9180004c 	andi	r6,r18,1
  815b4c:	01000044 	movi	r4,1
  815b50:	000b883a 	mov	r5,zero
  815b54:	0027883a 	mov	r19,zero
  815b58:	003e6606 	br	8154f4 <__alt_data_end+0xff8154f4>
  815b5c:	354d883a 	add	r6,r6,r21
  815b60:	356d803a 	cmpltu	r22,r6,r21
  815b64:	b42d883a 	add	r22,r22,r16
  815b68:	b12d883a 	add	r22,r22,r4
  815b6c:	8c7fff84 	addi	r17,r17,-2
  815b70:	b0c7c83a 	sub	r3,r22,r3
  815b74:	003f1d06 	br	8157ec <__alt_data_end+0xff8157ec>
  815b78:	ad4b883a 	add	r5,r21,r21
  815b7c:	2d6b803a 	cmpltu	r21,r5,r21
  815b80:	ac2b883a 	add	r21,r21,r16
  815b84:	1d47883a 	add	r3,r3,r21
  815b88:	993fff84 	addi	r4,r19,-2
  815b8c:	282b883a 	mov	r21,r5
  815b90:	003fc806 	br	815ab4 <__alt_data_end+0xff815ab4>
  815b94:	103fc41e 	bne	r2,zero,815aa8 <__alt_data_end+0xff815aa8>
  815b98:	002b883a 	mov	r21,zero
  815b9c:	a8bf5e1e 	bne	r21,r2,815918 <__alt_data_end+0xff815918>
  815ba0:	003f5e06 	br	81591c <__alt_data_end+0xff81591c>
  815ba4:	00bef884 	movi	r2,-1054
  815ba8:	1505c83a 	sub	r2,r2,r20
  815bac:	00c00804 	movi	r3,32
  815bb0:	8884d83a 	srl	r2,r17,r2
  815bb4:	80c01c26 	beq	r16,r3,815c28 <__divdf3+0x8ac>
  815bb8:	a0c10f84 	addi	r3,r20,1086
  815bbc:	88c6983a 	sll	r3,r17,r3
  815bc0:	1cc6b03a 	or	r3,r3,r19
  815bc4:	1806c03a 	cmpne	r3,r3,zero
  815bc8:	1884b03a 	or	r2,r3,r2
  815bcc:	140001cc 	andi	r16,r2,7
  815bd0:	8000061e 	bne	r16,zero,815bec <__divdf3+0x870>
  815bd4:	000b883a 	mov	r5,zero
  815bd8:	1004d0fa 	srli	r2,r2,3
  815bdc:	9180004c 	andi	r6,r18,1
  815be0:	0009883a 	mov	r4,zero
  815be4:	1426b03a 	or	r19,r2,r16
  815be8:	003e4206 	br	8154f4 <__alt_data_end+0xff8154f4>
  815bec:	110003cc 	andi	r4,r2,15
  815bf0:	00c00104 	movi	r3,4
  815bf4:	0021883a 	mov	r16,zero
  815bf8:	20ffcd1e 	bne	r4,r3,815b30 <__alt_data_end+0xff815b30>
  815bfc:	800a927a 	slli	r5,r16,9
  815c00:	8020977a 	slli	r16,r16,29
  815c04:	280ad33a 	srli	r5,r5,12
  815c08:	003ff306 	br	815bd8 <__alt_data_end+0xff815bd8>
  815c0c:	317fd336 	bltu	r6,r5,815b5c <__alt_data_end+0xff815b5c>
  815c10:	1023883a 	mov	r17,r2
  815c14:	003fa206 	br	815aa0 <__alt_data_end+0xff815aa0>
  815c18:	a8bfd736 	bltu	r21,r2,815b78 <__alt_data_end+0xff815b78>
  815c1c:	2027883a 	mov	r19,r4
  815c20:	a8bf3d1e 	bne	r21,r2,815918 <__alt_data_end+0xff815918>
  815c24:	003f3d06 	br	81591c <__alt_data_end+0xff81591c>
  815c28:	0007883a 	mov	r3,zero
  815c2c:	003fe406 	br	815bc0 <__alt_data_end+0xff815bc0>
  815c30:	00800434 	movhi	r2,16
  815c34:	89400234 	orhi	r5,r17,8
  815c38:	10bfffc4 	addi	r2,r2,-1
  815c3c:	e00d883a 	mov	r6,fp
  815c40:	288a703a 	and	r5,r5,r2
  815c44:	003e8506 	br	81565c <__alt_data_end+0xff81565c>

00815c48 <__eqdf2>:
  815c48:	2804d53a 	srli	r2,r5,20
  815c4c:	3806d53a 	srli	r3,r7,20
  815c50:	02000434 	movhi	r8,16
  815c54:	423fffc4 	addi	r8,r8,-1
  815c58:	1081ffcc 	andi	r2,r2,2047
  815c5c:	0241ffc4 	movi	r9,2047
  815c60:	2a14703a 	and	r10,r5,r8
  815c64:	18c1ffcc 	andi	r3,r3,2047
  815c68:	3a10703a 	and	r8,r7,r8
  815c6c:	280ad7fa 	srli	r5,r5,31
  815c70:	380ed7fa 	srli	r7,r7,31
  815c74:	12400f26 	beq	r2,r9,815cb4 <__eqdf2+0x6c>
  815c78:	0241ffc4 	movi	r9,2047
  815c7c:	1a400326 	beq	r3,r9,815c8c <__eqdf2+0x44>
  815c80:	10c00526 	beq	r2,r3,815c98 <__eqdf2+0x50>
  815c84:	00800044 	movi	r2,1
  815c88:	f800283a 	ret
  815c8c:	4192b03a 	or	r9,r8,r6
  815c90:	483ffc1e 	bne	r9,zero,815c84 <__alt_data_end+0xff815c84>
  815c94:	10fffb1e 	bne	r2,r3,815c84 <__alt_data_end+0xff815c84>
  815c98:	523ffa1e 	bne	r10,r8,815c84 <__alt_data_end+0xff815c84>
  815c9c:	21bff91e 	bne	r4,r6,815c84 <__alt_data_end+0xff815c84>
  815ca0:	29c00826 	beq	r5,r7,815cc4 <__eqdf2+0x7c>
  815ca4:	103ff71e 	bne	r2,zero,815c84 <__alt_data_end+0xff815c84>
  815ca8:	5104b03a 	or	r2,r10,r4
  815cac:	1004c03a 	cmpne	r2,r2,zero
  815cb0:	f800283a 	ret
  815cb4:	5112b03a 	or	r9,r10,r4
  815cb8:	483fef26 	beq	r9,zero,815c78 <__alt_data_end+0xff815c78>
  815cbc:	00800044 	movi	r2,1
  815cc0:	f800283a 	ret
  815cc4:	0005883a 	mov	r2,zero
  815cc8:	f800283a 	ret

00815ccc <__gedf2>:
  815ccc:	2804d53a 	srli	r2,r5,20
  815cd0:	3806d53a 	srli	r3,r7,20
  815cd4:	02000434 	movhi	r8,16
  815cd8:	423fffc4 	addi	r8,r8,-1
  815cdc:	0241ffc4 	movi	r9,2047
  815ce0:	1081ffcc 	andi	r2,r2,2047
  815ce4:	2a14703a 	and	r10,r5,r8
  815ce8:	1a46703a 	and	r3,r3,r9
  815cec:	3a10703a 	and	r8,r7,r8
  815cf0:	280ad7fa 	srli	r5,r5,31
  815cf4:	380ed7fa 	srli	r7,r7,31
  815cf8:	12400b26 	beq	r2,r9,815d28 <__gedf2+0x5c>
  815cfc:	1a401626 	beq	r3,r9,815d58 <__gedf2+0x8c>
  815d00:	10000c1e 	bne	r2,zero,815d34 <__gedf2+0x68>
  815d04:	5112b03a 	or	r9,r10,r4
  815d08:	4813003a 	cmpeq	r9,r9,zero
  815d0c:	4817883a 	mov	r11,r9
  815d10:	18000c1e 	bne	r3,zero,815d44 <__gedf2+0x78>
  815d14:	4198b03a 	or	r12,r8,r6
  815d18:	60000a1e 	bne	r12,zero,815d44 <__gedf2+0x78>
  815d1c:	48001326 	beq	r9,zero,815d6c <__gedf2+0xa0>
  815d20:	0005883a 	mov	r2,zero
  815d24:	f800283a 	ret
  815d28:	5112b03a 	or	r9,r10,r4
  815d2c:	4800191e 	bne	r9,zero,815d94 <__gedf2+0xc8>
  815d30:	18800926 	beq	r3,r2,815d58 <__gedf2+0x8c>
  815d34:	18000b1e 	bne	r3,zero,815d64 <__gedf2+0x98>
  815d38:	4192b03a 	or	r9,r8,r6
  815d3c:	0017883a 	mov	r11,zero
  815d40:	48000a26 	beq	r9,zero,815d6c <__gedf2+0xa0>
  815d44:	39c03fcc 	andi	r7,r7,255
  815d48:	58000726 	beq	r11,zero,815d68 <__gedf2+0x9c>
  815d4c:	3800081e 	bne	r7,zero,815d70 <__gedf2+0xa4>
  815d50:	00bfffc4 	movi	r2,-1
  815d54:	f800283a 	ret
  815d58:	4192b03a 	or	r9,r8,r6
  815d5c:	48000d1e 	bne	r9,zero,815d94 <__gedf2+0xc8>
  815d60:	103fe826 	beq	r2,zero,815d04 <__alt_data_end+0xff815d04>
  815d64:	39c03fcc 	andi	r7,r7,255
  815d68:	29c00326 	beq	r5,r7,815d78 <__gedf2+0xac>
  815d6c:	283ff81e 	bne	r5,zero,815d50 <__alt_data_end+0xff815d50>
  815d70:	00800044 	movi	r2,1
  815d74:	f800283a 	ret
  815d78:	18bffc16 	blt	r3,r2,815d6c <__alt_data_end+0xff815d6c>
  815d7c:	10c00316 	blt	r2,r3,815d8c <__gedf2+0xc0>
  815d80:	42bffa36 	bltu	r8,r10,815d6c <__alt_data_end+0xff815d6c>
  815d84:	52000526 	beq	r10,r8,815d9c <__gedf2+0xd0>
  815d88:	523fe52e 	bgeu	r10,r8,815d20 <__alt_data_end+0xff815d20>
  815d8c:	283ff026 	beq	r5,zero,815d50 <__alt_data_end+0xff815d50>
  815d90:	003ff706 	br	815d70 <__alt_data_end+0xff815d70>
  815d94:	00bfff84 	movi	r2,-2
  815d98:	f800283a 	ret
  815d9c:	313ff336 	bltu	r6,r4,815d6c <__alt_data_end+0xff815d6c>
  815da0:	21bfdf2e 	bgeu	r4,r6,815d20 <__alt_data_end+0xff815d20>
  815da4:	283fea26 	beq	r5,zero,815d50 <__alt_data_end+0xff815d50>
  815da8:	003ff106 	br	815d70 <__alt_data_end+0xff815d70>

00815dac <__ledf2>:
  815dac:	2804d53a 	srli	r2,r5,20
  815db0:	3810d53a 	srli	r8,r7,20
  815db4:	00c00434 	movhi	r3,16
  815db8:	18ffffc4 	addi	r3,r3,-1
  815dbc:	0241ffc4 	movi	r9,2047
  815dc0:	1081ffcc 	andi	r2,r2,2047
  815dc4:	28d4703a 	and	r10,r5,r3
  815dc8:	4250703a 	and	r8,r8,r9
  815dcc:	38c6703a 	and	r3,r7,r3
  815dd0:	280ad7fa 	srli	r5,r5,31
  815dd4:	380ed7fa 	srli	r7,r7,31
  815dd8:	12400b26 	beq	r2,r9,815e08 <__ledf2+0x5c>
  815ddc:	42401926 	beq	r8,r9,815e44 <__ledf2+0x98>
  815de0:	10000c1e 	bne	r2,zero,815e14 <__ledf2+0x68>
  815de4:	5112b03a 	or	r9,r10,r4
  815de8:	4813003a 	cmpeq	r9,r9,zero
  815dec:	4817883a 	mov	r11,r9
  815df0:	40000f26 	beq	r8,zero,815e30 <__ledf2+0x84>
  815df4:	39c03fcc 	andi	r7,r7,255
  815df8:	58001826 	beq	r11,zero,815e5c <__ledf2+0xb0>
  815dfc:	38000a1e 	bne	r7,zero,815e28 <__ledf2+0x7c>
  815e00:	00bfffc4 	movi	r2,-1
  815e04:	f800283a 	ret
  815e08:	5112b03a 	or	r9,r10,r4
  815e0c:	48000f1e 	bne	r9,zero,815e4c <__ledf2+0xa0>
  815e10:	40800c26 	beq	r8,r2,815e44 <__ledf2+0x98>
  815e14:	4000101e 	bne	r8,zero,815e58 <__ledf2+0xac>
  815e18:	1992b03a 	or	r9,r3,r6
  815e1c:	0017883a 	mov	r11,zero
  815e20:	483ff41e 	bne	r9,zero,815df4 <__alt_data_end+0xff815df4>
  815e24:	283ff61e 	bne	r5,zero,815e00 <__alt_data_end+0xff815e00>
  815e28:	00800044 	movi	r2,1
  815e2c:	f800283a 	ret
  815e30:	1998b03a 	or	r12,r3,r6
  815e34:	603fef1e 	bne	r12,zero,815df4 <__alt_data_end+0xff815df4>
  815e38:	483ffa26 	beq	r9,zero,815e24 <__alt_data_end+0xff815e24>
  815e3c:	0005883a 	mov	r2,zero
  815e40:	f800283a 	ret
  815e44:	1992b03a 	or	r9,r3,r6
  815e48:	48000226 	beq	r9,zero,815e54 <__ledf2+0xa8>
  815e4c:	00800084 	movi	r2,2
  815e50:	f800283a 	ret
  815e54:	103fe326 	beq	r2,zero,815de4 <__alt_data_end+0xff815de4>
  815e58:	39c03fcc 	andi	r7,r7,255
  815e5c:	29fff11e 	bne	r5,r7,815e24 <__alt_data_end+0xff815e24>
  815e60:	40bff016 	blt	r8,r2,815e24 <__alt_data_end+0xff815e24>
  815e64:	12000316 	blt	r2,r8,815e74 <__ledf2+0xc8>
  815e68:	1abfee36 	bltu	r3,r10,815e24 <__alt_data_end+0xff815e24>
  815e6c:	50c00326 	beq	r10,r3,815e7c <__ledf2+0xd0>
  815e70:	50fff22e 	bgeu	r10,r3,815e3c <__alt_data_end+0xff815e3c>
  815e74:	283fe226 	beq	r5,zero,815e00 <__alt_data_end+0xff815e00>
  815e78:	003feb06 	br	815e28 <__alt_data_end+0xff815e28>
  815e7c:	313fe936 	bltu	r6,r4,815e24 <__alt_data_end+0xff815e24>
  815e80:	21bfee2e 	bgeu	r4,r6,815e3c <__alt_data_end+0xff815e3c>
  815e84:	283fde26 	beq	r5,zero,815e00 <__alt_data_end+0xff815e00>
  815e88:	003fe706 	br	815e28 <__alt_data_end+0xff815e28>

00815e8c <__muldf3>:
  815e8c:	defff204 	addi	sp,sp,-56
  815e90:	2804d53a 	srli	r2,r5,20
  815e94:	dd800a15 	stw	r22,40(sp)
  815e98:	282cd7fa 	srli	r22,r5,31
  815e9c:	dc000415 	stw	r16,16(sp)
  815ea0:	04000434 	movhi	r16,16
  815ea4:	df000c15 	stw	fp,48(sp)
  815ea8:	dd000815 	stw	r20,32(sp)
  815eac:	dcc00715 	stw	r19,28(sp)
  815eb0:	dc800615 	stw	r18,24(sp)
  815eb4:	dc400515 	stw	r17,20(sp)
  815eb8:	843fffc4 	addi	r16,r16,-1
  815ebc:	dfc00d15 	stw	ra,52(sp)
  815ec0:	ddc00b15 	stw	r23,44(sp)
  815ec4:	dd400915 	stw	r21,36(sp)
  815ec8:	1501ffcc 	andi	r20,r2,2047
  815ecc:	2023883a 	mov	r17,r4
  815ed0:	2025883a 	mov	r18,r4
  815ed4:	2c20703a 	and	r16,r5,r16
  815ed8:	b027883a 	mov	r19,r22
  815edc:	b7003fcc 	andi	fp,r22,255
  815ee0:	a0005926 	beq	r20,zero,816048 <__muldf3+0x1bc>
  815ee4:	0081ffc4 	movi	r2,2047
  815ee8:	a0803426 	beq	r20,r2,815fbc <__muldf3+0x130>
  815eec:	84000434 	orhi	r16,r16,16
  815ef0:	2004d77a 	srli	r2,r4,29
  815ef4:	802090fa 	slli	r16,r16,3
  815ef8:	202490fa 	slli	r18,r4,3
  815efc:	a53f0044 	addi	r20,r20,-1023
  815f00:	80a0b03a 	or	r16,r16,r2
  815f04:	002b883a 	mov	r21,zero
  815f08:	0015883a 	mov	r10,zero
  815f0c:	3812d53a 	srli	r9,r7,20
  815f10:	3806d7fa 	srli	r3,r7,31
  815f14:	02000434 	movhi	r8,16
  815f18:	423fffc4 	addi	r8,r8,-1
  815f1c:	4941ffcc 	andi	r5,r9,2047
  815f20:	302f883a 	mov	r23,r6
  815f24:	3a22703a 	and	r17,r7,r8
  815f28:	1ac03fcc 	andi	r11,r3,255
  815f2c:	28006226 	beq	r5,zero,8160b8 <__muldf3+0x22c>
  815f30:	0081ffc4 	movi	r2,2047
  815f34:	28805a26 	beq	r5,r2,8160a0 <__muldf3+0x214>
  815f38:	8a000434 	orhi	r8,r17,16
  815f3c:	3004d77a 	srli	r2,r6,29
  815f40:	401090fa 	slli	r8,r8,3
  815f44:	302e90fa 	slli	r23,r6,3
  815f48:	297f0044 	addi	r5,r5,-1023
  815f4c:	40a2b03a 	or	r17,r8,r2
  815f50:	0013883a 	mov	r9,zero
  815f54:	4d4cb03a 	or	r6,r9,r21
  815f58:	300c90ba 	slli	r6,r6,2
  815f5c:	02002074 	movhi	r8,129
  815f60:	4217df04 	addi	r8,r8,24444
  815f64:	320d883a 	add	r6,r6,r8
  815f68:	31800017 	ldw	r6,0(r6)
  815f6c:	a14b883a 	add	r5,r20,r5
  815f70:	1dacf03a 	xor	r22,r3,r22
  815f74:	2b000044 	addi	r12,r5,1
  815f78:	3000683a 	jmp	r6
  815f7c:	008161b8 	rdprs	r2,zero,1414
  815f80:	008161a4 	muli	r2,zero,1414
  815f84:	008161a4 	muli	r2,zero,1414
  815f88:	00816190 	cmplti	r2,zero,1414
  815f8c:	00815fd8 	cmpnei	r2,zero,1407
  815f90:	00815fd8 	cmpnei	r2,zero,1407
  815f94:	00816178 	rdprs	r2,zero,1413
  815f98:	00816190 	cmplti	r2,zero,1414
  815f9c:	00815fd8 	cmpnei	r2,zero,1407
  815fa0:	00816178 	rdprs	r2,zero,1413
  815fa4:	00815fd8 	cmpnei	r2,zero,1407
  815fa8:	00816190 	cmplti	r2,zero,1414
  815fac:	00815fdc 	xori	r2,zero,1407
  815fb0:	00815fdc 	xori	r2,zero,1407
  815fb4:	00815fdc 	xori	r2,zero,1407
  815fb8:	008163b4 	movhi	r2,1422
  815fbc:	8104b03a 	or	r2,r16,r4
  815fc0:	10006a1e 	bne	r2,zero,81616c <__muldf3+0x2e0>
  815fc4:	05400204 	movi	r21,8
  815fc8:	0021883a 	mov	r16,zero
  815fcc:	0025883a 	mov	r18,zero
  815fd0:	02800084 	movi	r10,2
  815fd4:	003fcd06 	br	815f0c <__alt_data_end+0xff815f0c>
  815fd8:	b039883a 	mov	fp,r22
  815fdc:	00800084 	movi	r2,2
  815fe0:	50804e1e 	bne	r10,r2,81611c <__muldf3+0x290>
  815fe4:	e4c0004c 	andi	r19,fp,1
  815fe8:	0101ffc4 	movi	r4,2047
  815fec:	0021883a 	mov	r16,zero
  815ff0:	0025883a 	mov	r18,zero
  815ff4:	2008953a 	slli	r4,r4,20
  815ff8:	98c03fcc 	andi	r3,r19,255
  815ffc:	01400434 	movhi	r5,16
  816000:	297fffc4 	addi	r5,r5,-1
  816004:	180697fa 	slli	r3,r3,31
  816008:	8160703a 	and	r16,r16,r5
  81600c:	8120b03a 	or	r16,r16,r4
  816010:	80c6b03a 	or	r3,r16,r3
  816014:	9005883a 	mov	r2,r18
  816018:	dfc00d17 	ldw	ra,52(sp)
  81601c:	df000c17 	ldw	fp,48(sp)
  816020:	ddc00b17 	ldw	r23,44(sp)
  816024:	dd800a17 	ldw	r22,40(sp)
  816028:	dd400917 	ldw	r21,36(sp)
  81602c:	dd000817 	ldw	r20,32(sp)
  816030:	dcc00717 	ldw	r19,28(sp)
  816034:	dc800617 	ldw	r18,24(sp)
  816038:	dc400517 	ldw	r17,20(sp)
  81603c:	dc000417 	ldw	r16,16(sp)
  816040:	dec00e04 	addi	sp,sp,56
  816044:	f800283a 	ret
  816048:	8104b03a 	or	r2,r16,r4
  81604c:	10004226 	beq	r2,zero,816158 <__muldf3+0x2cc>
  816050:	8000f926 	beq	r16,zero,816438 <__muldf3+0x5ac>
  816054:	8009883a 	mov	r4,r16
  816058:	d9800315 	stw	r6,12(sp)
  81605c:	d9c00015 	stw	r7,0(sp)
  816060:	08172140 	call	817214 <__clzsi2>
  816064:	d9800317 	ldw	r6,12(sp)
  816068:	d9c00017 	ldw	r7,0(sp)
  81606c:	1007883a 	mov	r3,r2
  816070:	01000a04 	movi	r4,40
  816074:	18bffe04 	addi	r2,r3,-8
  816078:	20c9c83a 	sub	r4,r4,r3
  81607c:	80a0983a 	sll	r16,r16,r2
  816080:	8908d83a 	srl	r4,r17,r4
  816084:	88a4983a 	sll	r18,r17,r2
  816088:	2420b03a 	or	r16,r4,r16
  81608c:	017f0344 	movi	r5,-1011
  816090:	28e9c83a 	sub	r20,r5,r3
  816094:	002b883a 	mov	r21,zero
  816098:	0015883a 	mov	r10,zero
  81609c:	003f9b06 	br	815f0c <__alt_data_end+0xff815f0c>
  8160a0:	8984b03a 	or	r2,r17,r6
  8160a4:	10002a1e 	bne	r2,zero,816150 <__muldf3+0x2c4>
  8160a8:	0023883a 	mov	r17,zero
  8160ac:	002f883a 	mov	r23,zero
  8160b0:	02400084 	movi	r9,2
  8160b4:	003fa706 	br	815f54 <__alt_data_end+0xff815f54>
  8160b8:	8984b03a 	or	r2,r17,r6
  8160bc:	10002026 	beq	r2,zero,816140 <__muldf3+0x2b4>
  8160c0:	8800cc26 	beq	r17,zero,8163f4 <__muldf3+0x568>
  8160c4:	8809883a 	mov	r4,r17
  8160c8:	d8c00215 	stw	r3,8(sp)
  8160cc:	d9800315 	stw	r6,12(sp)
  8160d0:	da800015 	stw	r10,0(sp)
  8160d4:	dac00115 	stw	r11,4(sp)
  8160d8:	08172140 	call	817214 <__clzsi2>
  8160dc:	d8c00217 	ldw	r3,8(sp)
  8160e0:	d9800317 	ldw	r6,12(sp)
  8160e4:	da800017 	ldw	r10,0(sp)
  8160e8:	dac00117 	ldw	r11,4(sp)
  8160ec:	1009883a 	mov	r4,r2
  8160f0:	01400a04 	movi	r5,40
  8160f4:	25fffe04 	addi	r23,r4,-8
  8160f8:	290bc83a 	sub	r5,r5,r4
  8160fc:	8dd0983a 	sll	r8,r17,r23
  816100:	314ad83a 	srl	r5,r6,r5
  816104:	35ee983a 	sll	r23,r6,r23
  816108:	2a22b03a 	or	r17,r5,r8
  81610c:	017f0344 	movi	r5,-1011
  816110:	290bc83a 	sub	r5,r5,r4
  816114:	0013883a 	mov	r9,zero
  816118:	003f8e06 	br	815f54 <__alt_data_end+0xff815f54>
  81611c:	008000c4 	movi	r2,3
  816120:	50811d26 	beq	r10,r2,816598 <__muldf3+0x70c>
  816124:	00800044 	movi	r2,1
  816128:	5080e01e 	bne	r10,r2,8164ac <__muldf3+0x620>
  81612c:	e0a6703a 	and	r19,fp,r2
  816130:	0009883a 	mov	r4,zero
  816134:	0021883a 	mov	r16,zero
  816138:	0025883a 	mov	r18,zero
  81613c:	003fad06 	br	815ff4 <__alt_data_end+0xff815ff4>
  816140:	0023883a 	mov	r17,zero
  816144:	002f883a 	mov	r23,zero
  816148:	02400044 	movi	r9,1
  81614c:	003f8106 	br	815f54 <__alt_data_end+0xff815f54>
  816150:	024000c4 	movi	r9,3
  816154:	003f7f06 	br	815f54 <__alt_data_end+0xff815f54>
  816158:	05400104 	movi	r21,4
  81615c:	0021883a 	mov	r16,zero
  816160:	0025883a 	mov	r18,zero
  816164:	02800044 	movi	r10,1
  816168:	003f6806 	br	815f0c <__alt_data_end+0xff815f0c>
  81616c:	05400304 	movi	r21,12
  816170:	028000c4 	movi	r10,3
  816174:	003f6506 	br	815f0c <__alt_data_end+0xff815f0c>
  816178:	04000434 	movhi	r16,16
  81617c:	0027883a 	mov	r19,zero
  816180:	843fffc4 	addi	r16,r16,-1
  816184:	04bfffc4 	movi	r18,-1
  816188:	0101ffc4 	movi	r4,2047
  81618c:	003f9906 	br	815ff4 <__alt_data_end+0xff815ff4>
  816190:	8821883a 	mov	r16,r17
  816194:	b825883a 	mov	r18,r23
  816198:	5839883a 	mov	fp,r11
  81619c:	4815883a 	mov	r10,r9
  8161a0:	003f8e06 	br	815fdc <__alt_data_end+0xff815fdc>
  8161a4:	8821883a 	mov	r16,r17
  8161a8:	b825883a 	mov	r18,r23
  8161ac:	b039883a 	mov	fp,r22
  8161b0:	4815883a 	mov	r10,r9
  8161b4:	003f8906 	br	815fdc <__alt_data_end+0xff815fdc>
  8161b8:	b80cd43a 	srli	r6,r23,16
  8161bc:	9006d43a 	srli	r3,r18,16
  8161c0:	90bfffcc 	andi	r2,r18,65535
  8161c4:	bdffffcc 	andi	r23,r23,65535
  8161c8:	b891383a 	mul	r8,r23,r2
  8161cc:	b8c9383a 	mul	r4,r23,r3
  8161d0:	309b383a 	mul	r13,r6,r2
  8161d4:	400ed43a 	srli	r7,r8,16
  8161d8:	30df383a 	mul	r15,r6,r3
  8161dc:	235b883a 	add	r13,r4,r13
  8161e0:	69db883a 	add	r13,r13,r7
  8161e4:	6900022e 	bgeu	r13,r4,8161f0 <__muldf3+0x364>
  8161e8:	01000074 	movhi	r4,1
  8161ec:	791f883a 	add	r15,r15,r4
  8161f0:	8828d43a 	srli	r20,r17,16
  8161f4:	8c7fffcc 	andi	r17,r17,65535
  8161f8:	888f383a 	mul	r7,r17,r2
  8161fc:	88d3383a 	mul	r9,r17,r3
  816200:	a0a5383a 	mul	r18,r20,r2
  816204:	3816d43a 	srli	r11,r7,16
  816208:	6814943a 	slli	r10,r13,16
  81620c:	4ca5883a 	add	r18,r9,r18
  816210:	423fffcc 	andi	r8,r8,65535
  816214:	92e5883a 	add	r18,r18,r11
  816218:	6808d43a 	srli	r4,r13,16
  81621c:	5215883a 	add	r10,r10,r8
  816220:	a0c7383a 	mul	r3,r20,r3
  816224:	9240022e 	bgeu	r18,r9,816230 <__muldf3+0x3a4>
  816228:	00800074 	movhi	r2,1
  81622c:	1887883a 	add	r3,r3,r2
  816230:	802ad43a 	srli	r21,r16,16
  816234:	80bfffcc 	andi	r2,r16,65535
  816238:	b893383a 	mul	r9,r23,r2
  81623c:	3091383a 	mul	r8,r6,r2
  816240:	bd6f383a 	mul	r23,r23,r21
  816244:	9026943a 	slli	r19,r18,16
  816248:	481ad43a 	srli	r13,r9,16
  81624c:	9024d43a 	srli	r18,r18,16
  816250:	39ffffcc 	andi	r7,r7,65535
  816254:	ba11883a 	add	r8,r23,r8
  816258:	99e7883a 	add	r19,r19,r7
  81625c:	4351883a 	add	r8,r8,r13
  816260:	1c97883a 	add	r11,r3,r18
  816264:	354d383a 	mul	r6,r6,r21
  816268:	9925883a 	add	r18,r19,r4
  81626c:	45c0022e 	bgeu	r8,r23,816278 <__muldf3+0x3ec>
  816270:	00c00074 	movhi	r3,1
  816274:	30cd883a 	add	r6,r6,r3
  816278:	8889383a 	mul	r4,r17,r2
  81627c:	8d63383a 	mul	r17,r17,r21
  816280:	a085383a 	mul	r2,r20,r2
  816284:	200ed43a 	srli	r7,r4,16
  816288:	401cd43a 	srli	r14,r8,16
  81628c:	401a943a 	slli	r13,r8,16
  816290:	8885883a 	add	r2,r17,r2
  816294:	4a3fffcc 	andi	r8,r9,65535
  816298:	11c5883a 	add	r2,r2,r7
  81629c:	339d883a 	add	r14,r6,r14
  8162a0:	6a11883a 	add	r8,r13,r8
  8162a4:	a561383a 	mul	r16,r20,r21
  8162a8:	1440022e 	bgeu	r2,r17,8162b4 <__muldf3+0x428>
  8162ac:	00c00074 	movhi	r3,1
  8162b0:	80e1883a 	add	r16,r16,r3
  8162b4:	1006943a 	slli	r3,r2,16
  8162b8:	213fffcc 	andi	r4,r4,65535
  8162bc:	93db883a 	add	r13,r18,r15
  8162c0:	1909883a 	add	r4,r3,r4
  8162c4:	22c7883a 	add	r3,r4,r11
  8162c8:	6cd3803a 	cmpltu	r9,r13,r19
  8162cc:	6a09883a 	add	r4,r13,r8
  8162d0:	1a5b883a 	add	r13,r3,r9
  8162d4:	2211803a 	cmpltu	r8,r4,r8
  8162d8:	734d883a 	add	r6,r14,r13
  8162dc:	100ed43a 	srli	r7,r2,16
  8162e0:	6a53803a 	cmpltu	r9,r13,r9
  8162e4:	3205883a 	add	r2,r6,r8
  8162e8:	1ac7803a 	cmpltu	r3,r3,r11
  8162ec:	1211803a 	cmpltu	r8,r2,r8
  8162f0:	48c6b03a 	or	r3,r9,r3
  8162f4:	338d803a 	cmpltu	r6,r6,r14
  8162f8:	19c7883a 	add	r3,r3,r7
  8162fc:	418cb03a 	or	r6,r8,r6
  816300:	1987883a 	add	r3,r3,r6
  816304:	2024927a 	slli	r18,r4,9
  816308:	1c07883a 	add	r3,r3,r16
  81630c:	1806927a 	slli	r3,r3,9
  816310:	1020d5fa 	srli	r16,r2,23
  816314:	2008d5fa 	srli	r4,r4,23
  816318:	9294b03a 	or	r10,r18,r10
  81631c:	1004927a 	slli	r2,r2,9
  816320:	5024c03a 	cmpne	r18,r10,zero
  816324:	1c20b03a 	or	r16,r3,r16
  816328:	9108b03a 	or	r4,r18,r4
  81632c:	80c0402c 	andhi	r3,r16,256
  816330:	20a4b03a 	or	r18,r4,r2
  816334:	18000726 	beq	r3,zero,816354 <__muldf3+0x4c8>
  816338:	9006d07a 	srli	r3,r18,1
  81633c:	800897fa 	slli	r4,r16,31
  816340:	9080004c 	andi	r2,r18,1
  816344:	8020d07a 	srli	r16,r16,1
  816348:	10c4b03a 	or	r2,r2,r3
  81634c:	1124b03a 	or	r18,r2,r4
  816350:	600b883a 	mov	r5,r12
  816354:	2900ffc4 	addi	r4,r5,1023
  816358:	01004b0e 	bge	zero,r4,816488 <__muldf3+0x5fc>
  81635c:	908001cc 	andi	r2,r18,7
  816360:	10000726 	beq	r2,zero,816380 <__muldf3+0x4f4>
  816364:	90c003cc 	andi	r3,r18,15
  816368:	00800104 	movi	r2,4
  81636c:	18800426 	beq	r3,r2,816380 <__muldf3+0x4f4>
  816370:	9087883a 	add	r3,r18,r2
  816374:	1c85803a 	cmpltu	r2,r3,r18
  816378:	80a1883a 	add	r16,r16,r2
  81637c:	1825883a 	mov	r18,r3
  816380:	8080402c 	andhi	r2,r16,256
  816384:	10000426 	beq	r2,zero,816398 <__muldf3+0x50c>
  816388:	00bfc034 	movhi	r2,65280
  81638c:	10bfffc4 	addi	r2,r2,-1
  816390:	29010004 	addi	r4,r5,1024
  816394:	80a0703a 	and	r16,r16,r2
  816398:	0081ff84 	movi	r2,2046
  81639c:	1100320e 	bge	r2,r4,816468 <__muldf3+0x5dc>
  8163a0:	b4c0004c 	andi	r19,r22,1
  8163a4:	0101ffc4 	movi	r4,2047
  8163a8:	0021883a 	mov	r16,zero
  8163ac:	0025883a 	mov	r18,zero
  8163b0:	003f1006 	br	815ff4 <__alt_data_end+0xff815ff4>
  8163b4:	8080022c 	andhi	r2,r16,8
  8163b8:	10000926 	beq	r2,zero,8163e0 <__muldf3+0x554>
  8163bc:	8880022c 	andhi	r2,r17,8
  8163c0:	1000071e 	bne	r2,zero,8163e0 <__muldf3+0x554>
  8163c4:	00800434 	movhi	r2,16
  8163c8:	8c000234 	orhi	r16,r17,8
  8163cc:	10bfffc4 	addi	r2,r2,-1
  8163d0:	1827883a 	mov	r19,r3
  8163d4:	80a0703a 	and	r16,r16,r2
  8163d8:	b825883a 	mov	r18,r23
  8163dc:	003f6a06 	br	816188 <__alt_data_end+0xff816188>
  8163e0:	00800434 	movhi	r2,16
  8163e4:	84000234 	orhi	r16,r16,8
  8163e8:	10bfffc4 	addi	r2,r2,-1
  8163ec:	80a0703a 	and	r16,r16,r2
  8163f0:	003f6506 	br	816188 <__alt_data_end+0xff816188>
  8163f4:	3009883a 	mov	r4,r6
  8163f8:	d8c00215 	stw	r3,8(sp)
  8163fc:	d9800315 	stw	r6,12(sp)
  816400:	da800015 	stw	r10,0(sp)
  816404:	dac00115 	stw	r11,4(sp)
  816408:	08172140 	call	817214 <__clzsi2>
  81640c:	11000804 	addi	r4,r2,32
  816410:	014009c4 	movi	r5,39
  816414:	d8c00217 	ldw	r3,8(sp)
  816418:	d9800317 	ldw	r6,12(sp)
  81641c:	da800017 	ldw	r10,0(sp)
  816420:	dac00117 	ldw	r11,4(sp)
  816424:	293f320e 	bge	r5,r4,8160f0 <__alt_data_end+0xff8160f0>
  816428:	10bffe04 	addi	r2,r2,-8
  81642c:	b8a2983a 	sll	r17,r23,r2
  816430:	002f883a 	mov	r23,zero
  816434:	003f3506 	br	81610c <__alt_data_end+0xff81610c>
  816438:	d9800315 	stw	r6,12(sp)
  81643c:	d9c00015 	stw	r7,0(sp)
  816440:	08172140 	call	817214 <__clzsi2>
  816444:	10c00804 	addi	r3,r2,32
  816448:	010009c4 	movi	r4,39
  81644c:	d9800317 	ldw	r6,12(sp)
  816450:	d9c00017 	ldw	r7,0(sp)
  816454:	20ff060e 	bge	r4,r3,816070 <__alt_data_end+0xff816070>
  816458:	10bffe04 	addi	r2,r2,-8
  81645c:	88a0983a 	sll	r16,r17,r2
  816460:	0025883a 	mov	r18,zero
  816464:	003f0906 	br	81608c <__alt_data_end+0xff81608c>
  816468:	9004d0fa 	srli	r2,r18,3
  81646c:	8024977a 	slli	r18,r16,29
  816470:	8020927a 	slli	r16,r16,9
  816474:	2101ffcc 	andi	r4,r4,2047
  816478:	90a4b03a 	or	r18,r18,r2
  81647c:	8020d33a 	srli	r16,r16,12
  816480:	b4c0004c 	andi	r19,r22,1
  816484:	003edb06 	br	815ff4 <__alt_data_end+0xff815ff4>
  816488:	00ff0084 	movi	r3,-1022
  81648c:	1947c83a 	sub	r3,r3,r5
  816490:	00800e04 	movi	r2,56
  816494:	10c0080e 	bge	r2,r3,8164b8 <__muldf3+0x62c>
  816498:	b4c0004c 	andi	r19,r22,1
  81649c:	0009883a 	mov	r4,zero
  8164a0:	0021883a 	mov	r16,zero
  8164a4:	0025883a 	mov	r18,zero
  8164a8:	003ed206 	br	815ff4 <__alt_data_end+0xff815ff4>
  8164ac:	600b883a 	mov	r5,r12
  8164b0:	e02d883a 	mov	r22,fp
  8164b4:	003fa706 	br	816354 <__alt_data_end+0xff816354>
  8164b8:	008007c4 	movi	r2,31
  8164bc:	10c01816 	blt	r2,r3,816520 <__muldf3+0x694>
  8164c0:	29410784 	addi	r5,r5,1054
  8164c4:	8144983a 	sll	r2,r16,r5
  8164c8:	90c8d83a 	srl	r4,r18,r3
  8164cc:	914a983a 	sll	r5,r18,r5
  8164d0:	80c6d83a 	srl	r3,r16,r3
  8164d4:	2088b03a 	or	r4,r4,r2
  8164d8:	2804c03a 	cmpne	r2,r5,zero
  8164dc:	2084b03a 	or	r2,r4,r2
  8164e0:	110001cc 	andi	r4,r2,7
  8164e4:	20000726 	beq	r4,zero,816504 <__muldf3+0x678>
  8164e8:	114003cc 	andi	r5,r2,15
  8164ec:	01000104 	movi	r4,4
  8164f0:	29000426 	beq	r5,r4,816504 <__muldf3+0x678>
  8164f4:	11000104 	addi	r4,r2,4
  8164f8:	2085803a 	cmpltu	r2,r4,r2
  8164fc:	1887883a 	add	r3,r3,r2
  816500:	2005883a 	mov	r2,r4
  816504:	1900202c 	andhi	r4,r3,128
  816508:	20001826 	beq	r4,zero,81656c <__muldf3+0x6e0>
  81650c:	b4c0004c 	andi	r19,r22,1
  816510:	01000044 	movi	r4,1
  816514:	0021883a 	mov	r16,zero
  816518:	0025883a 	mov	r18,zero
  81651c:	003eb506 	br	815ff4 <__alt_data_end+0xff815ff4>
  816520:	00bef884 	movi	r2,-1054
  816524:	1145c83a 	sub	r2,r2,r5
  816528:	8088d83a 	srl	r4,r16,r2
  81652c:	00800804 	movi	r2,32
  816530:	18801726 	beq	r3,r2,816590 <__muldf3+0x704>
  816534:	28810f84 	addi	r2,r5,1086
  816538:	8084983a 	sll	r2,r16,r2
  81653c:	1484b03a 	or	r2,r2,r18
  816540:	1004c03a 	cmpne	r2,r2,zero
  816544:	1104b03a 	or	r2,r2,r4
  816548:	10c001cc 	andi	r3,r2,7
  81654c:	18000b1e 	bne	r3,zero,81657c <__muldf3+0x6f0>
  816550:	0021883a 	mov	r16,zero
  816554:	1004d0fa 	srli	r2,r2,3
  816558:	b4c0004c 	andi	r19,r22,1
  81655c:	0009883a 	mov	r4,zero
  816560:	10e4b03a 	or	r18,r2,r3
  816564:	003ea306 	br	815ff4 <__alt_data_end+0xff815ff4>
  816568:	0007883a 	mov	r3,zero
  81656c:	1820927a 	slli	r16,r3,9
  816570:	1806977a 	slli	r3,r3,29
  816574:	8020d33a 	srli	r16,r16,12
  816578:	003ff606 	br	816554 <__alt_data_end+0xff816554>
  81657c:	110003cc 	andi	r4,r2,15
  816580:	00c00104 	movi	r3,4
  816584:	20fff826 	beq	r4,r3,816568 <__alt_data_end+0xff816568>
  816588:	0007883a 	mov	r3,zero
  81658c:	003fd906 	br	8164f4 <__alt_data_end+0xff8164f4>
  816590:	0005883a 	mov	r2,zero
  816594:	003fe906 	br	81653c <__alt_data_end+0xff81653c>
  816598:	00800434 	movhi	r2,16
  81659c:	84000234 	orhi	r16,r16,8
  8165a0:	10bfffc4 	addi	r2,r2,-1
  8165a4:	e4c0004c 	andi	r19,fp,1
  8165a8:	80a0703a 	and	r16,r16,r2
  8165ac:	003ef606 	br	816188 <__alt_data_end+0xff816188>

008165b0 <__subdf3>:
  8165b0:	00c00434 	movhi	r3,16
  8165b4:	18ffffc4 	addi	r3,r3,-1
  8165b8:	defffb04 	addi	sp,sp,-20
  8165bc:	28d2703a 	and	r9,r5,r3
  8165c0:	3814d53a 	srli	r10,r7,20
  8165c4:	38c6703a 	and	r3,r7,r3
  8165c8:	3004d77a 	srli	r2,r6,29
  8165cc:	dc800215 	stw	r18,8(sp)
  8165d0:	dc000015 	stw	r16,0(sp)
  8165d4:	2824d7fa 	srli	r18,r5,31
  8165d8:	2820d53a 	srli	r16,r5,20
  8165dc:	481290fa 	slli	r9,r9,3
  8165e0:	200ad77a 	srli	r5,r4,29
  8165e4:	180690fa 	slli	r3,r3,3
  8165e8:	dc400115 	stw	r17,4(sp)
  8165ec:	dfc00415 	stw	ra,16(sp)
  8165f0:	202290fa 	slli	r17,r4,3
  8165f4:	dcc00315 	stw	r19,12(sp)
  8165f8:	5281ffcc 	andi	r10,r10,2047
  8165fc:	0101ffc4 	movi	r4,2047
  816600:	9011883a 	mov	r8,r18
  816604:	8401ffcc 	andi	r16,r16,2047
  816608:	94803fcc 	andi	r18,r18,255
  81660c:	494ab03a 	or	r5,r9,r5
  816610:	380ed7fa 	srli	r7,r7,31
  816614:	1886b03a 	or	r3,r3,r2
  816618:	300c90fa 	slli	r6,r6,3
  81661c:	51009026 	beq	r10,r4,816860 <__subdf3+0x2b0>
  816620:	39c0005c 	xori	r7,r7,1
  816624:	8285c83a 	sub	r2,r16,r10
  816628:	91c06f26 	beq	r18,r7,8167e8 <__subdf3+0x238>
  81662c:	0080b10e 	bge	zero,r2,8168f4 <__subdf3+0x344>
  816630:	50002a1e 	bne	r10,zero,8166dc <__subdf3+0x12c>
  816634:	1988b03a 	or	r4,r3,r6
  816638:	2000941e 	bne	r4,zero,81688c <__subdf3+0x2dc>
  81663c:	888001cc 	andi	r2,r17,7
  816640:	10005b26 	beq	r2,zero,8167b0 <__subdf3+0x200>
  816644:	88c003cc 	andi	r3,r17,15
  816648:	00800104 	movi	r2,4
  81664c:	18805826 	beq	r3,r2,8167b0 <__subdf3+0x200>
  816650:	88c00104 	addi	r3,r17,4
  816654:	1c63803a 	cmpltu	r17,r3,r17
  816658:	2c4b883a 	add	r5,r5,r17
  81665c:	2880202c 	andhi	r2,r5,128
  816660:	9200004c 	andi	r8,r18,1
  816664:	1823883a 	mov	r17,r3
  816668:	10005426 	beq	r2,zero,8167bc <__subdf3+0x20c>
  81666c:	84000044 	addi	r16,r16,1
  816670:	0081ffc4 	movi	r2,2047
  816674:	8080bf26 	beq	r16,r2,816974 <__subdf3+0x3c4>
  816678:	013fe034 	movhi	r4,65408
  81667c:	213fffc4 	addi	r4,r4,-1
  816680:	290a703a 	and	r5,r5,r4
  816684:	2804977a 	slli	r2,r5,29
  816688:	280a927a 	slli	r5,r5,9
  81668c:	8822d0fa 	srli	r17,r17,3
  816690:	8401ffcc 	andi	r16,r16,2047
  816694:	2808d33a 	srli	r4,r5,12
  816698:	1444b03a 	or	r2,r2,r17
  81669c:	8401ffcc 	andi	r16,r16,2047
  8166a0:	800a953a 	slli	r5,r16,20
  8166a4:	40c03fcc 	andi	r3,r8,255
  8166a8:	04000434 	movhi	r16,16
  8166ac:	180697fa 	slli	r3,r3,31
  8166b0:	843fffc4 	addi	r16,r16,-1
  8166b4:	2420703a 	and	r16,r4,r16
  8166b8:	8160b03a 	or	r16,r16,r5
  8166bc:	80c6b03a 	or	r3,r16,r3
  8166c0:	dfc00417 	ldw	ra,16(sp)
  8166c4:	dcc00317 	ldw	r19,12(sp)
  8166c8:	dc800217 	ldw	r18,8(sp)
  8166cc:	dc400117 	ldw	r17,4(sp)
  8166d0:	dc000017 	ldw	r16,0(sp)
  8166d4:	dec00504 	addi	sp,sp,20
  8166d8:	f800283a 	ret
  8166dc:	0101ffc4 	movi	r4,2047
  8166e0:	813fd626 	beq	r16,r4,81663c <__alt_data_end+0xff81663c>
  8166e4:	18c02034 	orhi	r3,r3,128
  8166e8:	01000e04 	movi	r4,56
  8166ec:	2080a416 	blt	r4,r2,816980 <__subdf3+0x3d0>
  8166f0:	010007c4 	movi	r4,31
  8166f4:	2080c716 	blt	r4,r2,816a14 <__subdf3+0x464>
  8166f8:	01000804 	movi	r4,32
  8166fc:	2089c83a 	sub	r4,r4,r2
  816700:	1910983a 	sll	r8,r3,r4
  816704:	308ed83a 	srl	r7,r6,r2
  816708:	3108983a 	sll	r4,r6,r4
  81670c:	1884d83a 	srl	r2,r3,r2
  816710:	41ccb03a 	or	r6,r8,r7
  816714:	2008c03a 	cmpne	r4,r4,zero
  816718:	310cb03a 	or	r6,r6,r4
  81671c:	898dc83a 	sub	r6,r17,r6
  816720:	89a3803a 	cmpltu	r17,r17,r6
  816724:	288bc83a 	sub	r5,r5,r2
  816728:	2c4bc83a 	sub	r5,r5,r17
  81672c:	3023883a 	mov	r17,r6
  816730:	2880202c 	andhi	r2,r5,128
  816734:	10006b26 	beq	r2,zero,8168e4 <__subdf3+0x334>
  816738:	04c02034 	movhi	r19,128
  81673c:	9cffffc4 	addi	r19,r19,-1
  816740:	2ce6703a 	and	r19,r5,r19
  816744:	98007c26 	beq	r19,zero,816938 <__subdf3+0x388>
  816748:	9809883a 	mov	r4,r19
  81674c:	08172140 	call	817214 <__clzsi2>
  816750:	10fffe04 	addi	r3,r2,-8
  816754:	010007c4 	movi	r4,31
  816758:	20c07d16 	blt	r4,r3,816950 <__subdf3+0x3a0>
  81675c:	01400a04 	movi	r5,40
  816760:	2885c83a 	sub	r2,r5,r2
  816764:	888ad83a 	srl	r5,r17,r2
  816768:	98e6983a 	sll	r19,r19,r3
  81676c:	88e2983a 	sll	r17,r17,r3
  816770:	2ce6b03a 	or	r19,r5,r19
  816774:	1c007a16 	blt	r3,r16,816960 <__subdf3+0x3b0>
  816778:	1c21c83a 	sub	r16,r3,r16
  81677c:	81400044 	addi	r5,r16,1
  816780:	00c007c4 	movi	r3,31
  816784:	19409616 	blt	r3,r5,8169e0 <__subdf3+0x430>
  816788:	1c21c83a 	sub	r16,r3,r16
  81678c:	8c08983a 	sll	r4,r17,r16
  816790:	8946d83a 	srl	r3,r17,r5
  816794:	9c20983a 	sll	r16,r19,r16
  816798:	2008c03a 	cmpne	r4,r4,zero
  81679c:	994ad83a 	srl	r5,r19,r5
  8167a0:	1c06b03a 	or	r3,r3,r16
  8167a4:	1922b03a 	or	r17,r3,r4
  8167a8:	0021883a 	mov	r16,zero
  8167ac:	003fa306 	br	81663c <__alt_data_end+0xff81663c>
  8167b0:	2880202c 	andhi	r2,r5,128
  8167b4:	9200004c 	andi	r8,r18,1
  8167b8:	103fac1e 	bne	r2,zero,81666c <__alt_data_end+0xff81666c>
  8167bc:	2804977a 	slli	r2,r5,29
  8167c0:	8822d0fa 	srli	r17,r17,3
  8167c4:	00c1ffc4 	movi	r3,2047
  8167c8:	280ad0fa 	srli	r5,r5,3
  8167cc:	1444b03a 	or	r2,r2,r17
  8167d0:	80c02726 	beq	r16,r3,816870 <__subdf3+0x2c0>
  8167d4:	01000434 	movhi	r4,16
  8167d8:	213fffc4 	addi	r4,r4,-1
  8167dc:	80e0703a 	and	r16,r16,r3
  8167e0:	2908703a 	and	r4,r5,r4
  8167e4:	003fad06 	br	81669c <__alt_data_end+0xff81669c>
  8167e8:	0080690e 	bge	zero,r2,816990 <__subdf3+0x3e0>
  8167ec:	50002f26 	beq	r10,zero,8168ac <__subdf3+0x2fc>
  8167f0:	0101ffc4 	movi	r4,2047
  8167f4:	813f9126 	beq	r16,r4,81663c <__alt_data_end+0xff81663c>
  8167f8:	18c02034 	orhi	r3,r3,128
  8167fc:	01000e04 	movi	r4,56
  816800:	2080b00e 	bge	r4,r2,816ac4 <__subdf3+0x514>
  816804:	198cb03a 	or	r6,r3,r6
  816808:	300ec03a 	cmpne	r7,r6,zero
  81680c:	0005883a 	mov	r2,zero
  816810:	3c4f883a 	add	r7,r7,r17
  816814:	3c63803a 	cmpltu	r17,r7,r17
  816818:	114b883a 	add	r5,r2,r5
  81681c:	2c4b883a 	add	r5,r5,r17
  816820:	3823883a 	mov	r17,r7
  816824:	2880202c 	andhi	r2,r5,128
  816828:	10002e26 	beq	r2,zero,8168e4 <__subdf3+0x334>
  81682c:	84000044 	addi	r16,r16,1
  816830:	0081ffc4 	movi	r2,2047
  816834:	8080de26 	beq	r16,r2,816bb0 <__subdf3+0x600>
  816838:	00bfe034 	movhi	r2,65408
  81683c:	10bfffc4 	addi	r2,r2,-1
  816840:	288a703a 	and	r5,r5,r2
  816844:	880cd07a 	srli	r6,r17,1
  816848:	280897fa 	slli	r4,r5,31
  81684c:	88c0004c 	andi	r3,r17,1
  816850:	30e2b03a 	or	r17,r6,r3
  816854:	280ad07a 	srli	r5,r5,1
  816858:	8922b03a 	or	r17,r17,r4
  81685c:	003f7706 	br	81663c <__alt_data_end+0xff81663c>
  816860:	1984b03a 	or	r2,r3,r6
  816864:	103f6e26 	beq	r2,zero,816620 <__alt_data_end+0xff816620>
  816868:	39c03fcc 	andi	r7,r7,255
  81686c:	003f6d06 	br	816624 <__alt_data_end+0xff816624>
  816870:	1146b03a 	or	r3,r2,r5
  816874:	18003f26 	beq	r3,zero,816974 <__subdf3+0x3c4>
  816878:	00c00434 	movhi	r3,16
  81687c:	29000234 	orhi	r4,r5,8
  816880:	18ffffc4 	addi	r3,r3,-1
  816884:	20c8703a 	and	r4,r4,r3
  816888:	003f8406 	br	81669c <__alt_data_end+0xff81669c>
  81688c:	10bfffc4 	addi	r2,r2,-1
  816890:	1000501e 	bne	r2,zero,8169d4 <__subdf3+0x424>
  816894:	898fc83a 	sub	r7,r17,r6
  816898:	89e3803a 	cmpltu	r17,r17,r7
  81689c:	28cbc83a 	sub	r5,r5,r3
  8168a0:	2c4bc83a 	sub	r5,r5,r17
  8168a4:	3823883a 	mov	r17,r7
  8168a8:	003fa106 	br	816730 <__alt_data_end+0xff816730>
  8168ac:	1988b03a 	or	r4,r3,r6
  8168b0:	203f6226 	beq	r4,zero,81663c <__alt_data_end+0xff81663c>
  8168b4:	10bfffc4 	addi	r2,r2,-1
  8168b8:	10009b1e 	bne	r2,zero,816b28 <__subdf3+0x578>
  8168bc:	344d883a 	add	r6,r6,r17
  8168c0:	3463803a 	cmpltu	r17,r6,r17
  8168c4:	194b883a 	add	r5,r3,r5
  8168c8:	2c4b883a 	add	r5,r5,r17
  8168cc:	3023883a 	mov	r17,r6
  8168d0:	003fd406 	br	816824 <__alt_data_end+0xff816824>
  8168d4:	1106b03a 	or	r3,r2,r4
  8168d8:	1800b426 	beq	r3,zero,816bac <__subdf3+0x5fc>
  8168dc:	100b883a 	mov	r5,r2
  8168e0:	2023883a 	mov	r17,r4
  8168e4:	888001cc 	andi	r2,r17,7
  8168e8:	103f561e 	bne	r2,zero,816644 <__alt_data_end+0xff816644>
  8168ec:	9200004c 	andi	r8,r18,1
  8168f0:	003fb206 	br	8167bc <__alt_data_end+0xff8167bc>
  8168f4:	1000531e 	bne	r2,zero,816a44 <__subdf3+0x494>
  8168f8:	80800044 	addi	r2,r16,1
  8168fc:	1081ffcc 	andi	r2,r2,2047
  816900:	01000044 	movi	r4,1
  816904:	2080a00e 	bge	r4,r2,816b88 <__subdf3+0x5d8>
  816908:	8985c83a 	sub	r2,r17,r6
  81690c:	8889803a 	cmpltu	r4,r17,r2
  816910:	28e7c83a 	sub	r19,r5,r3
  816914:	9927c83a 	sub	r19,r19,r4
  816918:	9900202c 	andhi	r4,r19,128
  81691c:	20006226 	beq	r4,zero,816aa8 <__subdf3+0x4f8>
  816920:	3463c83a 	sub	r17,r6,r17
  816924:	194bc83a 	sub	r5,r3,r5
  816928:	344d803a 	cmpltu	r6,r6,r17
  81692c:	29a7c83a 	sub	r19,r5,r6
  816930:	3825883a 	mov	r18,r7
  816934:	983f841e 	bne	r19,zero,816748 <__alt_data_end+0xff816748>
  816938:	8809883a 	mov	r4,r17
  81693c:	08172140 	call	817214 <__clzsi2>
  816940:	10800804 	addi	r2,r2,32
  816944:	10fffe04 	addi	r3,r2,-8
  816948:	010007c4 	movi	r4,31
  81694c:	20ff830e 	bge	r4,r3,81675c <__alt_data_end+0xff81675c>
  816950:	14fff604 	addi	r19,r2,-40
  816954:	8ce6983a 	sll	r19,r17,r19
  816958:	0023883a 	mov	r17,zero
  81695c:	1c3f860e 	bge	r3,r16,816778 <__alt_data_end+0xff816778>
  816960:	017fe034 	movhi	r5,65408
  816964:	297fffc4 	addi	r5,r5,-1
  816968:	80e1c83a 	sub	r16,r16,r3
  81696c:	994a703a 	and	r5,r19,r5
  816970:	003f3206 	br	81663c <__alt_data_end+0xff81663c>
  816974:	0009883a 	mov	r4,zero
  816978:	0005883a 	mov	r2,zero
  81697c:	003f4706 	br	81669c <__alt_data_end+0xff81669c>
  816980:	198cb03a 	or	r6,r3,r6
  816984:	300cc03a 	cmpne	r6,r6,zero
  816988:	0005883a 	mov	r2,zero
  81698c:	003f6306 	br	81671c <__alt_data_end+0xff81671c>
  816990:	10009d1e 	bne	r2,zero,816c08 <__subdf3+0x658>
  816994:	81c00044 	addi	r7,r16,1
  816998:	3881ffcc 	andi	r2,r7,2047
  81699c:	02400044 	movi	r9,1
  8169a0:	4880680e 	bge	r9,r2,816b44 <__subdf3+0x594>
  8169a4:	0081ffc4 	movi	r2,2047
  8169a8:	3880ae26 	beq	r7,r2,816c64 <__subdf3+0x6b4>
  8169ac:	344d883a 	add	r6,r6,r17
  8169b0:	3463803a 	cmpltu	r17,r6,r17
  8169b4:	194b883a 	add	r5,r3,r5
  8169b8:	2c4b883a 	add	r5,r5,r17
  8169bc:	282297fa 	slli	r17,r5,31
  8169c0:	300cd07a 	srli	r6,r6,1
  8169c4:	280ad07a 	srli	r5,r5,1
  8169c8:	3821883a 	mov	r16,r7
  8169cc:	89a2b03a 	or	r17,r17,r6
  8169d0:	003f1a06 	br	81663c <__alt_data_end+0xff81663c>
  8169d4:	0101ffc4 	movi	r4,2047
  8169d8:	813f431e 	bne	r16,r4,8166e8 <__alt_data_end+0xff8166e8>
  8169dc:	003f1706 	br	81663c <__alt_data_end+0xff81663c>
  8169e0:	80bff844 	addi	r2,r16,-31
  8169e4:	00c00804 	movi	r3,32
  8169e8:	9884d83a 	srl	r2,r19,r2
  8169ec:	28c05126 	beq	r5,r3,816b34 <__subdf3+0x584>
  8169f0:	00c00fc4 	movi	r3,63
  8169f4:	1c21c83a 	sub	r16,r3,r16
  8169f8:	9c26983a 	sll	r19,r19,r16
  8169fc:	9c62b03a 	or	r17,r19,r17
  816a00:	8822c03a 	cmpne	r17,r17,zero
  816a04:	88a2b03a 	or	r17,r17,r2
  816a08:	000b883a 	mov	r5,zero
  816a0c:	0021883a 	mov	r16,zero
  816a10:	003fb406 	br	8168e4 <__alt_data_end+0xff8168e4>
  816a14:	113ff804 	addi	r4,r2,-32
  816a18:	01c00804 	movi	r7,32
  816a1c:	1908d83a 	srl	r4,r3,r4
  816a20:	11c04626 	beq	r2,r7,816b3c <__subdf3+0x58c>
  816a24:	01c01004 	movi	r7,64
  816a28:	3885c83a 	sub	r2,r7,r2
  816a2c:	1884983a 	sll	r2,r3,r2
  816a30:	118cb03a 	or	r6,r2,r6
  816a34:	300cc03a 	cmpne	r6,r6,zero
  816a38:	310cb03a 	or	r6,r6,r4
  816a3c:	0005883a 	mov	r2,zero
  816a40:	003f3606 	br	81671c <__alt_data_end+0xff81671c>
  816a44:	80002b26 	beq	r16,zero,816af4 <__subdf3+0x544>
  816a48:	0101ffc4 	movi	r4,2047
  816a4c:	51006926 	beq	r10,r4,816bf4 <__subdf3+0x644>
  816a50:	0085c83a 	sub	r2,zero,r2
  816a54:	29402034 	orhi	r5,r5,128
  816a58:	01000e04 	movi	r4,56
  816a5c:	20807d16 	blt	r4,r2,816c54 <__subdf3+0x6a4>
  816a60:	010007c4 	movi	r4,31
  816a64:	2080d916 	blt	r4,r2,816dcc <__subdf3+0x81c>
  816a68:	01000804 	movi	r4,32
  816a6c:	2089c83a 	sub	r4,r4,r2
  816a70:	2912983a 	sll	r9,r5,r4
  816a74:	8890d83a 	srl	r8,r17,r2
  816a78:	8908983a 	sll	r4,r17,r4
  816a7c:	2884d83a 	srl	r2,r5,r2
  816a80:	4a22b03a 	or	r17,r9,r8
  816a84:	2008c03a 	cmpne	r4,r4,zero
  816a88:	8922b03a 	or	r17,r17,r4
  816a8c:	3463c83a 	sub	r17,r6,r17
  816a90:	1885c83a 	sub	r2,r3,r2
  816a94:	344d803a 	cmpltu	r6,r6,r17
  816a98:	118bc83a 	sub	r5,r2,r6
  816a9c:	5021883a 	mov	r16,r10
  816aa0:	3825883a 	mov	r18,r7
  816aa4:	003f2206 	br	816730 <__alt_data_end+0xff816730>
  816aa8:	9886b03a 	or	r3,r19,r2
  816aac:	18001c1e 	bne	r3,zero,816b20 <__subdf3+0x570>
  816ab0:	0011883a 	mov	r8,zero
  816ab4:	000b883a 	mov	r5,zero
  816ab8:	0023883a 	mov	r17,zero
  816abc:	0021883a 	mov	r16,zero
  816ac0:	003f3e06 	br	8167bc <__alt_data_end+0xff8167bc>
  816ac4:	010007c4 	movi	r4,31
  816ac8:	20803c16 	blt	r4,r2,816bbc <__subdf3+0x60c>
  816acc:	01000804 	movi	r4,32
  816ad0:	2089c83a 	sub	r4,r4,r2
  816ad4:	1912983a 	sll	r9,r3,r4
  816ad8:	308ed83a 	srl	r7,r6,r2
  816adc:	3108983a 	sll	r4,r6,r4
  816ae0:	1884d83a 	srl	r2,r3,r2
  816ae4:	49ceb03a 	or	r7,r9,r7
  816ae8:	2008c03a 	cmpne	r4,r4,zero
  816aec:	390eb03a 	or	r7,r7,r4
  816af0:	003f4706 	br	816810 <__alt_data_end+0xff816810>
  816af4:	2c48b03a 	or	r4,r5,r17
  816af8:	20003e26 	beq	r4,zero,816bf4 <__subdf3+0x644>
  816afc:	0084303a 	nor	r2,zero,r2
  816b00:	10003a1e 	bne	r2,zero,816bec <__subdf3+0x63c>
  816b04:	3463c83a 	sub	r17,r6,r17
  816b08:	194bc83a 	sub	r5,r3,r5
  816b0c:	344d803a 	cmpltu	r6,r6,r17
  816b10:	298bc83a 	sub	r5,r5,r6
  816b14:	5021883a 	mov	r16,r10
  816b18:	3825883a 	mov	r18,r7
  816b1c:	003f0406 	br	816730 <__alt_data_end+0xff816730>
  816b20:	1023883a 	mov	r17,r2
  816b24:	003f0706 	br	816744 <__alt_data_end+0xff816744>
  816b28:	0101ffc4 	movi	r4,2047
  816b2c:	813f331e 	bne	r16,r4,8167fc <__alt_data_end+0xff8167fc>
  816b30:	003ec206 	br	81663c <__alt_data_end+0xff81663c>
  816b34:	0027883a 	mov	r19,zero
  816b38:	003fb006 	br	8169fc <__alt_data_end+0xff8169fc>
  816b3c:	0005883a 	mov	r2,zero
  816b40:	003fbb06 	br	816a30 <__alt_data_end+0xff816a30>
  816b44:	2c44b03a 	or	r2,r5,r17
  816b48:	80008b1e 	bne	r16,zero,816d78 <__subdf3+0x7c8>
  816b4c:	1000b526 	beq	r2,zero,816e24 <__subdf3+0x874>
  816b50:	1984b03a 	or	r2,r3,r6
  816b54:	103eb926 	beq	r2,zero,81663c <__alt_data_end+0xff81663c>
  816b58:	3449883a 	add	r4,r6,r17
  816b5c:	2463803a 	cmpltu	r17,r4,r17
  816b60:	194b883a 	add	r5,r3,r5
  816b64:	2c4b883a 	add	r5,r5,r17
  816b68:	2880202c 	andhi	r2,r5,128
  816b6c:	2023883a 	mov	r17,r4
  816b70:	103f5c26 	beq	r2,zero,8168e4 <__alt_data_end+0xff8168e4>
  816b74:	00bfe034 	movhi	r2,65408
  816b78:	10bfffc4 	addi	r2,r2,-1
  816b7c:	4821883a 	mov	r16,r9
  816b80:	288a703a 	and	r5,r5,r2
  816b84:	003ead06 	br	81663c <__alt_data_end+0xff81663c>
  816b88:	2c44b03a 	or	r2,r5,r17
  816b8c:	8000291e 	bne	r16,zero,816c34 <__subdf3+0x684>
  816b90:	10004f1e 	bne	r2,zero,816cd0 <__subdf3+0x720>
  816b94:	1984b03a 	or	r2,r3,r6
  816b98:	10000426 	beq	r2,zero,816bac <__subdf3+0x5fc>
  816b9c:	180b883a 	mov	r5,r3
  816ba0:	3023883a 	mov	r17,r6
  816ba4:	3825883a 	mov	r18,r7
  816ba8:	003ea406 	br	81663c <__alt_data_end+0xff81663c>
  816bac:	0011883a 	mov	r8,zero
  816bb0:	000b883a 	mov	r5,zero
  816bb4:	0023883a 	mov	r17,zero
  816bb8:	003f0006 	br	8167bc <__alt_data_end+0xff8167bc>
  816bbc:	11fff804 	addi	r7,r2,-32
  816bc0:	19c8d83a 	srl	r4,r3,r7
  816bc4:	01c00804 	movi	r7,32
  816bc8:	11c07e26 	beq	r2,r7,816dc4 <__subdf3+0x814>
  816bcc:	01c01004 	movi	r7,64
  816bd0:	3885c83a 	sub	r2,r7,r2
  816bd4:	1884983a 	sll	r2,r3,r2
  816bd8:	118cb03a 	or	r6,r2,r6
  816bdc:	300ec03a 	cmpne	r7,r6,zero
  816be0:	390eb03a 	or	r7,r7,r4
  816be4:	0005883a 	mov	r2,zero
  816be8:	003f0906 	br	816810 <__alt_data_end+0xff816810>
  816bec:	0101ffc4 	movi	r4,2047
  816bf0:	513f991e 	bne	r10,r4,816a58 <__alt_data_end+0xff816a58>
  816bf4:	180b883a 	mov	r5,r3
  816bf8:	3023883a 	mov	r17,r6
  816bfc:	5021883a 	mov	r16,r10
  816c00:	3825883a 	mov	r18,r7
  816c04:	003e8d06 	br	81663c <__alt_data_end+0xff81663c>
  816c08:	80001a1e 	bne	r16,zero,816c74 <__subdf3+0x6c4>
  816c0c:	2c48b03a 	or	r4,r5,r17
  816c10:	20005526 	beq	r4,zero,816d68 <__subdf3+0x7b8>
  816c14:	0084303a 	nor	r2,zero,r2
  816c18:	1000511e 	bne	r2,zero,816d60 <__subdf3+0x7b0>
  816c1c:	89a3883a 	add	r17,r17,r6
  816c20:	194b883a 	add	r5,r3,r5
  816c24:	898d803a 	cmpltu	r6,r17,r6
  816c28:	298b883a 	add	r5,r5,r6
  816c2c:	5021883a 	mov	r16,r10
  816c30:	003efc06 	br	816824 <__alt_data_end+0xff816824>
  816c34:	1000341e 	bne	r2,zero,816d08 <__subdf3+0x758>
  816c38:	1984b03a 	or	r2,r3,r6
  816c3c:	10006f26 	beq	r2,zero,816dfc <__subdf3+0x84c>
  816c40:	180b883a 	mov	r5,r3
  816c44:	3023883a 	mov	r17,r6
  816c48:	3825883a 	mov	r18,r7
  816c4c:	0401ffc4 	movi	r16,2047
  816c50:	003e7a06 	br	81663c <__alt_data_end+0xff81663c>
  816c54:	2c62b03a 	or	r17,r5,r17
  816c58:	8822c03a 	cmpne	r17,r17,zero
  816c5c:	0005883a 	mov	r2,zero
  816c60:	003f8a06 	br	816a8c <__alt_data_end+0xff816a8c>
  816c64:	3821883a 	mov	r16,r7
  816c68:	000b883a 	mov	r5,zero
  816c6c:	0023883a 	mov	r17,zero
  816c70:	003ed206 	br	8167bc <__alt_data_end+0xff8167bc>
  816c74:	0101ffc4 	movi	r4,2047
  816c78:	51003b26 	beq	r10,r4,816d68 <__subdf3+0x7b8>
  816c7c:	0085c83a 	sub	r2,zero,r2
  816c80:	29402034 	orhi	r5,r5,128
  816c84:	01000e04 	movi	r4,56
  816c88:	20806216 	blt	r4,r2,816e14 <__subdf3+0x864>
  816c8c:	010007c4 	movi	r4,31
  816c90:	20806b16 	blt	r4,r2,816e40 <__subdf3+0x890>
  816c94:	01000804 	movi	r4,32
  816c98:	2089c83a 	sub	r4,r4,r2
  816c9c:	2912983a 	sll	r9,r5,r4
  816ca0:	888ed83a 	srl	r7,r17,r2
  816ca4:	8908983a 	sll	r4,r17,r4
  816ca8:	2884d83a 	srl	r2,r5,r2
  816cac:	49e2b03a 	or	r17,r9,r7
  816cb0:	2008c03a 	cmpne	r4,r4,zero
  816cb4:	8922b03a 	or	r17,r17,r4
  816cb8:	89a3883a 	add	r17,r17,r6
  816cbc:	10c5883a 	add	r2,r2,r3
  816cc0:	898d803a 	cmpltu	r6,r17,r6
  816cc4:	118b883a 	add	r5,r2,r6
  816cc8:	5021883a 	mov	r16,r10
  816ccc:	003ed506 	br	816824 <__alt_data_end+0xff816824>
  816cd0:	1984b03a 	or	r2,r3,r6
  816cd4:	103e5926 	beq	r2,zero,81663c <__alt_data_end+0xff81663c>
  816cd8:	8989c83a 	sub	r4,r17,r6
  816cdc:	8911803a 	cmpltu	r8,r17,r4
  816ce0:	28c5c83a 	sub	r2,r5,r3
  816ce4:	1205c83a 	sub	r2,r2,r8
  816ce8:	1200202c 	andhi	r8,r2,128
  816cec:	403ef926 	beq	r8,zero,8168d4 <__alt_data_end+0xff8168d4>
  816cf0:	3463c83a 	sub	r17,r6,r17
  816cf4:	194bc83a 	sub	r5,r3,r5
  816cf8:	344d803a 	cmpltu	r6,r6,r17
  816cfc:	298bc83a 	sub	r5,r5,r6
  816d00:	3825883a 	mov	r18,r7
  816d04:	003e4d06 	br	81663c <__alt_data_end+0xff81663c>
  816d08:	1984b03a 	or	r2,r3,r6
  816d0c:	10002b26 	beq	r2,zero,816dbc <__subdf3+0x80c>
  816d10:	2808d0fa 	srli	r4,r5,3
  816d14:	8822d0fa 	srli	r17,r17,3
  816d18:	280a977a 	slli	r5,r5,29
  816d1c:	2080022c 	andhi	r2,r4,8
  816d20:	2c62b03a 	or	r17,r5,r17
  816d24:	10000826 	beq	r2,zero,816d48 <__subdf3+0x798>
  816d28:	1810d0fa 	srli	r8,r3,3
  816d2c:	4080022c 	andhi	r2,r8,8
  816d30:	1000051e 	bne	r2,zero,816d48 <__subdf3+0x798>
  816d34:	300cd0fa 	srli	r6,r6,3
  816d38:	1804977a 	slli	r2,r3,29
  816d3c:	4009883a 	mov	r4,r8
  816d40:	3825883a 	mov	r18,r7
  816d44:	11a2b03a 	or	r17,r2,r6
  816d48:	880ad77a 	srli	r5,r17,29
  816d4c:	200890fa 	slli	r4,r4,3
  816d50:	882290fa 	slli	r17,r17,3
  816d54:	0401ffc4 	movi	r16,2047
  816d58:	290ab03a 	or	r5,r5,r4
  816d5c:	003e3706 	br	81663c <__alt_data_end+0xff81663c>
  816d60:	0101ffc4 	movi	r4,2047
  816d64:	513fc71e 	bne	r10,r4,816c84 <__alt_data_end+0xff816c84>
  816d68:	180b883a 	mov	r5,r3
  816d6c:	3023883a 	mov	r17,r6
  816d70:	5021883a 	mov	r16,r10
  816d74:	003e3106 	br	81663c <__alt_data_end+0xff81663c>
  816d78:	10002d26 	beq	r2,zero,816e30 <__subdf3+0x880>
  816d7c:	1984b03a 	or	r2,r3,r6
  816d80:	10000e26 	beq	r2,zero,816dbc <__subdf3+0x80c>
  816d84:	2808d0fa 	srli	r4,r5,3
  816d88:	8822d0fa 	srli	r17,r17,3
  816d8c:	280a977a 	slli	r5,r5,29
  816d90:	2080022c 	andhi	r2,r4,8
  816d94:	2c62b03a 	or	r17,r5,r17
  816d98:	103feb26 	beq	r2,zero,816d48 <__alt_data_end+0xff816d48>
  816d9c:	180ed0fa 	srli	r7,r3,3
  816da0:	3880022c 	andhi	r2,r7,8
  816da4:	103fe81e 	bne	r2,zero,816d48 <__alt_data_end+0xff816d48>
  816da8:	300cd0fa 	srli	r6,r6,3
  816dac:	1804977a 	slli	r2,r3,29
  816db0:	3809883a 	mov	r4,r7
  816db4:	11a2b03a 	or	r17,r2,r6
  816db8:	003fe306 	br	816d48 <__alt_data_end+0xff816d48>
  816dbc:	0401ffc4 	movi	r16,2047
  816dc0:	003e1e06 	br	81663c <__alt_data_end+0xff81663c>
  816dc4:	0005883a 	mov	r2,zero
  816dc8:	003f8306 	br	816bd8 <__alt_data_end+0xff816bd8>
  816dcc:	113ff804 	addi	r4,r2,-32
  816dd0:	02000804 	movi	r8,32
  816dd4:	2908d83a 	srl	r4,r5,r4
  816dd8:	12002526 	beq	r2,r8,816e70 <__subdf3+0x8c0>
  816ddc:	02001004 	movi	r8,64
  816de0:	4085c83a 	sub	r2,r8,r2
  816de4:	288a983a 	sll	r5,r5,r2
  816de8:	2c62b03a 	or	r17,r5,r17
  816dec:	8822c03a 	cmpne	r17,r17,zero
  816df0:	8922b03a 	or	r17,r17,r4
  816df4:	0005883a 	mov	r2,zero
  816df8:	003f2406 	br	816a8c <__alt_data_end+0xff816a8c>
  816dfc:	01402034 	movhi	r5,128
  816e00:	0011883a 	mov	r8,zero
  816e04:	297fffc4 	addi	r5,r5,-1
  816e08:	047ffe04 	movi	r17,-8
  816e0c:	0401ffc4 	movi	r16,2047
  816e10:	003e6a06 	br	8167bc <__alt_data_end+0xff8167bc>
  816e14:	2c62b03a 	or	r17,r5,r17
  816e18:	8822c03a 	cmpne	r17,r17,zero
  816e1c:	0005883a 	mov	r2,zero
  816e20:	003fa506 	br	816cb8 <__alt_data_end+0xff816cb8>
  816e24:	180b883a 	mov	r5,r3
  816e28:	3023883a 	mov	r17,r6
  816e2c:	003e0306 	br	81663c <__alt_data_end+0xff81663c>
  816e30:	180b883a 	mov	r5,r3
  816e34:	3023883a 	mov	r17,r6
  816e38:	0401ffc4 	movi	r16,2047
  816e3c:	003dff06 	br	81663c <__alt_data_end+0xff81663c>
  816e40:	113ff804 	addi	r4,r2,-32
  816e44:	01c00804 	movi	r7,32
  816e48:	2908d83a 	srl	r4,r5,r4
  816e4c:	11c00a26 	beq	r2,r7,816e78 <__subdf3+0x8c8>
  816e50:	01c01004 	movi	r7,64
  816e54:	3885c83a 	sub	r2,r7,r2
  816e58:	288a983a 	sll	r5,r5,r2
  816e5c:	2c62b03a 	or	r17,r5,r17
  816e60:	8822c03a 	cmpne	r17,r17,zero
  816e64:	8922b03a 	or	r17,r17,r4
  816e68:	0005883a 	mov	r2,zero
  816e6c:	003f9206 	br	816cb8 <__alt_data_end+0xff816cb8>
  816e70:	000b883a 	mov	r5,zero
  816e74:	003fdc06 	br	816de8 <__alt_data_end+0xff816de8>
  816e78:	000b883a 	mov	r5,zero
  816e7c:	003ff706 	br	816e5c <__alt_data_end+0xff816e5c>

00816e80 <__fixdfsi>:
  816e80:	2806d53a 	srli	r3,r5,20
  816e84:	00800434 	movhi	r2,16
  816e88:	10bfffc4 	addi	r2,r2,-1
  816e8c:	18c1ffcc 	andi	r3,r3,2047
  816e90:	0180ff84 	movi	r6,1022
  816e94:	2884703a 	and	r2,r5,r2
  816e98:	280ad7fa 	srli	r5,r5,31
  816e9c:	30c0130e 	bge	r6,r3,816eec <__fixdfsi+0x6c>
  816ea0:	01810744 	movi	r6,1053
  816ea4:	30c00d16 	blt	r6,r3,816edc <__fixdfsi+0x5c>
  816ea8:	01810cc4 	movi	r6,1075
  816eac:	30cdc83a 	sub	r6,r6,r3
  816eb0:	01c007c4 	movi	r7,31
  816eb4:	10800434 	orhi	r2,r2,16
  816eb8:	39800e0e 	bge	r7,r6,816ef4 <__fixdfsi+0x74>
  816ebc:	010104c4 	movi	r4,1043
  816ec0:	20c7c83a 	sub	r3,r4,r3
  816ec4:	10c6d83a 	srl	r3,r2,r3
  816ec8:	29403fcc 	andi	r5,r5,255
  816ecc:	0145c83a 	sub	r2,zero,r5
  816ed0:	1884f03a 	xor	r2,r3,r2
  816ed4:	1145883a 	add	r2,r2,r5
  816ed8:	f800283a 	ret
  816edc:	00a00034 	movhi	r2,32768
  816ee0:	10bfffc4 	addi	r2,r2,-1
  816ee4:	2885883a 	add	r2,r5,r2
  816ee8:	f800283a 	ret
  816eec:	0005883a 	mov	r2,zero
  816ef0:	f800283a 	ret
  816ef4:	18fefb44 	addi	r3,r3,-1043
  816ef8:	2188d83a 	srl	r4,r4,r6
  816efc:	10c6983a 	sll	r3,r2,r3
  816f00:	20c6b03a 	or	r3,r4,r3
  816f04:	003ff006 	br	816ec8 <__alt_data_end+0xff816ec8>

00816f08 <__floatsidf>:
  816f08:	defffd04 	addi	sp,sp,-12
  816f0c:	dc400115 	stw	r17,4(sp)
  816f10:	dfc00215 	stw	ra,8(sp)
  816f14:	dc000015 	stw	r16,0(sp)
  816f18:	2023883a 	mov	r17,r4
  816f1c:	20001426 	beq	r4,zero,816f70 <__floatsidf+0x68>
  816f20:	2020d7fa 	srli	r16,r4,31
  816f24:	80000126 	beq	r16,zero,816f2c <__floatsidf+0x24>
  816f28:	0123c83a 	sub	r17,zero,r4
  816f2c:	8809883a 	mov	r4,r17
  816f30:	08172140 	call	817214 <__clzsi2>
  816f34:	01410784 	movi	r5,1054
  816f38:	00c00284 	movi	r3,10
  816f3c:	288bc83a 	sub	r5,r5,r2
  816f40:	18801c16 	blt	r3,r2,816fb4 <__floatsidf+0xac>
  816f44:	00c002c4 	movi	r3,11
  816f48:	1887c83a 	sub	r3,r3,r2
  816f4c:	88c8d83a 	srl	r4,r17,r3
  816f50:	00c00434 	movhi	r3,16
  816f54:	18ffffc4 	addi	r3,r3,-1
  816f58:	10800544 	addi	r2,r2,21
  816f5c:	20c8703a 	and	r4,r4,r3
  816f60:	8884983a 	sll	r2,r17,r2
  816f64:	28c1ffcc 	andi	r3,r5,2047
  816f68:	800d883a 	mov	r6,r16
  816f6c:	00000406 	br	816f80 <__floatsidf+0x78>
  816f70:	000d883a 	mov	r6,zero
  816f74:	0007883a 	mov	r3,zero
  816f78:	0009883a 	mov	r4,zero
  816f7c:	0005883a 	mov	r2,zero
  816f80:	180a953a 	slli	r5,r3,20
  816f84:	31803fcc 	andi	r6,r6,255
  816f88:	00c00434 	movhi	r3,16
  816f8c:	300c97fa 	slli	r6,r6,31
  816f90:	18ffffc4 	addi	r3,r3,-1
  816f94:	20c6703a 	and	r3,r4,r3
  816f98:	1946b03a 	or	r3,r3,r5
  816f9c:	1986b03a 	or	r3,r3,r6
  816fa0:	dfc00217 	ldw	ra,8(sp)
  816fa4:	dc400117 	ldw	r17,4(sp)
  816fa8:	dc000017 	ldw	r16,0(sp)
  816fac:	dec00304 	addi	sp,sp,12
  816fb0:	f800283a 	ret
  816fb4:	10fffd44 	addi	r3,r2,-11
  816fb8:	88c8983a 	sll	r4,r17,r3
  816fbc:	00800434 	movhi	r2,16
  816fc0:	10bfffc4 	addi	r2,r2,-1
  816fc4:	2088703a 	and	r4,r4,r2
  816fc8:	28c1ffcc 	andi	r3,r5,2047
  816fcc:	800d883a 	mov	r6,r16
  816fd0:	0005883a 	mov	r2,zero
  816fd4:	003fea06 	br	816f80 <__alt_data_end+0xff816f80>

00816fd8 <__floatunsidf>:
  816fd8:	defffe04 	addi	sp,sp,-8
  816fdc:	dc000015 	stw	r16,0(sp)
  816fe0:	dfc00115 	stw	ra,4(sp)
  816fe4:	2021883a 	mov	r16,r4
  816fe8:	20001026 	beq	r4,zero,81702c <__floatunsidf+0x54>
  816fec:	08172140 	call	817214 <__clzsi2>
  816ff0:	01410784 	movi	r5,1054
  816ff4:	100d883a 	mov	r6,r2
  816ff8:	288bc83a 	sub	r5,r5,r2
  816ffc:	00800284 	movi	r2,10
  817000:	11801616 	blt	r2,r6,81705c <__floatunsidf+0x84>
  817004:	008002c4 	movi	r2,11
  817008:	1185c83a 	sub	r2,r2,r6
  81700c:	8084d83a 	srl	r2,r16,r2
  817010:	00c00434 	movhi	r3,16
  817014:	31c00544 	addi	r7,r6,21
  817018:	18ffffc4 	addi	r3,r3,-1
  81701c:	81e0983a 	sll	r16,r16,r7
  817020:	10cc703a 	and	r6,r2,r3
  817024:	2941ffcc 	andi	r5,r5,2047
  817028:	00000206 	br	817034 <__floatunsidf+0x5c>
  81702c:	000b883a 	mov	r5,zero
  817030:	000d883a 	mov	r6,zero
  817034:	280a953a 	slli	r5,r5,20
  817038:	00c00434 	movhi	r3,16
  81703c:	18ffffc4 	addi	r3,r3,-1
  817040:	30c6703a 	and	r3,r6,r3
  817044:	8005883a 	mov	r2,r16
  817048:	1946b03a 	or	r3,r3,r5
  81704c:	dfc00117 	ldw	ra,4(sp)
  817050:	dc000017 	ldw	r16,0(sp)
  817054:	dec00204 	addi	sp,sp,8
  817058:	f800283a 	ret
  81705c:	31bffd44 	addi	r6,r6,-11
  817060:	818c983a 	sll	r6,r16,r6
  817064:	00800434 	movhi	r2,16
  817068:	10bfffc4 	addi	r2,r2,-1
  81706c:	2941ffcc 	andi	r5,r5,2047
  817070:	0021883a 	mov	r16,zero
  817074:	308c703a 	and	r6,r6,r2
  817078:	003fee06 	br	817034 <__alt_data_end+0xff817034>

0081707c <__truncdfsf2>:
  81707c:	2810d53a 	srli	r8,r5,20
  817080:	01c00434 	movhi	r7,16
  817084:	39ffffc4 	addi	r7,r7,-1
  817088:	29ce703a 	and	r7,r5,r7
  81708c:	380e90fa 	slli	r7,r7,3
  817090:	4201ffcc 	andi	r8,r8,2047
  817094:	200cd77a 	srli	r6,r4,29
  817098:	42400044 	addi	r9,r8,1
  81709c:	4a41ffcc 	andi	r9,r9,2047
  8170a0:	00800044 	movi	r2,1
  8170a4:	398cb03a 	or	r6,r7,r6
  8170a8:	280ad7fa 	srli	r5,r5,31
  8170ac:	200e90fa 	slli	r7,r4,3
  8170b0:	1240230e 	bge	r2,r9,817140 <__truncdfsf2+0xc4>
  8170b4:	40ff2004 	addi	r3,r8,-896
  8170b8:	00803f84 	movi	r2,254
  8170bc:	10c01516 	blt	r2,r3,817114 <__truncdfsf2+0x98>
  8170c0:	00c02d0e 	bge	zero,r3,817178 <__truncdfsf2+0xfc>
  8170c4:	200891ba 	slli	r4,r4,6
  8170c8:	300c90fa 	slli	r6,r6,3
  8170cc:	380ed77a 	srli	r7,r7,29
  8170d0:	2008c03a 	cmpne	r4,r4,zero
  8170d4:	310cb03a 	or	r6,r6,r4
  8170d8:	31ccb03a 	or	r6,r6,r7
  8170dc:	308001cc 	andi	r2,r6,7
  8170e0:	10000426 	beq	r2,zero,8170f4 <__truncdfsf2+0x78>
  8170e4:	310003cc 	andi	r4,r6,15
  8170e8:	00800104 	movi	r2,4
  8170ec:	20800126 	beq	r4,r2,8170f4 <__truncdfsf2+0x78>
  8170f0:	31800104 	addi	r6,r6,4
  8170f4:	3081002c 	andhi	r2,r6,1024
  8170f8:	10002326 	beq	r2,zero,817188 <__truncdfsf2+0x10c>
  8170fc:	18c00044 	addi	r3,r3,1
  817100:	00803fc4 	movi	r2,255
  817104:	18800326 	beq	r3,r2,817114 <__truncdfsf2+0x98>
  817108:	300c91ba 	slli	r6,r6,6
  81710c:	300cd27a 	srli	r6,r6,9
  817110:	00000206 	br	81711c <__truncdfsf2+0xa0>
  817114:	00ffffc4 	movi	r3,-1
  817118:	000d883a 	mov	r6,zero
  81711c:	18c03fcc 	andi	r3,r3,255
  817120:	180895fa 	slli	r4,r3,23
  817124:	00c02034 	movhi	r3,128
  817128:	280a97fa 	slli	r5,r5,31
  81712c:	18ffffc4 	addi	r3,r3,-1
  817130:	30c6703a 	and	r3,r6,r3
  817134:	1906b03a 	or	r3,r3,r4
  817138:	1944b03a 	or	r2,r3,r5
  81713c:	f800283a 	ret
  817140:	4000071e 	bne	r8,zero,817160 <__truncdfsf2+0xe4>
  817144:	31ccb03a 	or	r6,r6,r7
  817148:	30000d1e 	bne	r6,zero,817180 <__truncdfsf2+0x104>
  81714c:	0007883a 	mov	r3,zero
  817150:	00802034 	movhi	r2,128
  817154:	10bfffc4 	addi	r2,r2,-1
  817158:	308c703a 	and	r6,r6,r2
  81715c:	003fef06 	br	81711c <__alt_data_end+0xff81711c>
  817160:	31c8b03a 	or	r4,r6,r7
  817164:	203feb26 	beq	r4,zero,817114 <__alt_data_end+0xff817114>
  817168:	300c90fa 	slli	r6,r6,3
  81716c:	00c03fc4 	movi	r3,255
  817170:	31808034 	orhi	r6,r6,512
  817174:	003fd906 	br	8170dc <__alt_data_end+0xff8170dc>
  817178:	00bffa44 	movi	r2,-23
  81717c:	1880090e 	bge	r3,r2,8171a4 <__truncdfsf2+0x128>
  817180:	01800144 	movi	r6,5
  817184:	0007883a 	mov	r3,zero
  817188:	00803fc4 	movi	r2,255
  81718c:	300cd0fa 	srli	r6,r6,3
  817190:	18bfef1e 	bne	r3,r2,817150 <__alt_data_end+0xff817150>
  817194:	303fdf26 	beq	r6,zero,817114 <__alt_data_end+0xff817114>
  817198:	31801034 	orhi	r6,r6,64
  81719c:	00ffffc4 	movi	r3,-1
  8171a0:	003feb06 	br	817150 <__alt_data_end+0xff817150>
  8171a4:	0080e784 	movi	r2,926
  8171a8:	1205c83a 	sub	r2,r2,r8
  8171ac:	00c007c4 	movi	r3,31
  8171b0:	31802034 	orhi	r6,r6,128
  8171b4:	18800916 	blt	r3,r2,8171dc <__truncdfsf2+0x160>
  8171b8:	423f2084 	addi	r8,r8,-894
  8171bc:	3a06983a 	sll	r3,r7,r8
  8171c0:	3210983a 	sll	r8,r6,r8
  8171c4:	388ed83a 	srl	r7,r7,r2
  8171c8:	180cc03a 	cmpne	r6,r3,zero
  8171cc:	418cb03a 	or	r6,r8,r6
  8171d0:	31ccb03a 	or	r6,r6,r7
  8171d4:	0007883a 	mov	r3,zero
  8171d8:	003fc006 	br	8170dc <__alt_data_end+0xff8170dc>
  8171dc:	00c0df84 	movi	r3,894
  8171e0:	1a07c83a 	sub	r3,r3,r8
  8171e4:	01000804 	movi	r4,32
  8171e8:	30c6d83a 	srl	r3,r6,r3
  8171ec:	11000726 	beq	r2,r4,81720c <__truncdfsf2+0x190>
  8171f0:	423f2884 	addi	r8,r8,-862
  8171f4:	3210983a 	sll	r8,r6,r8
  8171f8:	41ceb03a 	or	r7,r8,r7
  8171fc:	380ec03a 	cmpne	r7,r7,zero
  817200:	38ccb03a 	or	r6,r7,r3
  817204:	0007883a 	mov	r3,zero
  817208:	003fb406 	br	8170dc <__alt_data_end+0xff8170dc>
  81720c:	0011883a 	mov	r8,zero
  817210:	003ff906 	br	8171f8 <__alt_data_end+0xff8171f8>

00817214 <__clzsi2>:
  817214:	00bfffd4 	movui	r2,65535
  817218:	11000b36 	bltu	r2,r4,817248 <__clzsi2+0x34>
  81721c:	00803fc4 	movi	r2,255
  817220:	1100122e 	bgeu	r2,r4,81726c <__clzsi2+0x58>
  817224:	00c00204 	movi	r3,8
  817228:	01400604 	movi	r5,24
  81722c:	20c8d83a 	srl	r4,r4,r3
  817230:	008020b4 	movhi	r2,130
  817234:	10af4284 	addi	r2,r2,-17142
  817238:	1109883a 	add	r4,r2,r4
  81723c:	20800003 	ldbu	r2,0(r4)
  817240:	2885c83a 	sub	r2,r5,r2
  817244:	f800283a 	ret
  817248:	00804034 	movhi	r2,256
  81724c:	10bfffc4 	addi	r2,r2,-1
  817250:	11000336 	bltu	r2,r4,817260 <__clzsi2+0x4c>
  817254:	00c00404 	movi	r3,16
  817258:	180b883a 	mov	r5,r3
  81725c:	003ff306 	br	81722c <__alt_data_end+0xff81722c>
  817260:	00c00604 	movi	r3,24
  817264:	01400204 	movi	r5,8
  817268:	003ff006 	br	81722c <__alt_data_end+0xff81722c>
  81726c:	0007883a 	mov	r3,zero
  817270:	01400804 	movi	r5,32
  817274:	003fed06 	br	81722c <__alt_data_end+0xff81722c>

00817278 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  817278:	defffe04 	addi	sp,sp,-8
  81727c:	dfc00115 	stw	ra,4(sp)
  817280:	df000015 	stw	fp,0(sp)
  817284:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  817288:	008020b4 	movhi	r2,130
  81728c:	10b6ee04 	addi	r2,r2,-9288
  817290:	10800017 	ldw	r2,0(r2)
  817294:	10000526 	beq	r2,zero,8172ac <alt_get_errno+0x34>
  817298:	008020b4 	movhi	r2,130
  81729c:	10b6ee04 	addi	r2,r2,-9288
  8172a0:	10800017 	ldw	r2,0(r2)
  8172a4:	103ee83a 	callr	r2
  8172a8:	00000206 	br	8172b4 <alt_get_errno+0x3c>
  8172ac:	008020b4 	movhi	r2,130
  8172b0:	10be4d04 	addi	r2,r2,-1740
}
  8172b4:	e037883a 	mov	sp,fp
  8172b8:	dfc00117 	ldw	ra,4(sp)
  8172bc:	df000017 	ldw	fp,0(sp)
  8172c0:	dec00204 	addi	sp,sp,8
  8172c4:	f800283a 	ret

008172c8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  8172c8:	defffb04 	addi	sp,sp,-20
  8172cc:	dfc00415 	stw	ra,16(sp)
  8172d0:	df000315 	stw	fp,12(sp)
  8172d4:	df000304 	addi	fp,sp,12
  8172d8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  8172dc:	e0bfff17 	ldw	r2,-4(fp)
  8172e0:	10000616 	blt	r2,zero,8172fc <close+0x34>
  8172e4:	e0bfff17 	ldw	r2,-4(fp)
  8172e8:	10c00324 	muli	r3,r2,12
  8172ec:	008020b4 	movhi	r2,130
  8172f0:	10b1d804 	addi	r2,r2,-14496
  8172f4:	1885883a 	add	r2,r3,r2
  8172f8:	00000106 	br	817300 <close+0x38>
  8172fc:	0005883a 	mov	r2,zero
  817300:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  817304:	e0bffd17 	ldw	r2,-12(fp)
  817308:	10001926 	beq	r2,zero,817370 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  81730c:	e0bffd17 	ldw	r2,-12(fp)
  817310:	10800017 	ldw	r2,0(r2)
  817314:	10800417 	ldw	r2,16(r2)
  817318:	10000626 	beq	r2,zero,817334 <close+0x6c>
  81731c:	e0bffd17 	ldw	r2,-12(fp)
  817320:	10800017 	ldw	r2,0(r2)
  817324:	10800417 	ldw	r2,16(r2)
  817328:	e13ffd17 	ldw	r4,-12(fp)
  81732c:	103ee83a 	callr	r2
  817330:	00000106 	br	817338 <close+0x70>
  817334:	0005883a 	mov	r2,zero
  817338:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  81733c:	e13fff17 	ldw	r4,-4(fp)
  817340:	0817c380 	call	817c38 <alt_release_fd>
    if (rval < 0)
  817344:	e0bffe17 	ldw	r2,-8(fp)
  817348:	1000070e 	bge	r2,zero,817368 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  81734c:	08172780 	call	817278 <alt_get_errno>
  817350:	1007883a 	mov	r3,r2
  817354:	e0bffe17 	ldw	r2,-8(fp)
  817358:	0085c83a 	sub	r2,zero,r2
  81735c:	18800015 	stw	r2,0(r3)
      return -1;
  817360:	00bfffc4 	movi	r2,-1
  817364:	00000706 	br	817384 <close+0xbc>
    }
    return 0;
  817368:	0005883a 	mov	r2,zero
  81736c:	00000506 	br	817384 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  817370:	08172780 	call	817278 <alt_get_errno>
  817374:	1007883a 	mov	r3,r2
  817378:	00801444 	movi	r2,81
  81737c:	18800015 	stw	r2,0(r3)
    return -1;
  817380:	00bfffc4 	movi	r2,-1
  }
}
  817384:	e037883a 	mov	sp,fp
  817388:	dfc00117 	ldw	ra,4(sp)
  81738c:	df000017 	ldw	fp,0(sp)
  817390:	dec00204 	addi	sp,sp,8
  817394:	f800283a 	ret

00817398 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  817398:	defffc04 	addi	sp,sp,-16
  81739c:	df000315 	stw	fp,12(sp)
  8173a0:	df000304 	addi	fp,sp,12
  8173a4:	e13ffd15 	stw	r4,-12(fp)
  8173a8:	e17ffe15 	stw	r5,-8(fp)
  8173ac:	e1bfff15 	stw	r6,-4(fp)
  return len;
  8173b0:	e0bfff17 	ldw	r2,-4(fp)
}
  8173b4:	e037883a 	mov	sp,fp
  8173b8:	df000017 	ldw	fp,0(sp)
  8173bc:	dec00104 	addi	sp,sp,4
  8173c0:	f800283a 	ret

008173c4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8173c4:	defffe04 	addi	sp,sp,-8
  8173c8:	dfc00115 	stw	ra,4(sp)
  8173cc:	df000015 	stw	fp,0(sp)
  8173d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8173d4:	008020b4 	movhi	r2,130
  8173d8:	10b6ee04 	addi	r2,r2,-9288
  8173dc:	10800017 	ldw	r2,0(r2)
  8173e0:	10000526 	beq	r2,zero,8173f8 <alt_get_errno+0x34>
  8173e4:	008020b4 	movhi	r2,130
  8173e8:	10b6ee04 	addi	r2,r2,-9288
  8173ec:	10800017 	ldw	r2,0(r2)
  8173f0:	103ee83a 	callr	r2
  8173f4:	00000206 	br	817400 <alt_get_errno+0x3c>
  8173f8:	008020b4 	movhi	r2,130
  8173fc:	10be4d04 	addi	r2,r2,-1740
}
  817400:	e037883a 	mov	sp,fp
  817404:	dfc00117 	ldw	ra,4(sp)
  817408:	df000017 	ldw	fp,0(sp)
  81740c:	dec00204 	addi	sp,sp,8
  817410:	f800283a 	ret

00817414 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  817414:	defffb04 	addi	sp,sp,-20
  817418:	dfc00415 	stw	ra,16(sp)
  81741c:	df000315 	stw	fp,12(sp)
  817420:	df000304 	addi	fp,sp,12
  817424:	e13ffe15 	stw	r4,-8(fp)
  817428:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81742c:	e0bffe17 	ldw	r2,-8(fp)
  817430:	10000616 	blt	r2,zero,81744c <fstat+0x38>
  817434:	e0bffe17 	ldw	r2,-8(fp)
  817438:	10c00324 	muli	r3,r2,12
  81743c:	008020b4 	movhi	r2,130
  817440:	10b1d804 	addi	r2,r2,-14496
  817444:	1885883a 	add	r2,r3,r2
  817448:	00000106 	br	817450 <fstat+0x3c>
  81744c:	0005883a 	mov	r2,zero
  817450:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  817454:	e0bffd17 	ldw	r2,-12(fp)
  817458:	10001026 	beq	r2,zero,81749c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  81745c:	e0bffd17 	ldw	r2,-12(fp)
  817460:	10800017 	ldw	r2,0(r2)
  817464:	10800817 	ldw	r2,32(r2)
  817468:	10000726 	beq	r2,zero,817488 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  81746c:	e0bffd17 	ldw	r2,-12(fp)
  817470:	10800017 	ldw	r2,0(r2)
  817474:	10800817 	ldw	r2,32(r2)
  817478:	e13ffd17 	ldw	r4,-12(fp)
  81747c:	e17fff17 	ldw	r5,-4(fp)
  817480:	103ee83a 	callr	r2
  817484:	00000a06 	br	8174b0 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  817488:	e0bfff17 	ldw	r2,-4(fp)
  81748c:	00c80004 	movi	r3,8192
  817490:	10c00115 	stw	r3,4(r2)
      return 0;
  817494:	0005883a 	mov	r2,zero
  817498:	00000506 	br	8174b0 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  81749c:	08173c40 	call	8173c4 <alt_get_errno>
  8174a0:	1007883a 	mov	r3,r2
  8174a4:	00801444 	movi	r2,81
  8174a8:	18800015 	stw	r2,0(r3)
    return -1;
  8174ac:	00bfffc4 	movi	r2,-1
  }
}
  8174b0:	e037883a 	mov	sp,fp
  8174b4:	dfc00117 	ldw	ra,4(sp)
  8174b8:	df000017 	ldw	fp,0(sp)
  8174bc:	dec00204 	addi	sp,sp,8
  8174c0:	f800283a 	ret

008174c4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8174c4:	defffe04 	addi	sp,sp,-8
  8174c8:	dfc00115 	stw	ra,4(sp)
  8174cc:	df000015 	stw	fp,0(sp)
  8174d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8174d4:	008020b4 	movhi	r2,130
  8174d8:	10b6ee04 	addi	r2,r2,-9288
  8174dc:	10800017 	ldw	r2,0(r2)
  8174e0:	10000526 	beq	r2,zero,8174f8 <alt_get_errno+0x34>
  8174e4:	008020b4 	movhi	r2,130
  8174e8:	10b6ee04 	addi	r2,r2,-9288
  8174ec:	10800017 	ldw	r2,0(r2)
  8174f0:	103ee83a 	callr	r2
  8174f4:	00000206 	br	817500 <alt_get_errno+0x3c>
  8174f8:	008020b4 	movhi	r2,130
  8174fc:	10be4d04 	addi	r2,r2,-1740
}
  817500:	e037883a 	mov	sp,fp
  817504:	dfc00117 	ldw	ra,4(sp)
  817508:	df000017 	ldw	fp,0(sp)
  81750c:	dec00204 	addi	sp,sp,8
  817510:	f800283a 	ret

00817514 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  817514:	deffed04 	addi	sp,sp,-76
  817518:	dfc01215 	stw	ra,72(sp)
  81751c:	df001115 	stw	fp,68(sp)
  817520:	df001104 	addi	fp,sp,68
  817524:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  817528:	e0bfff17 	ldw	r2,-4(fp)
  81752c:	10000616 	blt	r2,zero,817548 <isatty+0x34>
  817530:	e0bfff17 	ldw	r2,-4(fp)
  817534:	10c00324 	muli	r3,r2,12
  817538:	008020b4 	movhi	r2,130
  81753c:	10b1d804 	addi	r2,r2,-14496
  817540:	1885883a 	add	r2,r3,r2
  817544:	00000106 	br	81754c <isatty+0x38>
  817548:	0005883a 	mov	r2,zero
  81754c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  817550:	e0bfef17 	ldw	r2,-68(fp)
  817554:	10000e26 	beq	r2,zero,817590 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  817558:	e0bfef17 	ldw	r2,-68(fp)
  81755c:	10800017 	ldw	r2,0(r2)
  817560:	10800817 	ldw	r2,32(r2)
  817564:	1000021e 	bne	r2,zero,817570 <isatty+0x5c>
    {
      return 1;
  817568:	00800044 	movi	r2,1
  81756c:	00000d06 	br	8175a4 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  817570:	e0bff004 	addi	r2,fp,-64
  817574:	e13fff17 	ldw	r4,-4(fp)
  817578:	100b883a 	mov	r5,r2
  81757c:	08174140 	call	817414 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  817580:	e0bff117 	ldw	r2,-60(fp)
  817584:	10880020 	cmpeqi	r2,r2,8192
  817588:	10803fcc 	andi	r2,r2,255
  81758c:	00000506 	br	8175a4 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  817590:	08174c40 	call	8174c4 <alt_get_errno>
  817594:	1007883a 	mov	r3,r2
  817598:	00801444 	movi	r2,81
  81759c:	18800015 	stw	r2,0(r3)
    return 0;
  8175a0:	0005883a 	mov	r2,zero
  }
}
  8175a4:	e037883a 	mov	sp,fp
  8175a8:	dfc00117 	ldw	ra,4(sp)
  8175ac:	df000017 	ldw	fp,0(sp)
  8175b0:	dec00204 	addi	sp,sp,8
  8175b4:	f800283a 	ret

008175b8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  8175b8:	defffc04 	addi	sp,sp,-16
  8175bc:	df000315 	stw	fp,12(sp)
  8175c0:	df000304 	addi	fp,sp,12
  8175c4:	e13ffd15 	stw	r4,-12(fp)
  8175c8:	e17ffe15 	stw	r5,-8(fp)
  8175cc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  8175d0:	e0fffe17 	ldw	r3,-8(fp)
  8175d4:	e0bffd17 	ldw	r2,-12(fp)
  8175d8:	18800c26 	beq	r3,r2,81760c <alt_load_section+0x54>
  {
    while( to != end )
  8175dc:	00000806 	br	817600 <alt_load_section+0x48>
    {
      *to++ = *from++;
  8175e0:	e0bffe17 	ldw	r2,-8(fp)
  8175e4:	10c00104 	addi	r3,r2,4
  8175e8:	e0fffe15 	stw	r3,-8(fp)
  8175ec:	e0fffd17 	ldw	r3,-12(fp)
  8175f0:	19000104 	addi	r4,r3,4
  8175f4:	e13ffd15 	stw	r4,-12(fp)
  8175f8:	18c00017 	ldw	r3,0(r3)
  8175fc:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  817600:	e0fffe17 	ldw	r3,-8(fp)
  817604:	e0bfff17 	ldw	r2,-4(fp)
  817608:	18bff51e 	bne	r3,r2,8175e0 <__alt_data_end+0xff8175e0>
    {
      *to++ = *from++;
    }
  }
}
  81760c:	e037883a 	mov	sp,fp
  817610:	df000017 	ldw	fp,0(sp)
  817614:	dec00104 	addi	sp,sp,4
  817618:	f800283a 	ret

0081761c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  81761c:	defffe04 	addi	sp,sp,-8
  817620:	dfc00115 	stw	ra,4(sp)
  817624:	df000015 	stw	fp,0(sp)
  817628:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  81762c:	010020b4 	movhi	r4,130
  817630:	2136f404 	addi	r4,r4,-9264
  817634:	014020b4 	movhi	r5,130
  817638:	296fa104 	addi	r5,r5,-16764
  81763c:	018020b4 	movhi	r6,130
  817640:	31b6f404 	addi	r6,r6,-9264
  817644:	08175b80 	call	8175b8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  817648:	01002034 	movhi	r4,128
  81764c:	21000804 	addi	r4,r4,32
  817650:	01402034 	movhi	r5,128
  817654:	29400804 	addi	r5,r5,32
  817658:	01802034 	movhi	r6,128
  81765c:	31809104 	addi	r6,r6,580
  817660:	08175b80 	call	8175b8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  817664:	010020b4 	movhi	r4,130
  817668:	212cd504 	addi	r4,r4,-19628
  81766c:	014020b4 	movhi	r5,130
  817670:	296cd504 	addi	r5,r5,-19628
  817674:	018020b4 	movhi	r6,130
  817678:	31afa104 	addi	r6,r6,-16764
  81767c:	08175b80 	call	8175b8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  817680:	081a56c0 	call	81a56c <alt_dcache_flush_all>
  alt_icache_flush_all();
  817684:	081a9b40 	call	81a9b4 <alt_icache_flush_all>
}
  817688:	e037883a 	mov	sp,fp
  81768c:	dfc00117 	ldw	ra,4(sp)
  817690:	df000017 	ldw	fp,0(sp)
  817694:	dec00204 	addi	sp,sp,8
  817698:	f800283a 	ret

0081769c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81769c:	defffe04 	addi	sp,sp,-8
  8176a0:	dfc00115 	stw	ra,4(sp)
  8176a4:	df000015 	stw	fp,0(sp)
  8176a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8176ac:	008020b4 	movhi	r2,130
  8176b0:	10b6ee04 	addi	r2,r2,-9288
  8176b4:	10800017 	ldw	r2,0(r2)
  8176b8:	10000526 	beq	r2,zero,8176d0 <alt_get_errno+0x34>
  8176bc:	008020b4 	movhi	r2,130
  8176c0:	10b6ee04 	addi	r2,r2,-9288
  8176c4:	10800017 	ldw	r2,0(r2)
  8176c8:	103ee83a 	callr	r2
  8176cc:	00000206 	br	8176d8 <alt_get_errno+0x3c>
  8176d0:	008020b4 	movhi	r2,130
  8176d4:	10be4d04 	addi	r2,r2,-1740
}
  8176d8:	e037883a 	mov	sp,fp
  8176dc:	dfc00117 	ldw	ra,4(sp)
  8176e0:	df000017 	ldw	fp,0(sp)
  8176e4:	dec00204 	addi	sp,sp,8
  8176e8:	f800283a 	ret

008176ec <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  8176ec:	defff904 	addi	sp,sp,-28
  8176f0:	dfc00615 	stw	ra,24(sp)
  8176f4:	df000515 	stw	fp,20(sp)
  8176f8:	df000504 	addi	fp,sp,20
  8176fc:	e13ffd15 	stw	r4,-12(fp)
  817700:	e17ffe15 	stw	r5,-8(fp)
  817704:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  817708:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81770c:	e0bffd17 	ldw	r2,-12(fp)
  817710:	10000616 	blt	r2,zero,81772c <lseek+0x40>
  817714:	e0bffd17 	ldw	r2,-12(fp)
  817718:	10c00324 	muli	r3,r2,12
  81771c:	008020b4 	movhi	r2,130
  817720:	10b1d804 	addi	r2,r2,-14496
  817724:	1885883a 	add	r2,r3,r2
  817728:	00000106 	br	817730 <lseek+0x44>
  81772c:	0005883a 	mov	r2,zero
  817730:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  817734:	e0bffc17 	ldw	r2,-16(fp)
  817738:	10001026 	beq	r2,zero,81777c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  81773c:	e0bffc17 	ldw	r2,-16(fp)
  817740:	10800017 	ldw	r2,0(r2)
  817744:	10800717 	ldw	r2,28(r2)
  817748:	10000926 	beq	r2,zero,817770 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  81774c:	e0bffc17 	ldw	r2,-16(fp)
  817750:	10800017 	ldw	r2,0(r2)
  817754:	10800717 	ldw	r2,28(r2)
  817758:	e13ffc17 	ldw	r4,-16(fp)
  81775c:	e17ffe17 	ldw	r5,-8(fp)
  817760:	e1bfff17 	ldw	r6,-4(fp)
  817764:	103ee83a 	callr	r2
  817768:	e0bffb15 	stw	r2,-20(fp)
  81776c:	00000506 	br	817784 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  817770:	00bfde84 	movi	r2,-134
  817774:	e0bffb15 	stw	r2,-20(fp)
  817778:	00000206 	br	817784 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  81777c:	00bfebc4 	movi	r2,-81
  817780:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  817784:	e0bffb17 	ldw	r2,-20(fp)
  817788:	1000070e 	bge	r2,zero,8177a8 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  81778c:	081769c0 	call	81769c <alt_get_errno>
  817790:	1007883a 	mov	r3,r2
  817794:	e0bffb17 	ldw	r2,-20(fp)
  817798:	0085c83a 	sub	r2,zero,r2
  81779c:	18800015 	stw	r2,0(r3)
    rc = -1;
  8177a0:	00bfffc4 	movi	r2,-1
  8177a4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  8177a8:	e0bffb17 	ldw	r2,-20(fp)
}
  8177ac:	e037883a 	mov	sp,fp
  8177b0:	dfc00117 	ldw	ra,4(sp)
  8177b4:	df000017 	ldw	fp,0(sp)
  8177b8:	dec00204 	addi	sp,sp,8
  8177bc:	f800283a 	ret

008177c0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  8177c0:	defffd04 	addi	sp,sp,-12
  8177c4:	dfc00215 	stw	ra,8(sp)
  8177c8:	df000115 	stw	fp,4(sp)
  8177cc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  8177d0:	0009883a 	mov	r4,zero
  8177d4:	0817ef80 	call	817ef8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  8177d8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  8177dc:	0817f2c0 	call	817f2c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  8177e0:	010020b4 	movhi	r4,130
  8177e4:	212f8604 	addi	r4,r4,-16872
  8177e8:	014020b4 	movhi	r5,130
  8177ec:	296f8604 	addi	r5,r5,-16872
  8177f0:	018020b4 	movhi	r6,130
  8177f4:	31af8604 	addi	r6,r6,-16872
  8177f8:	081aaa40 	call	81aaa4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  8177fc:	081a6a40 	call	81a6a4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  817800:	010020b4 	movhi	r4,130
  817804:	2129c004 	addi	r4,r4,-22784
  817808:	081afb00 	call	81afb0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  81780c:	d1277317 	ldw	r4,-25140(gp)
  817810:	d0e77417 	ldw	r3,-25136(gp)
  817814:	d0a77517 	ldw	r2,-25132(gp)
  817818:	180b883a 	mov	r5,r3
  81781c:	100d883a 	mov	r6,r2
  817820:	0800b840 	call	800b84 <main>
  817824:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  817828:	01000044 	movi	r4,1
  81782c:	08172c80 	call	8172c8 <close>
  exit (result);
  817830:	e13fff17 	ldw	r4,-4(fp)
  817834:	081afc40 	call	81afc4 <exit>

00817838 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  817838:	defffe04 	addi	sp,sp,-8
  81783c:	df000115 	stw	fp,4(sp)
  817840:	df000104 	addi	fp,sp,4
  817844:	e13fff15 	stw	r4,-4(fp)
}
  817848:	e037883a 	mov	sp,fp
  81784c:	df000017 	ldw	fp,0(sp)
  817850:	dec00104 	addi	sp,sp,4
  817854:	f800283a 	ret

00817858 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  817858:	defffe04 	addi	sp,sp,-8
  81785c:	df000115 	stw	fp,4(sp)
  817860:	df000104 	addi	fp,sp,4
  817864:	e13fff15 	stw	r4,-4(fp)
}
  817868:	e037883a 	mov	sp,fp
  81786c:	df000017 	ldw	fp,0(sp)
  817870:	dec00104 	addi	sp,sp,4
  817874:	f800283a 	ret

00817878 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  817878:	defffe04 	addi	sp,sp,-8
  81787c:	dfc00115 	stw	ra,4(sp)
  817880:	df000015 	stw	fp,0(sp)
  817884:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  817888:	008020b4 	movhi	r2,130
  81788c:	10b6ee04 	addi	r2,r2,-9288
  817890:	10800017 	ldw	r2,0(r2)
  817894:	10000526 	beq	r2,zero,8178ac <alt_get_errno+0x34>
  817898:	008020b4 	movhi	r2,130
  81789c:	10b6ee04 	addi	r2,r2,-9288
  8178a0:	10800017 	ldw	r2,0(r2)
  8178a4:	103ee83a 	callr	r2
  8178a8:	00000206 	br	8178b4 <alt_get_errno+0x3c>
  8178ac:	008020b4 	movhi	r2,130
  8178b0:	10be4d04 	addi	r2,r2,-1740
}
  8178b4:	e037883a 	mov	sp,fp
  8178b8:	dfc00117 	ldw	ra,4(sp)
  8178bc:	df000017 	ldw	fp,0(sp)
  8178c0:	dec00204 	addi	sp,sp,8
  8178c4:	f800283a 	ret

008178c8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  8178c8:	defffd04 	addi	sp,sp,-12
  8178cc:	df000215 	stw	fp,8(sp)
  8178d0:	df000204 	addi	fp,sp,8
  8178d4:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  8178d8:	e0bfff17 	ldw	r2,-4(fp)
  8178dc:	10800217 	ldw	r2,8(r2)
  8178e0:	10d00034 	orhi	r3,r2,16384
  8178e4:	e0bfff17 	ldw	r2,-4(fp)
  8178e8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  8178ec:	e03ffe15 	stw	zero,-8(fp)
  8178f0:	00001d06 	br	817968 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  8178f4:	008020b4 	movhi	r2,130
  8178f8:	10b1d804 	addi	r2,r2,-14496
  8178fc:	e0fffe17 	ldw	r3,-8(fp)
  817900:	18c00324 	muli	r3,r3,12
  817904:	10c5883a 	add	r2,r2,r3
  817908:	10c00017 	ldw	r3,0(r2)
  81790c:	e0bfff17 	ldw	r2,-4(fp)
  817910:	10800017 	ldw	r2,0(r2)
  817914:	1880111e 	bne	r3,r2,81795c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  817918:	008020b4 	movhi	r2,130
  81791c:	10b1d804 	addi	r2,r2,-14496
  817920:	e0fffe17 	ldw	r3,-8(fp)
  817924:	18c00324 	muli	r3,r3,12
  817928:	18c00204 	addi	r3,r3,8
  81792c:	10c5883a 	add	r2,r2,r3
  817930:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  817934:	1000090e 	bge	r2,zero,81795c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  817938:	e0bffe17 	ldw	r2,-8(fp)
  81793c:	10c00324 	muli	r3,r2,12
  817940:	008020b4 	movhi	r2,130
  817944:	10b1d804 	addi	r2,r2,-14496
  817948:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  81794c:	e0bfff17 	ldw	r2,-4(fp)
  817950:	18800226 	beq	r3,r2,81795c <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  817954:	00bffcc4 	movi	r2,-13
  817958:	00000a06 	br	817984 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  81795c:	e0bffe17 	ldw	r2,-8(fp)
  817960:	10800044 	addi	r2,r2,1
  817964:	e0bffe15 	stw	r2,-8(fp)
  817968:	008020b4 	movhi	r2,130
  81796c:	10b6ed04 	addi	r2,r2,-9292
  817970:	10800017 	ldw	r2,0(r2)
  817974:	1007883a 	mov	r3,r2
  817978:	e0bffe17 	ldw	r2,-8(fp)
  81797c:	18bfdd2e 	bgeu	r3,r2,8178f4 <__alt_data_end+0xff8178f4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  817980:	0005883a 	mov	r2,zero
}
  817984:	e037883a 	mov	sp,fp
  817988:	df000017 	ldw	fp,0(sp)
  81798c:	dec00104 	addi	sp,sp,4
  817990:	f800283a 	ret

00817994 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  817994:	defff604 	addi	sp,sp,-40
  817998:	dfc00915 	stw	ra,36(sp)
  81799c:	df000815 	stw	fp,32(sp)
  8179a0:	df000804 	addi	fp,sp,32
  8179a4:	e13ffd15 	stw	r4,-12(fp)
  8179a8:	e17ffe15 	stw	r5,-8(fp)
  8179ac:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  8179b0:	00bfffc4 	movi	r2,-1
  8179b4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  8179b8:	00bffb44 	movi	r2,-19
  8179bc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  8179c0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  8179c4:	e13ffd17 	ldw	r4,-12(fp)
  8179c8:	014020b4 	movhi	r5,130
  8179cc:	2976eb04 	addi	r5,r5,-9300
  8179d0:	081a75c0 	call	81a75c <alt_find_dev>
  8179d4:	e0bff815 	stw	r2,-32(fp)
  8179d8:	e0bff817 	ldw	r2,-32(fp)
  8179dc:	1000051e 	bne	r2,zero,8179f4 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  8179e0:	e13ffd17 	ldw	r4,-12(fp)
  8179e4:	081a7ec0 	call	81a7ec <alt_find_file>
  8179e8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  8179ec:	00800044 	movi	r2,1
  8179f0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  8179f4:	e0bff817 	ldw	r2,-32(fp)
  8179f8:	10002926 	beq	r2,zero,817aa0 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
  8179fc:	e13ff817 	ldw	r4,-32(fp)
  817a00:	081a9000 	call	81a900 <alt_get_fd>
  817a04:	e0bff915 	stw	r2,-28(fp)
  817a08:	e0bff917 	ldw	r2,-28(fp)
  817a0c:	1000030e 	bge	r2,zero,817a1c <open+0x88>
    {
      status = index;
  817a10:	e0bff917 	ldw	r2,-28(fp)
  817a14:	e0bffa15 	stw	r2,-24(fp)
  817a18:	00002306 	br	817aa8 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
  817a1c:	e0bff917 	ldw	r2,-28(fp)
  817a20:	10c00324 	muli	r3,r2,12
  817a24:	008020b4 	movhi	r2,130
  817a28:	10b1d804 	addi	r2,r2,-14496
  817a2c:	1885883a 	add	r2,r3,r2
  817a30:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  817a34:	e0fffe17 	ldw	r3,-8(fp)
  817a38:	00900034 	movhi	r2,16384
  817a3c:	10bfffc4 	addi	r2,r2,-1
  817a40:	1886703a 	and	r3,r3,r2
  817a44:	e0bffc17 	ldw	r2,-16(fp)
  817a48:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  817a4c:	e0bffb17 	ldw	r2,-20(fp)
  817a50:	1000051e 	bne	r2,zero,817a68 <open+0xd4>
  817a54:	e13ffc17 	ldw	r4,-16(fp)
  817a58:	08178c80 	call	8178c8 <alt_file_locked>
  817a5c:	e0bffa15 	stw	r2,-24(fp)
  817a60:	e0bffa17 	ldw	r2,-24(fp)
  817a64:	10001016 	blt	r2,zero,817aa8 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  817a68:	e0bff817 	ldw	r2,-32(fp)
  817a6c:	10800317 	ldw	r2,12(r2)
  817a70:	10000826 	beq	r2,zero,817a94 <open+0x100>
  817a74:	e0bff817 	ldw	r2,-32(fp)
  817a78:	10800317 	ldw	r2,12(r2)
  817a7c:	e13ffc17 	ldw	r4,-16(fp)
  817a80:	e17ffd17 	ldw	r5,-12(fp)
  817a84:	e1bffe17 	ldw	r6,-8(fp)
  817a88:	e1ffff17 	ldw	r7,-4(fp)
  817a8c:	103ee83a 	callr	r2
  817a90:	00000106 	br	817a98 <open+0x104>
  817a94:	0005883a 	mov	r2,zero
  817a98:	e0bffa15 	stw	r2,-24(fp)
  817a9c:	00000206 	br	817aa8 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
  817aa0:	00bffb44 	movi	r2,-19
  817aa4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  817aa8:	e0bffa17 	ldw	r2,-24(fp)
  817aac:	1000090e 	bge	r2,zero,817ad4 <open+0x140>
  {
    alt_release_fd (index);  
  817ab0:	e13ff917 	ldw	r4,-28(fp)
  817ab4:	0817c380 	call	817c38 <alt_release_fd>
    ALT_ERRNO = -status;
  817ab8:	08178780 	call	817878 <alt_get_errno>
  817abc:	1007883a 	mov	r3,r2
  817ac0:	e0bffa17 	ldw	r2,-24(fp)
  817ac4:	0085c83a 	sub	r2,zero,r2
  817ac8:	18800015 	stw	r2,0(r3)
    return -1;
  817acc:	00bfffc4 	movi	r2,-1
  817ad0:	00000106 	br	817ad8 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
  817ad4:	e0bff917 	ldw	r2,-28(fp)
}
  817ad8:	e037883a 	mov	sp,fp
  817adc:	dfc00117 	ldw	ra,4(sp)
  817ae0:	df000017 	ldw	fp,0(sp)
  817ae4:	dec00204 	addi	sp,sp,8
  817ae8:	f800283a 	ret

00817aec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  817aec:	defffe04 	addi	sp,sp,-8
  817af0:	dfc00115 	stw	ra,4(sp)
  817af4:	df000015 	stw	fp,0(sp)
  817af8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  817afc:	008020b4 	movhi	r2,130
  817b00:	10b6ee04 	addi	r2,r2,-9288
  817b04:	10800017 	ldw	r2,0(r2)
  817b08:	10000526 	beq	r2,zero,817b20 <alt_get_errno+0x34>
  817b0c:	008020b4 	movhi	r2,130
  817b10:	10b6ee04 	addi	r2,r2,-9288
  817b14:	10800017 	ldw	r2,0(r2)
  817b18:	103ee83a 	callr	r2
  817b1c:	00000206 	br	817b28 <alt_get_errno+0x3c>
  817b20:	008020b4 	movhi	r2,130
  817b24:	10be4d04 	addi	r2,r2,-1740
}
  817b28:	e037883a 	mov	sp,fp
  817b2c:	dfc00117 	ldw	ra,4(sp)
  817b30:	df000017 	ldw	fp,0(sp)
  817b34:	dec00204 	addi	sp,sp,8
  817b38:	f800283a 	ret

00817b3c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  817b3c:	defff904 	addi	sp,sp,-28
  817b40:	dfc00615 	stw	ra,24(sp)
  817b44:	df000515 	stw	fp,20(sp)
  817b48:	df000504 	addi	fp,sp,20
  817b4c:	e13ffd15 	stw	r4,-12(fp)
  817b50:	e17ffe15 	stw	r5,-8(fp)
  817b54:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  817b58:	e0bffd17 	ldw	r2,-12(fp)
  817b5c:	10000616 	blt	r2,zero,817b78 <read+0x3c>
  817b60:	e0bffd17 	ldw	r2,-12(fp)
  817b64:	10c00324 	muli	r3,r2,12
  817b68:	008020b4 	movhi	r2,130
  817b6c:	10b1d804 	addi	r2,r2,-14496
  817b70:	1885883a 	add	r2,r3,r2
  817b74:	00000106 	br	817b7c <read+0x40>
  817b78:	0005883a 	mov	r2,zero
  817b7c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  817b80:	e0bffb17 	ldw	r2,-20(fp)
  817b84:	10002226 	beq	r2,zero,817c10 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  817b88:	e0bffb17 	ldw	r2,-20(fp)
  817b8c:	10800217 	ldw	r2,8(r2)
  817b90:	108000cc 	andi	r2,r2,3
  817b94:	10800060 	cmpeqi	r2,r2,1
  817b98:	1000181e 	bne	r2,zero,817bfc <read+0xc0>
        (fd->dev->read))
  817b9c:	e0bffb17 	ldw	r2,-20(fp)
  817ba0:	10800017 	ldw	r2,0(r2)
  817ba4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  817ba8:	10001426 	beq	r2,zero,817bfc <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  817bac:	e0bffb17 	ldw	r2,-20(fp)
  817bb0:	10800017 	ldw	r2,0(r2)
  817bb4:	10800517 	ldw	r2,20(r2)
  817bb8:	e0ffff17 	ldw	r3,-4(fp)
  817bbc:	e13ffb17 	ldw	r4,-20(fp)
  817bc0:	e17ffe17 	ldw	r5,-8(fp)
  817bc4:	180d883a 	mov	r6,r3
  817bc8:	103ee83a 	callr	r2
  817bcc:	e0bffc15 	stw	r2,-16(fp)
  817bd0:	e0bffc17 	ldw	r2,-16(fp)
  817bd4:	1000070e 	bge	r2,zero,817bf4 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  817bd8:	0817aec0 	call	817aec <alt_get_errno>
  817bdc:	1007883a 	mov	r3,r2
  817be0:	e0bffc17 	ldw	r2,-16(fp)
  817be4:	0085c83a 	sub	r2,zero,r2
  817be8:	18800015 	stw	r2,0(r3)
          return -1;
  817bec:	00bfffc4 	movi	r2,-1
  817bf0:	00000c06 	br	817c24 <read+0xe8>
        }
        return rval;
  817bf4:	e0bffc17 	ldw	r2,-16(fp)
  817bf8:	00000a06 	br	817c24 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  817bfc:	0817aec0 	call	817aec <alt_get_errno>
  817c00:	1007883a 	mov	r3,r2
  817c04:	00800344 	movi	r2,13
  817c08:	18800015 	stw	r2,0(r3)
  817c0c:	00000406 	br	817c20 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  817c10:	0817aec0 	call	817aec <alt_get_errno>
  817c14:	1007883a 	mov	r3,r2
  817c18:	00801444 	movi	r2,81
  817c1c:	18800015 	stw	r2,0(r3)
  }
  return -1;
  817c20:	00bfffc4 	movi	r2,-1
}
  817c24:	e037883a 	mov	sp,fp
  817c28:	dfc00117 	ldw	ra,4(sp)
  817c2c:	df000017 	ldw	fp,0(sp)
  817c30:	dec00204 	addi	sp,sp,8
  817c34:	f800283a 	ret

00817c38 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  817c38:	defffe04 	addi	sp,sp,-8
  817c3c:	df000115 	stw	fp,4(sp)
  817c40:	df000104 	addi	fp,sp,4
  817c44:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  817c48:	e0bfff17 	ldw	r2,-4(fp)
  817c4c:	108000d0 	cmplti	r2,r2,3
  817c50:	10000d1e 	bne	r2,zero,817c88 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  817c54:	008020b4 	movhi	r2,130
  817c58:	10b1d804 	addi	r2,r2,-14496
  817c5c:	e0ffff17 	ldw	r3,-4(fp)
  817c60:	18c00324 	muli	r3,r3,12
  817c64:	18c00204 	addi	r3,r3,8
  817c68:	10c5883a 	add	r2,r2,r3
  817c6c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  817c70:	008020b4 	movhi	r2,130
  817c74:	10b1d804 	addi	r2,r2,-14496
  817c78:	e0ffff17 	ldw	r3,-4(fp)
  817c7c:	18c00324 	muli	r3,r3,12
  817c80:	10c5883a 	add	r2,r2,r3
  817c84:	10000015 	stw	zero,0(r2)
  }
}
  817c88:	e037883a 	mov	sp,fp
  817c8c:	df000017 	ldw	fp,0(sp)
  817c90:	dec00104 	addi	sp,sp,4
  817c94:	f800283a 	ret

00817c98 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  817c98:	defff904 	addi	sp,sp,-28
  817c9c:	df000615 	stw	fp,24(sp)
  817ca0:	df000604 	addi	fp,sp,24
  817ca4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  817ca8:	0005303a 	rdctl	r2,status
  817cac:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  817cb0:	e0fffc17 	ldw	r3,-16(fp)
  817cb4:	00bfff84 	movi	r2,-2
  817cb8:	1884703a 	and	r2,r3,r2
  817cbc:	1001703a 	wrctl	status,r2
  
  return context;
  817cc0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  817cc4:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  817cc8:	d0a00e17 	ldw	r2,-32712(gp)
  817ccc:	10c000c4 	addi	r3,r2,3
  817cd0:	00bfff04 	movi	r2,-4
  817cd4:	1884703a 	and	r2,r3,r2
  817cd8:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  817cdc:	d0e00e17 	ldw	r3,-32712(gp)
  817ce0:	e0bfff17 	ldw	r2,-4(fp)
  817ce4:	1887883a 	add	r3,r3,r2
  817ce8:	00804034 	movhi	r2,256
  817cec:	10800004 	addi	r2,r2,0
  817cf0:	10c0062e 	bgeu	r2,r3,817d0c <sbrk+0x74>
  817cf4:	e0bffa17 	ldw	r2,-24(fp)
  817cf8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  817cfc:	e0bffd17 	ldw	r2,-12(fp)
  817d00:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  817d04:	00bfffc4 	movi	r2,-1
  817d08:	00000b06 	br	817d38 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  817d0c:	d0a00e17 	ldw	r2,-32712(gp)
  817d10:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
  817d14:	d0e00e17 	ldw	r3,-32712(gp)
  817d18:	e0bfff17 	ldw	r2,-4(fp)
  817d1c:	1885883a 	add	r2,r3,r2
  817d20:	d0a00e15 	stw	r2,-32712(gp)
  817d24:	e0bffa17 	ldw	r2,-24(fp)
  817d28:	e0bffe15 	stw	r2,-8(fp)
  817d2c:	e0bffe17 	ldw	r2,-8(fp)
  817d30:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  817d34:	e0bffb17 	ldw	r2,-20(fp)
} 
  817d38:	e037883a 	mov	sp,fp
  817d3c:	df000017 	ldw	fp,0(sp)
  817d40:	dec00104 	addi	sp,sp,4
  817d44:	f800283a 	ret

00817d48 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
  817d48:	defffd04 	addi	sp,sp,-12
  817d4c:	dfc00215 	stw	ra,8(sp)
  817d50:	df000115 	stw	fp,4(sp)
  817d54:	df000104 	addi	fp,sp,4
  817d58:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
  817d5c:	e13fff17 	ldw	r4,-4(fp)
  817d60:	081a4140 	call	81a414 <alt_busy_sleep>
}
  817d64:	e037883a 	mov	sp,fp
  817d68:	dfc00117 	ldw	ra,4(sp)
  817d6c:	df000017 	ldw	fp,0(sp)
  817d70:	dec00204 	addi	sp,sp,8
  817d74:	f800283a 	ret

00817d78 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  817d78:	defffe04 	addi	sp,sp,-8
  817d7c:	dfc00115 	stw	ra,4(sp)
  817d80:	df000015 	stw	fp,0(sp)
  817d84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  817d88:	008020b4 	movhi	r2,130
  817d8c:	10b6ee04 	addi	r2,r2,-9288
  817d90:	10800017 	ldw	r2,0(r2)
  817d94:	10000526 	beq	r2,zero,817dac <alt_get_errno+0x34>
  817d98:	008020b4 	movhi	r2,130
  817d9c:	10b6ee04 	addi	r2,r2,-9288
  817da0:	10800017 	ldw	r2,0(r2)
  817da4:	103ee83a 	callr	r2
  817da8:	00000206 	br	817db4 <alt_get_errno+0x3c>
  817dac:	008020b4 	movhi	r2,130
  817db0:	10be4d04 	addi	r2,r2,-1740
}
  817db4:	e037883a 	mov	sp,fp
  817db8:	dfc00117 	ldw	ra,4(sp)
  817dbc:	df000017 	ldw	fp,0(sp)
  817dc0:	dec00204 	addi	sp,sp,8
  817dc4:	f800283a 	ret

00817dc8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  817dc8:	defff904 	addi	sp,sp,-28
  817dcc:	dfc00615 	stw	ra,24(sp)
  817dd0:	df000515 	stw	fp,20(sp)
  817dd4:	df000504 	addi	fp,sp,20
  817dd8:	e13ffd15 	stw	r4,-12(fp)
  817ddc:	e17ffe15 	stw	r5,-8(fp)
  817de0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  817de4:	e0bffd17 	ldw	r2,-12(fp)
  817de8:	10000616 	blt	r2,zero,817e04 <write+0x3c>
  817dec:	e0bffd17 	ldw	r2,-12(fp)
  817df0:	10c00324 	muli	r3,r2,12
  817df4:	008020b4 	movhi	r2,130
  817df8:	10b1d804 	addi	r2,r2,-14496
  817dfc:	1885883a 	add	r2,r3,r2
  817e00:	00000106 	br	817e08 <write+0x40>
  817e04:	0005883a 	mov	r2,zero
  817e08:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  817e0c:	e0bffb17 	ldw	r2,-20(fp)
  817e10:	10002126 	beq	r2,zero,817e98 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  817e14:	e0bffb17 	ldw	r2,-20(fp)
  817e18:	10800217 	ldw	r2,8(r2)
  817e1c:	108000cc 	andi	r2,r2,3
  817e20:	10001826 	beq	r2,zero,817e84 <write+0xbc>
  817e24:	e0bffb17 	ldw	r2,-20(fp)
  817e28:	10800017 	ldw	r2,0(r2)
  817e2c:	10800617 	ldw	r2,24(r2)
  817e30:	10001426 	beq	r2,zero,817e84 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  817e34:	e0bffb17 	ldw	r2,-20(fp)
  817e38:	10800017 	ldw	r2,0(r2)
  817e3c:	10800617 	ldw	r2,24(r2)
  817e40:	e0ffff17 	ldw	r3,-4(fp)
  817e44:	e13ffb17 	ldw	r4,-20(fp)
  817e48:	e17ffe17 	ldw	r5,-8(fp)
  817e4c:	180d883a 	mov	r6,r3
  817e50:	103ee83a 	callr	r2
  817e54:	e0bffc15 	stw	r2,-16(fp)
  817e58:	e0bffc17 	ldw	r2,-16(fp)
  817e5c:	1000070e 	bge	r2,zero,817e7c <write+0xb4>
      {
        ALT_ERRNO = -rval;
  817e60:	0817d780 	call	817d78 <alt_get_errno>
  817e64:	1007883a 	mov	r3,r2
  817e68:	e0bffc17 	ldw	r2,-16(fp)
  817e6c:	0085c83a 	sub	r2,zero,r2
  817e70:	18800015 	stw	r2,0(r3)
        return -1;
  817e74:	00bfffc4 	movi	r2,-1
  817e78:	00000c06 	br	817eac <write+0xe4>
      }
      return rval;
  817e7c:	e0bffc17 	ldw	r2,-16(fp)
  817e80:	00000a06 	br	817eac <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  817e84:	0817d780 	call	817d78 <alt_get_errno>
  817e88:	1007883a 	mov	r3,r2
  817e8c:	00800344 	movi	r2,13
  817e90:	18800015 	stw	r2,0(r3)
  817e94:	00000406 	br	817ea8 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  817e98:	0817d780 	call	817d78 <alt_get_errno>
  817e9c:	1007883a 	mov	r3,r2
  817ea0:	00801444 	movi	r2,81
  817ea4:	18800015 	stw	r2,0(r3)
  }
  return -1;
  817ea8:	00bfffc4 	movi	r2,-1
}
  817eac:	e037883a 	mov	sp,fp
  817eb0:	dfc00117 	ldw	ra,4(sp)
  817eb4:	df000017 	ldw	fp,0(sp)
  817eb8:	dec00204 	addi	sp,sp,8
  817ebc:	f800283a 	ret

00817ec0 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  817ec0:	defffd04 	addi	sp,sp,-12
  817ec4:	dfc00215 	stw	ra,8(sp)
  817ec8:	df000115 	stw	fp,4(sp)
  817ecc:	df000104 	addi	fp,sp,4
  817ed0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  817ed4:	e13fff17 	ldw	r4,-4(fp)
  817ed8:	014020b4 	movhi	r5,130
  817edc:	2976eb04 	addi	r5,r5,-9300
  817ee0:	081a6000 	call	81a600 <alt_dev_llist_insert>
}
  817ee4:	e037883a 	mov	sp,fp
  817ee8:	dfc00117 	ldw	ra,4(sp)
  817eec:	df000017 	ldw	fp,0(sp)
  817ef0:	dec00204 	addi	sp,sp,8
  817ef4:	f800283a 	ret

00817ef8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  817ef8:	defffd04 	addi	sp,sp,-12
  817efc:	dfc00215 	stw	ra,8(sp)
  817f00:	df000115 	stw	fp,4(sp)
  817f04:	df000104 	addi	fp,sp,4
  817f08:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
  817f0c:	081ae680 	call	81ae68 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  817f10:	00800044 	movi	r2,1
  817f14:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  817f18:	e037883a 	mov	sp,fp
  817f1c:	dfc00117 	ldw	ra,4(sp)
  817f20:	df000017 	ldw	fp,0(sp)
  817f24:	dec00204 	addi	sp,sp,8
  817f28:	f800283a 	ret

00817f2c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  817f2c:	defffe04 	addi	sp,sp,-8
  817f30:	dfc00115 	stw	ra,4(sp)
  817f34:	df000015 	stw	fp,0(sp)
  817f38:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYSTEM_TIMER, system_timer);
  817f3c:	01004034 	movhi	r4,256
  817f40:	21042004 	addi	r4,r4,4224
  817f44:	000b883a 	mov	r5,zero
  817f48:	01800104 	movi	r6,4
  817f4c:	01c0fa04 	movi	r7,1000
  817f50:	08199680 	call	819968 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
  817f54:	010020b4 	movhi	r4,130
  817f58:	21324204 	addi	r4,r4,-14072
  817f5c:	000b883a 	mov	r5,zero
  817f60:	000d883a 	mov	r6,zero
  817f64:	08181400 	call	818140 <altera_avalon_jtag_uart_init>
  817f68:	010020b4 	movhi	r4,130
  817f6c:	21323804 	addi	r4,r4,-14112
  817f70:	0817ec00 	call	817ec0 <alt_dev_reg>
    ALTERA_AVALON_LCD_16207_INIT ( LCD_DISPLAY, lcd_display);
  817f74:	010020b4 	movhi	r4,130
  817f78:	21365a04 	addi	r4,r4,-9880
  817f7c:	08197580 	call	819758 <altera_avalon_lcd_16207_init>
  817f80:	010020b4 	movhi	r4,130
  817f84:	21365004 	addi	r4,r4,-9920
  817f88:	0817ec00 	call	817ec0 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
  817f8c:	0001883a 	nop
    ALTERA_AVALON_UART_INIT ( UART, uart);
  817f90:	010020b4 	movhi	r4,130
  817f94:	2136a204 	addi	r4,r4,-9592
  817f98:	000b883a 	mov	r5,zero
  817f9c:	018000c4 	movi	r6,3
  817fa0:	0819af80 	call	819af8 <altera_avalon_uart_init>
  817fa4:	010020b4 	movhi	r4,130
  817fa8:	21369804 	addi	r4,r4,-9632
  817fac:	0817ec00 	call	817ec0 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AUDIO_I2C_CONFIG, audio_i2c_config);
  817fb0:	010020b4 	movhi	r4,130
  817fb4:	2136c904 	addi	r4,r4,-9436
  817fb8:	0817ec00 	call	817ec0 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO, Audio);
  817fbc:	010020b4 	movhi	r4,130
  817fc0:	2136d504 	addi	r4,r4,-9388
  817fc4:	0817ec00 	call	817ec0 <alt_dev_reg>
}
  817fc8:	e037883a 	mov	sp,fp
  817fcc:	dfc00117 	ldw	ra,4(sp)
  817fd0:	df000017 	ldw	fp,0(sp)
  817fd4:	dec00204 	addi	sp,sp,8
  817fd8:	f800283a 	ret

00817fdc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  817fdc:	defffa04 	addi	sp,sp,-24
  817fe0:	dfc00515 	stw	ra,20(sp)
  817fe4:	df000415 	stw	fp,16(sp)
  817fe8:	df000404 	addi	fp,sp,16
  817fec:	e13ffd15 	stw	r4,-12(fp)
  817ff0:	e17ffe15 	stw	r5,-8(fp)
  817ff4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  817ff8:	e0bffd17 	ldw	r2,-12(fp)
  817ffc:	10800017 	ldw	r2,0(r2)
  818000:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  818004:	e0bffc17 	ldw	r2,-16(fp)
  818008:	10c00a04 	addi	r3,r2,40
  81800c:	e0bffd17 	ldw	r2,-12(fp)
  818010:	10800217 	ldw	r2,8(r2)
  818014:	1809883a 	mov	r4,r3
  818018:	e17ffe17 	ldw	r5,-8(fp)
  81801c:	e1bfff17 	ldw	r6,-4(fp)
  818020:	100f883a 	mov	r7,r2
  818024:	08185fc0 	call	8185fc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  818028:	e037883a 	mov	sp,fp
  81802c:	dfc00117 	ldw	ra,4(sp)
  818030:	df000017 	ldw	fp,0(sp)
  818034:	dec00204 	addi	sp,sp,8
  818038:	f800283a 	ret

0081803c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  81803c:	defffa04 	addi	sp,sp,-24
  818040:	dfc00515 	stw	ra,20(sp)
  818044:	df000415 	stw	fp,16(sp)
  818048:	df000404 	addi	fp,sp,16
  81804c:	e13ffd15 	stw	r4,-12(fp)
  818050:	e17ffe15 	stw	r5,-8(fp)
  818054:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  818058:	e0bffd17 	ldw	r2,-12(fp)
  81805c:	10800017 	ldw	r2,0(r2)
  818060:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  818064:	e0bffc17 	ldw	r2,-16(fp)
  818068:	10c00a04 	addi	r3,r2,40
  81806c:	e0bffd17 	ldw	r2,-12(fp)
  818070:	10800217 	ldw	r2,8(r2)
  818074:	1809883a 	mov	r4,r3
  818078:	e17ffe17 	ldw	r5,-8(fp)
  81807c:	e1bfff17 	ldw	r6,-4(fp)
  818080:	100f883a 	mov	r7,r2
  818084:	08188080 	call	818808 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  818088:	e037883a 	mov	sp,fp
  81808c:	dfc00117 	ldw	ra,4(sp)
  818090:	df000017 	ldw	fp,0(sp)
  818094:	dec00204 	addi	sp,sp,8
  818098:	f800283a 	ret

0081809c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  81809c:	defffc04 	addi	sp,sp,-16
  8180a0:	dfc00315 	stw	ra,12(sp)
  8180a4:	df000215 	stw	fp,8(sp)
  8180a8:	df000204 	addi	fp,sp,8
  8180ac:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  8180b0:	e0bfff17 	ldw	r2,-4(fp)
  8180b4:	10800017 	ldw	r2,0(r2)
  8180b8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  8180bc:	e0bffe17 	ldw	r2,-8(fp)
  8180c0:	10c00a04 	addi	r3,r2,40
  8180c4:	e0bfff17 	ldw	r2,-4(fp)
  8180c8:	10800217 	ldw	r2,8(r2)
  8180cc:	1809883a 	mov	r4,r3
  8180d0:	100b883a 	mov	r5,r2
  8180d4:	08184a80 	call	8184a8 <altera_avalon_jtag_uart_close>
}
  8180d8:	e037883a 	mov	sp,fp
  8180dc:	dfc00117 	ldw	ra,4(sp)
  8180e0:	df000017 	ldw	fp,0(sp)
  8180e4:	dec00204 	addi	sp,sp,8
  8180e8:	f800283a 	ret

008180ec <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  8180ec:	defffa04 	addi	sp,sp,-24
  8180f0:	dfc00515 	stw	ra,20(sp)
  8180f4:	df000415 	stw	fp,16(sp)
  8180f8:	df000404 	addi	fp,sp,16
  8180fc:	e13ffd15 	stw	r4,-12(fp)
  818100:	e17ffe15 	stw	r5,-8(fp)
  818104:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  818108:	e0bffd17 	ldw	r2,-12(fp)
  81810c:	10800017 	ldw	r2,0(r2)
  818110:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  818114:	e0bffc17 	ldw	r2,-16(fp)
  818118:	10800a04 	addi	r2,r2,40
  81811c:	1009883a 	mov	r4,r2
  818120:	e17ffe17 	ldw	r5,-8(fp)
  818124:	e1bfff17 	ldw	r6,-4(fp)
  818128:	08185100 	call	818510 <altera_avalon_jtag_uart_ioctl>
}
  81812c:	e037883a 	mov	sp,fp
  818130:	dfc00117 	ldw	ra,4(sp)
  818134:	df000017 	ldw	fp,0(sp)
  818138:	dec00204 	addi	sp,sp,8
  81813c:	f800283a 	ret

00818140 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  818140:	defffb04 	addi	sp,sp,-20
  818144:	dfc00415 	stw	ra,16(sp)
  818148:	df000315 	stw	fp,12(sp)
  81814c:	df000304 	addi	fp,sp,12
  818150:	e13ffd15 	stw	r4,-12(fp)
  818154:	e17ffe15 	stw	r5,-8(fp)
  818158:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  81815c:	e0bffd17 	ldw	r2,-12(fp)
  818160:	00c00044 	movi	r3,1
  818164:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  818168:	e0bffd17 	ldw	r2,-12(fp)
  81816c:	10800017 	ldw	r2,0(r2)
  818170:	10800104 	addi	r2,r2,4
  818174:	1007883a 	mov	r3,r2
  818178:	e0bffd17 	ldw	r2,-12(fp)
  81817c:	10800817 	ldw	r2,32(r2)
  818180:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
  818184:	e0bfff17 	ldw	r2,-4(fp)
  818188:	1009883a 	mov	r4,r2
  81818c:	e17ffd17 	ldw	r5,-12(fp)
  818190:	018020b4 	movhi	r6,130
  818194:	31a07e04 	addi	r6,r6,-32264
  818198:	081ab1c0 	call	81ab1c <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  81819c:	e0bffd17 	ldw	r2,-12(fp)
  8181a0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  8181a4:	e0bffd17 	ldw	r2,-12(fp)
  8181a8:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  8181ac:	008020b4 	movhi	r2,130
  8181b0:	10be5804 	addi	r2,r2,-1696
  8181b4:	10800017 	ldw	r2,0(r2)
  8181b8:	1809883a 	mov	r4,r3
  8181bc:	100b883a 	mov	r5,r2
  8181c0:	018020b4 	movhi	r6,130
  8181c4:	31a10004 	addi	r6,r6,-31744
  8181c8:	e1fffd17 	ldw	r7,-12(fp)
  8181cc:	081a2d40 	call	81a2d4 <alt_alarm_start>
  8181d0:	1000040e 	bge	r2,zero,8181e4 <altera_avalon_jtag_uart_init+0xa4>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  8181d4:	e0fffd17 	ldw	r3,-12(fp)
  8181d8:	00a00034 	movhi	r2,32768
  8181dc:	10bfffc4 	addi	r2,r2,-1
  8181e0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  8181e4:	e037883a 	mov	sp,fp
  8181e8:	dfc00117 	ldw	ra,4(sp)
  8181ec:	df000017 	ldw	fp,0(sp)
  8181f0:	dec00204 	addi	sp,sp,8
  8181f4:	f800283a 	ret

008181f8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  8181f8:	defff704 	addi	sp,sp,-36
  8181fc:	df000815 	stw	fp,32(sp)
  818200:	df000804 	addi	fp,sp,32
  818204:	e13ffe15 	stw	r4,-8(fp)
  818208:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  81820c:	e0bffe17 	ldw	r2,-8(fp)
  818210:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
  818214:	e0bffa17 	ldw	r2,-24(fp)
  818218:	10800017 	ldw	r2,0(r2)
  81821c:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  818220:	e0bffb17 	ldw	r2,-20(fp)
  818224:	10800104 	addi	r2,r2,4
  818228:	10800037 	ldwio	r2,0(r2)
  81822c:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  818230:	e0bffc17 	ldw	r2,-16(fp)
  818234:	1080c00c 	andi	r2,r2,768
  818238:	1000011e 	bne	r2,zero,818240 <altera_avalon_jtag_uart_irq+0x48>
      break;
  81823c:	00006c06 	br	8183f0 <altera_avalon_jtag_uart_irq+0x1f8>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  818240:	e0bffc17 	ldw	r2,-16(fp)
  818244:	1080400c 	andi	r2,r2,256
  818248:	10003426 	beq	r2,zero,81831c <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  81824c:	00800074 	movhi	r2,1
  818250:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  818254:	e0bffa17 	ldw	r2,-24(fp)
  818258:	10800a17 	ldw	r2,40(r2)
  81825c:	10800044 	addi	r2,r2,1
  818260:	1081ffcc 	andi	r2,r2,2047
  818264:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
  818268:	e0bffa17 	ldw	r2,-24(fp)
  81826c:	10c00b17 	ldw	r3,44(r2)
  818270:	e0bffd17 	ldw	r2,-12(fp)
  818274:	1880011e 	bne	r3,r2,81827c <altera_avalon_jtag_uart_irq+0x84>
          break;
  818278:	00001606 	br	8182d4 <altera_avalon_jtag_uart_irq+0xdc>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  81827c:	e0bffb17 	ldw	r2,-20(fp)
  818280:	10800037 	ldwio	r2,0(r2)
  818284:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  818288:	e0bff817 	ldw	r2,-32(fp)
  81828c:	10a0000c 	andi	r2,r2,32768
  818290:	1000011e 	bne	r2,zero,818298 <altera_avalon_jtag_uart_irq+0xa0>
          break;
  818294:	00000f06 	br	8182d4 <altera_avalon_jtag_uart_irq+0xdc>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  818298:	e0bffa17 	ldw	r2,-24(fp)
  81829c:	10800a17 	ldw	r2,40(r2)
  8182a0:	e0fff817 	ldw	r3,-32(fp)
  8182a4:	1809883a 	mov	r4,r3
  8182a8:	e0fffa17 	ldw	r3,-24(fp)
  8182ac:	1885883a 	add	r2,r3,r2
  8182b0:	10800e04 	addi	r2,r2,56
  8182b4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8182b8:	e0bffa17 	ldw	r2,-24(fp)
  8182bc:	10800a17 	ldw	r2,40(r2)
  8182c0:	10800044 	addi	r2,r2,1
  8182c4:	10c1ffcc 	andi	r3,r2,2047
  8182c8:	e0bffa17 	ldw	r2,-24(fp)
  8182cc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  8182d0:	003fe006 	br	818254 <__alt_data_end+0xff818254>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  8182d4:	e0bff817 	ldw	r2,-32(fp)
  8182d8:	10bfffec 	andhi	r2,r2,65535
  8182dc:	10000f26 	beq	r2,zero,81831c <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  8182e0:	e0bffa17 	ldw	r2,-24(fp)
  8182e4:	10c00817 	ldw	r3,32(r2)
  8182e8:	00bfff84 	movi	r2,-2
  8182ec:	1886703a 	and	r3,r3,r2
  8182f0:	e0bffa17 	ldw	r2,-24(fp)
  8182f4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  8182f8:	e0bffb17 	ldw	r2,-20(fp)
  8182fc:	10800104 	addi	r2,r2,4
  818300:	1007883a 	mov	r3,r2
  818304:	e0bffa17 	ldw	r2,-24(fp)
  818308:	10800817 	ldw	r2,32(r2)
  81830c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  818310:	e0bffb17 	ldw	r2,-20(fp)
  818314:	10800104 	addi	r2,r2,4
  818318:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  81831c:	e0bffc17 	ldw	r2,-16(fp)
  818320:	1080800c 	andi	r2,r2,512
  818324:	10003126 	beq	r2,zero,8183ec <altera_avalon_jtag_uart_irq+0x1f4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  818328:	e0bffc17 	ldw	r2,-16(fp)
  81832c:	1004d43a 	srli	r2,r2,16
  818330:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  818334:	00001406 	br	818388 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  818338:	e0bffb17 	ldw	r2,-20(fp)
  81833c:	e0fffa17 	ldw	r3,-24(fp)
  818340:	18c00d17 	ldw	r3,52(r3)
  818344:	e13ffa17 	ldw	r4,-24(fp)
  818348:	20c7883a 	add	r3,r4,r3
  81834c:	18c20e04 	addi	r3,r3,2104
  818350:	18c00003 	ldbu	r3,0(r3)
  818354:	18c03fcc 	andi	r3,r3,255
  818358:	18c0201c 	xori	r3,r3,128
  81835c:	18ffe004 	addi	r3,r3,-128
  818360:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  818364:	e0bffa17 	ldw	r2,-24(fp)
  818368:	10800d17 	ldw	r2,52(r2)
  81836c:	10800044 	addi	r2,r2,1
  818370:	10c1ffcc 	andi	r3,r2,2047
  818374:	e0bffa17 	ldw	r2,-24(fp)
  818378:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  81837c:	e0bff917 	ldw	r2,-28(fp)
  818380:	10bfffc4 	addi	r2,r2,-1
  818384:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  818388:	e0bff917 	ldw	r2,-28(fp)
  81838c:	10000526 	beq	r2,zero,8183a4 <altera_avalon_jtag_uart_irq+0x1ac>
  818390:	e0bffa17 	ldw	r2,-24(fp)
  818394:	10c00d17 	ldw	r3,52(r2)
  818398:	e0bffa17 	ldw	r2,-24(fp)
  81839c:	10800c17 	ldw	r2,48(r2)
  8183a0:	18bfe51e 	bne	r3,r2,818338 <__alt_data_end+0xff818338>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  8183a4:	e0bff917 	ldw	r2,-28(fp)
  8183a8:	10001026 	beq	r2,zero,8183ec <altera_avalon_jtag_uart_irq+0x1f4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  8183ac:	e0bffa17 	ldw	r2,-24(fp)
  8183b0:	10c00817 	ldw	r3,32(r2)
  8183b4:	00bfff44 	movi	r2,-3
  8183b8:	1886703a 	and	r3,r3,r2
  8183bc:	e0bffa17 	ldw	r2,-24(fp)
  8183c0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  8183c4:	e0bffa17 	ldw	r2,-24(fp)
  8183c8:	10800017 	ldw	r2,0(r2)
  8183cc:	10800104 	addi	r2,r2,4
  8183d0:	1007883a 	mov	r3,r2
  8183d4:	e0bffa17 	ldw	r2,-24(fp)
  8183d8:	10800817 	ldw	r2,32(r2)
  8183dc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  8183e0:	e0bffb17 	ldw	r2,-20(fp)
  8183e4:	10800104 	addi	r2,r2,4
  8183e8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  8183ec:	003f8c06 	br	818220 <__alt_data_end+0xff818220>
}
  8183f0:	e037883a 	mov	sp,fp
  8183f4:	df000017 	ldw	fp,0(sp)
  8183f8:	dec00104 	addi	sp,sp,4
  8183fc:	f800283a 	ret

00818400 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  818400:	defff804 	addi	sp,sp,-32
  818404:	df000715 	stw	fp,28(sp)
  818408:	df000704 	addi	fp,sp,28
  81840c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  818410:	e0bffb17 	ldw	r2,-20(fp)
  818414:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  818418:	e0bff917 	ldw	r2,-28(fp)
  81841c:	10800017 	ldw	r2,0(r2)
  818420:	10800104 	addi	r2,r2,4
  818424:	10800037 	ldwio	r2,0(r2)
  818428:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  81842c:	e0bffa17 	ldw	r2,-24(fp)
  818430:	1081000c 	andi	r2,r2,1024
  818434:	10000b26 	beq	r2,zero,818464 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  818438:	e0bff917 	ldw	r2,-28(fp)
  81843c:	10800017 	ldw	r2,0(r2)
  818440:	10800104 	addi	r2,r2,4
  818444:	1007883a 	mov	r3,r2
  818448:	e0bff917 	ldw	r2,-28(fp)
  81844c:	10800817 	ldw	r2,32(r2)
  818450:	10810014 	ori	r2,r2,1024
  818454:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  818458:	e0bff917 	ldw	r2,-28(fp)
  81845c:	10000915 	stw	zero,36(r2)
  818460:	00000a06 	br	81848c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  818464:	e0bff917 	ldw	r2,-28(fp)
  818468:	10c00917 	ldw	r3,36(r2)
  81846c:	00a00034 	movhi	r2,32768
  818470:	10bfff04 	addi	r2,r2,-4
  818474:	10c00536 	bltu	r2,r3,81848c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  818478:	e0bff917 	ldw	r2,-28(fp)
  81847c:	10800917 	ldw	r2,36(r2)
  818480:	10c00044 	addi	r3,r2,1
  818484:	e0bff917 	ldw	r2,-28(fp)
  818488:	10c00915 	stw	r3,36(r2)
  81848c:	008020b4 	movhi	r2,130
  818490:	10be5804 	addi	r2,r2,-1696
  818494:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  818498:	e037883a 	mov	sp,fp
  81849c:	df000017 	ldw	fp,0(sp)
  8184a0:	dec00104 	addi	sp,sp,4
  8184a4:	f800283a 	ret

008184a8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  8184a8:	defffd04 	addi	sp,sp,-12
  8184ac:	df000215 	stw	fp,8(sp)
  8184b0:	df000204 	addi	fp,sp,8
  8184b4:	e13ffe15 	stw	r4,-8(fp)
  8184b8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  8184bc:	00000506 	br	8184d4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  8184c0:	e0bfff17 	ldw	r2,-4(fp)
  8184c4:	1090000c 	andi	r2,r2,16384
  8184c8:	10000226 	beq	r2,zero,8184d4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  8184cc:	00bffd44 	movi	r2,-11
  8184d0:	00000b06 	br	818500 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  8184d4:	e0bffe17 	ldw	r2,-8(fp)
  8184d8:	10c00d17 	ldw	r3,52(r2)
  8184dc:	e0bffe17 	ldw	r2,-8(fp)
  8184e0:	10800c17 	ldw	r2,48(r2)
  8184e4:	18800526 	beq	r3,r2,8184fc <altera_avalon_jtag_uart_close+0x54>
  8184e8:	e0bffe17 	ldw	r2,-8(fp)
  8184ec:	10c00917 	ldw	r3,36(r2)
  8184f0:	e0bffe17 	ldw	r2,-8(fp)
  8184f4:	10800117 	ldw	r2,4(r2)
  8184f8:	18bff136 	bltu	r3,r2,8184c0 <__alt_data_end+0xff8184c0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  8184fc:	0005883a 	mov	r2,zero
}
  818500:	e037883a 	mov	sp,fp
  818504:	df000017 	ldw	fp,0(sp)
  818508:	dec00104 	addi	sp,sp,4
  81850c:	f800283a 	ret

00818510 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  818510:	defffa04 	addi	sp,sp,-24
  818514:	df000515 	stw	fp,20(sp)
  818518:	df000504 	addi	fp,sp,20
  81851c:	e13ffd15 	stw	r4,-12(fp)
  818520:	e17ffe15 	stw	r5,-8(fp)
  818524:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  818528:	00bff9c4 	movi	r2,-25
  81852c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  818530:	e0bffe17 	ldw	r2,-8(fp)
  818534:	10da8060 	cmpeqi	r3,r2,27137
  818538:	1800031e 	bne	r3,zero,818548 <altera_avalon_jtag_uart_ioctl+0x38>
  81853c:	109a80a0 	cmpeqi	r2,r2,27138
  818540:	1000191e 	bne	r2,zero,8185a8 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  818544:	00002806 	br	8185e8 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  818548:	e0bffd17 	ldw	r2,-12(fp)
  81854c:	10c00117 	ldw	r3,4(r2)
  818550:	00a00034 	movhi	r2,32768
  818554:	10bfffc4 	addi	r2,r2,-1
  818558:	18801226 	beq	r3,r2,8185a4 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
  81855c:	e0bfff17 	ldw	r2,-4(fp)
  818560:	10800017 	ldw	r2,0(r2)
  818564:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  818568:	e0bffc17 	ldw	r2,-16(fp)
  81856c:	10800090 	cmplti	r2,r2,2
  818570:	1000061e 	bne	r2,zero,81858c <altera_avalon_jtag_uart_ioctl+0x7c>
  818574:	e0fffc17 	ldw	r3,-16(fp)
  818578:	00a00034 	movhi	r2,32768
  81857c:	10bfffc4 	addi	r2,r2,-1
  818580:	18800226 	beq	r3,r2,81858c <altera_avalon_jtag_uart_ioctl+0x7c>
  818584:	e0bffc17 	ldw	r2,-16(fp)
  818588:	00000206 	br	818594 <altera_avalon_jtag_uart_ioctl+0x84>
  81858c:	00a00034 	movhi	r2,32768
  818590:	10bfff84 	addi	r2,r2,-2
  818594:	e0fffd17 	ldw	r3,-12(fp)
  818598:	18800115 	stw	r2,4(r3)
      rc = 0;
  81859c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  8185a0:	00001106 	br	8185e8 <altera_avalon_jtag_uart_ioctl+0xd8>
  8185a4:	00001006 	br	8185e8 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  8185a8:	e0bffd17 	ldw	r2,-12(fp)
  8185ac:	10c00117 	ldw	r3,4(r2)
  8185b0:	00a00034 	movhi	r2,32768
  8185b4:	10bfffc4 	addi	r2,r2,-1
  8185b8:	18800a26 	beq	r3,r2,8185e4 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  8185bc:	e0bffd17 	ldw	r2,-12(fp)
  8185c0:	10c00917 	ldw	r3,36(r2)
  8185c4:	e0bffd17 	ldw	r2,-12(fp)
  8185c8:	10800117 	ldw	r2,4(r2)
  8185cc:	1885803a 	cmpltu	r2,r3,r2
  8185d0:	10c03fcc 	andi	r3,r2,255
  8185d4:	e0bfff17 	ldw	r2,-4(fp)
  8185d8:	10c00015 	stw	r3,0(r2)
      rc = 0;
  8185dc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  8185e0:	00000006 	br	8185e4 <altera_avalon_jtag_uart_ioctl+0xd4>
  8185e4:	0001883a 	nop

  default:
    break;
  }

  return rc;
  8185e8:	e0bffb17 	ldw	r2,-20(fp)
}
  8185ec:	e037883a 	mov	sp,fp
  8185f0:	df000017 	ldw	fp,0(sp)
  8185f4:	dec00104 	addi	sp,sp,4
  8185f8:	f800283a 	ret

008185fc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  8185fc:	defff304 	addi	sp,sp,-52
  818600:	dfc00c15 	stw	ra,48(sp)
  818604:	df000b15 	stw	fp,44(sp)
  818608:	df000b04 	addi	fp,sp,44
  81860c:	e13ffc15 	stw	r4,-16(fp)
  818610:	e17ffd15 	stw	r5,-12(fp)
  818614:	e1bffe15 	stw	r6,-8(fp)
  818618:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  81861c:	e0bffd17 	ldw	r2,-12(fp)
  818620:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  818624:	00004906 	br	81874c <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  818628:	e0bffc17 	ldw	r2,-16(fp)
  81862c:	10800a17 	ldw	r2,40(r2)
  818630:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  818634:	e0bffc17 	ldw	r2,-16(fp)
  818638:	10800b17 	ldw	r2,44(r2)
  81863c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  818640:	e0fff717 	ldw	r3,-36(fp)
  818644:	e0bff817 	ldw	r2,-32(fp)
  818648:	18800536 	bltu	r3,r2,818660 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  81864c:	e0fff717 	ldw	r3,-36(fp)
  818650:	e0bff817 	ldw	r2,-32(fp)
  818654:	1885c83a 	sub	r2,r3,r2
  818658:	e0bff615 	stw	r2,-40(fp)
  81865c:	00000406 	br	818670 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  818660:	00c20004 	movi	r3,2048
  818664:	e0bff817 	ldw	r2,-32(fp)
  818668:	1885c83a 	sub	r2,r3,r2
  81866c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  818670:	e0bff617 	ldw	r2,-40(fp)
  818674:	1000011e 	bne	r2,zero,81867c <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
  818678:	00001d06 	br	8186f0 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
  81867c:	e0fffe17 	ldw	r3,-8(fp)
  818680:	e0bff617 	ldw	r2,-40(fp)
  818684:	1880022e 	bgeu	r3,r2,818690 <altera_avalon_jtag_uart_read+0x94>
        n = space;
  818688:	e0bffe17 	ldw	r2,-8(fp)
  81868c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  818690:	e0bff817 	ldw	r2,-32(fp)
  818694:	10800e04 	addi	r2,r2,56
  818698:	e0fffc17 	ldw	r3,-16(fp)
  81869c:	1885883a 	add	r2,r3,r2
  8186a0:	e13ff517 	ldw	r4,-44(fp)
  8186a4:	100b883a 	mov	r5,r2
  8186a8:	e1bff617 	ldw	r6,-40(fp)
  8186ac:	0808f440 	call	808f44 <memcpy>
      ptr   += n;
  8186b0:	e0fff517 	ldw	r3,-44(fp)
  8186b4:	e0bff617 	ldw	r2,-40(fp)
  8186b8:	1885883a 	add	r2,r3,r2
  8186bc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  8186c0:	e0fffe17 	ldw	r3,-8(fp)
  8186c4:	e0bff617 	ldw	r2,-40(fp)
  8186c8:	1885c83a 	sub	r2,r3,r2
  8186cc:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8186d0:	e0fff817 	ldw	r3,-32(fp)
  8186d4:	e0bff617 	ldw	r2,-40(fp)
  8186d8:	1885883a 	add	r2,r3,r2
  8186dc:	10c1ffcc 	andi	r3,r2,2047
  8186e0:	e0bffc17 	ldw	r2,-16(fp)
  8186e4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  8186e8:	e0bffe17 	ldw	r2,-8(fp)
  8186ec:	00bfce16 	blt	zero,r2,818628 <__alt_data_end+0xff818628>

    /* If we read any data then return it */
    if (ptr != buffer)
  8186f0:	e0fff517 	ldw	r3,-44(fp)
  8186f4:	e0bffd17 	ldw	r2,-12(fp)
  8186f8:	18800126 	beq	r3,r2,818700 <altera_avalon_jtag_uart_read+0x104>
      break;
  8186fc:	00001506 	br	818754 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  818700:	e0bfff17 	ldw	r2,-4(fp)
  818704:	1090000c 	andi	r2,r2,16384
  818708:	10000126 	beq	r2,zero,818710 <altera_avalon_jtag_uart_read+0x114>
      break;
  81870c:	00001106 	br	818754 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  818710:	0001883a 	nop
  818714:	e0bffc17 	ldw	r2,-16(fp)
  818718:	10c00a17 	ldw	r3,40(r2)
  81871c:	e0bff717 	ldw	r2,-36(fp)
  818720:	1880051e 	bne	r3,r2,818738 <altera_avalon_jtag_uart_read+0x13c>
  818724:	e0bffc17 	ldw	r2,-16(fp)
  818728:	10c00917 	ldw	r3,36(r2)
  81872c:	e0bffc17 	ldw	r2,-16(fp)
  818730:	10800117 	ldw	r2,4(r2)
  818734:	18bff736 	bltu	r3,r2,818714 <__alt_data_end+0xff818714>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  818738:	e0bffc17 	ldw	r2,-16(fp)
  81873c:	10c00a17 	ldw	r3,40(r2)
  818740:	e0bff717 	ldw	r2,-36(fp)
  818744:	1880011e 	bne	r3,r2,81874c <altera_avalon_jtag_uart_read+0x150>
      break;
  818748:	00000206 	br	818754 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  81874c:	e0bffe17 	ldw	r2,-8(fp)
  818750:	00bfb516 	blt	zero,r2,818628 <__alt_data_end+0xff818628>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  818754:	e0fff517 	ldw	r3,-44(fp)
  818758:	e0bffd17 	ldw	r2,-12(fp)
  81875c:	18801826 	beq	r3,r2,8187c0 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  818760:	0005303a 	rdctl	r2,status
  818764:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  818768:	e0fffa17 	ldw	r3,-24(fp)
  81876c:	00bfff84 	movi	r2,-2
  818770:	1884703a 	and	r2,r3,r2
  818774:	1001703a 	wrctl	status,r2
  
  return context;
  818778:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  81877c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  818780:	e0bffc17 	ldw	r2,-16(fp)
  818784:	10800817 	ldw	r2,32(r2)
  818788:	10c00054 	ori	r3,r2,1
  81878c:	e0bffc17 	ldw	r2,-16(fp)
  818790:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  818794:	e0bffc17 	ldw	r2,-16(fp)
  818798:	10800017 	ldw	r2,0(r2)
  81879c:	10800104 	addi	r2,r2,4
  8187a0:	1007883a 	mov	r3,r2
  8187a4:	e0bffc17 	ldw	r2,-16(fp)
  8187a8:	10800817 	ldw	r2,32(r2)
  8187ac:	18800035 	stwio	r2,0(r3)
  8187b0:	e0bff917 	ldw	r2,-28(fp)
  8187b4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8187b8:	e0bffb17 	ldw	r2,-20(fp)
  8187bc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  8187c0:	e0fff517 	ldw	r3,-44(fp)
  8187c4:	e0bffd17 	ldw	r2,-12(fp)
  8187c8:	18800426 	beq	r3,r2,8187dc <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
  8187cc:	e0fff517 	ldw	r3,-44(fp)
  8187d0:	e0bffd17 	ldw	r2,-12(fp)
  8187d4:	1885c83a 	sub	r2,r3,r2
  8187d8:	00000606 	br	8187f4 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
  8187dc:	e0bfff17 	ldw	r2,-4(fp)
  8187e0:	1090000c 	andi	r2,r2,16384
  8187e4:	10000226 	beq	r2,zero,8187f0 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
  8187e8:	00bffd44 	movi	r2,-11
  8187ec:	00000106 	br	8187f4 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
  8187f0:	00bffec4 	movi	r2,-5
}
  8187f4:	e037883a 	mov	sp,fp
  8187f8:	dfc00117 	ldw	ra,4(sp)
  8187fc:	df000017 	ldw	fp,0(sp)
  818800:	dec00204 	addi	sp,sp,8
  818804:	f800283a 	ret

00818808 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  818808:	defff304 	addi	sp,sp,-52
  81880c:	dfc00c15 	stw	ra,48(sp)
  818810:	df000b15 	stw	fp,44(sp)
  818814:	df000b04 	addi	fp,sp,44
  818818:	e13ffc15 	stw	r4,-16(fp)
  81881c:	e17ffd15 	stw	r5,-12(fp)
  818820:	e1bffe15 	stw	r6,-8(fp)
  818824:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  818828:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  81882c:	e0bffd17 	ldw	r2,-12(fp)
  818830:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  818834:	00003806 	br	818918 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  818838:	e0bffc17 	ldw	r2,-16(fp)
  81883c:	10800c17 	ldw	r2,48(r2)
  818840:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
  818844:	e0bffc17 	ldw	r2,-16(fp)
  818848:	10800d17 	ldw	r2,52(r2)
  81884c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  818850:	e0fff817 	ldw	r3,-32(fp)
  818854:	e0bff517 	ldw	r2,-44(fp)
  818858:	1880062e 	bgeu	r3,r2,818874 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  81885c:	e0fff517 	ldw	r3,-44(fp)
  818860:	e0bff817 	ldw	r2,-32(fp)
  818864:	1885c83a 	sub	r2,r3,r2
  818868:	10bfffc4 	addi	r2,r2,-1
  81886c:	e0bff615 	stw	r2,-40(fp)
  818870:	00000b06 	br	8188a0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  818874:	e0bff517 	ldw	r2,-44(fp)
  818878:	10000526 	beq	r2,zero,818890 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  81887c:	00c20004 	movi	r3,2048
  818880:	e0bff817 	ldw	r2,-32(fp)
  818884:	1885c83a 	sub	r2,r3,r2
  818888:	e0bff615 	stw	r2,-40(fp)
  81888c:	00000406 	br	8188a0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  818890:	00c1ffc4 	movi	r3,2047
  818894:	e0bff817 	ldw	r2,-32(fp)
  818898:	1885c83a 	sub	r2,r3,r2
  81889c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  8188a0:	e0bff617 	ldw	r2,-40(fp)
  8188a4:	1000011e 	bne	r2,zero,8188ac <altera_avalon_jtag_uart_write+0xa4>
        break;
  8188a8:	00001d06 	br	818920 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
  8188ac:	e0fffe17 	ldw	r3,-8(fp)
  8188b0:	e0bff617 	ldw	r2,-40(fp)
  8188b4:	1880022e 	bgeu	r3,r2,8188c0 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
  8188b8:	e0bffe17 	ldw	r2,-8(fp)
  8188bc:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  8188c0:	e0bff817 	ldw	r2,-32(fp)
  8188c4:	10820e04 	addi	r2,r2,2104
  8188c8:	e0fffc17 	ldw	r3,-16(fp)
  8188cc:	1885883a 	add	r2,r3,r2
  8188d0:	1009883a 	mov	r4,r2
  8188d4:	e17ffd17 	ldw	r5,-12(fp)
  8188d8:	e1bff617 	ldw	r6,-40(fp)
  8188dc:	0808f440 	call	808f44 <memcpy>
      ptr   += n;
  8188e0:	e0fffd17 	ldw	r3,-12(fp)
  8188e4:	e0bff617 	ldw	r2,-40(fp)
  8188e8:	1885883a 	add	r2,r3,r2
  8188ec:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  8188f0:	e0fffe17 	ldw	r3,-8(fp)
  8188f4:	e0bff617 	ldw	r2,-40(fp)
  8188f8:	1885c83a 	sub	r2,r3,r2
  8188fc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  818900:	e0fff817 	ldw	r3,-32(fp)
  818904:	e0bff617 	ldw	r2,-40(fp)
  818908:	1885883a 	add	r2,r3,r2
  81890c:	10c1ffcc 	andi	r3,r2,2047
  818910:	e0bffc17 	ldw	r2,-16(fp)
  818914:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  818918:	e0bffe17 	ldw	r2,-8(fp)
  81891c:	00bfc616 	blt	zero,r2,818838 <__alt_data_end+0xff818838>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  818920:	0005303a 	rdctl	r2,status
  818924:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  818928:	e0fffa17 	ldw	r3,-24(fp)
  81892c:	00bfff84 	movi	r2,-2
  818930:	1884703a 	and	r2,r3,r2
  818934:	1001703a 	wrctl	status,r2
  
  return context;
  818938:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  81893c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  818940:	e0bffc17 	ldw	r2,-16(fp)
  818944:	10800817 	ldw	r2,32(r2)
  818948:	10c00094 	ori	r3,r2,2
  81894c:	e0bffc17 	ldw	r2,-16(fp)
  818950:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  818954:	e0bffc17 	ldw	r2,-16(fp)
  818958:	10800017 	ldw	r2,0(r2)
  81895c:	10800104 	addi	r2,r2,4
  818960:	1007883a 	mov	r3,r2
  818964:	e0bffc17 	ldw	r2,-16(fp)
  818968:	10800817 	ldw	r2,32(r2)
  81896c:	18800035 	stwio	r2,0(r3)
  818970:	e0bff917 	ldw	r2,-28(fp)
  818974:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  818978:	e0bffb17 	ldw	r2,-20(fp)
  81897c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  818980:	e0bffe17 	ldw	r2,-8(fp)
  818984:	0080120e 	bge	zero,r2,8189d0 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  818988:	e0bfff17 	ldw	r2,-4(fp)
  81898c:	1090000c 	andi	r2,r2,16384
  818990:	10000126 	beq	r2,zero,818998 <altera_avalon_jtag_uart_write+0x190>
        break;
  818994:	00001006 	br	8189d8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  818998:	0001883a 	nop
  81899c:	e0bffc17 	ldw	r2,-16(fp)
  8189a0:	10c00d17 	ldw	r3,52(r2)
  8189a4:	e0bff517 	ldw	r2,-44(fp)
  8189a8:	1880051e 	bne	r3,r2,8189c0 <altera_avalon_jtag_uart_write+0x1b8>
  8189ac:	e0bffc17 	ldw	r2,-16(fp)
  8189b0:	10c00917 	ldw	r3,36(r2)
  8189b4:	e0bffc17 	ldw	r2,-16(fp)
  8189b8:	10800117 	ldw	r2,4(r2)
  8189bc:	18bff736 	bltu	r3,r2,81899c <__alt_data_end+0xff81899c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  8189c0:	e0bffc17 	ldw	r2,-16(fp)
  8189c4:	10800917 	ldw	r2,36(r2)
  8189c8:	10000126 	beq	r2,zero,8189d0 <altera_avalon_jtag_uart_write+0x1c8>
         break;
  8189cc:	00000206 	br	8189d8 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
  8189d0:	e0bffe17 	ldw	r2,-8(fp)
  8189d4:	00bf9716 	blt	zero,r2,818834 <__alt_data_end+0xff818834>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  8189d8:	e0fffd17 	ldw	r3,-12(fp)
  8189dc:	e0bff717 	ldw	r2,-36(fp)
  8189e0:	18800426 	beq	r3,r2,8189f4 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
  8189e4:	e0fffd17 	ldw	r3,-12(fp)
  8189e8:	e0bff717 	ldw	r2,-36(fp)
  8189ec:	1885c83a 	sub	r2,r3,r2
  8189f0:	00000606 	br	818a0c <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
  8189f4:	e0bfff17 	ldw	r2,-4(fp)
  8189f8:	1090000c 	andi	r2,r2,16384
  8189fc:	10000226 	beq	r2,zero,818a08 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
  818a00:	00bffd44 	movi	r2,-11
  818a04:	00000106 	br	818a0c <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  818a08:	00bffec4 	movi	r2,-5
}
  818a0c:	e037883a 	mov	sp,fp
  818a10:	dfc00117 	ldw	ra,4(sp)
  818a14:	df000017 	ldw	fp,0(sp)
  818a18:	dec00204 	addi	sp,sp,8
  818a1c:	f800283a 	ret

00818a20 <lcd_write_command>:

/* --------------------------------------------------------------------- */

static void lcd_write_command(altera_avalon_lcd_16207_state* sp, 
  unsigned char command)
{
  818a20:	defffa04 	addi	sp,sp,-24
  818a24:	dfc00515 	stw	ra,20(sp)
  818a28:	df000415 	stw	fp,16(sp)
  818a2c:	df000404 	addi	fp,sp,16
  818a30:	e13ffe15 	stw	r4,-8(fp)
  818a34:	2805883a 	mov	r2,r5
  818a38:	e0bfff05 	stb	r2,-4(fp)
  unsigned int base = sp->base;
  818a3c:	e0bffe17 	ldw	r2,-8(fp)
  818a40:	10800017 	ldw	r2,0(r2)
  818a44:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
  818a48:	008003f4 	movhi	r2,15
  818a4c:	10909004 	addi	r2,r2,16960
  818a50:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
  818a54:	e0bffe17 	ldw	r2,-8(fp)
  818a58:	10800803 	ldbu	r2,32(r2)
  818a5c:	10803fcc 	andi	r2,r2,255
  818a60:	1080201c 	xori	r2,r2,128
  818a64:	10bfe004 	addi	r2,r2,-128
  818a68:	10000126 	beq	r2,zero,818a70 <lcd_write_command+0x50>
    return;
  818a6c:	00001406 	br	818ac0 <lcd_write_command+0xa0>

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  818a70:	00000906 	br	818a98 <lcd_write_command+0x78>
    if (--i == 0)
  818a74:	e0bffc17 	ldw	r2,-16(fp)
  818a78:	10bfffc4 	addi	r2,r2,-1
  818a7c:	e0bffc15 	stw	r2,-16(fp)
  818a80:	e0bffc17 	ldw	r2,-16(fp)
  818a84:	1000041e 	bne	r2,zero,818a98 <lcd_write_command+0x78>
    {
      sp->broken = 1;
  818a88:	e0bffe17 	ldw	r2,-8(fp)
  818a8c:	00c00044 	movi	r3,1
  818a90:	10c00805 	stb	r3,32(r2)
      return;
  818a94:	00000a06 	br	818ac0 <lcd_write_command+0xa0>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  818a98:	e0bffd17 	ldw	r2,-12(fp)
  818a9c:	10800104 	addi	r2,r2,4
  818aa0:	10800037 	ldwio	r2,0(r2)
  818aa4:	1080200c 	andi	r2,r2,128
  818aa8:	103ff21e 	bne	r2,zero,818a74 <__alt_data_end+0xff818a74>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
  818aac:	01001904 	movi	r4,100
  818ab0:	0817d480 	call	817d48 <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, command);
  818ab4:	e0bffd17 	ldw	r2,-12(fp)
  818ab8:	e0ffff03 	ldbu	r3,-4(fp)
  818abc:	10c00035 	stwio	r3,0(r2)
}
  818ac0:	e037883a 	mov	sp,fp
  818ac4:	dfc00117 	ldw	ra,4(sp)
  818ac8:	df000017 	ldw	fp,0(sp)
  818acc:	dec00204 	addi	sp,sp,8
  818ad0:	f800283a 	ret

00818ad4 <lcd_write_data>:

/* --------------------------------------------------------------------- */

static void lcd_write_data(altera_avalon_lcd_16207_state* sp, 
  unsigned char data)
{
  818ad4:	defffa04 	addi	sp,sp,-24
  818ad8:	dfc00515 	stw	ra,20(sp)
  818adc:	df000415 	stw	fp,16(sp)
  818ae0:	df000404 	addi	fp,sp,16
  818ae4:	e13ffe15 	stw	r4,-8(fp)
  818ae8:	2805883a 	mov	r2,r5
  818aec:	e0bfff05 	stb	r2,-4(fp)
  unsigned int base = sp->base;
  818af0:	e0bffe17 	ldw	r2,-8(fp)
  818af4:	10800017 	ldw	r2,0(r2)
  818af8:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
  818afc:	008003f4 	movhi	r2,15
  818b00:	10909004 	addi	r2,r2,16960
  818b04:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
  818b08:	e0bffe17 	ldw	r2,-8(fp)
  818b0c:	10800803 	ldbu	r2,32(r2)
  818b10:	10803fcc 	andi	r2,r2,255
  818b14:	1080201c 	xori	r2,r2,128
  818b18:	10bfe004 	addi	r2,r2,-128
  818b1c:	10000126 	beq	r2,zero,818b24 <lcd_write_data+0x50>
    return;
  818b20:	00001c06 	br	818b94 <lcd_write_data+0xc0>

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  818b24:	00000906 	br	818b4c <lcd_write_data+0x78>
    if (--i == 0)
  818b28:	e0bffc17 	ldw	r2,-16(fp)
  818b2c:	10bfffc4 	addi	r2,r2,-1
  818b30:	e0bffc15 	stw	r2,-16(fp)
  818b34:	e0bffc17 	ldw	r2,-16(fp)
  818b38:	1000041e 	bne	r2,zero,818b4c <lcd_write_data+0x78>
    {
      sp->broken = 1;
  818b3c:	e0bffe17 	ldw	r2,-8(fp)
  818b40:	00c00044 	movi	r3,1
  818b44:	10c00805 	stb	r3,32(r2)
      return;
  818b48:	00001206 	br	818b94 <lcd_write_data+0xc0>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  818b4c:	e0bffd17 	ldw	r2,-12(fp)
  818b50:	10800104 	addi	r2,r2,4
  818b54:	10800037 	ldwio	r2,0(r2)
  818b58:	1080200c 	andi	r2,r2,128
  818b5c:	103ff21e 	bne	r2,zero,818b28 <__alt_data_end+0xff818b28>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
  818b60:	01001904 	movi	r4,100
  818b64:	0817d480 	call	817d48 <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_DATA(base, data);
  818b68:	e0bffd17 	ldw	r2,-12(fp)
  818b6c:	10800204 	addi	r2,r2,8
  818b70:	1007883a 	mov	r3,r2
  818b74:	e0bfff03 	ldbu	r2,-4(fp)
  818b78:	18800035 	stwio	r2,0(r3)

  sp->address++;
  818b7c:	e0bffe17 	ldw	r2,-8(fp)
  818b80:	108008c3 	ldbu	r2,35(r2)
  818b84:	10800044 	addi	r2,r2,1
  818b88:	1007883a 	mov	r3,r2
  818b8c:	e0bffe17 	ldw	r2,-8(fp)
  818b90:	10c008c5 	stb	r3,35(r2)
}
  818b94:	e037883a 	mov	sp,fp
  818b98:	dfc00117 	ldw	ra,4(sp)
  818b9c:	df000017 	ldw	fp,0(sp)
  818ba0:	dec00204 	addi	sp,sp,8
  818ba4:	f800283a 	ret

00818ba8 <lcd_clear_screen>:

/* --------------------------------------------------------------------- */

static void lcd_clear_screen(altera_avalon_lcd_16207_state* sp)
{
  818ba8:	defffc04 	addi	sp,sp,-16
  818bac:	dfc00315 	stw	ra,12(sp)
  818bb0:	df000215 	stw	fp,8(sp)
  818bb4:	df000204 	addi	fp,sp,8
  818bb8:	e13fff15 	stw	r4,-4(fp)
  int y;

  lcd_write_command(sp, LCD_CMD_CLEAR);
  818bbc:	e13fff17 	ldw	r4,-4(fp)
  818bc0:	01400044 	movi	r5,1
  818bc4:	0818a200 	call	818a20 <lcd_write_command>

  sp->x = 0;
  818bc8:	e0bfff17 	ldw	r2,-4(fp)
  818bcc:	10000845 	stb	zero,33(r2)
  sp->y = 0;
  818bd0:	e0bfff17 	ldw	r2,-4(fp)
  818bd4:	10000885 	stb	zero,34(r2)
  sp->address = 0;
  818bd8:	e0bfff17 	ldw	r2,-4(fp)
  818bdc:	100008c5 	stb	zero,35(r2)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  818be0:	e03ffe15 	stw	zero,-8(fp)
  818be4:	00001b06 	br	818c54 <lcd_clear_screen+0xac>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
  818be8:	e0bffe17 	ldw	r2,-8(fp)
  818bec:	108018e4 	muli	r2,r2,99
  818bf0:	10801004 	addi	r2,r2,64
  818bf4:	e0ffff17 	ldw	r3,-4(fp)
  818bf8:	1885883a 	add	r2,r3,r2
  818bfc:	1009883a 	mov	r4,r2
  818c00:	01400804 	movi	r5,32
  818c04:	01801444 	movi	r6,81
  818c08:	0802a600 	call	802a60 <memset>
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
  818c0c:	e0bffe17 	ldw	r2,-8(fp)
  818c10:	108018e4 	muli	r2,r2,99
  818c14:	10800c04 	addi	r2,r2,48
  818c18:	e0ffff17 	ldw	r3,-4(fp)
  818c1c:	1885883a 	add	r2,r3,r2
  818c20:	1009883a 	mov	r4,r2
  818c24:	01400804 	movi	r5,32
  818c28:	01800404 	movi	r6,16
  818c2c:	0802a600 	call	802a60 <memset>
    sp->line[y].width = 0;
  818c30:	e0ffff17 	ldw	r3,-4(fp)
  818c34:	e0bffe17 	ldw	r2,-8(fp)
  818c38:	108018e4 	muli	r2,r2,99
  818c3c:	10802404 	addi	r2,r2,144
  818c40:	1885883a 	add	r2,r3,r2
  818c44:	10000045 	stb	zero,1(r2)

  sp->x = 0;
  sp->y = 0;
  sp->address = 0;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  818c48:	e0bffe17 	ldw	r2,-8(fp)
  818c4c:	10800044 	addi	r2,r2,1
  818c50:	e0bffe15 	stw	r2,-8(fp)
  818c54:	e0bffe17 	ldw	r2,-8(fp)
  818c58:	10800090 	cmplti	r2,r2,2
  818c5c:	103fe21e 	bne	r2,zero,818be8 <__alt_data_end+0xff818be8>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
    sp->line[y].width = 0;
  }
}
  818c60:	e037883a 	mov	sp,fp
  818c64:	dfc00117 	ldw	ra,4(sp)
  818c68:	df000017 	ldw	fp,0(sp)
  818c6c:	dec00204 	addi	sp,sp,8
  818c70:	f800283a 	ret

00818c74 <lcd_repaint_screen>:

/* --------------------------------------------------------------------- */

static void lcd_repaint_screen(altera_avalon_lcd_16207_state* sp)
{
  818c74:	defff704 	addi	sp,sp,-36
  818c78:	dfc00815 	stw	ra,32(sp)
  818c7c:	df000715 	stw	fp,28(sp)
  818c80:	df000704 	addi	fp,sp,28
  818c84:	e13fff15 	stw	r4,-4(fp)
  /* scrollpos controls how much the lines have scrolled round.  The speed
   * each line scrolls at is controlled by its speed variable - while
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;
  818c88:	e0bfff17 	ldw	r2,-4(fp)
  818c8c:	10800943 	ldbu	r2,37(r2)
  818c90:	10803fcc 	andi	r2,r2,255
  818c94:	e0bffc15 	stw	r2,-16(fp)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  818c98:	e03ff915 	stw	zero,-28(fp)
  818c9c:	00006706 	br	818e3c <lcd_repaint_screen+0x1c8>
  {
    int width  = sp->line[y].width;
  818ca0:	e0ffff17 	ldw	r3,-4(fp)
  818ca4:	e0bff917 	ldw	r2,-28(fp)
  818ca8:	108018e4 	muli	r2,r2,99
  818cac:	10802404 	addi	r2,r2,144
  818cb0:	1885883a 	add	r2,r3,r2
  818cb4:	10800043 	ldbu	r2,1(r2)
  818cb8:	10803fcc 	andi	r2,r2,255
  818cbc:	1080201c 	xori	r2,r2,128
  818cc0:	10bfe004 	addi	r2,r2,-128
  818cc4:	e0bffd15 	stw	r2,-12(fp)
    int offset = (scrollpos * sp->line[y].speed) >> 8;
  818cc8:	e0ffff17 	ldw	r3,-4(fp)
  818ccc:	e0bff917 	ldw	r2,-28(fp)
  818cd0:	108018e4 	muli	r2,r2,99
  818cd4:	10802404 	addi	r2,r2,144
  818cd8:	1885883a 	add	r2,r3,r2
  818cdc:	10800083 	ldbu	r2,2(r2)
  818ce0:	10c03fcc 	andi	r3,r2,255
  818ce4:	e0bffc17 	ldw	r2,-16(fp)
  818ce8:	1885383a 	mul	r2,r3,r2
  818cec:	1005d23a 	srai	r2,r2,8
  818cf0:	e0bffb15 	stw	r2,-20(fp)
    if (offset >= width)
  818cf4:	e0fffb17 	ldw	r3,-20(fp)
  818cf8:	e0bffd17 	ldw	r2,-12(fp)
  818cfc:	18800116 	blt	r3,r2,818d04 <lcd_repaint_screen+0x90>
      offset = 0;
  818d00:	e03ffb15 	stw	zero,-20(fp)

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
  818d04:	e03ffa15 	stw	zero,-24(fp)
  818d08:	00004606 	br	818e24 <lcd_repaint_screen+0x1b0>
    {
      char c = sp->line[y].data[(x + offset) % width];
  818d0c:	e0fffa17 	ldw	r3,-24(fp)
  818d10:	e0bffb17 	ldw	r2,-20(fp)
  818d14:	1885883a 	add	r2,r3,r2
  818d18:	1009883a 	mov	r4,r2
  818d1c:	e17ffd17 	ldw	r5,-12(fp)
  818d20:	08148900 	call	814890 <__modsi3>
  818d24:	1009883a 	mov	r4,r2
  818d28:	e0ffff17 	ldw	r3,-4(fp)
  818d2c:	e0bff917 	ldw	r2,-28(fp)
  818d30:	108018e4 	muli	r2,r2,99
  818d34:	1885883a 	add	r2,r3,r2
  818d38:	1105883a 	add	r2,r2,r4
  818d3c:	10801004 	addi	r2,r2,64
  818d40:	10800003 	ldbu	r2,0(r2)
  818d44:	e0bffe05 	stb	r2,-8(fp)

      /* Writing data takes 40us, so don't do it unless required */
      if (sp->line[y].visible[x] != c)
  818d48:	e0ffff17 	ldw	r3,-4(fp)
  818d4c:	e0bff917 	ldw	r2,-28(fp)
  818d50:	108018e4 	muli	r2,r2,99
  818d54:	1887883a 	add	r3,r3,r2
  818d58:	e0bffa17 	ldw	r2,-24(fp)
  818d5c:	1885883a 	add	r2,r3,r2
  818d60:	10800c04 	addi	r2,r2,48
  818d64:	10800003 	ldbu	r2,0(r2)
  818d68:	10c03fcc 	andi	r3,r2,255
  818d6c:	18c0201c 	xori	r3,r3,128
  818d70:	18ffe004 	addi	r3,r3,-128
  818d74:	e0bffe07 	ldb	r2,-8(fp)
  818d78:	18802726 	beq	r3,r2,818e18 <lcd_repaint_screen+0x1a4>
      {
        unsigned char address = x + colstart[y];
  818d7c:	e0fff917 	ldw	r3,-28(fp)
  818d80:	d0a00f04 	addi	r2,gp,-32708
  818d84:	1885883a 	add	r2,r3,r2
  818d88:	10800003 	ldbu	r2,0(r2)
  818d8c:	1007883a 	mov	r3,r2
  818d90:	e0bffa17 	ldw	r2,-24(fp)
  818d94:	1885883a 	add	r2,r3,r2
  818d98:	e0bffe45 	stb	r2,-7(fp)

        if (address != sp->address)
  818d9c:	e0fffe43 	ldbu	r3,-7(fp)
  818da0:	e0bfff17 	ldw	r2,-4(fp)
  818da4:	108008c3 	ldbu	r2,35(r2)
  818da8:	10803fcc 	andi	r2,r2,255
  818dac:	1080201c 	xori	r2,r2,128
  818db0:	10bfe004 	addi	r2,r2,-128
  818db4:	18800a26 	beq	r3,r2,818de0 <lcd_repaint_screen+0x16c>
        {
          lcd_write_command(sp, LCD_CMD_WRITE_DATA | address);
  818db8:	e0fffe43 	ldbu	r3,-7(fp)
  818dbc:	00bfe004 	movi	r2,-128
  818dc0:	1884b03a 	or	r2,r3,r2
  818dc4:	10803fcc 	andi	r2,r2,255
  818dc8:	e13fff17 	ldw	r4,-4(fp)
  818dcc:	100b883a 	mov	r5,r2
  818dd0:	0818a200 	call	818a20 <lcd_write_command>
          sp->address = address;
  818dd4:	e0fffe43 	ldbu	r3,-7(fp)
  818dd8:	e0bfff17 	ldw	r2,-4(fp)
  818ddc:	10c008c5 	stb	r3,35(r2)
        }

        lcd_write_data(sp, c);
  818de0:	e0bffe03 	ldbu	r2,-8(fp)
  818de4:	10803fcc 	andi	r2,r2,255
  818de8:	e13fff17 	ldw	r4,-4(fp)
  818dec:	100b883a 	mov	r5,r2
  818df0:	0818ad40 	call	818ad4 <lcd_write_data>
        sp->line[y].visible[x] = c;
  818df4:	e0ffff17 	ldw	r3,-4(fp)
  818df8:	e0bff917 	ldw	r2,-28(fp)
  818dfc:	108018e4 	muli	r2,r2,99
  818e00:	1887883a 	add	r3,r3,r2
  818e04:	e0bffa17 	ldw	r2,-24(fp)
  818e08:	1885883a 	add	r2,r3,r2
  818e0c:	10800c04 	addi	r2,r2,48
  818e10:	e0fffe03 	ldbu	r3,-8(fp)
  818e14:	10c00005 	stb	r3,0(r2)
    int width  = sp->line[y].width;
    int offset = (scrollpos * sp->line[y].speed) >> 8;
    if (offset >= width)
      offset = 0;

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
  818e18:	e0bffa17 	ldw	r2,-24(fp)
  818e1c:	10800044 	addi	r2,r2,1
  818e20:	e0bffa15 	stw	r2,-24(fp)
  818e24:	e0bffa17 	ldw	r2,-24(fp)
  818e28:	10800410 	cmplti	r2,r2,16
  818e2c:	103fb71e 	bne	r2,zero,818d0c <__alt_data_end+0xff818d0c>
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  818e30:	e0bff917 	ldw	r2,-28(fp)
  818e34:	10800044 	addi	r2,r2,1
  818e38:	e0bff915 	stw	r2,-28(fp)
  818e3c:	e0bff917 	ldw	r2,-28(fp)
  818e40:	10800090 	cmplti	r2,r2,2
  818e44:	103f961e 	bne	r2,zero,818ca0 <__alt_data_end+0xff818ca0>
        lcd_write_data(sp, c);
        sp->line[y].visible[x] = c;
      }
    }
  }
}
  818e48:	e037883a 	mov	sp,fp
  818e4c:	dfc00117 	ldw	ra,4(sp)
  818e50:	df000017 	ldw	fp,0(sp)
  818e54:	dec00204 	addi	sp,sp,8
  818e58:	f800283a 	ret

00818e5c <lcd_scroll_up>:

/* --------------------------------------------------------------------- */

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  818e5c:	defffc04 	addi	sp,sp,-16
  818e60:	dfc00315 	stw	ra,12(sp)
  818e64:	df000215 	stw	fp,8(sp)
  818e68:	df000204 	addi	fp,sp,8
  818e6c:	e13fff15 	stw	r4,-4(fp)
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  818e70:	e03ffe15 	stw	zero,-8(fp)
  818e74:	00001d06 	br	818eec <lcd_scroll_up+0x90>
  {
    if (y < ALT_LCD_HEIGHT-1)
  818e78:	e0bffe17 	ldw	r2,-8(fp)
  818e7c:	00800f16 	blt	zero,r2,818ebc <lcd_scroll_up+0x60>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
  818e80:	e0bffe17 	ldw	r2,-8(fp)
  818e84:	108018e4 	muli	r2,r2,99
  818e88:	10801004 	addi	r2,r2,64
  818e8c:	e0ffff17 	ldw	r3,-4(fp)
  818e90:	1889883a 	add	r4,r3,r2
  818e94:	e0bffe17 	ldw	r2,-8(fp)
  818e98:	10800044 	addi	r2,r2,1
  818e9c:	108018e4 	muli	r2,r2,99
  818ea0:	10801004 	addi	r2,r2,64
  818ea4:	e0ffff17 	ldw	r3,-4(fp)
  818ea8:	1885883a 	add	r2,r3,r2
  818eac:	100b883a 	mov	r5,r2
  818eb0:	01801404 	movi	r6,80
  818eb4:	0808f440 	call	808f44 <memcpy>
  818eb8:	00000906 	br	818ee0 <lcd_scroll_up+0x84>
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  818ebc:	e0bffe17 	ldw	r2,-8(fp)
  818ec0:	108018e4 	muli	r2,r2,99
  818ec4:	10801004 	addi	r2,r2,64
  818ec8:	e0ffff17 	ldw	r3,-4(fp)
  818ecc:	1885883a 	add	r2,r3,r2
  818ed0:	1009883a 	mov	r4,r2
  818ed4:	01400804 	movi	r5,32
  818ed8:	01801404 	movi	r6,80
  818edc:	0802a600 	call	802a60 <memset>

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  818ee0:	e0bffe17 	ldw	r2,-8(fp)
  818ee4:	10800044 	addi	r2,r2,1
  818ee8:	e0bffe15 	stw	r2,-8(fp)
  818eec:	e0bffe17 	ldw	r2,-8(fp)
  818ef0:	10800090 	cmplti	r2,r2,2
  818ef4:	103fe01e 	bne	r2,zero,818e78 <__alt_data_end+0xff818e78>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  }

  sp->y--;
  818ef8:	e0bfff17 	ldw	r2,-4(fp)
  818efc:	10800883 	ldbu	r2,34(r2)
  818f00:	10bfffc4 	addi	r2,r2,-1
  818f04:	1007883a 	mov	r3,r2
  818f08:	e0bfff17 	ldw	r2,-4(fp)
  818f0c:	10c00885 	stb	r3,34(r2)
}
  818f10:	e037883a 	mov	sp,fp
  818f14:	dfc00117 	ldw	ra,4(sp)
  818f18:	df000017 	ldw	fp,0(sp)
  818f1c:	dec00204 	addi	sp,sp,8
  818f20:	f800283a 	ret

00818f24 <lcd_handle_escape>:

/* --------------------------------------------------------------------- */

static void lcd_handle_escape(altera_avalon_lcd_16207_state* sp, char c)
{
  818f24:	defff904 	addi	sp,sp,-28
  818f28:	dfc00615 	stw	ra,24(sp)
  818f2c:	df000515 	stw	fp,20(sp)
  818f30:	df000504 	addi	fp,sp,20
  818f34:	e13ffe15 	stw	r4,-8(fp)
  818f38:	2805883a 	mov	r2,r5
  818f3c:	e0bfff05 	stb	r2,-4(fp)
  int parm1 = 0, parm2 = 0;
  818f40:	e03ffb15 	stw	zero,-20(fp)
  818f44:	e03ffc15 	stw	zero,-16(fp)

  if (sp->escape[0] == '[')
  818f48:	e0bffe17 	ldw	r2,-8(fp)
  818f4c:	10800a03 	ldbu	r2,40(r2)
  818f50:	10803fcc 	andi	r2,r2,255
  818f54:	1080201c 	xori	r2,r2,128
  818f58:	10bfe004 	addi	r2,r2,-128
  818f5c:	108016d8 	cmpnei	r2,r2,91
  818f60:	1000441e 	bne	r2,zero,819074 <lcd_handle_escape+0x150>
  {
    char * ptr = sp->escape+1;
  818f64:	e0bffe17 	ldw	r2,-8(fp)
  818f68:	10800a44 	addi	r2,r2,41
  818f6c:	e0bffd15 	stw	r2,-12(fp)
    while (isdigit(*ptr))
  818f70:	00000c06 	br	818fa4 <lcd_handle_escape+0x80>
      parm1 = (parm1 * 10) + (*ptr++ - '0');
  818f74:	e0bffb17 	ldw	r2,-20(fp)
  818f78:	10c002a4 	muli	r3,r2,10
  818f7c:	e0bffd17 	ldw	r2,-12(fp)
  818f80:	11000044 	addi	r4,r2,1
  818f84:	e13ffd15 	stw	r4,-12(fp)
  818f88:	10800003 	ldbu	r2,0(r2)
  818f8c:	10803fcc 	andi	r2,r2,255
  818f90:	1080201c 	xori	r2,r2,128
  818f94:	10bfe004 	addi	r2,r2,-128
  818f98:	10bff404 	addi	r2,r2,-48
  818f9c:	1885883a 	add	r2,r3,r2
  818fa0:	e0bffb15 	stw	r2,-20(fp)
  int parm1 = 0, parm2 = 0;

  if (sp->escape[0] == '[')
  {
    char * ptr = sp->escape+1;
    while (isdigit(*ptr))
  818fa4:	008020b4 	movhi	r2,130
  818fa8:	10b6e504 	addi	r2,r2,-9324
  818fac:	10c00017 	ldw	r3,0(r2)
  818fb0:	e0bffd17 	ldw	r2,-12(fp)
  818fb4:	10800003 	ldbu	r2,0(r2)
  818fb8:	10803fcc 	andi	r2,r2,255
  818fbc:	1080201c 	xori	r2,r2,128
  818fc0:	10bfe004 	addi	r2,r2,-128
  818fc4:	10800044 	addi	r2,r2,1
  818fc8:	1885883a 	add	r2,r3,r2
  818fcc:	10800003 	ldbu	r2,0(r2)
  818fd0:	10803fcc 	andi	r2,r2,255
  818fd4:	1080010c 	andi	r2,r2,4
  818fd8:	103fe61e 	bne	r2,zero,818f74 <__alt_data_end+0xff818f74>
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
  818fdc:	e0bffd17 	ldw	r2,-12(fp)
  818fe0:	10800003 	ldbu	r2,0(r2)
  818fe4:	10803fcc 	andi	r2,r2,255
  818fe8:	1080201c 	xori	r2,r2,128
  818fec:	10bfe004 	addi	r2,r2,-128
  818ff0:	10800ed8 	cmpnei	r2,r2,59
  818ff4:	10001e1e 	bne	r2,zero,819070 <lcd_handle_escape+0x14c>
    {
      ptr++;
  818ff8:	e0bffd17 	ldw	r2,-12(fp)
  818ffc:	10800044 	addi	r2,r2,1
  819000:	e0bffd15 	stw	r2,-12(fp)
      while (isdigit(*ptr))
  819004:	00000c06 	br	819038 <lcd_handle_escape+0x114>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
  819008:	e0bffc17 	ldw	r2,-16(fp)
  81900c:	10c002a4 	muli	r3,r2,10
  819010:	e0bffd17 	ldw	r2,-12(fp)
  819014:	11000044 	addi	r4,r2,1
  819018:	e13ffd15 	stw	r4,-12(fp)
  81901c:	10800003 	ldbu	r2,0(r2)
  819020:	10803fcc 	andi	r2,r2,255
  819024:	1080201c 	xori	r2,r2,128
  819028:	10bfe004 	addi	r2,r2,-128
  81902c:	10bff404 	addi	r2,r2,-48
  819030:	1885883a 	add	r2,r3,r2
  819034:	e0bffc15 	stw	r2,-16(fp)
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
    {
      ptr++;
      while (isdigit(*ptr))
  819038:	008020b4 	movhi	r2,130
  81903c:	10b6e504 	addi	r2,r2,-9324
  819040:	10c00017 	ldw	r3,0(r2)
  819044:	e0bffd17 	ldw	r2,-12(fp)
  819048:	10800003 	ldbu	r2,0(r2)
  81904c:	10803fcc 	andi	r2,r2,255
  819050:	1080201c 	xori	r2,r2,128
  819054:	10bfe004 	addi	r2,r2,-128
  819058:	10800044 	addi	r2,r2,1
  81905c:	1885883a 	add	r2,r3,r2
  819060:	10800003 	ldbu	r2,0(r2)
  819064:	10803fcc 	andi	r2,r2,255
  819068:	1080010c 	andi	r2,r2,4
  81906c:	103fe61e 	bne	r2,zero,819008 <__alt_data_end+0xff819008>
  819070:	00000206 	br	81907c <lcd_handle_escape+0x158>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
    }
  }
  else
    parm1 = -1;
  819074:	00bfffc4 	movi	r2,-1
  819078:	e0bffb15 	stw	r2,-20(fp)

  switch (c)
  81907c:	e0bfff07 	ldb	r2,-4(fp)
  819080:	10c012a0 	cmpeqi	r3,r2,74
  819084:	1800281e 	bne	r3,zero,819128 <lcd_handle_escape+0x204>
  819088:	10c012c8 	cmpgei	r3,r2,75
  81908c:	1800031e 	bne	r3,zero,81909c <lcd_handle_escape+0x178>
  819090:	10801220 	cmpeqi	r2,r2,72
  819094:	1000051e 	bne	r2,zero,8190ac <lcd_handle_escape+0x188>
  819098:	00004506 	br	8191b0 <lcd_handle_escape+0x28c>
  81909c:	10c012e0 	cmpeqi	r3,r2,75
  8190a0:	1800281e 	bne	r3,zero,819144 <lcd_handle_escape+0x220>
  8190a4:	108019a0 	cmpeqi	r2,r2,102
  8190a8:	10004126 	beq	r2,zero,8191b0 <lcd_handle_escape+0x28c>
  {
  case 'H': /* ESC '[' <y> ';' <x> 'H'  : Move cursor to location */
  case 'f': /* Same as above */
    if (parm2 > 0)
  8190ac:	e0bffc17 	ldw	r2,-16(fp)
  8190b0:	0080050e 	bge	zero,r2,8190c8 <lcd_handle_escape+0x1a4>
      sp->x = parm2 - 1;
  8190b4:	e0bffc17 	ldw	r2,-16(fp)
  8190b8:	10bfffc4 	addi	r2,r2,-1
  8190bc:	1007883a 	mov	r3,r2
  8190c0:	e0bffe17 	ldw	r2,-8(fp)
  8190c4:	10c00845 	stb	r3,33(r2)
    if (parm1 > 0)
  8190c8:	e0bffb17 	ldw	r2,-20(fp)
  8190cc:	0080150e 	bge	zero,r2,819124 <lcd_handle_escape+0x200>
    {
      sp->y = parm1 - 1;
  8190d0:	e0bffb17 	ldw	r2,-20(fp)
  8190d4:	10bfffc4 	addi	r2,r2,-1
  8190d8:	1007883a 	mov	r3,r2
  8190dc:	e0bffe17 	ldw	r2,-8(fp)
  8190e0:	10c00885 	stb	r3,34(r2)
      if (sp->y > ALT_LCD_HEIGHT * 2)
  8190e4:	e0bffe17 	ldw	r2,-8(fp)
  8190e8:	10800883 	ldbu	r2,34(r2)
  8190ec:	10803fcc 	andi	r2,r2,255
  8190f0:	10800170 	cmpltui	r2,r2,5
  8190f4:	1000031e 	bne	r2,zero,819104 <lcd_handle_escape+0x1e0>
        sp->y = ALT_LCD_HEIGHT * 2;
  8190f8:	e0bffe17 	ldw	r2,-8(fp)
  8190fc:	00c00104 	movi	r3,4
  819100:	10c00885 	stb	r3,34(r2)
      while (sp->y > ALT_LCD_HEIGHT)
  819104:	00000206 	br	819110 <lcd_handle_escape+0x1ec>
        lcd_scroll_up(sp);
  819108:	e13ffe17 	ldw	r4,-8(fp)
  81910c:	0818e5c0 	call	818e5c <lcd_scroll_up>
    if (parm1 > 0)
    {
      sp->y = parm1 - 1;
      if (sp->y > ALT_LCD_HEIGHT * 2)
        sp->y = ALT_LCD_HEIGHT * 2;
      while (sp->y > ALT_LCD_HEIGHT)
  819110:	e0bffe17 	ldw	r2,-8(fp)
  819114:	10800883 	ldbu	r2,34(r2)
  819118:	10803fcc 	andi	r2,r2,255
  81911c:	108000e8 	cmpgeui	r2,r2,3
  819120:	103ff91e 	bne	r2,zero,819108 <__alt_data_end+0xff819108>
        lcd_scroll_up(sp);
    }
    break;
  819124:	00002206 	br	8191b0 <lcd_handle_escape+0x28c>
    /*   ESC J      is clear to beginning of line    [unimplemented]
     *   ESC [ 0 J  is clear to bottom of screen     [unimplemented]
     *   ESC [ 1 J  is clear to beginning of screen  [unimplemented]
     *   ESC [ 2 J  is clear screen
     */
    if (parm1 == 2)
  819128:	e0bffb17 	ldw	r2,-20(fp)
  81912c:	10800098 	cmpnei	r2,r2,2
  819130:	1000031e 	bne	r2,zero,819140 <lcd_handle_escape+0x21c>
      lcd_clear_screen(sp);
  819134:	e13ffe17 	ldw	r4,-8(fp)
  819138:	0818ba80 	call	818ba8 <lcd_clear_screen>
    break;
  81913c:	00001c06 	br	8191b0 <lcd_handle_escape+0x28c>
  819140:	00001b06 	br	8191b0 <lcd_handle_escape+0x28c>
    /*   ESC K      is clear to end of line
     *   ESC [ 0 K  is clear to end of line
     *   ESC [ 1 K  is clear to beginning of line    [unimplemented]
     *   ESC [ 2 K  is clear line                    [unimplemented]
     */
    if (parm1 < 1)
  819144:	e0bffb17 	ldw	r2,-20(fp)
  819148:	00801816 	blt	zero,r2,8191ac <lcd_handle_escape+0x288>
    {
      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
  81914c:	e0bffe17 	ldw	r2,-8(fp)
  819150:	10800843 	ldbu	r2,33(r2)
  819154:	10803fcc 	andi	r2,r2,255
  819158:	10801428 	cmpgeui	r2,r2,80
  81915c:	1000131e 	bne	r2,zero,8191ac <lcd_handle_escape+0x288>
        memset(sp->line[sp->y].data + sp->x, ' ', ALT_LCD_VIRTUAL_WIDTH - sp->x);
  819160:	e0bffe17 	ldw	r2,-8(fp)
  819164:	10800883 	ldbu	r2,34(r2)
  819168:	10803fcc 	andi	r2,r2,255
  81916c:	108018e4 	muli	r2,r2,99
  819170:	10801004 	addi	r2,r2,64
  819174:	e0fffe17 	ldw	r3,-8(fp)
  819178:	1887883a 	add	r3,r3,r2
  81917c:	e0bffe17 	ldw	r2,-8(fp)
  819180:	10800843 	ldbu	r2,33(r2)
  819184:	10803fcc 	andi	r2,r2,255
  819188:	1889883a 	add	r4,r3,r2
  81918c:	e0bffe17 	ldw	r2,-8(fp)
  819190:	10800843 	ldbu	r2,33(r2)
  819194:	10803fcc 	andi	r2,r2,255
  819198:	00c01404 	movi	r3,80
  81919c:	1885c83a 	sub	r2,r3,r2
  8191a0:	01400804 	movi	r5,32
  8191a4:	100d883a 	mov	r6,r2
  8191a8:	0802a600 	call	802a60 <memset>
    }
    break;
  8191ac:	0001883a 	nop
  }
}
  8191b0:	e037883a 	mov	sp,fp
  8191b4:	dfc00117 	ldw	ra,4(sp)
  8191b8:	df000017 	ldw	fp,0(sp)
  8191bc:	dec00204 	addi	sp,sp,8
  8191c0:	f800283a 	ret

008191c4 <altera_avalon_lcd_16207_write>:

/* --------------------------------------------------------------------- */

int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp, 
  const char* ptr, int len, int flags)
{
  8191c4:	defff304 	addi	sp,sp,-52
  8191c8:	dfc00c15 	stw	ra,48(sp)
  8191cc:	df000b15 	stw	fp,44(sp)
  8191d0:	df000b04 	addi	fp,sp,44
  8191d4:	e13ffc15 	stw	r4,-16(fp)
  8191d8:	e17ffd15 	stw	r5,-12(fp)
  8191dc:	e1bffe15 	stw	r6,-8(fp)
  8191e0:	e1ffff15 	stw	r7,-4(fp)
  const char* end = ptr + len;
  8191e4:	e0bffe17 	ldw	r2,-8(fp)
  8191e8:	e0fffd17 	ldw	r3,-12(fp)
  8191ec:	1885883a 	add	r2,r3,r2
  8191f0:	e0bff815 	stw	r2,-32(fp)

  ALT_SEM_PEND (sp->write_lock, 0);

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;
  8191f4:	e0bffc17 	ldw	r2,-16(fp)
  8191f8:	00c00044 	movi	r3,1
  8191fc:	10c009c5 	stb	r3,39(r2)

  for ( ; ptr < end ; ptr++)
  819200:	00009e06 	br	81947c <altera_avalon_lcd_16207_write+0x2b8>
  {
    char c = *ptr;
  819204:	e0bffd17 	ldw	r2,-12(fp)
  819208:	10800003 	ldbu	r2,0(r2)
  81920c:	e0bff905 	stb	r2,-28(fp)

    if (sp->esccount >= 0)
  819210:	e0bffc17 	ldw	r2,-16(fp)
  819214:	10800903 	ldbu	r2,36(r2)
  819218:	10803fcc 	andi	r2,r2,255
  81921c:	1080201c 	xori	r2,r2,128
  819220:	10bfe004 	addi	r2,r2,-128
  819224:	10003a16 	blt	r2,zero,819310 <altera_avalon_lcd_16207_write+0x14c>
    {
      unsigned int esccount = sp->esccount;
  819228:	e0bffc17 	ldw	r2,-16(fp)
  81922c:	10800903 	ldbu	r2,36(r2)
  819230:	10803fcc 	andi	r2,r2,255
  819234:	1080201c 	xori	r2,r2,128
  819238:	10bfe004 	addi	r2,r2,-128
  81923c:	e0bffa15 	stw	r2,-24(fp)

      /* Single character escape sequences can end with any character
       * Multi character escape sequences start with '[' and contain
       * digits and semicolons before terminating
       */
      if ((esccount == 0 && c != '[') ||
  819240:	e0bffa17 	ldw	r2,-24(fp)
  819244:	1000031e 	bne	r2,zero,819254 <altera_avalon_lcd_16207_write+0x90>
  819248:	e0bff907 	ldb	r2,-28(fp)
  81924c:	108016d8 	cmpnei	r2,r2,91
  819250:	10000f1e 	bne	r2,zero,819290 <altera_avalon_lcd_16207_write+0xcc>
  819254:	e0bffa17 	ldw	r2,-24(fp)
  819258:	10001a26 	beq	r2,zero,8192c4 <altera_avalon_lcd_16207_write+0x100>
          (esccount > 0 && !isdigit(c) && c != ';'))
  81925c:	008020b4 	movhi	r2,130
  819260:	10b6e504 	addi	r2,r2,-9324
  819264:	10c00017 	ldw	r3,0(r2)
  819268:	e0bff907 	ldb	r2,-28(fp)
  81926c:	10800044 	addi	r2,r2,1
  819270:	1885883a 	add	r2,r3,r2
  819274:	10800003 	ldbu	r2,0(r2)
  819278:	10803fcc 	andi	r2,r2,255
  81927c:	1080010c 	andi	r2,r2,4
  819280:	1000101e 	bne	r2,zero,8192c4 <altera_avalon_lcd_16207_write+0x100>
  819284:	e0bff907 	ldb	r2,-28(fp)
  819288:	10800ee0 	cmpeqi	r2,r2,59
  81928c:	10000d1e 	bne	r2,zero,8192c4 <altera_avalon_lcd_16207_write+0x100>
      {
        sp->escape[esccount] = 0;
  819290:	e0fffc17 	ldw	r3,-16(fp)
  819294:	e0bffa17 	ldw	r2,-24(fp)
  819298:	1885883a 	add	r2,r3,r2
  81929c:	10800a04 	addi	r2,r2,40
  8192a0:	10000005 	stb	zero,0(r2)

        lcd_handle_escape(sp, c);
  8192a4:	e0bff907 	ldb	r2,-28(fp)
  8192a8:	e13ffc17 	ldw	r4,-16(fp)
  8192ac:	100b883a 	mov	r5,r2
  8192b0:	0818f240 	call	818f24 <lcd_handle_escape>

        sp->esccount = -1;
  8192b4:	e0bffc17 	ldw	r2,-16(fp)
  8192b8:	00ffffc4 	movi	r3,-1
  8192bc:	10c00905 	stb	r3,36(r2)
  8192c0:	00001206 	br	81930c <altera_avalon_lcd_16207_write+0x148>
      }
      else if (sp->esccount < sizeof(sp->escape)-1)
  8192c4:	e0bffc17 	ldw	r2,-16(fp)
  8192c8:	10800903 	ldbu	r2,36(r2)
  8192cc:	10803fcc 	andi	r2,r2,255
  8192d0:	108001e8 	cmpgeui	r2,r2,7
  8192d4:	10000d1e 	bne	r2,zero,81930c <altera_avalon_lcd_16207_write+0x148>
      {
        sp->escape[esccount] = c;
  8192d8:	e0fffc17 	ldw	r3,-16(fp)
  8192dc:	e0bffa17 	ldw	r2,-24(fp)
  8192e0:	1885883a 	add	r2,r3,r2
  8192e4:	10800a04 	addi	r2,r2,40
  8192e8:	e0fff903 	ldbu	r3,-28(fp)
  8192ec:	10c00005 	stb	r3,0(r2)
        sp->esccount++;
  8192f0:	e0bffc17 	ldw	r2,-16(fp)
  8192f4:	10800903 	ldbu	r2,36(r2)
  8192f8:	10800044 	addi	r2,r2,1
  8192fc:	1007883a 	mov	r3,r2
  819300:	e0bffc17 	ldw	r2,-16(fp)
  819304:	10c00905 	stb	r3,36(r2)
  819308:	00005906 	br	819470 <altera_avalon_lcd_16207_write+0x2ac>
  81930c:	00005806 	br	819470 <altera_avalon_lcd_16207_write+0x2ac>
      }
    }
    else if (c == 27) /* ESC */
  819310:	e0bff907 	ldb	r2,-28(fp)
  819314:	108006d8 	cmpnei	r2,r2,27
  819318:	1000031e 	bne	r2,zero,819328 <altera_avalon_lcd_16207_write+0x164>
    {
      sp->esccount = 0;
  81931c:	e0bffc17 	ldw	r2,-16(fp)
  819320:	10000905 	stb	zero,36(r2)
  819324:	00005206 	br	819470 <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (c == '\r')
  819328:	e0bff907 	ldb	r2,-28(fp)
  81932c:	10800358 	cmpnei	r2,r2,13
  819330:	1000031e 	bne	r2,zero,819340 <altera_avalon_lcd_16207_write+0x17c>
    {
      sp->x = 0;
  819334:	e0bffc17 	ldw	r2,-16(fp)
  819338:	10000845 	stb	zero,33(r2)
  81933c:	00004c06 	br	819470 <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (c == '\n')
  819340:	e0bff907 	ldb	r2,-28(fp)
  819344:	10800298 	cmpnei	r2,r2,10
  819348:	1000101e 	bne	r2,zero,81938c <altera_avalon_lcd_16207_write+0x1c8>
    {
      sp->x = 0;
  81934c:	e0bffc17 	ldw	r2,-16(fp)
  819350:	10000845 	stb	zero,33(r2)
      sp->y++;
  819354:	e0bffc17 	ldw	r2,-16(fp)
  819358:	10800883 	ldbu	r2,34(r2)
  81935c:	10800044 	addi	r2,r2,1
  819360:	1007883a 	mov	r3,r2
  819364:	e0bffc17 	ldw	r2,-16(fp)
  819368:	10c00885 	stb	r3,34(r2)

      /* Let the cursor sit at X=0, Y=HEIGHT without scrolling so the user
       * can print two lines of data without losing one.
       */
      if (sp->y > ALT_LCD_HEIGHT)
  81936c:	e0bffc17 	ldw	r2,-16(fp)
  819370:	10800883 	ldbu	r2,34(r2)
  819374:	10803fcc 	andi	r2,r2,255
  819378:	108000f0 	cmpltui	r2,r2,3
  81937c:	10003c1e 	bne	r2,zero,819470 <altera_avalon_lcd_16207_write+0x2ac>
        lcd_scroll_up(sp);
  819380:	e13ffc17 	ldw	r4,-16(fp)
  819384:	0818e5c0 	call	818e5c <lcd_scroll_up>
  819388:	00003906 	br	819470 <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (c == '\b')
  81938c:	e0bff907 	ldb	r2,-28(fp)
  819390:	10800218 	cmpnei	r2,r2,8
  819394:	10000b1e 	bne	r2,zero,8193c4 <altera_avalon_lcd_16207_write+0x200>
    {
      if (sp->x > 0)
  819398:	e0bffc17 	ldw	r2,-16(fp)
  81939c:	10800843 	ldbu	r2,33(r2)
  8193a0:	10803fcc 	andi	r2,r2,255
  8193a4:	10003226 	beq	r2,zero,819470 <altera_avalon_lcd_16207_write+0x2ac>
        sp->x--;
  8193a8:	e0bffc17 	ldw	r2,-16(fp)
  8193ac:	10800843 	ldbu	r2,33(r2)
  8193b0:	10bfffc4 	addi	r2,r2,-1
  8193b4:	1007883a 	mov	r3,r2
  8193b8:	e0bffc17 	ldw	r2,-16(fp)
  8193bc:	10c00845 	stb	r3,33(r2)
  8193c0:	00002b06 	br	819470 <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (isprint(c))
  8193c4:	008020b4 	movhi	r2,130
  8193c8:	10b6e504 	addi	r2,r2,-9324
  8193cc:	10c00017 	ldw	r3,0(r2)
  8193d0:	e0bff907 	ldb	r2,-28(fp)
  8193d4:	10800044 	addi	r2,r2,1
  8193d8:	1885883a 	add	r2,r3,r2
  8193dc:	10800003 	ldbu	r2,0(r2)
  8193e0:	10803fcc 	andi	r2,r2,255
  8193e4:	1080201c 	xori	r2,r2,128
  8193e8:	10bfe004 	addi	r2,r2,-128
  8193ec:	108025cc 	andi	r2,r2,151
  8193f0:	10001f26 	beq	r2,zero,819470 <altera_avalon_lcd_16207_write+0x2ac>
    {
      /* If we didn't scroll on the last linefeed then we might need to do
       * it now. */
      if (sp->y >= ALT_LCD_HEIGHT)
  8193f4:	e0bffc17 	ldw	r2,-16(fp)
  8193f8:	10800883 	ldbu	r2,34(r2)
  8193fc:	10803fcc 	andi	r2,r2,255
  819400:	108000b0 	cmpltui	r2,r2,2
  819404:	1000021e 	bne	r2,zero,819410 <altera_avalon_lcd_16207_write+0x24c>
        lcd_scroll_up(sp);
  819408:	e13ffc17 	ldw	r4,-16(fp)
  81940c:	0818e5c0 	call	818e5c <lcd_scroll_up>

      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
  819410:	e0bffc17 	ldw	r2,-16(fp)
  819414:	10800843 	ldbu	r2,33(r2)
  819418:	10803fcc 	andi	r2,r2,255
  81941c:	10801428 	cmpgeui	r2,r2,80
  819420:	10000d1e 	bne	r2,zero,819458 <altera_avalon_lcd_16207_write+0x294>
        sp->line[sp->y].data[sp->x] = c;
  819424:	e0bffc17 	ldw	r2,-16(fp)
  819428:	10800883 	ldbu	r2,34(r2)
  81942c:	10c03fcc 	andi	r3,r2,255
  819430:	e0bffc17 	ldw	r2,-16(fp)
  819434:	10800843 	ldbu	r2,33(r2)
  819438:	10803fcc 	andi	r2,r2,255
  81943c:	e13ffc17 	ldw	r4,-16(fp)
  819440:	18c018e4 	muli	r3,r3,99
  819444:	20c7883a 	add	r3,r4,r3
  819448:	1885883a 	add	r2,r3,r2
  81944c:	10801004 	addi	r2,r2,64
  819450:	e0fff903 	ldbu	r3,-28(fp)
  819454:	10c00005 	stb	r3,0(r2)

      sp->x++;
  819458:	e0bffc17 	ldw	r2,-16(fp)
  81945c:	10800843 	ldbu	r2,33(r2)
  819460:	10800044 	addi	r2,r2,1
  819464:	1007883a 	mov	r3,r2
  819468:	e0bffc17 	ldw	r2,-16(fp)
  81946c:	10c00845 	stb	r3,33(r2)

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;

  for ( ; ptr < end ; ptr++)
  819470:	e0bffd17 	ldw	r2,-12(fp)
  819474:	10800044 	addi	r2,r2,1
  819478:	e0bffd15 	stw	r2,-12(fp)
  81947c:	e0fffd17 	ldw	r3,-12(fp)
  819480:	e0bff817 	ldw	r2,-32(fp)
  819484:	18bf5f36 	bltu	r3,r2,819204 <__alt_data_end+0xff819204>
      sp->x++;
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  819488:	00800404 	movi	r2,16
  81948c:	e0bff615 	stw	r2,-40(fp)
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819490:	e03ff515 	stw	zero,-44(fp)
  819494:	00003606 	br	819570 <altera_avalon_lcd_16207_write+0x3ac>
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
  819498:	00801404 	movi	r2,80
  81949c:	e0bff715 	stw	r2,-36(fp)
  8194a0:	00001206 	br	8194ec <altera_avalon_lcd_16207_write+0x328>
      if (sp->line[y].data[width-1] != ' ')
  8194a4:	e0bff717 	ldw	r2,-36(fp)
  8194a8:	10bfffc4 	addi	r2,r2,-1
  8194ac:	e13ffc17 	ldw	r4,-16(fp)
  8194b0:	e0fff517 	ldw	r3,-44(fp)
  8194b4:	18c018e4 	muli	r3,r3,99
  8194b8:	20c7883a 	add	r3,r4,r3
  8194bc:	1885883a 	add	r2,r3,r2
  8194c0:	10801004 	addi	r2,r2,64
  8194c4:	10800003 	ldbu	r2,0(r2)
  8194c8:	10803fcc 	andi	r2,r2,255
  8194cc:	1080201c 	xori	r2,r2,128
  8194d0:	10bfe004 	addi	r2,r2,-128
  8194d4:	10800820 	cmpeqi	r2,r2,32
  8194d8:	1000011e 	bne	r2,zero,8194e0 <altera_avalon_lcd_16207_write+0x31c>
        break;
  8194dc:	00000506 	br	8194f4 <altera_avalon_lcd_16207_write+0x330>
  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
  8194e0:	e0bff717 	ldw	r2,-36(fp)
  8194e4:	10bfffc4 	addi	r2,r2,-1
  8194e8:	e0bff715 	stw	r2,-36(fp)
  8194ec:	e0bff717 	ldw	r2,-36(fp)
  8194f0:	00bfec16 	blt	zero,r2,8194a4 <__alt_data_end+0xff8194a4>

    /* The minimum width is the size of the LCD panel.  If the real width
     * is long enough to require scrolling then add an extra space so the
     * end of the message doesn't run into the beginning of it.
     */
    if (width <= ALT_LCD_WIDTH)
  8194f4:	e0bff717 	ldw	r2,-36(fp)
  8194f8:	10800448 	cmpgei	r2,r2,17
  8194fc:	1000031e 	bne	r2,zero,81950c <altera_avalon_lcd_16207_write+0x348>
      width = ALT_LCD_WIDTH;
  819500:	00800404 	movi	r2,16
  819504:	e0bff715 	stw	r2,-36(fp)
  819508:	00000306 	br	819518 <altera_avalon_lcd_16207_write+0x354>
    else
      width++;
  81950c:	e0bff717 	ldw	r2,-36(fp)
  819510:	10800044 	addi	r2,r2,1
  819514:	e0bff715 	stw	r2,-36(fp)

    sp->line[y].width = width;
  819518:	e0bff717 	ldw	r2,-36(fp)
  81951c:	1009883a 	mov	r4,r2
  819520:	e0fffc17 	ldw	r3,-16(fp)
  819524:	e0bff517 	ldw	r2,-44(fp)
  819528:	108018e4 	muli	r2,r2,99
  81952c:	10802404 	addi	r2,r2,144
  819530:	1885883a 	add	r2,r3,r2
  819534:	11000045 	stb	r4,1(r2)
    if (widthmax < width)
  819538:	e0fff617 	ldw	r3,-40(fp)
  81953c:	e0bff717 	ldw	r2,-36(fp)
  819540:	1880020e 	bge	r3,r2,81954c <altera_avalon_lcd_16207_write+0x388>
      widthmax = width;
  819544:	e0bff717 	ldw	r2,-36(fp)
  819548:	e0bff615 	stw	r2,-40(fp)
    sp->line[y].speed = 0; /* By default lines don't scroll */
  81954c:	e0fffc17 	ldw	r3,-16(fp)
  819550:	e0bff517 	ldw	r2,-44(fp)
  819554:	108018e4 	muli	r2,r2,99
  819558:	10802404 	addi	r2,r2,144
  81955c:	1885883a 	add	r2,r3,r2
  819560:	10000085 	stb	zero,2(r2)
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819564:	e0bff517 	ldw	r2,-44(fp)
  819568:	10800044 	addi	r2,r2,1
  81956c:	e0bff515 	stw	r2,-44(fp)
  819570:	e0bff517 	ldw	r2,-44(fp)
  819574:	10800090 	cmplti	r2,r2,2
  819578:	103fc71e 	bne	r2,zero,819498 <__alt_data_end+0xff819498>
    if (widthmax < width)
      widthmax = width;
    sp->line[y].speed = 0; /* By default lines don't scroll */
  }

  if (widthmax <= ALT_LCD_WIDTH)
  81957c:	e0bff617 	ldw	r2,-40(fp)
  819580:	10800448 	cmpgei	r2,r2,17
  819584:	1000031e 	bne	r2,zero,819594 <altera_avalon_lcd_16207_write+0x3d0>
    sp->scrollmax = 0;
  819588:	e0bffc17 	ldw	r2,-16(fp)
  81958c:	10000985 	stb	zero,38(r2)
  819590:	00002e06 	br	81964c <altera_avalon_lcd_16207_write+0x488>
  else
  {
    widthmax *= 2;
  819594:	e0bff617 	ldw	r2,-40(fp)
  819598:	1085883a 	add	r2,r2,r2
  81959c:	e0bff615 	stw	r2,-40(fp)
    sp->scrollmax = widthmax;
  8195a0:	e0bff617 	ldw	r2,-40(fp)
  8195a4:	1007883a 	mov	r3,r2
  8195a8:	e0bffc17 	ldw	r2,-16(fp)
  8195ac:	10c00985 	stb	r3,38(r2)

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  8195b0:	e03ff515 	stw	zero,-44(fp)
  8195b4:	00002206 	br	819640 <altera_avalon_lcd_16207_write+0x47c>
      if (sp->line[y].width > ALT_LCD_WIDTH)
  8195b8:	e0fffc17 	ldw	r3,-16(fp)
  8195bc:	e0bff517 	ldw	r2,-44(fp)
  8195c0:	108018e4 	muli	r2,r2,99
  8195c4:	10802404 	addi	r2,r2,144
  8195c8:	1885883a 	add	r2,r3,r2
  8195cc:	10800043 	ldbu	r2,1(r2)
  8195d0:	10803fcc 	andi	r2,r2,255
  8195d4:	1080201c 	xori	r2,r2,128
  8195d8:	10bfe004 	addi	r2,r2,-128
  8195dc:	10800450 	cmplti	r2,r2,17
  8195e0:	1000141e 	bne	r2,zero,819634 <altera_avalon_lcd_16207_write+0x470>
         */
#if 1
        /* This option makes all the lines scroll round at different speeds
         * which are chosen so that all the scrolls finish at the same time.
         */
        sp->line[y].speed = 256 * sp->line[y].width / widthmax;
  8195e4:	e0fffc17 	ldw	r3,-16(fp)
  8195e8:	e0bff517 	ldw	r2,-44(fp)
  8195ec:	108018e4 	muli	r2,r2,99
  8195f0:	10802404 	addi	r2,r2,144
  8195f4:	1885883a 	add	r2,r3,r2
  8195f8:	10800043 	ldbu	r2,1(r2)
  8195fc:	10803fcc 	andi	r2,r2,255
  819600:	1080201c 	xori	r2,r2,128
  819604:	10bfe004 	addi	r2,r2,-128
  819608:	1004923a 	slli	r2,r2,8
  81960c:	1009883a 	mov	r4,r2
  819610:	e17ff617 	ldw	r5,-40(fp)
  819614:	081483c0 	call	81483c <__divsi3>
  819618:	1009883a 	mov	r4,r2
  81961c:	e0fffc17 	ldw	r3,-16(fp)
  819620:	e0bff517 	ldw	r2,-44(fp)
  819624:	108018e4 	muli	r2,r2,99
  819628:	10802404 	addi	r2,r2,144
  81962c:	1885883a 	add	r2,r3,r2
  819630:	11000085 	stb	r4,2(r2)
  {
    widthmax *= 2;
    sp->scrollmax = widthmax;

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819634:	e0bff517 	ldw	r2,-44(fp)
  819638:	10800044 	addi	r2,r2,1
  81963c:	e0bff515 	stw	r2,-44(fp)
  819640:	e0bff517 	ldw	r2,-44(fp)
  819644:	10800090 	cmplti	r2,r2,2
  819648:	103fdb1e 	bne	r2,zero,8195b8 <__alt_data_end+0xff8195b8>
   * (because active was set when the timer interrupt occurred).  If there
   * has been a missed repaint then paint again.  And again.  etc.
   */
  for ( ; ; )
  {
    int old_scrollpos = sp->scrollpos;
  81964c:	e0bffc17 	ldw	r2,-16(fp)
  819650:	10800943 	ldbu	r2,37(r2)
  819654:	10803fcc 	andi	r2,r2,255
  819658:	e0bffb15 	stw	r2,-20(fp)

    lcd_repaint_screen(sp);
  81965c:	e13ffc17 	ldw	r4,-16(fp)
  819660:	0818c740 	call	818c74 <lcd_repaint_screen>

    /* Let the timer routines repaint the display again */
    sp->active = 0;
  819664:	e0bffc17 	ldw	r2,-16(fp)
  819668:	100009c5 	stb	zero,39(r2)

    /* Have the timer routines tried to scroll while we were painting?
     * If not then we can exit */
    if (sp->scrollpos == old_scrollpos)
  81966c:	e0bffc17 	ldw	r2,-16(fp)
  819670:	10800943 	ldbu	r2,37(r2)
  819674:	10c03fcc 	andi	r3,r2,255
  819678:	e0bffb17 	ldw	r2,-20(fp)
  81967c:	1880011e 	bne	r3,r2,819684 <altera_avalon_lcd_16207_write+0x4c0>
      break;
  819680:	00000406 	br	819694 <altera_avalon_lcd_16207_write+0x4d0>

    /* We need to repaint again since the display scrolled while we were
     * painting last time */
    sp->active = 1;
  819684:	e0bffc17 	ldw	r2,-16(fp)
  819688:	00c00044 	movi	r3,1
  81968c:	10c009c5 	stb	r3,39(r2)
  }
  819690:	003fee06 	br	81964c <__alt_data_end+0xff81964c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);

  return len;
  819694:	e0bffe17 	ldw	r2,-8(fp)
}
  819698:	e037883a 	mov	sp,fp
  81969c:	dfc00117 	ldw	ra,4(sp)
  8196a0:	df000017 	ldw	fp,0(sp)
  8196a4:	dec00204 	addi	sp,sp,8
  8196a8:	f800283a 	ret

008196ac <alt_lcd_16207_timeout>:
/*
 * Timeout routine is called every second
 */

static alt_u32 alt_lcd_16207_timeout(void* context) 
{
  8196ac:	defffc04 	addi	sp,sp,-16
  8196b0:	dfc00315 	stw	ra,12(sp)
  8196b4:	df000215 	stw	fp,8(sp)
  8196b8:	df000204 	addi	fp,sp,8
  8196bc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_lcd_16207_state* sp = (altera_avalon_lcd_16207_state*)context;
  8196c0:	e0bfff17 	ldw	r2,-4(fp)
  8196c4:	e0bffe15 	stw	r2,-8(fp)

  /* Update the scrolling position */
  if (sp->scrollpos + 1 >= sp->scrollmax)
  8196c8:	e0bffe17 	ldw	r2,-8(fp)
  8196cc:	10800943 	ldbu	r2,37(r2)
  8196d0:	10803fcc 	andi	r2,r2,255
  8196d4:	10c00044 	addi	r3,r2,1
  8196d8:	e0bffe17 	ldw	r2,-8(fp)
  8196dc:	10800983 	ldbu	r2,38(r2)
  8196e0:	10803fcc 	andi	r2,r2,255
  8196e4:	18800316 	blt	r3,r2,8196f4 <alt_lcd_16207_timeout+0x48>
    sp->scrollpos = 0;
  8196e8:	e0bffe17 	ldw	r2,-8(fp)
  8196ec:	10000945 	stb	zero,37(r2)
  8196f0:	00000606 	br	81970c <alt_lcd_16207_timeout+0x60>
  else
    sp->scrollpos = sp->scrollpos + 1;
  8196f4:	e0bffe17 	ldw	r2,-8(fp)
  8196f8:	10800943 	ldbu	r2,37(r2)
  8196fc:	10800044 	addi	r2,r2,1
  819700:	1007883a 	mov	r3,r2
  819704:	e0bffe17 	ldw	r2,-8(fp)
  819708:	10c00945 	stb	r3,37(r2)

  /* Repaint the panel unless the foreground will do it again soon */
  if (sp->scrollmax > 0 && !sp->active)
  81970c:	e0bffe17 	ldw	r2,-8(fp)
  819710:	10800983 	ldbu	r2,38(r2)
  819714:	10803fcc 	andi	r2,r2,255
  819718:	10000826 	beq	r2,zero,81973c <alt_lcd_16207_timeout+0x90>
  81971c:	e0bffe17 	ldw	r2,-8(fp)
  819720:	108009c3 	ldbu	r2,39(r2)
  819724:	10803fcc 	andi	r2,r2,255
  819728:	1080201c 	xori	r2,r2,128
  81972c:	10bfe004 	addi	r2,r2,-128
  819730:	1000021e 	bne	r2,zero,81973c <alt_lcd_16207_timeout+0x90>
    lcd_repaint_screen(sp);
  819734:	e13ffe17 	ldw	r4,-8(fp)
  819738:	0818c740 	call	818c74 <lcd_repaint_screen>

  return sp->period;
  81973c:	e0bffe17 	ldw	r2,-8(fp)
  819740:	10800717 	ldw	r2,28(r2)
}
  819744:	e037883a 	mov	sp,fp
  819748:	dfc00117 	ldw	ra,4(sp)
  81974c:	df000017 	ldw	fp,0(sp)
  819750:	dec00204 	addi	sp,sp,8
  819754:	f800283a 	ret

00819758 <altera_avalon_lcd_16207_init>:

/*
 * Called at boot time to initialise the LCD driver
 */
void altera_avalon_lcd_16207_init(altera_avalon_lcd_16207_state* sp)
{
  819758:	defffc04 	addi	sp,sp,-16
  81975c:	dfc00315 	stw	ra,12(sp)
  819760:	df000215 	stw	fp,8(sp)
  819764:	df000204 	addi	fp,sp,8
  819768:	e13fff15 	stw	r4,-4(fp)
  unsigned int base = sp->base;
  81976c:	e0bfff17 	ldw	r2,-4(fp)
  819770:	10800017 	ldw	r2,0(r2)
  819774:	e0bffe15 	stw	r2,-8(fp)

  /* Mark the device as functional */
  sp->broken = 0;
  819778:	e0bfff17 	ldw	r2,-4(fp)
  81977c:	10000805 	stb	zero,32(r2)
   * the BUSY bit in the status register doesn't work until the display
   * has been reset three times.
   */

  /* Wait for 15 ms then reset */
  usleep(15000);
  819780:	010ea604 	movi	r4,15000
  819784:	0817d480 	call	817d48 <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  819788:	e0bffe17 	ldw	r2,-8(fp)
  81978c:	00c00c04 	movi	r3,48
  819790:	10c00035 	stwio	r3,0(r2)

  /* Wait for another 4.1ms and reset again */
  usleep(4100);  
  819794:	01040104 	movi	r4,4100
  819798:	0817d480 	call	817d48 <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  81979c:	e0bffe17 	ldw	r2,-8(fp)
  8197a0:	00c00c04 	movi	r3,48
  8197a4:	10c00035 	stwio	r3,0(r2)

  /* Wait a further 1 ms and reset a third time */
  usleep(1000);
  8197a8:	0100fa04 	movi	r4,1000
  8197ac:	0817d480 	call	817d48 <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  8197b0:	e0bffe17 	ldw	r2,-8(fp)
  8197b4:	00c00c04 	movi	r3,48
  8197b8:	10c00035 	stwio	r3,0(r2)

  /* Setup interface parameters: 8 bit bus, 2 rows, 5x7 font */
  lcd_write_command(sp, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT | LCD_CMD_TWO_LINE);
  8197bc:	e13fff17 	ldw	r4,-4(fp)
  8197c0:	01400e04 	movi	r5,56
  8197c4:	0818a200 	call	818a20 <lcd_write_command>
  
  /* Turn display off */
  lcd_write_command(sp, LCD_CMD_ONOFF);
  8197c8:	e13fff17 	ldw	r4,-4(fp)
  8197cc:	01400204 	movi	r5,8
  8197d0:	0818a200 	call	818a20 <lcd_write_command>

  /* Clear display */
  lcd_clear_screen(sp);
  8197d4:	e13fff17 	ldw	r4,-4(fp)
  8197d8:	0818ba80 	call	818ba8 <lcd_clear_screen>
  
  /* Set mode: increment after writing, don't shift display */
  lcd_write_command(sp, LCD_CMD_MODES | LCD_CMD_MODE_INC);
  8197dc:	e13fff17 	ldw	r4,-4(fp)
  8197e0:	01400184 	movi	r5,6
  8197e4:	0818a200 	call	818a20 <lcd_write_command>

  /* Turn display on */
  lcd_write_command(sp, LCD_CMD_ONOFF | LCD_CMD_ENABLE_DISP);
  8197e8:	e13fff17 	ldw	r4,-4(fp)
  8197ec:	01400304 	movi	r5,12
  8197f0:	0818a200 	call	818a20 <lcd_write_command>

  sp->esccount = -1;
  8197f4:	e0bfff17 	ldw	r2,-4(fp)
  8197f8:	00ffffc4 	movi	r3,-1
  8197fc:	10c00905 	stb	r3,36(r2)
  memset(sp->escape, 0, sizeof(sp->escape));
  819800:	e0bfff17 	ldw	r2,-4(fp)
  819804:	10800a04 	addi	r2,r2,40
  819808:	1009883a 	mov	r4,r2
  81980c:	000b883a 	mov	r5,zero
  819810:	01800204 	movi	r6,8
  819814:	0802a600 	call	802a60 <memset>

  sp->scrollpos = 0;
  819818:	e0bfff17 	ldw	r2,-4(fp)
  81981c:	10000945 	stb	zero,37(r2)
  sp->scrollmax = 0;
  819820:	e0bfff17 	ldw	r2,-4(fp)
  819824:	10000985 	stb	zero,38(r2)
  sp->active = 0;
  819828:	e0bfff17 	ldw	r2,-4(fp)
  81982c:	100009c5 	stb	zero,39(r2)
  819830:	008020b4 	movhi	r2,130
  819834:	10be5804 	addi	r2,r2,-1696
  819838:	10800017 	ldw	r2,0(r2)

  sp->period = alt_ticks_per_second() / 10; /* Call every 100ms */
  81983c:	1009883a 	mov	r4,r2
  819840:	01400284 	movi	r5,10
  819844:	08148ec0 	call	8148ec <__udivsi3>
  819848:	1007883a 	mov	r3,r2
  81984c:	e0bfff17 	ldw	r2,-4(fp)
  819850:	10c00715 	stw	r3,28(r2)

  alt_alarm_start(&sp->alarm, sp->period, &alt_lcd_16207_timeout, sp);
  819854:	e0bfff17 	ldw	r2,-4(fp)
  819858:	10c00104 	addi	r3,r2,4
  81985c:	e0bfff17 	ldw	r2,-4(fp)
  819860:	10800717 	ldw	r2,28(r2)
  819864:	1809883a 	mov	r4,r3
  819868:	100b883a 	mov	r5,r2
  81986c:	018020b4 	movhi	r6,130
  819870:	31a5ab04 	addi	r6,r6,-26964
  819874:	e1ffff17 	ldw	r7,-4(fp)
  819878:	081a2d40 	call	81a2d4 <alt_alarm_start>
}
  81987c:	e037883a 	mov	sp,fp
  819880:	dfc00117 	ldw	ra,4(sp)
  819884:	df000017 	ldw	fp,0(sp)
  819888:	dec00204 	addi	sp,sp,8
  81988c:	f800283a 	ret

00819890 <altera_avalon_lcd_16207_write_fd>:
extern int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp,
  const char* ptr, int count, int flags);

int 
altera_avalon_lcd_16207_write_fd(alt_fd* fd, const char* buffer, int space)
{
  819890:	defffa04 	addi	sp,sp,-24
  819894:	dfc00515 	stw	ra,20(sp)
  819898:	df000415 	stw	fp,16(sp)
  81989c:	df000404 	addi	fp,sp,16
  8198a0:	e13ffd15 	stw	r4,-12(fp)
  8198a4:	e17ffe15 	stw	r5,-8(fp)
  8198a8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_lcd_16207_dev* dev = (altera_avalon_lcd_16207_dev*) fd->dev; 
  8198ac:	e0bffd17 	ldw	r2,-12(fp)
  8198b0:	10800017 	ldw	r2,0(r2)
  8198b4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_lcd_16207_write(&dev->state, buffer, space,
  8198b8:	e0bffc17 	ldw	r2,-16(fp)
  8198bc:	10c00a04 	addi	r3,r2,40
  8198c0:	e0bffd17 	ldw	r2,-12(fp)
  8198c4:	10800217 	ldw	r2,8(r2)
  8198c8:	1809883a 	mov	r4,r3
  8198cc:	e17ffe17 	ldw	r5,-8(fp)
  8198d0:	e1bfff17 	ldw	r6,-4(fp)
  8198d4:	100f883a 	mov	r7,r2
  8198d8:	08191c40 	call	8191c4 <altera_avalon_lcd_16207_write>
      fd->fd_flags);
}
  8198dc:	e037883a 	mov	sp,fp
  8198e0:	dfc00117 	ldw	ra,4(sp)
  8198e4:	df000017 	ldw	fp,0(sp)
  8198e8:	dec00204 	addi	sp,sp,8
  8198ec:	f800283a 	ret

008198f0 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  8198f0:	defff904 	addi	sp,sp,-28
  8198f4:	dfc00615 	stw	ra,24(sp)
  8198f8:	df000515 	stw	fp,20(sp)
  8198fc:	df000504 	addi	fp,sp,20
  819900:	e13ffe15 	stw	r4,-8(fp)
  819904:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  819908:	0007883a 	mov	r3,zero
  81990c:	e0bffe17 	ldw	r2,-8(fp)
  819910:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  819914:	e0bffe17 	ldw	r2,-8(fp)
  819918:	10800104 	addi	r2,r2,4
  81991c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  819920:	0005303a 	rdctl	r2,status
  819924:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  819928:	e0fffc17 	ldw	r3,-16(fp)
  81992c:	00bfff84 	movi	r2,-2
  819930:	1884703a 	and	r2,r3,r2
  819934:	1001703a 	wrctl	status,r2
  
  return context;
  819938:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  81993c:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
  819940:	081ad640 	call	81ad64 <alt_tick>
  819944:	e0bffb17 	ldw	r2,-20(fp)
  819948:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81994c:	e0bffd17 	ldw	r2,-12(fp)
  819950:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  819954:	e037883a 	mov	sp,fp
  819958:	dfc00117 	ldw	ra,4(sp)
  81995c:	df000017 	ldw	fp,0(sp)
  819960:	dec00204 	addi	sp,sp,8
  819964:	f800283a 	ret

00819968 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  819968:	defff904 	addi	sp,sp,-28
  81996c:	dfc00615 	stw	ra,24(sp)
  819970:	df000515 	stw	fp,20(sp)
  819974:	df000504 	addi	fp,sp,20
  819978:	e13ffc15 	stw	r4,-16(fp)
  81997c:	e17ffd15 	stw	r5,-12(fp)
  819980:	e1bffe15 	stw	r6,-8(fp)
  819984:	e1ffff15 	stw	r7,-4(fp)
  819988:	e0bfff17 	ldw	r2,-4(fp)
  81998c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  819990:	008020b4 	movhi	r2,130
  819994:	10be5804 	addi	r2,r2,-1696
  819998:	10800017 	ldw	r2,0(r2)
  81999c:	1000041e 	bne	r2,zero,8199b0 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
  8199a0:	008020b4 	movhi	r2,130
  8199a4:	10be5804 	addi	r2,r2,-1696
  8199a8:	e0fffb17 	ldw	r3,-20(fp)
  8199ac:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  8199b0:	e0bffc17 	ldw	r2,-16(fp)
  8199b4:	10800104 	addi	r2,r2,4
  8199b8:	00c001c4 	movi	r3,7
  8199bc:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
  8199c0:	e13ffe17 	ldw	r4,-8(fp)
  8199c4:	e17ffc17 	ldw	r5,-16(fp)
  8199c8:	018020b4 	movhi	r6,130
  8199cc:	31a63c04 	addi	r6,r6,-26384
  8199d0:	081ab1c0 	call	81ab1c <alt_irq_register>
#endif  
}
  8199d4:	e037883a 	mov	sp,fp
  8199d8:	dfc00117 	ldw	ra,4(sp)
  8199dc:	df000017 	ldw	fp,0(sp)
  8199e0:	dec00204 	addi	sp,sp,8
  8199e4:	f800283a 	ret

008199e8 <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  8199e8:	defffa04 	addi	sp,sp,-24
  8199ec:	dfc00515 	stw	ra,20(sp)
  8199f0:	df000415 	stw	fp,16(sp)
  8199f4:	df000404 	addi	fp,sp,16
  8199f8:	e13ffd15 	stw	r4,-12(fp)
  8199fc:	e17ffe15 	stw	r5,-8(fp)
  819a00:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  819a04:	e0bffd17 	ldw	r2,-12(fp)
  819a08:	10800017 	ldw	r2,0(r2)
  819a0c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
  819a10:	e0bffc17 	ldw	r2,-16(fp)
  819a14:	10c00a04 	addi	r3,r2,40
  819a18:	e0bffd17 	ldw	r2,-12(fp)
  819a1c:	10800217 	ldw	r2,8(r2)
  819a20:	1809883a 	mov	r4,r3
  819a24:	e17ffe17 	ldw	r5,-8(fp)
  819a28:	e1bfff17 	ldw	r6,-4(fp)
  819a2c:	100f883a 	mov	r7,r2
  819a30:	0819efc0 	call	819efc <altera_avalon_uart_read>
      fd->fd_flags);
}
  819a34:	e037883a 	mov	sp,fp
  819a38:	dfc00117 	ldw	ra,4(sp)
  819a3c:	df000017 	ldw	fp,0(sp)
  819a40:	dec00204 	addi	sp,sp,8
  819a44:	f800283a 	ret

00819a48 <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  819a48:	defffa04 	addi	sp,sp,-24
  819a4c:	dfc00515 	stw	ra,20(sp)
  819a50:	df000415 	stw	fp,16(sp)
  819a54:	df000404 	addi	fp,sp,16
  819a58:	e13ffd15 	stw	r4,-12(fp)
  819a5c:	e17ffe15 	stw	r5,-8(fp)
  819a60:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  819a64:	e0bffd17 	ldw	r2,-12(fp)
  819a68:	10800017 	ldw	r2,0(r2)
  819a6c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
  819a70:	e0bffc17 	ldw	r2,-16(fp)
  819a74:	10c00a04 	addi	r3,r2,40
  819a78:	e0bffd17 	ldw	r2,-12(fp)
  819a7c:	10800217 	ldw	r2,8(r2)
  819a80:	1809883a 	mov	r4,r3
  819a84:	e17ffe17 	ldw	r5,-8(fp)
  819a88:	e1bfff17 	ldw	r6,-4(fp)
  819a8c:	100f883a 	mov	r7,r2
  819a90:	081a1280 	call	81a128 <altera_avalon_uart_write>
      fd->fd_flags);
}
  819a94:	e037883a 	mov	sp,fp
  819a98:	dfc00117 	ldw	ra,4(sp)
  819a9c:	df000017 	ldw	fp,0(sp)
  819aa0:	dec00204 	addi	sp,sp,8
  819aa4:	f800283a 	ret

00819aa8 <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
  819aa8:	defffc04 	addi	sp,sp,-16
  819aac:	dfc00315 	stw	ra,12(sp)
  819ab0:	df000215 	stw	fp,8(sp)
  819ab4:	df000204 	addi	fp,sp,8
  819ab8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  819abc:	e0bfff17 	ldw	r2,-4(fp)
  819ac0:	10800017 	ldw	r2,0(r2)
  819ac4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
  819ac8:	e0bffe17 	ldw	r2,-8(fp)
  819acc:	10c00a04 	addi	r3,r2,40
  819ad0:	e0bfff17 	ldw	r2,-4(fp)
  819ad4:	10800217 	ldw	r2,8(r2)
  819ad8:	1809883a 	mov	r4,r3
  819adc:	100b883a 	mov	r5,r2
  819ae0:	0819e580 	call	819e58 <altera_avalon_uart_close>
}
  819ae4:	e037883a 	mov	sp,fp
  819ae8:	dfc00117 	ldw	ra,4(sp)
  819aec:	df000017 	ldw	fp,0(sp)
  819af0:	dec00204 	addi	sp,sp,8
  819af4:	f800283a 	ret

00819af8 <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
  819af8:	defff904 	addi	sp,sp,-28
  819afc:	dfc00615 	stw	ra,24(sp)
  819b00:	df000515 	stw	fp,20(sp)
  819b04:	df000504 	addi	fp,sp,20
  819b08:	e13ffd15 	stw	r4,-12(fp)
  819b0c:	e17ffe15 	stw	r5,-8(fp)
  819b10:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  819b14:	e0bffd17 	ldw	r2,-12(fp)
  819b18:	10800017 	ldw	r2,0(r2)
  819b1c:	e0bffb15 	stw	r2,-20(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  819b20:	0005883a 	mov	r2,zero
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  819b24:	1000041e 	bne	r2,zero,819b38 <altera_avalon_uart_init+0x40>
  819b28:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  819b2c:	1000021e 	bne	r2,zero,819b38 <altera_avalon_uart_init+0x40>
  819b30:	0005883a 	mov	r2,zero
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  819b34:	10000226 	beq	r2,zero,819b40 <altera_avalon_uart_init+0x48>
  819b38:	00800044 	movi	r2,1
  819b3c:	00000106 	br	819b44 <altera_avalon_uart_init+0x4c>
  819b40:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  819b44:	e0bffc15 	stw	r2,-16(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  819b48:	e0bffc17 	ldw	r2,-16(fp)
  819b4c:	10000d1e 	bne	r2,zero,819b84 <altera_avalon_uart_init+0x8c>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
  819b50:	e0bffd17 	ldw	r2,-12(fp)
  819b54:	00c32004 	movi	r3,3200
  819b58:	10c00115 	stw	r3,4(r2)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
  819b5c:	e0bffb17 	ldw	r2,-20(fp)
  819b60:	10800304 	addi	r2,r2,12
  819b64:	e0fffd17 	ldw	r3,-12(fp)
  819b68:	18c00117 	ldw	r3,4(r3)
  819b6c:	10c00035 	stwio	r3,0(r2)
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
  819b70:	e13fff17 	ldw	r4,-4(fp)
  819b74:	e17ffd17 	ldw	r5,-12(fp)
  819b78:	018020b4 	movhi	r6,130
  819b7c:	31a6e604 	addi	r6,r6,-25704
  819b80:	081ab1c0 	call	81ab1c <alt_irq_register>
#endif  
  }
}
  819b84:	e037883a 	mov	sp,fp
  819b88:	dfc00117 	ldw	ra,4(sp)
  819b8c:	df000017 	ldw	fp,0(sp)
  819b90:	dec00204 	addi	sp,sp,8
  819b94:	f800283a 	ret

00819b98 <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  819b98:	defff904 	addi	sp,sp,-28
  819b9c:	dfc00615 	stw	ra,24(sp)
  819ba0:	df000515 	stw	fp,20(sp)
  819ba4:	df000504 	addi	fp,sp,20
  819ba8:	e13ffe15 	stw	r4,-8(fp)
  819bac:	e17fff15 	stw	r5,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
  819bb0:	e0bffe17 	ldw	r2,-8(fp)
  819bb4:	e0bffb15 	stw	r2,-20(fp)
  void* base               = sp->base;
  819bb8:	e0bffb17 	ldw	r2,-20(fp)
  819bbc:	10800017 	ldw	r2,0(r2)
  819bc0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
  819bc4:	e0bffc17 	ldw	r2,-16(fp)
  819bc8:	10800204 	addi	r2,r2,8
  819bcc:	10800037 	ldwio	r2,0(r2)
  819bd0:	e0bffd15 	stw	r2,-12(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
  819bd4:	e0bffc17 	ldw	r2,-16(fp)
  819bd8:	10800204 	addi	r2,r2,8
  819bdc:	0007883a 	mov	r3,zero
  819be0:	10c00035 	stwio	r3,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
  819be4:	e0bffc17 	ldw	r2,-16(fp)
  819be8:	10800204 	addi	r2,r2,8
  819bec:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
  819bf0:	e0bffd17 	ldw	r2,-12(fp)
  819bf4:	1080200c 	andi	r2,r2,128
  819bf8:	10000326 	beq	r2,zero,819c08 <altera_avalon_uart_irq+0x70>
  {
    altera_avalon_uart_rxirq(sp, status);
  819bfc:	e13ffb17 	ldw	r4,-20(fp)
  819c00:	e17ffd17 	ldw	r5,-12(fp)
  819c04:	0819c340 	call	819c34 <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
  819c08:	e0bffd17 	ldw	r2,-12(fp)
  819c0c:	1081100c 	andi	r2,r2,1088
  819c10:	10000326 	beq	r2,zero,819c20 <altera_avalon_uart_irq+0x88>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
  819c14:	e13ffb17 	ldw	r4,-20(fp)
  819c18:	e17ffd17 	ldw	r5,-12(fp)
  819c1c:	0819d140 	call	819d14 <altera_avalon_uart_txirq>
  }
  

}
  819c20:	e037883a 	mov	sp,fp
  819c24:	dfc00117 	ldw	ra,4(sp)
  819c28:	df000017 	ldw	fp,0(sp)
  819c2c:	dec00204 	addi	sp,sp,8
  819c30:	f800283a 	ret

00819c34 <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  819c34:	defffc04 	addi	sp,sp,-16
  819c38:	df000315 	stw	fp,12(sp)
  819c3c:	df000304 	addi	fp,sp,12
  819c40:	e13ffe15 	stw	r4,-8(fp)
  819c44:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
  819c48:	e0bfff17 	ldw	r2,-4(fp)
  819c4c:	108000cc 	andi	r2,r2,3
  819c50:	10000126 	beq	r2,zero,819c58 <altera_avalon_uart_rxirq+0x24>
                  ALTERA_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  819c54:	00002b06 	br	819d04 <altera_avalon_uart_rxirq+0xd0>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
  819c58:	e0bffe17 	ldw	r2,-8(fp)
  819c5c:	10800317 	ldw	r2,12(r2)
  819c60:	e0bffe17 	ldw	r2,-8(fp)
  819c64:	10800217 	ldw	r2,8(r2)
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  819c68:	e0bffe17 	ldw	r2,-8(fp)
  819c6c:	10800317 	ldw	r2,12(r2)
  819c70:	10800044 	addi	r2,r2,1
  819c74:	10800fcc 	andi	r2,r2,63
  819c78:	e0bffd15 	stw	r2,-12(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
  819c7c:	e0bffe17 	ldw	r2,-8(fp)
  819c80:	10800317 	ldw	r2,12(r2)
  819c84:	e0fffe17 	ldw	r3,-8(fp)
  819c88:	18c00017 	ldw	r3,0(r3)
  819c8c:	18c00037 	ldwio	r3,0(r3)
  819c90:	1809883a 	mov	r4,r3
  819c94:	e0fffe17 	ldw	r3,-8(fp)
  819c98:	1885883a 	add	r2,r3,r2
  819c9c:	10800704 	addi	r2,r2,28
  819ca0:	11000005 	stb	r4,0(r2)

  sp->rx_end = next;
  819ca4:	e0bffe17 	ldw	r2,-8(fp)
  819ca8:	e0fffd17 	ldw	r3,-12(fp)
  819cac:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  819cb0:	e0bffe17 	ldw	r2,-8(fp)
  819cb4:	10800317 	ldw	r2,12(r2)
  819cb8:	10800044 	addi	r2,r2,1
  819cbc:	10800fcc 	andi	r2,r2,63
  819cc0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  819cc4:	e0bffe17 	ldw	r2,-8(fp)
  819cc8:	10c00217 	ldw	r3,8(r2)
  819ccc:	e0bffd17 	ldw	r2,-12(fp)
  819cd0:	18800c1e 	bne	r3,r2,819d04 <altera_avalon_uart_rxirq+0xd0>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  819cd4:	e0bffe17 	ldw	r2,-8(fp)
  819cd8:	10c00117 	ldw	r3,4(r2)
  819cdc:	00bfdfc4 	movi	r2,-129
  819ce0:	1886703a 	and	r3,r3,r2
  819ce4:	e0bffe17 	ldw	r2,-8(fp)
  819ce8:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  819cec:	e0bffe17 	ldw	r2,-8(fp)
  819cf0:	10800017 	ldw	r2,0(r2)
  819cf4:	10800304 	addi	r2,r2,12
  819cf8:	e0fffe17 	ldw	r3,-8(fp)
  819cfc:	18c00117 	ldw	r3,4(r3)
  819d00:	10c00035 	stwio	r3,0(r2)
  }   
}
  819d04:	e037883a 	mov	sp,fp
  819d08:	df000017 	ldw	fp,0(sp)
  819d0c:	dec00104 	addi	sp,sp,4
  819d10:	f800283a 	ret

00819d14 <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  819d14:	defffb04 	addi	sp,sp,-20
  819d18:	df000415 	stw	fp,16(sp)
  819d1c:	df000404 	addi	fp,sp,16
  819d20:	e13ffc15 	stw	r4,-16(fp)
  819d24:	e17ffd15 	stw	r5,-12(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  819d28:	e0bffc17 	ldw	r2,-16(fp)
  819d2c:	10c00417 	ldw	r3,16(r2)
  819d30:	e0bffc17 	ldw	r2,-16(fp)
  819d34:	10800517 	ldw	r2,20(r2)
  819d38:	18803226 	beq	r3,r2,819e04 <altera_avalon_uart_txirq+0xf0>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  819d3c:	e0bffc17 	ldw	r2,-16(fp)
  819d40:	10800617 	ldw	r2,24(r2)
  819d44:	1080008c 	andi	r2,r2,2
  819d48:	10000326 	beq	r2,zero,819d58 <altera_avalon_uart_txirq+0x44>
      (status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  819d4c:	e0bffd17 	ldw	r2,-12(fp)
  819d50:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  819d54:	10001d26 	beq	r2,zero,819dcc <altera_avalon_uart_txirq+0xb8>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
  819d58:	e0bffc17 	ldw	r2,-16(fp)
  819d5c:	10800417 	ldw	r2,16(r2)
  819d60:	e0bffc17 	ldw	r2,-16(fp)
  819d64:	10800517 	ldw	r2,20(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  819d68:	e0bffc17 	ldw	r2,-16(fp)
  819d6c:	10800017 	ldw	r2,0(r2)
  819d70:	10800104 	addi	r2,r2,4
  819d74:	e0fffc17 	ldw	r3,-16(fp)
  819d78:	18c00417 	ldw	r3,16(r3)
  819d7c:	e13ffc17 	ldw	r4,-16(fp)
  819d80:	20c7883a 	add	r3,r4,r3
  819d84:	18c01704 	addi	r3,r3,92
  819d88:	18c00003 	ldbu	r3,0(r3)
  819d8c:	18c03fcc 	andi	r3,r3,255
  819d90:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
  819d94:	e0bffc17 	ldw	r2,-16(fp)
  819d98:	10800417 	ldw	r2,16(r2)
  819d9c:	10800044 	addi	r2,r2,1
  819da0:	e0fffc17 	ldw	r3,-16(fp)
  819da4:	18800415 	stw	r2,16(r3)
  819da8:	10c00fcc 	andi	r3,r2,63
  819dac:	e0bffc17 	ldw	r2,-16(fp)
  819db0:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  819db4:	e0bffc17 	ldw	r2,-16(fp)
  819db8:	10800117 	ldw	r2,4(r2)
  819dbc:	10c01014 	ori	r3,r2,64
  819dc0:	e0bffc17 	ldw	r2,-16(fp)
  819dc4:	10c00115 	stw	r3,4(r2)
  819dc8:	00000e06 	br	819e04 <altera_avalon_uart_txirq+0xf0>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
  819dcc:	e0bffc17 	ldw	r2,-16(fp)
  819dd0:	10800017 	ldw	r2,0(r2)
  819dd4:	10800204 	addi	r2,r2,8
  819dd8:	10800037 	ldwio	r2,0(r2)
  819ddc:	e0bffd15 	stw	r2,-12(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  819de0:	e0bffd17 	ldw	r2,-12(fp)
  819de4:	1082000c 	andi	r2,r2,2048
  819de8:	1000061e 	bne	r2,zero,819e04 <altera_avalon_uart_txirq+0xf0>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  819dec:	e0bffc17 	ldw	r2,-16(fp)
  819df0:	10c00117 	ldw	r3,4(r2)
  819df4:	00bfefc4 	movi	r2,-65
  819df8:	1886703a 	and	r3,r3,r2
  819dfc:	e0bffc17 	ldw	r2,-16(fp)
  819e00:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  819e04:	e0bffc17 	ldw	r2,-16(fp)
  819e08:	10c00417 	ldw	r3,16(r2)
  819e0c:	e0bffc17 	ldw	r2,-16(fp)
  819e10:	10800517 	ldw	r2,20(r2)
  819e14:	1880061e 	bne	r3,r2,819e30 <altera_avalon_uart_txirq+0x11c>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  819e18:	e0bffc17 	ldw	r2,-16(fp)
  819e1c:	10c00117 	ldw	r3,4(r2)
  819e20:	00beefc4 	movi	r2,-1089
  819e24:	1886703a 	and	r3,r3,r2
  819e28:	e0bffc17 	ldw	r2,-16(fp)
  819e2c:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  819e30:	e0bffc17 	ldw	r2,-16(fp)
  819e34:	10800017 	ldw	r2,0(r2)
  819e38:	10800304 	addi	r2,r2,12
  819e3c:	e0fffc17 	ldw	r3,-16(fp)
  819e40:	18c00117 	ldw	r3,4(r3)
  819e44:	10c00035 	stwio	r3,0(r2)
}
  819e48:	e037883a 	mov	sp,fp
  819e4c:	df000017 	ldw	fp,0(sp)
  819e50:	dec00104 	addi	sp,sp,4
  819e54:	f800283a 	ret

00819e58 <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  819e58:	defffd04 	addi	sp,sp,-12
  819e5c:	df000215 	stw	fp,8(sp)
  819e60:	df000204 	addi	fp,sp,8
  819e64:	e13ffe15 	stw	r4,-8(fp)
  819e68:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  819e6c:	00000506 	br	819e84 <altera_avalon_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  819e70:	e0bfff17 	ldw	r2,-4(fp)
  819e74:	1090000c 	andi	r2,r2,16384
  819e78:	10000226 	beq	r2,zero,819e84 <altera_avalon_uart_close+0x2c>
      return -EWOULDBLOCK; 
  819e7c:	00bffd44 	movi	r2,-11
  819e80:	00000606 	br	819e9c <altera_avalon_uart_close+0x44>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  819e84:	e0bffe17 	ldw	r2,-8(fp)
  819e88:	10c00417 	ldw	r3,16(r2)
  819e8c:	e0bffe17 	ldw	r2,-8(fp)
  819e90:	10800517 	ldw	r2,20(r2)
  819e94:	18bff61e 	bne	r3,r2,819e70 <__alt_data_end+0xff819e70>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  819e98:	0005883a 	mov	r2,zero
}
  819e9c:	e037883a 	mov	sp,fp
  819ea0:	df000017 	ldw	fp,0(sp)
  819ea4:	dec00104 	addi	sp,sp,4
  819ea8:	f800283a 	ret

00819eac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  819eac:	defffe04 	addi	sp,sp,-8
  819eb0:	dfc00115 	stw	ra,4(sp)
  819eb4:	df000015 	stw	fp,0(sp)
  819eb8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  819ebc:	008020b4 	movhi	r2,130
  819ec0:	10b6ee04 	addi	r2,r2,-9288
  819ec4:	10800017 	ldw	r2,0(r2)
  819ec8:	10000526 	beq	r2,zero,819ee0 <alt_get_errno+0x34>
  819ecc:	008020b4 	movhi	r2,130
  819ed0:	10b6ee04 	addi	r2,r2,-9288
  819ed4:	10800017 	ldw	r2,0(r2)
  819ed8:	103ee83a 	callr	r2
  819edc:	00000206 	br	819ee8 <alt_get_errno+0x3c>
  819ee0:	008020b4 	movhi	r2,130
  819ee4:	10be4d04 	addi	r2,r2,-1740
}
  819ee8:	e037883a 	mov	sp,fp
  819eec:	dfc00117 	ldw	ra,4(sp)
  819ef0:	df000017 	ldw	fp,0(sp)
  819ef4:	dec00204 	addi	sp,sp,8
  819ef8:	f800283a 	ret

00819efc <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
  819efc:	defff204 	addi	sp,sp,-56
  819f00:	dfc00d15 	stw	ra,52(sp)
  819f04:	df000c15 	stw	fp,48(sp)
  819f08:	df000c04 	addi	fp,sp,48
  819f0c:	e13ffc15 	stw	r4,-16(fp)
  819f10:	e17ffd15 	stw	r5,-12(fp)
  819f14:	e1bffe15 	stw	r6,-8(fp)
  819f18:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
  alt_u8          read_would_block = 0;
  819f1c:	e03ff405 	stb	zero,-48(fp)
  int             count = 0;
  819f20:	e03ff515 	stw	zero,-44(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  819f24:	e0bfff17 	ldw	r2,-4(fp)
  819f28:	1090000c 	andi	r2,r2,16384
  819f2c:	1005003a 	cmpeq	r2,r2,zero
  819f30:	10803fcc 	andi	r2,r2,255
  819f34:	e0bff615 	stw	r2,-40(fp)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  819f38:	00001306 	br	819f88 <altera_avalon_uart_read+0x8c>
    {
      count++;
  819f3c:	e0bff517 	ldw	r2,-44(fp)
  819f40:	10800044 	addi	r2,r2,1
  819f44:	e0bff515 	stw	r2,-44(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  819f48:	e0bffd17 	ldw	r2,-12(fp)
  819f4c:	10c00044 	addi	r3,r2,1
  819f50:	e0fffd15 	stw	r3,-12(fp)
  819f54:	e0fffc17 	ldw	r3,-16(fp)
  819f58:	18c00217 	ldw	r3,8(r3)
  819f5c:	e13ffc17 	ldw	r4,-16(fp)
  819f60:	20c7883a 	add	r3,r4,r3
  819f64:	18c00704 	addi	r3,r3,28
  819f68:	18c00003 	ldbu	r3,0(r3)
  819f6c:	10c00005 	stb	r3,0(r2)
      
      sp->rx_start = (sp->rx_start+1) & ALT_AVALON_UART_BUF_MSK;
  819f70:	e0bffc17 	ldw	r2,-16(fp)
  819f74:	10800217 	ldw	r2,8(r2)
  819f78:	10800044 	addi	r2,r2,1
  819f7c:	10c00fcc 	andi	r3,r2,63
  819f80:	e0bffc17 	ldw	r2,-16(fp)
  819f84:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  819f88:	e0fff517 	ldw	r3,-44(fp)
  819f8c:	e0bffe17 	ldw	r2,-8(fp)
  819f90:	1880050e 	bge	r3,r2,819fa8 <altera_avalon_uart_read+0xac>
  819f94:	e0bffc17 	ldw	r2,-16(fp)
  819f98:	10c00217 	ldw	r3,8(r2)
  819f9c:	e0bffc17 	ldw	r2,-16(fp)
  819fa0:	10800317 	ldw	r2,12(r2)
  819fa4:	18bfe51e 	bne	r3,r2,819f3c <__alt_data_end+0xff819f3c>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  819fa8:	e0bff517 	ldw	r2,-44(fp)
  819fac:	1000251e 	bne	r2,zero,81a044 <altera_avalon_uart_read+0x148>
  819fb0:	e0bffc17 	ldw	r2,-16(fp)
  819fb4:	10c00217 	ldw	r3,8(r2)
  819fb8:	e0bffc17 	ldw	r2,-16(fp)
  819fbc:	10800317 	ldw	r2,12(r2)
  819fc0:	1880201e 	bne	r3,r2,81a044 <altera_avalon_uart_read+0x148>
    {
      if (!block)
  819fc4:	e0bff617 	ldw	r2,-40(fp)
  819fc8:	1000071e 	bne	r2,zero,819fe8 <altera_avalon_uart_read+0xec>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  819fcc:	0819eac0 	call	819eac <alt_get_errno>
  819fd0:	1007883a 	mov	r3,r2
  819fd4:	008002c4 	movi	r2,11
  819fd8:	18800015 	stw	r2,0(r3)
        read_would_block = 1;
  819fdc:	00800044 	movi	r2,1
  819fe0:	e0bff405 	stb	r2,-48(fp)
        break;
  819fe4:	00001b06 	br	81a054 <altera_avalon_uart_read+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  819fe8:	0005303a 	rdctl	r2,status
  819fec:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  819ff0:	e0fff817 	ldw	r3,-32(fp)
  819ff4:	00bfff84 	movi	r2,-2
  819ff8:	1884703a 	and	r2,r3,r2
  819ffc:	1001703a 	wrctl	status,r2
  
  return context;
  81a000:	e0bff817 	ldw	r2,-32(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  81a004:	e0bff715 	stw	r2,-36(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81a008:	e0bffc17 	ldw	r2,-16(fp)
  81a00c:	10800117 	ldw	r2,4(r2)
  81a010:	10c02014 	ori	r3,r2,128
  81a014:	e0bffc17 	ldw	r2,-16(fp)
  81a018:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81a01c:	e0bffc17 	ldw	r2,-16(fp)
  81a020:	10800017 	ldw	r2,0(r2)
  81a024:	10800304 	addi	r2,r2,12
  81a028:	e0fffc17 	ldw	r3,-16(fp)
  81a02c:	18c00117 	ldw	r3,4(r3)
  81a030:	10c00035 	stwio	r3,0(r2)
  81a034:	e0bff717 	ldw	r2,-36(fp)
  81a038:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a03c:	e0bff917 	ldw	r2,-28(fp)
  81a040:	1001703a 	wrctl	status,r2
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  81a044:	e0bff517 	ldw	r2,-44(fp)
  81a048:	1000021e 	bne	r2,zero,81a054 <altera_avalon_uart_read+0x158>
  81a04c:	e0bffe17 	ldw	r2,-8(fp)
  81a050:	103fb91e 	bne	r2,zero,819f38 <__alt_data_end+0xff819f38>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a054:	0005303a 	rdctl	r2,status
  81a058:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a05c:	e0fffa17 	ldw	r3,-24(fp)
  81a060:	00bfff84 	movi	r2,-2
  81a064:	1884703a 	and	r2,r3,r2
  81a068:	1001703a 	wrctl	status,r2
  
  return context;
  81a06c:	e0bffa17 	ldw	r2,-24(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  81a070:	e0bff715 	stw	r2,-36(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81a074:	e0bffc17 	ldw	r2,-16(fp)
  81a078:	10800117 	ldw	r2,4(r2)
  81a07c:	10c02014 	ori	r3,r2,128
  81a080:	e0bffc17 	ldw	r2,-16(fp)
  81a084:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81a088:	e0bffc17 	ldw	r2,-16(fp)
  81a08c:	10800017 	ldw	r2,0(r2)
  81a090:	10800304 	addi	r2,r2,12
  81a094:	e0fffc17 	ldw	r3,-16(fp)
  81a098:	18c00117 	ldw	r3,4(r3)
  81a09c:	10c00035 	stwio	r3,0(r2)
  81a0a0:	e0bff717 	ldw	r2,-36(fp)
  81a0a4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a0a8:	e0bffb17 	ldw	r2,-20(fp)
  81a0ac:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
  81a0b0:	e0bff403 	ldbu	r2,-48(fp)
  81a0b4:	10000226 	beq	r2,zero,81a0c0 <altera_avalon_uart_read+0x1c4>
    return -EWOULDBLOCK;
  81a0b8:	00bffd44 	movi	r2,-11
  81a0bc:	00000106 	br	81a0c4 <altera_avalon_uart_read+0x1c8>
  }
  else {
    return count;
  81a0c0:	e0bff517 	ldw	r2,-44(fp)
  }
}
  81a0c4:	e037883a 	mov	sp,fp
  81a0c8:	dfc00117 	ldw	ra,4(sp)
  81a0cc:	df000017 	ldw	fp,0(sp)
  81a0d0:	dec00204 	addi	sp,sp,8
  81a0d4:	f800283a 	ret

0081a0d8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81a0d8:	defffe04 	addi	sp,sp,-8
  81a0dc:	dfc00115 	stw	ra,4(sp)
  81a0e0:	df000015 	stw	fp,0(sp)
  81a0e4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81a0e8:	008020b4 	movhi	r2,130
  81a0ec:	10b6ee04 	addi	r2,r2,-9288
  81a0f0:	10800017 	ldw	r2,0(r2)
  81a0f4:	10000526 	beq	r2,zero,81a10c <alt_get_errno+0x34>
  81a0f8:	008020b4 	movhi	r2,130
  81a0fc:	10b6ee04 	addi	r2,r2,-9288
  81a100:	10800017 	ldw	r2,0(r2)
  81a104:	103ee83a 	callr	r2
  81a108:	00000206 	br	81a114 <alt_get_errno+0x3c>
  81a10c:	008020b4 	movhi	r2,130
  81a110:	10be4d04 	addi	r2,r2,-1740
}
  81a114:	e037883a 	mov	sp,fp
  81a118:	dfc00117 	ldw	ra,4(sp)
  81a11c:	df000017 	ldw	fp,0(sp)
  81a120:	dec00204 	addi	sp,sp,8
  81a124:	f800283a 	ret

0081a128 <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
  81a128:	defff204 	addi	sp,sp,-56
  81a12c:	dfc00d15 	stw	ra,52(sp)
  81a130:	df000c15 	stw	fp,48(sp)
  81a134:	df000c04 	addi	fp,sp,48
  81a138:	e13ffc15 	stw	r4,-16(fp)
  81a13c:	e17ffd15 	stw	r5,-12(fp)
  81a140:	e1bffe15 	stw	r6,-8(fp)
  81a144:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
  81a148:	e0bffe17 	ldw	r2,-8(fp)
  81a14c:	e0bff415 	stw	r2,-48(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  81a150:	e0bfff17 	ldw	r2,-4(fp)
  81a154:	1090000c 	andi	r2,r2,16384
  81a158:	e0bff515 	stw	r2,-44(fp)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  81a15c:	00003c06 	br	81a250 <altera_avalon_uart_write+0x128>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81a160:	e0bffc17 	ldw	r2,-16(fp)
  81a164:	10800517 	ldw	r2,20(r2)
  81a168:	10800044 	addi	r2,r2,1
  81a16c:	10800fcc 	andi	r2,r2,63
  81a170:	e0bff615 	stw	r2,-40(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  81a174:	e0bffc17 	ldw	r2,-16(fp)
  81a178:	10c00417 	ldw	r3,16(r2)
  81a17c:	e0bff617 	ldw	r2,-40(fp)
  81a180:	1880221e 	bne	r3,r2,81a20c <altera_avalon_uart_write+0xe4>
    {
      if (no_block)
  81a184:	e0bff517 	ldw	r2,-44(fp)
  81a188:	10000526 	beq	r2,zero,81a1a0 <altera_avalon_uart_write+0x78>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  81a18c:	081a0d80 	call	81a0d8 <alt_get_errno>
  81a190:	1007883a 	mov	r3,r2
  81a194:	008002c4 	movi	r2,11
  81a198:	18800015 	stw	r2,0(r3)
        break;
  81a19c:	00002e06 	br	81a258 <altera_avalon_uart_write+0x130>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a1a0:	0005303a 	rdctl	r2,status
  81a1a4:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a1a8:	e0fff817 	ldw	r3,-32(fp)
  81a1ac:	00bfff84 	movi	r2,-2
  81a1b0:	1884703a 	and	r2,r3,r2
  81a1b4:	1001703a 	wrctl	status,r2
  
  return context;
  81a1b8:	e0bff817 	ldw	r2,-32(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  81a1bc:	e0bff715 	stw	r2,-36(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81a1c0:	e0bffc17 	ldw	r2,-16(fp)
  81a1c4:	10800117 	ldw	r2,4(r2)
  81a1c8:	10c11014 	ori	r3,r2,1088
  81a1cc:	e0bffc17 	ldw	r2,-16(fp)
  81a1d0:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81a1d4:	e0bffc17 	ldw	r2,-16(fp)
  81a1d8:	10800017 	ldw	r2,0(r2)
  81a1dc:	10800304 	addi	r2,r2,12
  81a1e0:	e0fffc17 	ldw	r3,-16(fp)
  81a1e4:	18c00117 	ldw	r3,4(r3)
  81a1e8:	10c00035 	stwio	r3,0(r2)
  81a1ec:	e0bff717 	ldw	r2,-36(fp)
  81a1f0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a1f4:	e0bff917 	ldw	r2,-28(fp)
  81a1f8:	1001703a 	wrctl	status,r2
          ALT_FLAG_PEND (sp->events, 
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  81a1fc:	e0bffc17 	ldw	r2,-16(fp)
  81a200:	10c00417 	ldw	r3,16(r2)
  81a204:	e0bff617 	ldw	r2,-40(fp)
  81a208:	18bffc26 	beq	r3,r2,81a1fc <__alt_data_end+0xff81a1fc>
      }
    }

    count--;
  81a20c:	e0bff417 	ldw	r2,-48(fp)
  81a210:	10bfffc4 	addi	r2,r2,-1
  81a214:	e0bff415 	stw	r2,-48(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  81a218:	e0bffc17 	ldw	r2,-16(fp)
  81a21c:	10c00517 	ldw	r3,20(r2)
  81a220:	e0bffd17 	ldw	r2,-12(fp)
  81a224:	11000044 	addi	r4,r2,1
  81a228:	e13ffd15 	stw	r4,-12(fp)
  81a22c:	10800003 	ldbu	r2,0(r2)
  81a230:	1009883a 	mov	r4,r2
  81a234:	e0bffc17 	ldw	r2,-16(fp)
  81a238:	10c5883a 	add	r2,r2,r3
  81a23c:	10801704 	addi	r2,r2,92
  81a240:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  81a244:	e0bffc17 	ldw	r2,-16(fp)
  81a248:	e0fff617 	ldw	r3,-40(fp)
  81a24c:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  81a250:	e0bff417 	ldw	r2,-48(fp)
  81a254:	103fc21e 	bne	r2,zero,81a160 <__alt_data_end+0xff81a160>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a258:	0005303a 	rdctl	r2,status
  81a25c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a260:	e0fffa17 	ldw	r3,-24(fp)
  81a264:	00bfff84 	movi	r2,-2
  81a268:	1884703a 	and	r2,r3,r2
  81a26c:	1001703a 	wrctl	status,r2
  
  return context;
  81a270:	e0bffa17 	ldw	r2,-24(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  81a274:	e0bff715 	stw	r2,-36(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81a278:	e0bffc17 	ldw	r2,-16(fp)
  81a27c:	10800117 	ldw	r2,4(r2)
  81a280:	10c11014 	ori	r3,r2,1088
  81a284:	e0bffc17 	ldw	r2,-16(fp)
  81a288:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81a28c:	e0bffc17 	ldw	r2,-16(fp)
  81a290:	10800017 	ldw	r2,0(r2)
  81a294:	10800304 	addi	r2,r2,12
  81a298:	e0fffc17 	ldw	r3,-16(fp)
  81a29c:	18c00117 	ldw	r3,4(r3)
  81a2a0:	10c00035 	stwio	r3,0(r2)
  81a2a4:	e0bff717 	ldw	r2,-36(fp)
  81a2a8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a2ac:	e0bffb17 	ldw	r2,-20(fp)
  81a2b0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  81a2b4:	e0fffe17 	ldw	r3,-8(fp)
  81a2b8:	e0bff417 	ldw	r2,-48(fp)
  81a2bc:	1885c83a 	sub	r2,r3,r2
}
  81a2c0:	e037883a 	mov	sp,fp
  81a2c4:	dfc00117 	ldw	ra,4(sp)
  81a2c8:	df000017 	ldw	fp,0(sp)
  81a2cc:	dec00204 	addi	sp,sp,8
  81a2d0:	f800283a 	ret

0081a2d4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  81a2d4:	defff504 	addi	sp,sp,-44
  81a2d8:	df000a15 	stw	fp,40(sp)
  81a2dc:	df000a04 	addi	fp,sp,40
  81a2e0:	e13ffc15 	stw	r4,-16(fp)
  81a2e4:	e17ffd15 	stw	r5,-12(fp)
  81a2e8:	e1bffe15 	stw	r6,-8(fp)
  81a2ec:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  81a2f0:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  81a2f4:	008020b4 	movhi	r2,130
  81a2f8:	10be5804 	addi	r2,r2,-1696
  81a2fc:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
  81a300:	10003f26 	beq	r2,zero,81a400 <alt_alarm_start+0x12c>
  {
    if (alarm)
  81a304:	e0bffc17 	ldw	r2,-16(fp)
  81a308:	10003b26 	beq	r2,zero,81a3f8 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
  81a30c:	e0bffc17 	ldw	r2,-16(fp)
  81a310:	e0fffe17 	ldw	r3,-8(fp)
  81a314:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  81a318:	e0bffc17 	ldw	r2,-16(fp)
  81a31c:	e0ffff17 	ldw	r3,-4(fp)
  81a320:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a324:	0005303a 	rdctl	r2,status
  81a328:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a32c:	e0fff817 	ldw	r3,-32(fp)
  81a330:	00bfff84 	movi	r2,-2
  81a334:	1884703a 	and	r2,r3,r2
  81a338:	1001703a 	wrctl	status,r2
  
  return context;
  81a33c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
  81a340:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  81a344:	008020b4 	movhi	r2,130
  81a348:	10be5904 	addi	r2,r2,-1692
  81a34c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
  81a350:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  81a354:	e0fffd17 	ldw	r3,-12(fp)
  81a358:	e0bff617 	ldw	r2,-40(fp)
  81a35c:	1885883a 	add	r2,r3,r2
  81a360:	10c00044 	addi	r3,r2,1
  81a364:	e0bffc17 	ldw	r2,-16(fp)
  81a368:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  81a36c:	e0bffc17 	ldw	r2,-16(fp)
  81a370:	10c00217 	ldw	r3,8(r2)
  81a374:	e0bff617 	ldw	r2,-40(fp)
  81a378:	1880042e 	bgeu	r3,r2,81a38c <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
  81a37c:	e0bffc17 	ldw	r2,-16(fp)
  81a380:	00c00044 	movi	r3,1
  81a384:	10c00405 	stb	r3,16(r2)
  81a388:	00000206 	br	81a394 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
  81a38c:	e0bffc17 	ldw	r2,-16(fp)
  81a390:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  81a394:	e0fffc17 	ldw	r3,-16(fp)
  81a398:	008020b4 	movhi	r2,130
  81a39c:	10b6f204 	addi	r2,r2,-9272
  81a3a0:	e0bff915 	stw	r2,-28(fp)
  81a3a4:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  81a3a8:	e0bffa17 	ldw	r2,-24(fp)
  81a3ac:	e0fff917 	ldw	r3,-28(fp)
  81a3b0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  81a3b4:	e0bff917 	ldw	r2,-28(fp)
  81a3b8:	10c00017 	ldw	r3,0(r2)
  81a3bc:	e0bffa17 	ldw	r2,-24(fp)
  81a3c0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  81a3c4:	e0bff917 	ldw	r2,-28(fp)
  81a3c8:	10800017 	ldw	r2,0(r2)
  81a3cc:	e0fffa17 	ldw	r3,-24(fp)
  81a3d0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  81a3d4:	e0bff917 	ldw	r2,-28(fp)
  81a3d8:	e0fffa17 	ldw	r3,-24(fp)
  81a3dc:	10c00015 	stw	r3,0(r2)
  81a3e0:	e0bff717 	ldw	r2,-36(fp)
  81a3e4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a3e8:	e0bffb17 	ldw	r2,-20(fp)
  81a3ec:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  81a3f0:	0005883a 	mov	r2,zero
  81a3f4:	00000306 	br	81a404 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
  81a3f8:	00bffa84 	movi	r2,-22
  81a3fc:	00000106 	br	81a404 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
  81a400:	00bfde84 	movi	r2,-134
  }
}
  81a404:	e037883a 	mov	sp,fp
  81a408:	df000017 	ldw	fp,0(sp)
  81a40c:	dec00104 	addi	sp,sp,4
  81a410:	f800283a 	ret

0081a414 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
  81a414:	defffa04 	addi	sp,sp,-24
  81a418:	dfc00515 	stw	ra,20(sp)
  81a41c:	df000415 	stw	fp,16(sp)
  81a420:	df000404 	addi	fp,sp,16
  81a424:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
  81a428:	008000c4 	movi	r2,3
  81a42c:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
  81a430:	e0fffd17 	ldw	r3,-12(fp)
  81a434:	008003f4 	movhi	r2,15
  81a438:	10909004 	addi	r2,r2,16960
  81a43c:	1885383a 	mul	r2,r3,r2
  81a440:	0100bef4 	movhi	r4,763
  81a444:	213c2004 	addi	r4,r4,-3968
  81a448:	100b883a 	mov	r5,r2
  81a44c:	08148ec0 	call	8148ec <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  81a450:	01200034 	movhi	r4,32768
  81a454:	213fffc4 	addi	r4,r4,-1
  81a458:	100b883a 	mov	r5,r2
  81a45c:	08148ec0 	call	8148ec <__udivsi3>
  81a460:	e13fff17 	ldw	r4,-4(fp)
  81a464:	100b883a 	mov	r5,r2
  81a468:	08148ec0 	call	8148ec <__udivsi3>
  81a46c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  81a470:	e0bffe17 	ldw	r2,-8(fp)
  81a474:	10002a26 	beq	r2,zero,81a520 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
  81a478:	e03ffc15 	stw	zero,-16(fp)
  81a47c:	00001706 	br	81a4dc <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
  81a480:	00a00034 	movhi	r2,32768
  81a484:	10bfffc4 	addi	r2,r2,-1
  81a488:	10bfffc4 	addi	r2,r2,-1
  81a48c:	103ffe1e 	bne	r2,zero,81a488 <__alt_data_end+0xff81a488>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
  81a490:	e0fffd17 	ldw	r3,-12(fp)
  81a494:	008003f4 	movhi	r2,15
  81a498:	10909004 	addi	r2,r2,16960
  81a49c:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
  81a4a0:	0100bef4 	movhi	r4,763
  81a4a4:	213c2004 	addi	r4,r4,-3968
  81a4a8:	100b883a 	mov	r5,r2
  81a4ac:	08148ec0 	call	8148ec <__udivsi3>
  81a4b0:	01200034 	movhi	r4,32768
  81a4b4:	213fffc4 	addi	r4,r4,-1
  81a4b8:	100b883a 	mov	r5,r2
  81a4bc:	08148ec0 	call	8148ec <__udivsi3>
  81a4c0:	1007883a 	mov	r3,r2
  81a4c4:	e0bfff17 	ldw	r2,-4(fp)
  81a4c8:	10c5c83a 	sub	r2,r2,r3
  81a4cc:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
  81a4d0:	e0bffc17 	ldw	r2,-16(fp)
  81a4d4:	10800044 	addi	r2,r2,1
  81a4d8:	e0bffc15 	stw	r2,-16(fp)
  81a4dc:	e0fffc17 	ldw	r3,-16(fp)
  81a4e0:	e0bffe17 	ldw	r2,-8(fp)
  81a4e4:	18bfe616 	blt	r3,r2,81a480 <__alt_data_end+0xff81a480>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  81a4e8:	e0fffd17 	ldw	r3,-12(fp)
  81a4ec:	008003f4 	movhi	r2,15
  81a4f0:	10909004 	addi	r2,r2,16960
  81a4f4:	1885383a 	mul	r2,r3,r2
  81a4f8:	0100bef4 	movhi	r4,763
  81a4fc:	213c2004 	addi	r4,r4,-3968
  81a500:	100b883a 	mov	r5,r2
  81a504:	08148ec0 	call	8148ec <__udivsi3>
  81a508:	1007883a 	mov	r3,r2
  81a50c:	e0bfff17 	ldw	r2,-4(fp)
  81a510:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  81a514:	10bfffc4 	addi	r2,r2,-1
  81a518:	103ffe1e 	bne	r2,zero,81a514 <__alt_data_end+0xff81a514>
  81a51c:	00000d06 	br	81a554 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  81a520:	e0fffd17 	ldw	r3,-12(fp)
  81a524:	008003f4 	movhi	r2,15
  81a528:	10909004 	addi	r2,r2,16960
  81a52c:	1885383a 	mul	r2,r3,r2
  81a530:	0100bef4 	movhi	r4,763
  81a534:	213c2004 	addi	r4,r4,-3968
  81a538:	100b883a 	mov	r5,r2
  81a53c:	08148ec0 	call	8148ec <__udivsi3>
  81a540:	1007883a 	mov	r3,r2
  81a544:	e0bfff17 	ldw	r2,-4(fp)
  81a548:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  81a54c:	10bfffc4 	addi	r2,r2,-1
  81a550:	00bffe16 	blt	zero,r2,81a54c <__alt_data_end+0xff81a54c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
  81a554:	0005883a 	mov	r2,zero
}
  81a558:	e037883a 	mov	sp,fp
  81a55c:	dfc00117 	ldw	ra,4(sp)
  81a560:	df000017 	ldw	fp,0(sp)
  81a564:	dec00204 	addi	sp,sp,8
  81a568:	f800283a 	ret

0081a56c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  81a56c:	defffe04 	addi	sp,sp,-8
  81a570:	df000115 	stw	fp,4(sp)
  81a574:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81a578:	e03fff15 	stw	zero,-4(fp)
  81a57c:	00000506 	br	81a594 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  81a580:	e0bfff17 	ldw	r2,-4(fp)
  81a584:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81a588:	e0bfff17 	ldw	r2,-4(fp)
  81a58c:	10800804 	addi	r2,r2,32
  81a590:	e0bfff15 	stw	r2,-4(fp)
  81a594:	e0bfff17 	ldw	r2,-4(fp)
  81a598:	10820030 	cmpltui	r2,r2,2048
  81a59c:	103ff81e 	bne	r2,zero,81a580 <__alt_data_end+0xff81a580>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  81a5a0:	e037883a 	mov	sp,fp
  81a5a4:	df000017 	ldw	fp,0(sp)
  81a5a8:	dec00104 	addi	sp,sp,4
  81a5ac:	f800283a 	ret

0081a5b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81a5b0:	defffe04 	addi	sp,sp,-8
  81a5b4:	dfc00115 	stw	ra,4(sp)
  81a5b8:	df000015 	stw	fp,0(sp)
  81a5bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81a5c0:	008020b4 	movhi	r2,130
  81a5c4:	10b6ee04 	addi	r2,r2,-9288
  81a5c8:	10800017 	ldw	r2,0(r2)
  81a5cc:	10000526 	beq	r2,zero,81a5e4 <alt_get_errno+0x34>
  81a5d0:	008020b4 	movhi	r2,130
  81a5d4:	10b6ee04 	addi	r2,r2,-9288
  81a5d8:	10800017 	ldw	r2,0(r2)
  81a5dc:	103ee83a 	callr	r2
  81a5e0:	00000206 	br	81a5ec <alt_get_errno+0x3c>
  81a5e4:	008020b4 	movhi	r2,130
  81a5e8:	10be4d04 	addi	r2,r2,-1740
}
  81a5ec:	e037883a 	mov	sp,fp
  81a5f0:	dfc00117 	ldw	ra,4(sp)
  81a5f4:	df000017 	ldw	fp,0(sp)
  81a5f8:	dec00204 	addi	sp,sp,8
  81a5fc:	f800283a 	ret

0081a600 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  81a600:	defffa04 	addi	sp,sp,-24
  81a604:	dfc00515 	stw	ra,20(sp)
  81a608:	df000415 	stw	fp,16(sp)
  81a60c:	df000404 	addi	fp,sp,16
  81a610:	e13ffe15 	stw	r4,-8(fp)
  81a614:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  81a618:	e0bffe17 	ldw	r2,-8(fp)
  81a61c:	10000326 	beq	r2,zero,81a62c <alt_dev_llist_insert+0x2c>
  81a620:	e0bffe17 	ldw	r2,-8(fp)
  81a624:	10800217 	ldw	r2,8(r2)
  81a628:	1000061e 	bne	r2,zero,81a644 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  81a62c:	081a5b00 	call	81a5b0 <alt_get_errno>
  81a630:	1007883a 	mov	r3,r2
  81a634:	00800584 	movi	r2,22
  81a638:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  81a63c:	00bffa84 	movi	r2,-22
  81a640:	00001306 	br	81a690 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  81a644:	e0bffe17 	ldw	r2,-8(fp)
  81a648:	e0ffff17 	ldw	r3,-4(fp)
  81a64c:	e0fffc15 	stw	r3,-16(fp)
  81a650:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  81a654:	e0bffd17 	ldw	r2,-12(fp)
  81a658:	e0fffc17 	ldw	r3,-16(fp)
  81a65c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  81a660:	e0bffc17 	ldw	r2,-16(fp)
  81a664:	10c00017 	ldw	r3,0(r2)
  81a668:	e0bffd17 	ldw	r2,-12(fp)
  81a66c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  81a670:	e0bffc17 	ldw	r2,-16(fp)
  81a674:	10800017 	ldw	r2,0(r2)
  81a678:	e0fffd17 	ldw	r3,-12(fp)
  81a67c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  81a680:	e0bffc17 	ldw	r2,-16(fp)
  81a684:	e0fffd17 	ldw	r3,-12(fp)
  81a688:	10c00015 	stw	r3,0(r2)

  return 0;  
  81a68c:	0005883a 	mov	r2,zero
}
  81a690:	e037883a 	mov	sp,fp
  81a694:	dfc00117 	ldw	ra,4(sp)
  81a698:	df000017 	ldw	fp,0(sp)
  81a69c:	dec00204 	addi	sp,sp,8
  81a6a0:	f800283a 	ret

0081a6a4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  81a6a4:	defffd04 	addi	sp,sp,-12
  81a6a8:	dfc00215 	stw	ra,8(sp)
  81a6ac:	df000115 	stw	fp,4(sp)
  81a6b0:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  81a6b4:	008020b4 	movhi	r2,130
  81a6b8:	10acd404 	addi	r2,r2,-19632
  81a6bc:	e0bfff15 	stw	r2,-4(fp)
  81a6c0:	00000606 	br	81a6dc <_do_ctors+0x38>
        (*ctor) (); 
  81a6c4:	e0bfff17 	ldw	r2,-4(fp)
  81a6c8:	10800017 	ldw	r2,0(r2)
  81a6cc:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  81a6d0:	e0bfff17 	ldw	r2,-4(fp)
  81a6d4:	10bfff04 	addi	r2,r2,-4
  81a6d8:	e0bfff15 	stw	r2,-4(fp)
  81a6dc:	e0ffff17 	ldw	r3,-4(fp)
  81a6e0:	008020b4 	movhi	r2,130
  81a6e4:	10acd504 	addi	r2,r2,-19628
  81a6e8:	18bff62e 	bgeu	r3,r2,81a6c4 <__alt_data_end+0xff81a6c4>
        (*ctor) (); 
}
  81a6ec:	e037883a 	mov	sp,fp
  81a6f0:	dfc00117 	ldw	ra,4(sp)
  81a6f4:	df000017 	ldw	fp,0(sp)
  81a6f8:	dec00204 	addi	sp,sp,8
  81a6fc:	f800283a 	ret

0081a700 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  81a700:	defffd04 	addi	sp,sp,-12
  81a704:	dfc00215 	stw	ra,8(sp)
  81a708:	df000115 	stw	fp,4(sp)
  81a70c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  81a710:	008020b4 	movhi	r2,130
  81a714:	10acd404 	addi	r2,r2,-19632
  81a718:	e0bfff15 	stw	r2,-4(fp)
  81a71c:	00000606 	br	81a738 <_do_dtors+0x38>
        (*dtor) (); 
  81a720:	e0bfff17 	ldw	r2,-4(fp)
  81a724:	10800017 	ldw	r2,0(r2)
  81a728:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  81a72c:	e0bfff17 	ldw	r2,-4(fp)
  81a730:	10bfff04 	addi	r2,r2,-4
  81a734:	e0bfff15 	stw	r2,-4(fp)
  81a738:	e0ffff17 	ldw	r3,-4(fp)
  81a73c:	008020b4 	movhi	r2,130
  81a740:	10acd504 	addi	r2,r2,-19628
  81a744:	18bff62e 	bgeu	r3,r2,81a720 <__alt_data_end+0xff81a720>
        (*dtor) (); 
}
  81a748:	e037883a 	mov	sp,fp
  81a74c:	dfc00117 	ldw	ra,4(sp)
  81a750:	df000017 	ldw	fp,0(sp)
  81a754:	dec00204 	addi	sp,sp,8
  81a758:	f800283a 	ret

0081a75c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  81a75c:	defffa04 	addi	sp,sp,-24
  81a760:	dfc00515 	stw	ra,20(sp)
  81a764:	df000415 	stw	fp,16(sp)
  81a768:	df000404 	addi	fp,sp,16
  81a76c:	e13ffe15 	stw	r4,-8(fp)
  81a770:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  81a774:	e0bfff17 	ldw	r2,-4(fp)
  81a778:	10800017 	ldw	r2,0(r2)
  81a77c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  81a780:	e13ffe17 	ldw	r4,-8(fp)
  81a784:	08032200 	call	803220 <strlen>
  81a788:	10800044 	addi	r2,r2,1
  81a78c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81a790:	00000d06 	br	81a7c8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  81a794:	e0bffc17 	ldw	r2,-16(fp)
  81a798:	10c00217 	ldw	r3,8(r2)
  81a79c:	e0bffd17 	ldw	r2,-12(fp)
  81a7a0:	1809883a 	mov	r4,r3
  81a7a4:	e17ffe17 	ldw	r5,-8(fp)
  81a7a8:	100d883a 	mov	r6,r2
  81a7ac:	081affc0 	call	81affc <memcmp>
  81a7b0:	1000021e 	bne	r2,zero,81a7bc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  81a7b4:	e0bffc17 	ldw	r2,-16(fp)
  81a7b8:	00000706 	br	81a7d8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  81a7bc:	e0bffc17 	ldw	r2,-16(fp)
  81a7c0:	10800017 	ldw	r2,0(r2)
  81a7c4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81a7c8:	e0fffc17 	ldw	r3,-16(fp)
  81a7cc:	e0bfff17 	ldw	r2,-4(fp)
  81a7d0:	18bff01e 	bne	r3,r2,81a794 <__alt_data_end+0xff81a794>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  81a7d4:	0005883a 	mov	r2,zero
}
  81a7d8:	e037883a 	mov	sp,fp
  81a7dc:	dfc00117 	ldw	ra,4(sp)
  81a7e0:	df000017 	ldw	fp,0(sp)
  81a7e4:	dec00204 	addi	sp,sp,8
  81a7e8:	f800283a 	ret

0081a7ec <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  81a7ec:	defffb04 	addi	sp,sp,-20
  81a7f0:	dfc00415 	stw	ra,16(sp)
  81a7f4:	df000315 	stw	fp,12(sp)
  81a7f8:	df000304 	addi	fp,sp,12
  81a7fc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  81a800:	008020b4 	movhi	r2,130
  81a804:	10b6e904 	addi	r2,r2,-9308
  81a808:	10800017 	ldw	r2,0(r2)
  81a80c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81a810:	00003106 	br	81a8d8 <alt_find_file+0xec>
  {
    len = strlen(next->name);
  81a814:	e0bffd17 	ldw	r2,-12(fp)
  81a818:	10800217 	ldw	r2,8(r2)
  81a81c:	1009883a 	mov	r4,r2
  81a820:	08032200 	call	803220 <strlen>
  81a824:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  81a828:	e0bffd17 	ldw	r2,-12(fp)
  81a82c:	10c00217 	ldw	r3,8(r2)
  81a830:	e0bffe17 	ldw	r2,-8(fp)
  81a834:	10bfffc4 	addi	r2,r2,-1
  81a838:	1885883a 	add	r2,r3,r2
  81a83c:	10800003 	ldbu	r2,0(r2)
  81a840:	10803fcc 	andi	r2,r2,255
  81a844:	1080201c 	xori	r2,r2,128
  81a848:	10bfe004 	addi	r2,r2,-128
  81a84c:	10800bd8 	cmpnei	r2,r2,47
  81a850:	1000031e 	bne	r2,zero,81a860 <alt_find_file+0x74>
    {
      len -= 1;
  81a854:	e0bffe17 	ldw	r2,-8(fp)
  81a858:	10bfffc4 	addi	r2,r2,-1
  81a85c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81a860:	e0bffe17 	ldw	r2,-8(fp)
  81a864:	e0ffff17 	ldw	r3,-4(fp)
  81a868:	1885883a 	add	r2,r3,r2
  81a86c:	10800003 	ldbu	r2,0(r2)
  81a870:	10803fcc 	andi	r2,r2,255
  81a874:	1080201c 	xori	r2,r2,128
  81a878:	10bfe004 	addi	r2,r2,-128
  81a87c:	10800be0 	cmpeqi	r2,r2,47
  81a880:	1000081e 	bne	r2,zero,81a8a4 <alt_find_file+0xb8>
  81a884:	e0bffe17 	ldw	r2,-8(fp)
  81a888:	e0ffff17 	ldw	r3,-4(fp)
  81a88c:	1885883a 	add	r2,r3,r2
  81a890:	10800003 	ldbu	r2,0(r2)
  81a894:	10803fcc 	andi	r2,r2,255
  81a898:	1080201c 	xori	r2,r2,128
  81a89c:	10bfe004 	addi	r2,r2,-128
  81a8a0:	10000a1e 	bne	r2,zero,81a8cc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
  81a8a4:	e0bffd17 	ldw	r2,-12(fp)
  81a8a8:	10c00217 	ldw	r3,8(r2)
  81a8ac:	e0bffe17 	ldw	r2,-8(fp)
  81a8b0:	1809883a 	mov	r4,r3
  81a8b4:	e17fff17 	ldw	r5,-4(fp)
  81a8b8:	100d883a 	mov	r6,r2
  81a8bc:	081affc0 	call	81affc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81a8c0:	1000021e 	bne	r2,zero,81a8cc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  81a8c4:	e0bffd17 	ldw	r2,-12(fp)
  81a8c8:	00000806 	br	81a8ec <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
  81a8cc:	e0bffd17 	ldw	r2,-12(fp)
  81a8d0:	10800017 	ldw	r2,0(r2)
  81a8d4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81a8d8:	e0fffd17 	ldw	r3,-12(fp)
  81a8dc:	008020b4 	movhi	r2,130
  81a8e0:	10b6e904 	addi	r2,r2,-9308
  81a8e4:	18bfcb1e 	bne	r3,r2,81a814 <__alt_data_end+0xff81a814>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  81a8e8:	0005883a 	mov	r2,zero
}
  81a8ec:	e037883a 	mov	sp,fp
  81a8f0:	dfc00117 	ldw	ra,4(sp)
  81a8f4:	df000017 	ldw	fp,0(sp)
  81a8f8:	dec00204 	addi	sp,sp,8
  81a8fc:	f800283a 	ret

0081a900 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  81a900:	defffc04 	addi	sp,sp,-16
  81a904:	df000315 	stw	fp,12(sp)
  81a908:	df000304 	addi	fp,sp,12
  81a90c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  81a910:	00bffa04 	movi	r2,-24
  81a914:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81a918:	e03ffd15 	stw	zero,-12(fp)
  81a91c:	00001d06 	br	81a994 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  81a920:	008020b4 	movhi	r2,130
  81a924:	10b1d804 	addi	r2,r2,-14496
  81a928:	e0fffd17 	ldw	r3,-12(fp)
  81a92c:	18c00324 	muli	r3,r3,12
  81a930:	10c5883a 	add	r2,r2,r3
  81a934:	10800017 	ldw	r2,0(r2)
  81a938:	1000131e 	bne	r2,zero,81a988 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  81a93c:	008020b4 	movhi	r2,130
  81a940:	10b1d804 	addi	r2,r2,-14496
  81a944:	e0fffd17 	ldw	r3,-12(fp)
  81a948:	18c00324 	muli	r3,r3,12
  81a94c:	10c5883a 	add	r2,r2,r3
  81a950:	e0ffff17 	ldw	r3,-4(fp)
  81a954:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  81a958:	008020b4 	movhi	r2,130
  81a95c:	10b6ed04 	addi	r2,r2,-9292
  81a960:	10c00017 	ldw	r3,0(r2)
  81a964:	e0bffd17 	ldw	r2,-12(fp)
  81a968:	1880040e 	bge	r3,r2,81a97c <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  81a96c:	008020b4 	movhi	r2,130
  81a970:	10b6ed04 	addi	r2,r2,-9292
  81a974:	e0fffd17 	ldw	r3,-12(fp)
  81a978:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
  81a97c:	e0bffd17 	ldw	r2,-12(fp)
  81a980:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  81a984:	00000606 	br	81a9a0 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81a988:	e0bffd17 	ldw	r2,-12(fp)
  81a98c:	10800044 	addi	r2,r2,1
  81a990:	e0bffd15 	stw	r2,-12(fp)
  81a994:	e0bffd17 	ldw	r2,-12(fp)
  81a998:	10800810 	cmplti	r2,r2,32
  81a99c:	103fe01e 	bne	r2,zero,81a920 <__alt_data_end+0xff81a920>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  81a9a0:	e0bffe17 	ldw	r2,-8(fp)
}
  81a9a4:	e037883a 	mov	sp,fp
  81a9a8:	df000017 	ldw	fp,0(sp)
  81a9ac:	dec00104 	addi	sp,sp,4
  81a9b0:	f800283a 	ret

0081a9b4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  81a9b4:	defffe04 	addi	sp,sp,-8
  81a9b8:	dfc00115 	stw	ra,4(sp)
  81a9bc:	df000015 	stw	fp,0(sp)
  81a9c0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  81a9c4:	0009883a 	mov	r4,zero
  81a9c8:	01440004 	movi	r5,4096
  81a9cc:	081ae880 	call	81ae88 <alt_icache_flush>
#endif
}
  81a9d0:	e037883a 	mov	sp,fp
  81a9d4:	dfc00117 	ldw	ra,4(sp)
  81a9d8:	df000017 	ldw	fp,0(sp)
  81a9dc:	dec00204 	addi	sp,sp,8
  81a9e0:	f800283a 	ret

0081a9e4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  81a9e4:	defff904 	addi	sp,sp,-28
  81a9e8:	dfc00615 	stw	ra,24(sp)
  81a9ec:	df000515 	stw	fp,20(sp)
  81a9f0:	df000504 	addi	fp,sp,20
  81a9f4:	e13ffc15 	stw	r4,-16(fp)
  81a9f8:	e17ffd15 	stw	r5,-12(fp)
  81a9fc:	e1bffe15 	stw	r6,-8(fp)
  81aa00:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  81aa04:	e13ffd17 	ldw	r4,-12(fp)
  81aa08:	e17ffe17 	ldw	r5,-8(fp)
  81aa0c:	e1bfff17 	ldw	r6,-4(fp)
  81aa10:	08179940 	call	817994 <open>
  81aa14:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  81aa18:	e0bffb17 	ldw	r2,-20(fp)
  81aa1c:	10001c16 	blt	r2,zero,81aa90 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  81aa20:	008020b4 	movhi	r2,130
  81aa24:	10b1d804 	addi	r2,r2,-14496
  81aa28:	e0fffb17 	ldw	r3,-20(fp)
  81aa2c:	18c00324 	muli	r3,r3,12
  81aa30:	10c5883a 	add	r2,r2,r3
  81aa34:	10c00017 	ldw	r3,0(r2)
  81aa38:	e0bffc17 	ldw	r2,-16(fp)
  81aa3c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  81aa40:	008020b4 	movhi	r2,130
  81aa44:	10b1d804 	addi	r2,r2,-14496
  81aa48:	e0fffb17 	ldw	r3,-20(fp)
  81aa4c:	18c00324 	muli	r3,r3,12
  81aa50:	18c00104 	addi	r3,r3,4
  81aa54:	10c5883a 	add	r2,r2,r3
  81aa58:	10c00017 	ldw	r3,0(r2)
  81aa5c:	e0bffc17 	ldw	r2,-16(fp)
  81aa60:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  81aa64:	008020b4 	movhi	r2,130
  81aa68:	10b1d804 	addi	r2,r2,-14496
  81aa6c:	e0fffb17 	ldw	r3,-20(fp)
  81aa70:	18c00324 	muli	r3,r3,12
  81aa74:	18c00204 	addi	r3,r3,8
  81aa78:	10c5883a 	add	r2,r2,r3
  81aa7c:	10c00017 	ldw	r3,0(r2)
  81aa80:	e0bffc17 	ldw	r2,-16(fp)
  81aa84:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  81aa88:	e13ffb17 	ldw	r4,-20(fp)
  81aa8c:	0817c380 	call	817c38 <alt_release_fd>
  }
} 
  81aa90:	e037883a 	mov	sp,fp
  81aa94:	dfc00117 	ldw	ra,4(sp)
  81aa98:	df000017 	ldw	fp,0(sp)
  81aa9c:	dec00204 	addi	sp,sp,8
  81aaa0:	f800283a 	ret

0081aaa4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  81aaa4:	defffb04 	addi	sp,sp,-20
  81aaa8:	dfc00415 	stw	ra,16(sp)
  81aaac:	df000315 	stw	fp,12(sp)
  81aab0:	df000304 	addi	fp,sp,12
  81aab4:	e13ffd15 	stw	r4,-12(fp)
  81aab8:	e17ffe15 	stw	r5,-8(fp)
  81aabc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  81aac0:	010020b4 	movhi	r4,130
  81aac4:	2131db04 	addi	r4,r4,-14484
  81aac8:	e17ffd17 	ldw	r5,-12(fp)
  81aacc:	01800044 	movi	r6,1
  81aad0:	01c07fc4 	movi	r7,511
  81aad4:	081a9e40 	call	81a9e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  81aad8:	010020b4 	movhi	r4,130
  81aadc:	2131d804 	addi	r4,r4,-14496
  81aae0:	e17ffe17 	ldw	r5,-8(fp)
  81aae4:	000d883a 	mov	r6,zero
  81aae8:	01c07fc4 	movi	r7,511
  81aaec:	081a9e40 	call	81a9e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  81aaf0:	010020b4 	movhi	r4,130
  81aaf4:	2131de04 	addi	r4,r4,-14472
  81aaf8:	e17fff17 	ldw	r5,-4(fp)
  81aafc:	01800044 	movi	r6,1
  81ab00:	01c07fc4 	movi	r7,511
  81ab04:	081a9e40 	call	81a9e4 <alt_open_fd>
}  
  81ab08:	e037883a 	mov	sp,fp
  81ab0c:	dfc00117 	ldw	ra,4(sp)
  81ab10:	df000017 	ldw	fp,0(sp)
  81ab14:	dec00204 	addi	sp,sp,8
  81ab18:	f800283a 	ret

0081ab1c <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  81ab1c:	defff004 	addi	sp,sp,-64
  81ab20:	df000f15 	stw	fp,60(sp)
  81ab24:	df000f04 	addi	fp,sp,60
  81ab28:	e13ffd15 	stw	r4,-12(fp)
  81ab2c:	e17ffe15 	stw	r5,-8(fp)
  81ab30:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
  81ab34:	00bffa84 	movi	r2,-22
  81ab38:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  81ab3c:	e0bffd17 	ldw	r2,-12(fp)
  81ab40:	10800828 	cmpgeui	r2,r2,32
  81ab44:	10005c1e 	bne	r2,zero,81acb8 <alt_irq_register+0x19c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81ab48:	0005303a 	rdctl	r2,status
  81ab4c:	e0bff315 	stw	r2,-52(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81ab50:	e0fff317 	ldw	r3,-52(fp)
  81ab54:	00bfff84 	movi	r2,-2
  81ab58:	1884703a 	and	r2,r3,r2
  81ab5c:	1001703a 	wrctl	status,r2
  
  return context;
  81ab60:	e0bff317 	ldw	r2,-52(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
  81ab64:	e0bff215 	stw	r2,-56(fp)

    alt_irq[id].handler = handler;
  81ab68:	008020b4 	movhi	r2,130
  81ab6c:	10be6504 	addi	r2,r2,-1644
  81ab70:	e0fffd17 	ldw	r3,-12(fp)
  81ab74:	180690fa 	slli	r3,r3,3
  81ab78:	10c5883a 	add	r2,r2,r3
  81ab7c:	e0ffff17 	ldw	r3,-4(fp)
  81ab80:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
  81ab84:	008020b4 	movhi	r2,130
  81ab88:	10be6504 	addi	r2,r2,-1644
  81ab8c:	e0fffd17 	ldw	r3,-12(fp)
  81ab90:	180690fa 	slli	r3,r3,3
  81ab94:	18c00104 	addi	r3,r3,4
  81ab98:	10c5883a 	add	r2,r2,r3
  81ab9c:	e0fffe17 	ldw	r3,-8(fp)
  81aba0:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
  81aba4:	e0bfff17 	ldw	r2,-4(fp)
  81aba8:	10001f26 	beq	r2,zero,81ac28 <alt_irq_register+0x10c>
  81abac:	e0bffd17 	ldw	r2,-12(fp)
  81abb0:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81abb4:	0005303a 	rdctl	r2,status
  81abb8:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81abbc:	e0fff517 	ldw	r3,-44(fp)
  81abc0:	00bfff84 	movi	r2,-2
  81abc4:	1884703a 	and	r2,r3,r2
  81abc8:	1001703a 	wrctl	status,r2
  
  return context;
  81abcc:	e0bff517 	ldw	r2,-44(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  81abd0:	e0bff615 	stw	r2,-40(fp)

  alt_irq_active |= (1 << id);
  81abd4:	e0bff417 	ldw	r2,-48(fp)
  81abd8:	00c00044 	movi	r3,1
  81abdc:	1884983a 	sll	r2,r3,r2
  81abe0:	1007883a 	mov	r3,r2
  81abe4:	008020b4 	movhi	r2,130
  81abe8:	10be5704 	addi	r2,r2,-1700
  81abec:	10800017 	ldw	r2,0(r2)
  81abf0:	1886b03a 	or	r3,r3,r2
  81abf4:	008020b4 	movhi	r2,130
  81abf8:	10be5704 	addi	r2,r2,-1700
  81abfc:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  81ac00:	008020b4 	movhi	r2,130
  81ac04:	10be5704 	addi	r2,r2,-1700
  81ac08:	10800017 	ldw	r2,0(r2)
  81ac0c:	100170fa 	wrctl	ienable,r2
  81ac10:	e0bff617 	ldw	r2,-40(fp)
  81ac14:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81ac18:	e0bff717 	ldw	r2,-36(fp)
  81ac1c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  81ac20:	0005883a 	mov	r2,zero
  81ac24:	00001f06 	br	81aca4 <alt_irq_register+0x188>
  81ac28:	e0bffd17 	ldw	r2,-12(fp)
  81ac2c:	e0bff815 	stw	r2,-32(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81ac30:	0005303a 	rdctl	r2,status
  81ac34:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81ac38:	e0fff917 	ldw	r3,-28(fp)
  81ac3c:	00bfff84 	movi	r2,-2
  81ac40:	1884703a 	and	r2,r3,r2
  81ac44:	1001703a 	wrctl	status,r2
  
  return context;
  81ac48:	e0bff917 	ldw	r2,-28(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  81ac4c:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active &= ~(1 << id);
  81ac50:	e0bff817 	ldw	r2,-32(fp)
  81ac54:	00c00044 	movi	r3,1
  81ac58:	1884983a 	sll	r2,r3,r2
  81ac5c:	0084303a 	nor	r2,zero,r2
  81ac60:	1007883a 	mov	r3,r2
  81ac64:	008020b4 	movhi	r2,130
  81ac68:	10be5704 	addi	r2,r2,-1700
  81ac6c:	10800017 	ldw	r2,0(r2)
  81ac70:	1886703a 	and	r3,r3,r2
  81ac74:	008020b4 	movhi	r2,130
  81ac78:	10be5704 	addi	r2,r2,-1700
  81ac7c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  81ac80:	008020b4 	movhi	r2,130
  81ac84:	10be5704 	addi	r2,r2,-1700
  81ac88:	10800017 	ldw	r2,0(r2)
  81ac8c:	100170fa 	wrctl	ienable,r2
  81ac90:	e0bffa17 	ldw	r2,-24(fp)
  81ac94:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81ac98:	e0bffb17 	ldw	r2,-20(fp)
  81ac9c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  81aca0:	0005883a 	mov	r2,zero
  81aca4:	e0bff115 	stw	r2,-60(fp)
  81aca8:	e0bff217 	ldw	r2,-56(fp)
  81acac:	e0bffc15 	stw	r2,-16(fp)
  81acb0:	e0bffc17 	ldw	r2,-16(fp)
  81acb4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
  81acb8:	e0bff117 	ldw	r2,-60(fp)
}
  81acbc:	e037883a 	mov	sp,fp
  81acc0:	df000017 	ldw	fp,0(sp)
  81acc4:	dec00104 	addi	sp,sp,4
  81acc8:	f800283a 	ret

0081accc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  81accc:	defffa04 	addi	sp,sp,-24
  81acd0:	df000515 	stw	fp,20(sp)
  81acd4:	df000504 	addi	fp,sp,20
  81acd8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81acdc:	0005303a 	rdctl	r2,status
  81ace0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81ace4:	e0fffc17 	ldw	r3,-16(fp)
  81ace8:	00bfff84 	movi	r2,-2
  81acec:	1884703a 	and	r2,r3,r2
  81acf0:	1001703a 	wrctl	status,r2
  
  return context;
  81acf4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  81acf8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  81acfc:	e0bfff17 	ldw	r2,-4(fp)
  81ad00:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  81ad04:	e0bffd17 	ldw	r2,-12(fp)
  81ad08:	10800017 	ldw	r2,0(r2)
  81ad0c:	e0fffd17 	ldw	r3,-12(fp)
  81ad10:	18c00117 	ldw	r3,4(r3)
  81ad14:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  81ad18:	e0bffd17 	ldw	r2,-12(fp)
  81ad1c:	10800117 	ldw	r2,4(r2)
  81ad20:	e0fffd17 	ldw	r3,-12(fp)
  81ad24:	18c00017 	ldw	r3,0(r3)
  81ad28:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  81ad2c:	e0bffd17 	ldw	r2,-12(fp)
  81ad30:	e0fffd17 	ldw	r3,-12(fp)
  81ad34:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  81ad38:	e0bffd17 	ldw	r2,-12(fp)
  81ad3c:	e0fffd17 	ldw	r3,-12(fp)
  81ad40:	10c00015 	stw	r3,0(r2)
  81ad44:	e0bffb17 	ldw	r2,-20(fp)
  81ad48:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81ad4c:	e0bffe17 	ldw	r2,-8(fp)
  81ad50:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  81ad54:	e037883a 	mov	sp,fp
  81ad58:	df000017 	ldw	fp,0(sp)
  81ad5c:	dec00104 	addi	sp,sp,4
  81ad60:	f800283a 	ret

0081ad64 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  81ad64:	defffb04 	addi	sp,sp,-20
  81ad68:	dfc00415 	stw	ra,16(sp)
  81ad6c:	df000315 	stw	fp,12(sp)
  81ad70:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  81ad74:	d0a01117 	ldw	r2,-32700(gp)
  81ad78:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  81ad7c:	d0a77817 	ldw	r2,-25120(gp)
  81ad80:	10800044 	addi	r2,r2,1
  81ad84:	d0a77815 	stw	r2,-25120(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  81ad88:	00002e06 	br	81ae44 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  81ad8c:	e0bffd17 	ldw	r2,-12(fp)
  81ad90:	10800017 	ldw	r2,0(r2)
  81ad94:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  81ad98:	e0bffd17 	ldw	r2,-12(fp)
  81ad9c:	10800403 	ldbu	r2,16(r2)
  81ada0:	10803fcc 	andi	r2,r2,255
  81ada4:	10000426 	beq	r2,zero,81adb8 <alt_tick+0x54>
  81ada8:	d0a77817 	ldw	r2,-25120(gp)
  81adac:	1000021e 	bne	r2,zero,81adb8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  81adb0:	e0bffd17 	ldw	r2,-12(fp)
  81adb4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  81adb8:	e0bffd17 	ldw	r2,-12(fp)
  81adbc:	10800217 	ldw	r2,8(r2)
  81adc0:	d0e77817 	ldw	r3,-25120(gp)
  81adc4:	18801d36 	bltu	r3,r2,81ae3c <alt_tick+0xd8>
  81adc8:	e0bffd17 	ldw	r2,-12(fp)
  81adcc:	10800403 	ldbu	r2,16(r2)
  81add0:	10803fcc 	andi	r2,r2,255
  81add4:	1000191e 	bne	r2,zero,81ae3c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  81add8:	e0bffd17 	ldw	r2,-12(fp)
  81addc:	10800317 	ldw	r2,12(r2)
  81ade0:	e0fffd17 	ldw	r3,-12(fp)
  81ade4:	18c00517 	ldw	r3,20(r3)
  81ade8:	1809883a 	mov	r4,r3
  81adec:	103ee83a 	callr	r2
  81adf0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  81adf4:	e0bfff17 	ldw	r2,-4(fp)
  81adf8:	1000031e 	bne	r2,zero,81ae08 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  81adfc:	e13ffd17 	ldw	r4,-12(fp)
  81ae00:	081accc0 	call	81accc <alt_alarm_stop>
  81ae04:	00000d06 	br	81ae3c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  81ae08:	e0bffd17 	ldw	r2,-12(fp)
  81ae0c:	10c00217 	ldw	r3,8(r2)
  81ae10:	e0bfff17 	ldw	r2,-4(fp)
  81ae14:	1887883a 	add	r3,r3,r2
  81ae18:	e0bffd17 	ldw	r2,-12(fp)
  81ae1c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  81ae20:	e0bffd17 	ldw	r2,-12(fp)
  81ae24:	10c00217 	ldw	r3,8(r2)
  81ae28:	d0a77817 	ldw	r2,-25120(gp)
  81ae2c:	1880032e 	bgeu	r3,r2,81ae3c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  81ae30:	e0bffd17 	ldw	r2,-12(fp)
  81ae34:	00c00044 	movi	r3,1
  81ae38:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  81ae3c:	e0bffe17 	ldw	r2,-8(fp)
  81ae40:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  81ae44:	e0fffd17 	ldw	r3,-12(fp)
  81ae48:	d0a01104 	addi	r2,gp,-32700
  81ae4c:	18bfcf1e 	bne	r3,r2,81ad8c <__alt_data_end+0xff81ad8c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  81ae50:	0001883a 	nop
}
  81ae54:	e037883a 	mov	sp,fp
  81ae58:	dfc00117 	ldw	ra,4(sp)
  81ae5c:	df000017 	ldw	fp,0(sp)
  81ae60:	dec00204 	addi	sp,sp,8
  81ae64:	f800283a 	ret

0081ae68 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  81ae68:	deffff04 	addi	sp,sp,-4
  81ae6c:	df000015 	stw	fp,0(sp)
  81ae70:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  81ae74:	000170fa 	wrctl	ienable,zero
}
  81ae78:	e037883a 	mov	sp,fp
  81ae7c:	df000017 	ldw	fp,0(sp)
  81ae80:	dec00104 	addi	sp,sp,4
  81ae84:	f800283a 	ret

0081ae88 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  81ae88:	defffb04 	addi	sp,sp,-20
  81ae8c:	df000415 	stw	fp,16(sp)
  81ae90:	df000404 	addi	fp,sp,16
  81ae94:	e13ffe15 	stw	r4,-8(fp)
  81ae98:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  81ae9c:	e0bfff17 	ldw	r2,-4(fp)
  81aea0:	10840070 	cmpltui	r2,r2,4097
  81aea4:	1000021e 	bne	r2,zero,81aeb0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  81aea8:	00840004 	movi	r2,4096
  81aeac:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  81aeb0:	e0fffe17 	ldw	r3,-8(fp)
  81aeb4:	e0bfff17 	ldw	r2,-4(fp)
  81aeb8:	1885883a 	add	r2,r3,r2
  81aebc:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81aec0:	e0bffe17 	ldw	r2,-8(fp)
  81aec4:	e0bffc15 	stw	r2,-16(fp)
  81aec8:	00000506 	br	81aee0 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  81aecc:	e0bffc17 	ldw	r2,-16(fp)
  81aed0:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81aed4:	e0bffc17 	ldw	r2,-16(fp)
  81aed8:	10800804 	addi	r2,r2,32
  81aedc:	e0bffc15 	stw	r2,-16(fp)
  81aee0:	e0fffc17 	ldw	r3,-16(fp)
  81aee4:	e0bffd17 	ldw	r2,-12(fp)
  81aee8:	18bff836 	bltu	r3,r2,81aecc <__alt_data_end+0xff81aecc>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  81aeec:	e0bffe17 	ldw	r2,-8(fp)
  81aef0:	108007cc 	andi	r2,r2,31
  81aef4:	10000226 	beq	r2,zero,81af00 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  81aef8:	e0bffc17 	ldw	r2,-16(fp)
  81aefc:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  81af00:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  81af04:	e037883a 	mov	sp,fp
  81af08:	df000017 	ldw	fp,0(sp)
  81af0c:	dec00104 	addi	sp,sp,4
  81af10:	f800283a 	ret

0081af14 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  81af14:	defffe04 	addi	sp,sp,-8
  81af18:	df000115 	stw	fp,4(sp)
  81af1c:	df000104 	addi	fp,sp,4
  81af20:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  81af24:	e0bfff17 	ldw	r2,-4(fp)
  81af28:	10bffe84 	addi	r2,r2,-6
  81af2c:	10c00428 	cmpgeui	r3,r2,16
  81af30:	18001a1e 	bne	r3,zero,81af9c <alt_exception_cause_generated_bad_addr+0x88>
  81af34:	100690ba 	slli	r3,r2,2
  81af38:	008020b4 	movhi	r2,130
  81af3c:	10abd304 	addi	r2,r2,-20660
  81af40:	1885883a 	add	r2,r3,r2
  81af44:	10800017 	ldw	r2,0(r2)
  81af48:	1000683a 	jmp	r2
  81af4c:	0081af8c 	andi	r2,zero,1726
  81af50:	0081af8c 	andi	r2,zero,1726
  81af54:	0081af9c 	xori	r2,zero,1726
  81af58:	0081af9c 	xori	r2,zero,1726
  81af5c:	0081af9c 	xori	r2,zero,1726
  81af60:	0081af8c 	andi	r2,zero,1726
  81af64:	0081af94 	movui	r2,1726
  81af68:	0081af9c 	xori	r2,zero,1726
  81af6c:	0081af8c 	andi	r2,zero,1726
  81af70:	0081af8c 	andi	r2,zero,1726
  81af74:	0081af9c 	xori	r2,zero,1726
  81af78:	0081af8c 	andi	r2,zero,1726
  81af7c:	0081af94 	movui	r2,1726
  81af80:	0081af9c 	xori	r2,zero,1726
  81af84:	0081af9c 	xori	r2,zero,1726
  81af88:	0081af8c 	andi	r2,zero,1726
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  81af8c:	00800044 	movi	r2,1
  81af90:	00000306 	br	81afa0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  81af94:	0005883a 	mov	r2,zero
  81af98:	00000106 	br	81afa0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  81af9c:	0005883a 	mov	r2,zero
  }
}
  81afa0:	e037883a 	mov	sp,fp
  81afa4:	df000017 	ldw	fp,0(sp)
  81afa8:	dec00104 	addi	sp,sp,4
  81afac:	f800283a 	ret

0081afb0 <atexit>:
  81afb0:	200b883a 	mov	r5,r4
  81afb4:	000d883a 	mov	r6,zero
  81afb8:	0009883a 	mov	r4,zero
  81afbc:	000f883a 	mov	r7,zero
  81afc0:	081b0781 	jmpi	81b078 <__register_exitproc>

0081afc4 <exit>:
  81afc4:	defffe04 	addi	sp,sp,-8
  81afc8:	000b883a 	mov	r5,zero
  81afcc:	dc000015 	stw	r16,0(sp)
  81afd0:	dfc00115 	stw	ra,4(sp)
  81afd4:	2021883a 	mov	r16,r4
  81afd8:	081b18c0 	call	81b18c <__call_exitprocs>
  81afdc:	008020b4 	movhi	r2,130
  81afe0:	10b6e104 	addi	r2,r2,-9340
  81afe4:	11000017 	ldw	r4,0(r2)
  81afe8:	20800f17 	ldw	r2,60(r4)
  81afec:	10000126 	beq	r2,zero,81aff4 <exit+0x30>
  81aff0:	103ee83a 	callr	r2
  81aff4:	8009883a 	mov	r4,r16
  81aff8:	081b3200 	call	81b320 <_exit>

0081affc <memcmp>:
  81affc:	01c000c4 	movi	r7,3
  81b000:	3980192e 	bgeu	r7,r6,81b068 <memcmp+0x6c>
  81b004:	2144b03a 	or	r2,r4,r5
  81b008:	11c4703a 	and	r2,r2,r7
  81b00c:	10000f26 	beq	r2,zero,81b04c <memcmp+0x50>
  81b010:	20800003 	ldbu	r2,0(r4)
  81b014:	28c00003 	ldbu	r3,0(r5)
  81b018:	10c0151e 	bne	r2,r3,81b070 <memcmp+0x74>
  81b01c:	31bfff84 	addi	r6,r6,-2
  81b020:	01ffffc4 	movi	r7,-1
  81b024:	00000406 	br	81b038 <memcmp+0x3c>
  81b028:	20800003 	ldbu	r2,0(r4)
  81b02c:	28c00003 	ldbu	r3,0(r5)
  81b030:	31bfffc4 	addi	r6,r6,-1
  81b034:	10c00e1e 	bne	r2,r3,81b070 <memcmp+0x74>
  81b038:	21000044 	addi	r4,r4,1
  81b03c:	29400044 	addi	r5,r5,1
  81b040:	31fff91e 	bne	r6,r7,81b028 <__alt_data_end+0xff81b028>
  81b044:	0005883a 	mov	r2,zero
  81b048:	f800283a 	ret
  81b04c:	20c00017 	ldw	r3,0(r4)
  81b050:	28800017 	ldw	r2,0(r5)
  81b054:	1880041e 	bne	r3,r2,81b068 <memcmp+0x6c>
  81b058:	31bfff04 	addi	r6,r6,-4
  81b05c:	21000104 	addi	r4,r4,4
  81b060:	29400104 	addi	r5,r5,4
  81b064:	39bff936 	bltu	r7,r6,81b04c <__alt_data_end+0xff81b04c>
  81b068:	303fe91e 	bne	r6,zero,81b010 <__alt_data_end+0xff81b010>
  81b06c:	003ff506 	br	81b044 <__alt_data_end+0xff81b044>
  81b070:	10c5c83a 	sub	r2,r2,r3
  81b074:	f800283a 	ret

0081b078 <__register_exitproc>:
  81b078:	008020b4 	movhi	r2,130
  81b07c:	defffa04 	addi	sp,sp,-24
  81b080:	10b6e104 	addi	r2,r2,-9340
  81b084:	dc000315 	stw	r16,12(sp)
  81b088:	14000017 	ldw	r16,0(r2)
  81b08c:	dc400415 	stw	r17,16(sp)
  81b090:	dfc00515 	stw	ra,20(sp)
  81b094:	80805217 	ldw	r2,328(r16)
  81b098:	2023883a 	mov	r17,r4
  81b09c:	10003626 	beq	r2,zero,81b178 <__register_exitproc+0x100>
  81b0a0:	10c00117 	ldw	r3,4(r2)
  81b0a4:	010007c4 	movi	r4,31
  81b0a8:	20c00e16 	blt	r4,r3,81b0e4 <__register_exitproc+0x6c>
  81b0ac:	1a400044 	addi	r9,r3,1
  81b0b0:	8800211e 	bne	r17,zero,81b138 <__register_exitproc+0xc0>
  81b0b4:	18c00084 	addi	r3,r3,2
  81b0b8:	18c7883a 	add	r3,r3,r3
  81b0bc:	18c7883a 	add	r3,r3,r3
  81b0c0:	12400115 	stw	r9,4(r2)
  81b0c4:	10c7883a 	add	r3,r2,r3
  81b0c8:	19400015 	stw	r5,0(r3)
  81b0cc:	0005883a 	mov	r2,zero
  81b0d0:	dfc00517 	ldw	ra,20(sp)
  81b0d4:	dc400417 	ldw	r17,16(sp)
  81b0d8:	dc000317 	ldw	r16,12(sp)
  81b0dc:	dec00604 	addi	sp,sp,24
  81b0e0:	f800283a 	ret
  81b0e4:	00800034 	movhi	r2,0
  81b0e8:	10800004 	addi	r2,r2,0
  81b0ec:	10002526 	beq	r2,zero,81b184 <__register_exitproc+0x10c>
  81b0f0:	01006404 	movi	r4,400
  81b0f4:	d9400015 	stw	r5,0(sp)
  81b0f8:	d9800115 	stw	r6,4(sp)
  81b0fc:	d9c00215 	stw	r7,8(sp)
  81b100:	00000000 	call	0 <__alt_mem_sdram_0-0x800000>
  81b104:	d9400017 	ldw	r5,0(sp)
  81b108:	d9800117 	ldw	r6,4(sp)
  81b10c:	d9c00217 	ldw	r7,8(sp)
  81b110:	10001c26 	beq	r2,zero,81b184 <__register_exitproc+0x10c>
  81b114:	80c05217 	ldw	r3,328(r16)
  81b118:	10000115 	stw	zero,4(r2)
  81b11c:	02400044 	movi	r9,1
  81b120:	10c00015 	stw	r3,0(r2)
  81b124:	80805215 	stw	r2,328(r16)
  81b128:	10006215 	stw	zero,392(r2)
  81b12c:	10006315 	stw	zero,396(r2)
  81b130:	0007883a 	mov	r3,zero
  81b134:	883fdf26 	beq	r17,zero,81b0b4 <__alt_data_end+0xff81b0b4>
  81b138:	18d1883a 	add	r8,r3,r3
  81b13c:	4211883a 	add	r8,r8,r8
  81b140:	1211883a 	add	r8,r2,r8
  81b144:	41802215 	stw	r6,136(r8)
  81b148:	01000044 	movi	r4,1
  81b14c:	11806217 	ldw	r6,392(r2)
  81b150:	20c8983a 	sll	r4,r4,r3
  81b154:	310cb03a 	or	r6,r6,r4
  81b158:	11806215 	stw	r6,392(r2)
  81b15c:	41c04215 	stw	r7,264(r8)
  81b160:	01800084 	movi	r6,2
  81b164:	89bfd31e 	bne	r17,r6,81b0b4 <__alt_data_end+0xff81b0b4>
  81b168:	11806317 	ldw	r6,396(r2)
  81b16c:	3108b03a 	or	r4,r6,r4
  81b170:	11006315 	stw	r4,396(r2)
  81b174:	003fcf06 	br	81b0b4 <__alt_data_end+0xff81b0b4>
  81b178:	80805304 	addi	r2,r16,332
  81b17c:	80805215 	stw	r2,328(r16)
  81b180:	003fc706 	br	81b0a0 <__alt_data_end+0xff81b0a0>
  81b184:	00bfffc4 	movi	r2,-1
  81b188:	003fd106 	br	81b0d0 <__alt_data_end+0xff81b0d0>

0081b18c <__call_exitprocs>:
  81b18c:	008020b4 	movhi	r2,130
  81b190:	10b6e104 	addi	r2,r2,-9340
  81b194:	10800017 	ldw	r2,0(r2)
  81b198:	defff404 	addi	sp,sp,-48
  81b19c:	dd800815 	stw	r22,32(sp)
  81b1a0:	d8800015 	stw	r2,0(sp)
  81b1a4:	10805204 	addi	r2,r2,328
  81b1a8:	dd000615 	stw	r20,24(sp)
  81b1ac:	dc800415 	stw	r18,16(sp)
  81b1b0:	dfc00b15 	stw	ra,44(sp)
  81b1b4:	df000a15 	stw	fp,40(sp)
  81b1b8:	ddc00915 	stw	r23,36(sp)
  81b1bc:	dd400715 	stw	r21,28(sp)
  81b1c0:	dcc00515 	stw	r19,20(sp)
  81b1c4:	dc400315 	stw	r17,12(sp)
  81b1c8:	dc000215 	stw	r16,8(sp)
  81b1cc:	2025883a 	mov	r18,r4
  81b1d0:	2829883a 	mov	r20,r5
  81b1d4:	d8800115 	stw	r2,4(sp)
  81b1d8:	05bfffc4 	movi	r22,-1
  81b1dc:	d8800017 	ldw	r2,0(sp)
  81b1e0:	14c05217 	ldw	r19,328(r2)
  81b1e4:	98001d26 	beq	r19,zero,81b25c <__call_exitprocs+0xd0>
  81b1e8:	dd400117 	ldw	r21,4(sp)
  81b1ec:	98800117 	ldw	r2,4(r19)
  81b1f0:	173fffc4 	addi	fp,r2,-1
  81b1f4:	e0000d16 	blt	fp,zero,81b22c <__call_exitprocs+0xa0>
  81b1f8:	14000044 	addi	r16,r2,1
  81b1fc:	8421883a 	add	r16,r16,r16
  81b200:	8421883a 	add	r16,r16,r16
  81b204:	84402004 	addi	r17,r16,128
  81b208:	9c63883a 	add	r17,r19,r17
  81b20c:	9c21883a 	add	r16,r19,r16
  81b210:	a0001e26 	beq	r20,zero,81b28c <__call_exitprocs+0x100>
  81b214:	80804017 	ldw	r2,256(r16)
  81b218:	15001c26 	beq	r2,r20,81b28c <__call_exitprocs+0x100>
  81b21c:	e73fffc4 	addi	fp,fp,-1
  81b220:	843fff04 	addi	r16,r16,-4
  81b224:	8c7fff04 	addi	r17,r17,-4
  81b228:	e5bff91e 	bne	fp,r22,81b210 <__alt_data_end+0xff81b210>
  81b22c:	00800034 	movhi	r2,0
  81b230:	10800004 	addi	r2,r2,0
  81b234:	10000926 	beq	r2,zero,81b25c <__call_exitprocs+0xd0>
  81b238:	98800117 	ldw	r2,4(r19)
  81b23c:	1000311e 	bne	r2,zero,81b304 <__call_exitprocs+0x178>
  81b240:	98800017 	ldw	r2,0(r19)
  81b244:	10003426 	beq	r2,zero,81b318 <__call_exitprocs+0x18c>
  81b248:	9809883a 	mov	r4,r19
  81b24c:	a8800015 	stw	r2,0(r21)
  81b250:	00000000 	call	0 <__alt_mem_sdram_0-0x800000>
  81b254:	acc00017 	ldw	r19,0(r21)
  81b258:	983fe41e 	bne	r19,zero,81b1ec <__alt_data_end+0xff81b1ec>
  81b25c:	dfc00b17 	ldw	ra,44(sp)
  81b260:	df000a17 	ldw	fp,40(sp)
  81b264:	ddc00917 	ldw	r23,36(sp)
  81b268:	dd800817 	ldw	r22,32(sp)
  81b26c:	dd400717 	ldw	r21,28(sp)
  81b270:	dd000617 	ldw	r20,24(sp)
  81b274:	dcc00517 	ldw	r19,20(sp)
  81b278:	dc800417 	ldw	r18,16(sp)
  81b27c:	dc400317 	ldw	r17,12(sp)
  81b280:	dc000217 	ldw	r16,8(sp)
  81b284:	dec00c04 	addi	sp,sp,48
  81b288:	f800283a 	ret
  81b28c:	98800117 	ldw	r2,4(r19)
  81b290:	80c00017 	ldw	r3,0(r16)
  81b294:	10bfffc4 	addi	r2,r2,-1
  81b298:	17001526 	beq	r2,fp,81b2f0 <__call_exitprocs+0x164>
  81b29c:	80000015 	stw	zero,0(r16)
  81b2a0:	183fde26 	beq	r3,zero,81b21c <__alt_data_end+0xff81b21c>
  81b2a4:	00800044 	movi	r2,1
  81b2a8:	1708983a 	sll	r4,r2,fp
  81b2ac:	98806217 	ldw	r2,392(r19)
  81b2b0:	9dc00117 	ldw	r23,4(r19)
  81b2b4:	2084703a 	and	r2,r4,r2
  81b2b8:	1000061e 	bne	r2,zero,81b2d4 <__call_exitprocs+0x148>
  81b2bc:	183ee83a 	callr	r3
  81b2c0:	98800117 	ldw	r2,4(r19)
  81b2c4:	15ffc51e 	bne	r2,r23,81b1dc <__alt_data_end+0xff81b1dc>
  81b2c8:	a8800017 	ldw	r2,0(r21)
  81b2cc:	14ffd326 	beq	r2,r19,81b21c <__alt_data_end+0xff81b21c>
  81b2d0:	003fc206 	br	81b1dc <__alt_data_end+0xff81b1dc>
  81b2d4:	98806317 	ldw	r2,396(r19)
  81b2d8:	2084703a 	and	r2,r4,r2
  81b2dc:	1000061e 	bne	r2,zero,81b2f8 <__call_exitprocs+0x16c>
  81b2e0:	89400017 	ldw	r5,0(r17)
  81b2e4:	9009883a 	mov	r4,r18
  81b2e8:	183ee83a 	callr	r3
  81b2ec:	003ff406 	br	81b2c0 <__alt_data_end+0xff81b2c0>
  81b2f0:	9f000115 	stw	fp,4(r19)
  81b2f4:	003fea06 	br	81b2a0 <__alt_data_end+0xff81b2a0>
  81b2f8:	89000017 	ldw	r4,0(r17)
  81b2fc:	183ee83a 	callr	r3
  81b300:	003fef06 	br	81b2c0 <__alt_data_end+0xff81b2c0>
  81b304:	98800017 	ldw	r2,0(r19)
  81b308:	982b883a 	mov	r21,r19
  81b30c:	1027883a 	mov	r19,r2
  81b310:	983fb61e 	bne	r19,zero,81b1ec <__alt_data_end+0xff81b1ec>
  81b314:	003fd106 	br	81b25c <__alt_data_end+0xff81b25c>
  81b318:	0005883a 	mov	r2,zero
  81b31c:	003ffa06 	br	81b308 <__alt_data_end+0xff81b308>

0081b320 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  81b320:	defffd04 	addi	sp,sp,-12
  81b324:	df000215 	stw	fp,8(sp)
  81b328:	df000204 	addi	fp,sp,8
  81b32c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  81b330:	0001883a 	nop
  81b334:	e0bfff17 	ldw	r2,-4(fp)
  81b338:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  81b33c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  81b340:	10000226 	beq	r2,zero,81b34c <_exit+0x2c>
    ALT_SIM_FAIL();
  81b344:	002af070 	cmpltui	zero,zero,43969
  81b348:	00000106 	br	81b350 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  81b34c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  81b350:	003fff06 	br	81b350 <__alt_data_end+0xff81b350>
